/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
"use strict";

var $protobuf = require("protobufjs/minimal");

// Common aliases
var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;

// Exported root namespace
var $root = $protobuf.roots["default"] || ($protobuf.roots["default"] = {});

$root.teads = (function() {

    /**
     * Namespace teads.
     * @exports teads
     * @namespace
     */
    var teads = {};

    teads.api = (function() {

        /**
         * Namespace api.
         * @memberof teads
         * @namespace
         */
        var api = {};

        api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest = (function() {

            /**
             * Properties of an AcknowledgeCampaignSkeletonCreationToSalesforceRequest.
             * @memberof teads.api
             * @interface IAcknowledgeCampaignSkeletonCreationToSalesforceRequest
             * @property {teads.api.ISecurityContext} securityContext AcknowledgeCampaignSkeletonCreationToSalesforceRequest securityContext
             * @property {number} profileId AcknowledgeCampaignSkeletonCreationToSalesforceRequest profileId
             * @property {string} opportunityId AcknowledgeCampaignSkeletonCreationToSalesforceRequest opportunityId
             * @property {Array.<teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.ISalesforceOpportunityLineItem>|null} [opportunityLineItems] AcknowledgeCampaignSkeletonCreationToSalesforceRequest opportunityLineItems
             */

            /**
             * Constructs a new AcknowledgeCampaignSkeletonCreationToSalesforceRequest.
             * @memberof teads.api
             * @classdesc Represents an AcknowledgeCampaignSkeletonCreationToSalesforceRequest.
             * @implements IAcknowledgeCampaignSkeletonCreationToSalesforceRequest
             * @constructor
             * @param {teads.api.IAcknowledgeCampaignSkeletonCreationToSalesforceRequest=} [properties] Properties to set
             */
            function AcknowledgeCampaignSkeletonCreationToSalesforceRequest(properties) {
                this.opportunityLineItems = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * AcknowledgeCampaignSkeletonCreationToSalesforceRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest
             * @instance
             */
            AcknowledgeCampaignSkeletonCreationToSalesforceRequest.prototype.securityContext = null;

            /**
             * AcknowledgeCampaignSkeletonCreationToSalesforceRequest profileId.
             * @member {number} profileId
             * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest
             * @instance
             */
            AcknowledgeCampaignSkeletonCreationToSalesforceRequest.prototype.profileId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * AcknowledgeCampaignSkeletonCreationToSalesforceRequest opportunityId.
             * @member {string} opportunityId
             * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest
             * @instance
             */
            AcknowledgeCampaignSkeletonCreationToSalesforceRequest.prototype.opportunityId = "";

            /**
             * AcknowledgeCampaignSkeletonCreationToSalesforceRequest opportunityLineItems.
             * @member {Array.<teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.ISalesforceOpportunityLineItem>} opportunityLineItems
             * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest
             * @instance
             */
            AcknowledgeCampaignSkeletonCreationToSalesforceRequest.prototype.opportunityLineItems = $util.emptyArray;

            /**
             * Creates a new AcknowledgeCampaignSkeletonCreationToSalesforceRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest
             * @static
             * @param {teads.api.IAcknowledgeCampaignSkeletonCreationToSalesforceRequest=} [properties] Properties to set
             * @returns {teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest} AcknowledgeCampaignSkeletonCreationToSalesforceRequest instance
             */
            AcknowledgeCampaignSkeletonCreationToSalesforceRequest.create = function create(properties) {
                return new AcknowledgeCampaignSkeletonCreationToSalesforceRequest(properties);
            };

            /**
             * Encodes the specified AcknowledgeCampaignSkeletonCreationToSalesforceRequest message. Does not implicitly {@link teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest
             * @static
             * @param {teads.api.IAcknowledgeCampaignSkeletonCreationToSalesforceRequest} message AcknowledgeCampaignSkeletonCreationToSalesforceRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AcknowledgeCampaignSkeletonCreationToSalesforceRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.profileId);
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.opportunityId);
                if (message.opportunityLineItems != null && message.opportunityLineItems.length)
                    for (var i = 0; i < message.opportunityLineItems.length; ++i)
                        $root.teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem.encode(message.opportunityLineItems[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified AcknowledgeCampaignSkeletonCreationToSalesforceRequest message, length delimited. Does not implicitly {@link teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest
             * @static
             * @param {teads.api.IAcknowledgeCampaignSkeletonCreationToSalesforceRequest} message AcknowledgeCampaignSkeletonCreationToSalesforceRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AcknowledgeCampaignSkeletonCreationToSalesforceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an AcknowledgeCampaignSkeletonCreationToSalesforceRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest} AcknowledgeCampaignSkeletonCreationToSalesforceRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AcknowledgeCampaignSkeletonCreationToSalesforceRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.profileId = reader.int64();
                            break;
                        }
                    case 3: {
                            message.opportunityId = reader.string();
                            break;
                        }
                    case 4: {
                            if (!(message.opportunityLineItems && message.opportunityLineItems.length))
                                message.opportunityLineItems = [];
                            message.opportunityLineItems.push($root.teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("profileId"))
                    throw $util.ProtocolError("missing required 'profileId'", { instance: message });
                if (!message.hasOwnProperty("opportunityId"))
                    throw $util.ProtocolError("missing required 'opportunityId'", { instance: message });
                return message;
            };

            /**
             * Decodes an AcknowledgeCampaignSkeletonCreationToSalesforceRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest} AcknowledgeCampaignSkeletonCreationToSalesforceRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AcknowledgeCampaignSkeletonCreationToSalesforceRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an AcknowledgeCampaignSkeletonCreationToSalesforceRequest message.
             * @function verify
             * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            AcknowledgeCampaignSkeletonCreationToSalesforceRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.profileId) && !(message.profileId && $util.isInteger(message.profileId.low) && $util.isInteger(message.profileId.high)))
                    return "profileId: integer|Long expected";
                if (!$util.isString(message.opportunityId))
                    return "opportunityId: string expected";
                if (message.opportunityLineItems != null && message.hasOwnProperty("opportunityLineItems")) {
                    if (!Array.isArray(message.opportunityLineItems))
                        return "opportunityLineItems: array expected";
                    for (var i = 0; i < message.opportunityLineItems.length; ++i) {
                        var error = $root.teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem.verify(message.opportunityLineItems[i]);
                        if (error)
                            return "opportunityLineItems." + error;
                    }
                }
                return null;
            };

            /**
             * Creates an AcknowledgeCampaignSkeletonCreationToSalesforceRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest} AcknowledgeCampaignSkeletonCreationToSalesforceRequest
             */
            AcknowledgeCampaignSkeletonCreationToSalesforceRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest)
                    return object;
                var message = new $root.teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.profileId != null)
                    if ($util.Long)
                        (message.profileId = $util.Long.fromValue(object.profileId)).unsigned = false;
                    else if (typeof object.profileId === "string")
                        message.profileId = parseInt(object.profileId, 10);
                    else if (typeof object.profileId === "number")
                        message.profileId = object.profileId;
                    else if (typeof object.profileId === "object")
                        message.profileId = new $util.LongBits(object.profileId.low >>> 0, object.profileId.high >>> 0).toNumber();
                if (object.opportunityId != null)
                    message.opportunityId = String(object.opportunityId);
                if (object.opportunityLineItems) {
                    if (!Array.isArray(object.opportunityLineItems))
                        throw TypeError(".teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.opportunityLineItems: array expected");
                    message.opportunityLineItems = [];
                    for (var i = 0; i < object.opportunityLineItems.length; ++i) {
                        if (typeof object.opportunityLineItems[i] !== "object")
                            throw TypeError(".teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.opportunityLineItems: object expected");
                        message.opportunityLineItems[i] = $root.teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem.fromObject(object.opportunityLineItems[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from an AcknowledgeCampaignSkeletonCreationToSalesforceRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest
             * @static
             * @param {teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest} message AcknowledgeCampaignSkeletonCreationToSalesforceRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            AcknowledgeCampaignSkeletonCreationToSalesforceRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.opportunityLineItems = [];
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.profileId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.profileId = options.longs === String ? "0" : 0;
                    object.opportunityId = "";
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.profileId != null && message.hasOwnProperty("profileId"))
                    if (typeof message.profileId === "number")
                        object.profileId = options.longs === String ? String(message.profileId) : message.profileId;
                    else
                        object.profileId = options.longs === String ? $util.Long.prototype.toString.call(message.profileId) : options.longs === Number ? new $util.LongBits(message.profileId.low >>> 0, message.profileId.high >>> 0).toNumber() : message.profileId;
                if (message.opportunityId != null && message.hasOwnProperty("opportunityId"))
                    object.opportunityId = message.opportunityId;
                if (message.opportunityLineItems && message.opportunityLineItems.length) {
                    object.opportunityLineItems = [];
                    for (var j = 0; j < message.opportunityLineItems.length; ++j)
                        object.opportunityLineItems[j] = $root.teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem.toObject(message.opportunityLineItems[j], options);
                }
                return object;
            };

            /**
             * Converts this AcknowledgeCampaignSkeletonCreationToSalesforceRequest to JSON.
             * @function toJSON
             * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            AcknowledgeCampaignSkeletonCreationToSalesforceRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for AcknowledgeCampaignSkeletonCreationToSalesforceRequest
             * @function getTypeUrl
             * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            AcknowledgeCampaignSkeletonCreationToSalesforceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest";
            };

            AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem = (function() {

                /**
                 * Properties of a SalesforceOpportunityLineItem.
                 * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest
                 * @interface ISalesforceOpportunityLineItem
                 * @property {string} id SalesforceOpportunityLineItem id
                 * @property {number} campaignId SalesforceOpportunityLineItem campaignId
                 */

                /**
                 * Constructs a new SalesforceOpportunityLineItem.
                 * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest
                 * @classdesc Represents a SalesforceOpportunityLineItem.
                 * @implements ISalesforceOpportunityLineItem
                 * @constructor
                 * @param {teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.ISalesforceOpportunityLineItem=} [properties] Properties to set
                 */
                function SalesforceOpportunityLineItem(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * SalesforceOpportunityLineItem id.
                 * @member {string} id
                 * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem
                 * @instance
                 */
                SalesforceOpportunityLineItem.prototype.id = "";

                /**
                 * SalesforceOpportunityLineItem campaignId.
                 * @member {number} campaignId
                 * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem
                 * @instance
                 */
                SalesforceOpportunityLineItem.prototype.campaignId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * Creates a new SalesforceOpportunityLineItem instance using the specified properties.
                 * @function create
                 * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem
                 * @static
                 * @param {teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.ISalesforceOpportunityLineItem=} [properties] Properties to set
                 * @returns {teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem} SalesforceOpportunityLineItem instance
                 */
                SalesforceOpportunityLineItem.create = function create(properties) {
                    return new SalesforceOpportunityLineItem(properties);
                };

                /**
                 * Encodes the specified SalesforceOpportunityLineItem message. Does not implicitly {@link teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem
                 * @static
                 * @param {teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.ISalesforceOpportunityLineItem} message SalesforceOpportunityLineItem message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SalesforceOpportunityLineItem.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);
                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.campaignId);
                    return writer;
                };

                /**
                 * Encodes the specified SalesforceOpportunityLineItem message, length delimited. Does not implicitly {@link teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem
                 * @static
                 * @param {teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.ISalesforceOpportunityLineItem} message SalesforceOpportunityLineItem message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SalesforceOpportunityLineItem.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a SalesforceOpportunityLineItem message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem} SalesforceOpportunityLineItem
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SalesforceOpportunityLineItem.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.id = reader.string();
                                break;
                            }
                        case 2: {
                                message.campaignId = reader.int64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("id"))
                        throw $util.ProtocolError("missing required 'id'", { instance: message });
                    if (!message.hasOwnProperty("campaignId"))
                        throw $util.ProtocolError("missing required 'campaignId'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a SalesforceOpportunityLineItem message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem} SalesforceOpportunityLineItem
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SalesforceOpportunityLineItem.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a SalesforceOpportunityLineItem message.
                 * @function verify
                 * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SalesforceOpportunityLineItem.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isString(message.id))
                        return "id: string expected";
                    if (!$util.isInteger(message.campaignId) && !(message.campaignId && $util.isInteger(message.campaignId.low) && $util.isInteger(message.campaignId.high)))
                        return "campaignId: integer|Long expected";
                    return null;
                };

                /**
                 * Creates a SalesforceOpportunityLineItem message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem} SalesforceOpportunityLineItem
                 */
                SalesforceOpportunityLineItem.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem)
                        return object;
                    var message = new $root.teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem();
                    if (object.id != null)
                        message.id = String(object.id);
                    if (object.campaignId != null)
                        if ($util.Long)
                            (message.campaignId = $util.Long.fromValue(object.campaignId)).unsigned = false;
                        else if (typeof object.campaignId === "string")
                            message.campaignId = parseInt(object.campaignId, 10);
                        else if (typeof object.campaignId === "number")
                            message.campaignId = object.campaignId;
                        else if (typeof object.campaignId === "object")
                            message.campaignId = new $util.LongBits(object.campaignId.low >>> 0, object.campaignId.high >>> 0).toNumber();
                    return message;
                };

                /**
                 * Creates a plain object from a SalesforceOpportunityLineItem message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem
                 * @static
                 * @param {teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem} message SalesforceOpportunityLineItem
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SalesforceOpportunityLineItem.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.id = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.campaignId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.campaignId = options.longs === String ? "0" : 0;
                    }
                    if (message.id != null && message.hasOwnProperty("id"))
                        object.id = message.id;
                    if (message.campaignId != null && message.hasOwnProperty("campaignId"))
                        if (typeof message.campaignId === "number")
                            object.campaignId = options.longs === String ? String(message.campaignId) : message.campaignId;
                        else
                            object.campaignId = options.longs === String ? $util.Long.prototype.toString.call(message.campaignId) : options.longs === Number ? new $util.LongBits(message.campaignId.low >>> 0, message.campaignId.high >>> 0).toNumber() : message.campaignId;
                    return object;
                };

                /**
                 * Converts this SalesforceOpportunityLineItem to JSON.
                 * @function toJSON
                 * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SalesforceOpportunityLineItem.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for SalesforceOpportunityLineItem
                 * @function getTypeUrl
                 * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SalesforceOpportunityLineItem.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest.SalesforceOpportunityLineItem";
                };

                return SalesforceOpportunityLineItem;
            })();

            return AcknowledgeCampaignSkeletonCreationToSalesforceRequest;
        })();

        api.AcknowledgeCampaignSkeletonCreationToSalesforceResponse = (function() {

            /**
             * Properties of an AcknowledgeCampaignSkeletonCreationToSalesforceResponse.
             * @memberof teads.api
             * @interface IAcknowledgeCampaignSkeletonCreationToSalesforceResponse
             */

            /**
             * Constructs a new AcknowledgeCampaignSkeletonCreationToSalesforceResponse.
             * @memberof teads.api
             * @classdesc Represents an AcknowledgeCampaignSkeletonCreationToSalesforceResponse.
             * @implements IAcknowledgeCampaignSkeletonCreationToSalesforceResponse
             * @constructor
             * @param {teads.api.IAcknowledgeCampaignSkeletonCreationToSalesforceResponse=} [properties] Properties to set
             */
            function AcknowledgeCampaignSkeletonCreationToSalesforceResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Creates a new AcknowledgeCampaignSkeletonCreationToSalesforceResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceResponse
             * @static
             * @param {teads.api.IAcknowledgeCampaignSkeletonCreationToSalesforceResponse=} [properties] Properties to set
             * @returns {teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceResponse} AcknowledgeCampaignSkeletonCreationToSalesforceResponse instance
             */
            AcknowledgeCampaignSkeletonCreationToSalesforceResponse.create = function create(properties) {
                return new AcknowledgeCampaignSkeletonCreationToSalesforceResponse(properties);
            };

            /**
             * Encodes the specified AcknowledgeCampaignSkeletonCreationToSalesforceResponse message. Does not implicitly {@link teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceResponse
             * @static
             * @param {teads.api.IAcknowledgeCampaignSkeletonCreationToSalesforceResponse} message AcknowledgeCampaignSkeletonCreationToSalesforceResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AcknowledgeCampaignSkeletonCreationToSalesforceResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified AcknowledgeCampaignSkeletonCreationToSalesforceResponse message, length delimited. Does not implicitly {@link teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceResponse
             * @static
             * @param {teads.api.IAcknowledgeCampaignSkeletonCreationToSalesforceResponse} message AcknowledgeCampaignSkeletonCreationToSalesforceResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AcknowledgeCampaignSkeletonCreationToSalesforceResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an AcknowledgeCampaignSkeletonCreationToSalesforceResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceResponse} AcknowledgeCampaignSkeletonCreationToSalesforceResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AcknowledgeCampaignSkeletonCreationToSalesforceResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes an AcknowledgeCampaignSkeletonCreationToSalesforceResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceResponse} AcknowledgeCampaignSkeletonCreationToSalesforceResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AcknowledgeCampaignSkeletonCreationToSalesforceResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an AcknowledgeCampaignSkeletonCreationToSalesforceResponse message.
             * @function verify
             * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            AcknowledgeCampaignSkeletonCreationToSalesforceResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates an AcknowledgeCampaignSkeletonCreationToSalesforceResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceResponse} AcknowledgeCampaignSkeletonCreationToSalesforceResponse
             */
            AcknowledgeCampaignSkeletonCreationToSalesforceResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceResponse)
                    return object;
                return new $root.teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceResponse();
            };

            /**
             * Creates a plain object from an AcknowledgeCampaignSkeletonCreationToSalesforceResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceResponse
             * @static
             * @param {teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceResponse} message AcknowledgeCampaignSkeletonCreationToSalesforceResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            AcknowledgeCampaignSkeletonCreationToSalesforceResponse.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this AcknowledgeCampaignSkeletonCreationToSalesforceResponse to JSON.
             * @function toJSON
             * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            AcknowledgeCampaignSkeletonCreationToSalesforceResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for AcknowledgeCampaignSkeletonCreationToSalesforceResponse
             * @function getTypeUrl
             * @memberof teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            AcknowledgeCampaignSkeletonCreationToSalesforceResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceResponse";
            };

            return AcknowledgeCampaignSkeletonCreationToSalesforceResponse;
        })();

        api.ActivateFeatureForSeatRequest = (function() {

            /**
             * Properties of an ActivateFeatureForSeatRequest.
             * @memberof teads.api
             * @interface IActivateFeatureForSeatRequest
             * @property {teads.api.ISecurityContext} securityContext ActivateFeatureForSeatRequest securityContext
             * @property {number} seatId ActivateFeatureForSeatRequest seatId
             * @property {teads.api.SeatFeature} seatFeature ActivateFeatureForSeatRequest seatFeature
             */

            /**
             * Constructs a new ActivateFeatureForSeatRequest.
             * @memberof teads.api
             * @classdesc Represents an ActivateFeatureForSeatRequest.
             * @implements IActivateFeatureForSeatRequest
             * @constructor
             * @param {teads.api.IActivateFeatureForSeatRequest=} [properties] Properties to set
             */
            function ActivateFeatureForSeatRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * ActivateFeatureForSeatRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.ActivateFeatureForSeatRequest
             * @instance
             */
            ActivateFeatureForSeatRequest.prototype.securityContext = null;

            /**
             * ActivateFeatureForSeatRequest seatId.
             * @member {number} seatId
             * @memberof teads.api.ActivateFeatureForSeatRequest
             * @instance
             */
            ActivateFeatureForSeatRequest.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * ActivateFeatureForSeatRequest seatFeature.
             * @member {teads.api.SeatFeature} seatFeature
             * @memberof teads.api.ActivateFeatureForSeatRequest
             * @instance
             */
            ActivateFeatureForSeatRequest.prototype.seatFeature = 0;

            /**
             * Creates a new ActivateFeatureForSeatRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.ActivateFeatureForSeatRequest
             * @static
             * @param {teads.api.IActivateFeatureForSeatRequest=} [properties] Properties to set
             * @returns {teads.api.ActivateFeatureForSeatRequest} ActivateFeatureForSeatRequest instance
             */
            ActivateFeatureForSeatRequest.create = function create(properties) {
                return new ActivateFeatureForSeatRequest(properties);
            };

            /**
             * Encodes the specified ActivateFeatureForSeatRequest message. Does not implicitly {@link teads.api.ActivateFeatureForSeatRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.ActivateFeatureForSeatRequest
             * @static
             * @param {teads.api.IActivateFeatureForSeatRequest} message ActivateFeatureForSeatRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ActivateFeatureForSeatRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.seatId);
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.seatFeature);
                return writer;
            };

            /**
             * Encodes the specified ActivateFeatureForSeatRequest message, length delimited. Does not implicitly {@link teads.api.ActivateFeatureForSeatRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.ActivateFeatureForSeatRequest
             * @static
             * @param {teads.api.IActivateFeatureForSeatRequest} message ActivateFeatureForSeatRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ActivateFeatureForSeatRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an ActivateFeatureForSeatRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.ActivateFeatureForSeatRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.ActivateFeatureForSeatRequest} ActivateFeatureForSeatRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ActivateFeatureForSeatRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.ActivateFeatureForSeatRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.seatId = reader.int64();
                            break;
                        }
                    case 3: {
                            message.seatFeature = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("seatId"))
                    throw $util.ProtocolError("missing required 'seatId'", { instance: message });
                if (!message.hasOwnProperty("seatFeature"))
                    throw $util.ProtocolError("missing required 'seatFeature'", { instance: message });
                return message;
            };

            /**
             * Decodes an ActivateFeatureForSeatRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.ActivateFeatureForSeatRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.ActivateFeatureForSeatRequest} ActivateFeatureForSeatRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ActivateFeatureForSeatRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an ActivateFeatureForSeatRequest message.
             * @function verify
             * @memberof teads.api.ActivateFeatureForSeatRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ActivateFeatureForSeatRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                    return "seatId: integer|Long expected";
                switch (message.seatFeature) {
                default:
                    return "seatFeature: enum value expected";
                case 0:
                case 1:
                case 2:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                    break;
                }
                return null;
            };

            /**
             * Creates an ActivateFeatureForSeatRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.ActivateFeatureForSeatRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.ActivateFeatureForSeatRequest} ActivateFeatureForSeatRequest
             */
            ActivateFeatureForSeatRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.ActivateFeatureForSeatRequest)
                    return object;
                var message = new $root.teads.api.ActivateFeatureForSeatRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.ActivateFeatureForSeatRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.seatId != null)
                    if ($util.Long)
                        (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                    else if (typeof object.seatId === "string")
                        message.seatId = parseInt(object.seatId, 10);
                    else if (typeof object.seatId === "number")
                        message.seatId = object.seatId;
                    else if (typeof object.seatId === "object")
                        message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                switch (object.seatFeature) {
                default:
                    if (typeof object.seatFeature === "number") {
                        message.seatFeature = object.seatFeature;
                        break;
                    }
                    break;
                case "SEAT_FEATURE_MULTIPLE_PIXELS":
                case 0:
                    message.seatFeature = 0;
                    break;
                case "SEAT_FEATURE_SHARE_WITH_ADVERTISERS":
                case 1:
                    message.seatFeature = 1;
                    break;
                case "SEAT_FEATURE_PREFER_VIEW_TO_PLAY_START_MODE":
                case 2:
                    message.seatFeature = 2;
                    break;
                case "SEAT_FEATURE_ACCURACY_LEVELS":
                case 4:
                    message.seatFeature = 4;
                    break;
                case "SEAT_FEATURE_AGENCY_FEE":
                case 5:
                    message.seatFeature = 5;
                    break;
                case "SEAT_FEATURE_CUSTOM_AUDIENCE_ALTICE_US":
                case 6:
                    message.seatFeature = 6;
                    break;
                case "SEAT_FEATURE_CUSTOM_CREATIVES_FOR_PERFORMANCE":
                case 7:
                    message.seatFeature = 7;
                    break;
                case "SEAT_FEATURE_LUMEN":
                case 8:
                    message.seatFeature = 8;
                    break;
                case "SEAT_FEATURE_CUSTOM_AUDIENCE_SKP":
                case 9:
                    message.seatFeature = 9;
                    break;
                case "SEAT_FEATURE_CUSTOM_AUDIENCE_CROSSIX":
                case 10:
                    message.seatFeature = 10;
                    break;
                case "SEAT_FEATURE_CUSTOM_AUDIENCE_ALTICE_FR":
                case 11:
                    message.seatFeature = 11;
                    break;
                case "SEAT_FEATURE_REMARKETING_SEGMENTATION_ACCESS":
                case 12:
                    message.seatFeature = 12;
                    break;
                case "SEAT_FEATURE_CPV":
                case 13:
                    message.seatFeature = 13;
                    break;
                case "SEAT_FEATURE_PLAYER_MODE_SELECTION_FOR_BRANDING":
                case 14:
                    message.seatFeature = 14;
                    break;
                case "SEAT_FEATURE_PLAYER_MODE_SELECTION_FOR_BRANDFORMANCE":
                case 15:
                    message.seatFeature = 15;
                    break;
                case "SEAT_FEATURE_LOOKALIKE_SEGMENTATION_ACCESS":
                case 16:
                    message.seatFeature = 16;
                    break;
                case "SEAT_FEATURE_CUSTOM_AUDIENCE_THIRD_PARTY_DATA_ACCESS":
                case 17:
                    message.seatFeature = 17;
                    break;
                case "SEAT_FEATURE_HAS_OPTED_IN_AD_ASSISTANT":
                case 18:
                    message.seatFeature = 18;
                    break;
                case "SEAT_FEATURE_PLAYER_MODE_SELECTION_FOR_BRANDING_CPCV":
                case 19:
                    message.seatFeature = 19;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from an ActivateFeatureForSeatRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.ActivateFeatureForSeatRequest
             * @static
             * @param {teads.api.ActivateFeatureForSeatRequest} message ActivateFeatureForSeatRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ActivateFeatureForSeatRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seatId = options.longs === String ? "0" : 0;
                    object.seatFeature = options.enums === String ? "SEAT_FEATURE_MULTIPLE_PIXELS" : 0;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.seatId != null && message.hasOwnProperty("seatId"))
                    if (typeof message.seatId === "number")
                        object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                    else
                        object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                if (message.seatFeature != null && message.hasOwnProperty("seatFeature"))
                    object.seatFeature = options.enums === String ? $root.teads.api.SeatFeature[message.seatFeature] === undefined ? message.seatFeature : $root.teads.api.SeatFeature[message.seatFeature] : message.seatFeature;
                return object;
            };

            /**
             * Converts this ActivateFeatureForSeatRequest to JSON.
             * @function toJSON
             * @memberof teads.api.ActivateFeatureForSeatRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ActivateFeatureForSeatRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for ActivateFeatureForSeatRequest
             * @function getTypeUrl
             * @memberof teads.api.ActivateFeatureForSeatRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ActivateFeatureForSeatRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.ActivateFeatureForSeatRequest";
            };

            return ActivateFeatureForSeatRequest;
        })();

        api.ActivateFeatureForSeatResponse = (function() {

            /**
             * Properties of an ActivateFeatureForSeatResponse.
             * @memberof teads.api
             * @interface IActivateFeatureForSeatResponse
             */

            /**
             * Constructs a new ActivateFeatureForSeatResponse.
             * @memberof teads.api
             * @classdesc Represents an ActivateFeatureForSeatResponse.
             * @implements IActivateFeatureForSeatResponse
             * @constructor
             * @param {teads.api.IActivateFeatureForSeatResponse=} [properties] Properties to set
             */
            function ActivateFeatureForSeatResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Creates a new ActivateFeatureForSeatResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.ActivateFeatureForSeatResponse
             * @static
             * @param {teads.api.IActivateFeatureForSeatResponse=} [properties] Properties to set
             * @returns {teads.api.ActivateFeatureForSeatResponse} ActivateFeatureForSeatResponse instance
             */
            ActivateFeatureForSeatResponse.create = function create(properties) {
                return new ActivateFeatureForSeatResponse(properties);
            };

            /**
             * Encodes the specified ActivateFeatureForSeatResponse message. Does not implicitly {@link teads.api.ActivateFeatureForSeatResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.ActivateFeatureForSeatResponse
             * @static
             * @param {teads.api.IActivateFeatureForSeatResponse} message ActivateFeatureForSeatResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ActivateFeatureForSeatResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified ActivateFeatureForSeatResponse message, length delimited. Does not implicitly {@link teads.api.ActivateFeatureForSeatResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.ActivateFeatureForSeatResponse
             * @static
             * @param {teads.api.IActivateFeatureForSeatResponse} message ActivateFeatureForSeatResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ActivateFeatureForSeatResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an ActivateFeatureForSeatResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.ActivateFeatureForSeatResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.ActivateFeatureForSeatResponse} ActivateFeatureForSeatResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ActivateFeatureForSeatResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.ActivateFeatureForSeatResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes an ActivateFeatureForSeatResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.ActivateFeatureForSeatResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.ActivateFeatureForSeatResponse} ActivateFeatureForSeatResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ActivateFeatureForSeatResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an ActivateFeatureForSeatResponse message.
             * @function verify
             * @memberof teads.api.ActivateFeatureForSeatResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ActivateFeatureForSeatResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates an ActivateFeatureForSeatResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.ActivateFeatureForSeatResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.ActivateFeatureForSeatResponse} ActivateFeatureForSeatResponse
             */
            ActivateFeatureForSeatResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.ActivateFeatureForSeatResponse)
                    return object;
                return new $root.teads.api.ActivateFeatureForSeatResponse();
            };

            /**
             * Creates a plain object from an ActivateFeatureForSeatResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.ActivateFeatureForSeatResponse
             * @static
             * @param {teads.api.ActivateFeatureForSeatResponse} message ActivateFeatureForSeatResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ActivateFeatureForSeatResponse.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this ActivateFeatureForSeatResponse to JSON.
             * @function toJSON
             * @memberof teads.api.ActivateFeatureForSeatResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ActivateFeatureForSeatResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for ActivateFeatureForSeatResponse
             * @function getTypeUrl
             * @memberof teads.api.ActivateFeatureForSeatResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ActivateFeatureForSeatResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.ActivateFeatureForSeatResponse";
            };

            return ActivateFeatureForSeatResponse;
        })();

        api.AddFirstPartySegmentToWhitelistForSeatRequest = (function() {

            /**
             * Properties of an AddFirstPartySegmentToWhitelistForSeatRequest.
             * @memberof teads.api
             * @interface IAddFirstPartySegmentToWhitelistForSeatRequest
             * @property {teads.api.ISecurityContext} securityContext AddFirstPartySegmentToWhitelistForSeatRequest securityContext
             * @property {teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.IAdvertiserFirstPartySegment} segment AddFirstPartySegmentToWhitelistForSeatRequest segment
             * @property {number} entityId AddFirstPartySegmentToWhitelistForSeatRequest entityId
             */

            /**
             * Constructs a new AddFirstPartySegmentToWhitelistForSeatRequest.
             * @memberof teads.api
             * @classdesc Represents an AddFirstPartySegmentToWhitelistForSeatRequest.
             * @implements IAddFirstPartySegmentToWhitelistForSeatRequest
             * @constructor
             * @param {teads.api.IAddFirstPartySegmentToWhitelistForSeatRequest=} [properties] Properties to set
             */
            function AddFirstPartySegmentToWhitelistForSeatRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * AddFirstPartySegmentToWhitelistForSeatRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatRequest
             * @instance
             */
            AddFirstPartySegmentToWhitelistForSeatRequest.prototype.securityContext = null;

            /**
             * AddFirstPartySegmentToWhitelistForSeatRequest segment.
             * @member {teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.IAdvertiserFirstPartySegment} segment
             * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatRequest
             * @instance
             */
            AddFirstPartySegmentToWhitelistForSeatRequest.prototype.segment = null;

            /**
             * AddFirstPartySegmentToWhitelistForSeatRequest entityId.
             * @member {number} entityId
             * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatRequest
             * @instance
             */
            AddFirstPartySegmentToWhitelistForSeatRequest.prototype.entityId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new AddFirstPartySegmentToWhitelistForSeatRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatRequest
             * @static
             * @param {teads.api.IAddFirstPartySegmentToWhitelistForSeatRequest=} [properties] Properties to set
             * @returns {teads.api.AddFirstPartySegmentToWhitelistForSeatRequest} AddFirstPartySegmentToWhitelistForSeatRequest instance
             */
            AddFirstPartySegmentToWhitelistForSeatRequest.create = function create(properties) {
                return new AddFirstPartySegmentToWhitelistForSeatRequest(properties);
            };

            /**
             * Encodes the specified AddFirstPartySegmentToWhitelistForSeatRequest message. Does not implicitly {@link teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatRequest
             * @static
             * @param {teads.api.IAddFirstPartySegmentToWhitelistForSeatRequest} message AddFirstPartySegmentToWhitelistForSeatRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AddFirstPartySegmentToWhitelistForSeatRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                $root.teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment.encode(message.segment, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.entityId);
                return writer;
            };

            /**
             * Encodes the specified AddFirstPartySegmentToWhitelistForSeatRequest message, length delimited. Does not implicitly {@link teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatRequest
             * @static
             * @param {teads.api.IAddFirstPartySegmentToWhitelistForSeatRequest} message AddFirstPartySegmentToWhitelistForSeatRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AddFirstPartySegmentToWhitelistForSeatRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an AddFirstPartySegmentToWhitelistForSeatRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.AddFirstPartySegmentToWhitelistForSeatRequest} AddFirstPartySegmentToWhitelistForSeatRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AddFirstPartySegmentToWhitelistForSeatRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.AddFirstPartySegmentToWhitelistForSeatRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.segment = $root.teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment.decode(reader, reader.uint32());
                            break;
                        }
                    case 3: {
                            message.entityId = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("segment"))
                    throw $util.ProtocolError("missing required 'segment'", { instance: message });
                if (!message.hasOwnProperty("entityId"))
                    throw $util.ProtocolError("missing required 'entityId'", { instance: message });
                return message;
            };

            /**
             * Decodes an AddFirstPartySegmentToWhitelistForSeatRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.AddFirstPartySegmentToWhitelistForSeatRequest} AddFirstPartySegmentToWhitelistForSeatRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AddFirstPartySegmentToWhitelistForSeatRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an AddFirstPartySegmentToWhitelistForSeatRequest message.
             * @function verify
             * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            AddFirstPartySegmentToWhitelistForSeatRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                {
                    var error = $root.teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment.verify(message.segment);
                    if (error)
                        return "segment." + error;
                }
                if (!$util.isInteger(message.entityId) && !(message.entityId && $util.isInteger(message.entityId.low) && $util.isInteger(message.entityId.high)))
                    return "entityId: integer|Long expected";
                return null;
            };

            /**
             * Creates an AddFirstPartySegmentToWhitelistForSeatRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.AddFirstPartySegmentToWhitelistForSeatRequest} AddFirstPartySegmentToWhitelistForSeatRequest
             */
            AddFirstPartySegmentToWhitelistForSeatRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.AddFirstPartySegmentToWhitelistForSeatRequest)
                    return object;
                var message = new $root.teads.api.AddFirstPartySegmentToWhitelistForSeatRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.segment != null) {
                    if (typeof object.segment !== "object")
                        throw TypeError(".teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.segment: object expected");
                    message.segment = $root.teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment.fromObject(object.segment);
                }
                if (object.entityId != null)
                    if ($util.Long)
                        (message.entityId = $util.Long.fromValue(object.entityId)).unsigned = false;
                    else if (typeof object.entityId === "string")
                        message.entityId = parseInt(object.entityId, 10);
                    else if (typeof object.entityId === "number")
                        message.entityId = object.entityId;
                    else if (typeof object.entityId === "object")
                        message.entityId = new $util.LongBits(object.entityId.low >>> 0, object.entityId.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from an AddFirstPartySegmentToWhitelistForSeatRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatRequest
             * @static
             * @param {teads.api.AddFirstPartySegmentToWhitelistForSeatRequest} message AddFirstPartySegmentToWhitelistForSeatRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            AddFirstPartySegmentToWhitelistForSeatRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    object.segment = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.entityId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.entityId = options.longs === String ? "0" : 0;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.segment != null && message.hasOwnProperty("segment"))
                    object.segment = $root.teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment.toObject(message.segment, options);
                if (message.entityId != null && message.hasOwnProperty("entityId"))
                    if (typeof message.entityId === "number")
                        object.entityId = options.longs === String ? String(message.entityId) : message.entityId;
                    else
                        object.entityId = options.longs === String ? $util.Long.prototype.toString.call(message.entityId) : options.longs === Number ? new $util.LongBits(message.entityId.low >>> 0, message.entityId.high >>> 0).toNumber() : message.entityId;
                return object;
            };

            /**
             * Converts this AddFirstPartySegmentToWhitelistForSeatRequest to JSON.
             * @function toJSON
             * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            AddFirstPartySegmentToWhitelistForSeatRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for AddFirstPartySegmentToWhitelistForSeatRequest
             * @function getTypeUrl
             * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            AddFirstPartySegmentToWhitelistForSeatRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.AddFirstPartySegmentToWhitelistForSeatRequest";
            };

            AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment = (function() {

                /**
                 * Properties of an AdvertiserFirstPartySegment.
                 * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatRequest
                 * @interface IAdvertiserFirstPartySegment
                 * @property {teads.api.AdvertiserFirstPartySegmentProvider} segmentProvider AdvertiserFirstPartySegment segmentProvider
                 * @property {number} providerSegmentId AdvertiserFirstPartySegment providerSegmentId
                 */

                /**
                 * Constructs a new AdvertiserFirstPartySegment.
                 * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatRequest
                 * @classdesc Represents an AdvertiserFirstPartySegment.
                 * @implements IAdvertiserFirstPartySegment
                 * @constructor
                 * @param {teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.IAdvertiserFirstPartySegment=} [properties] Properties to set
                 */
                function AdvertiserFirstPartySegment(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * AdvertiserFirstPartySegment segmentProvider.
                 * @member {teads.api.AdvertiserFirstPartySegmentProvider} segmentProvider
                 * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment
                 * @instance
                 */
                AdvertiserFirstPartySegment.prototype.segmentProvider = 1;

                /**
                 * AdvertiserFirstPartySegment providerSegmentId.
                 * @member {number} providerSegmentId
                 * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment
                 * @instance
                 */
                AdvertiserFirstPartySegment.prototype.providerSegmentId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * Creates a new AdvertiserFirstPartySegment instance using the specified properties.
                 * @function create
                 * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment
                 * @static
                 * @param {teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.IAdvertiserFirstPartySegment=} [properties] Properties to set
                 * @returns {teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment} AdvertiserFirstPartySegment instance
                 */
                AdvertiserFirstPartySegment.create = function create(properties) {
                    return new AdvertiserFirstPartySegment(properties);
                };

                /**
                 * Encodes the specified AdvertiserFirstPartySegment message. Does not implicitly {@link teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment
                 * @static
                 * @param {teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.IAdvertiserFirstPartySegment} message AdvertiserFirstPartySegment message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                AdvertiserFirstPartySegment.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.segmentProvider);
                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.providerSegmentId);
                    return writer;
                };

                /**
                 * Encodes the specified AdvertiserFirstPartySegment message, length delimited. Does not implicitly {@link teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment
                 * @static
                 * @param {teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.IAdvertiserFirstPartySegment} message AdvertiserFirstPartySegment message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                AdvertiserFirstPartySegment.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes an AdvertiserFirstPartySegment message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment} AdvertiserFirstPartySegment
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                AdvertiserFirstPartySegment.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.segmentProvider = reader.int32();
                                break;
                            }
                        case 2: {
                                message.providerSegmentId = reader.int64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("segmentProvider"))
                        throw $util.ProtocolError("missing required 'segmentProvider'", { instance: message });
                    if (!message.hasOwnProperty("providerSegmentId"))
                        throw $util.ProtocolError("missing required 'providerSegmentId'", { instance: message });
                    return message;
                };

                /**
                 * Decodes an AdvertiserFirstPartySegment message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment} AdvertiserFirstPartySegment
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                AdvertiserFirstPartySegment.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies an AdvertiserFirstPartySegment message.
                 * @function verify
                 * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                AdvertiserFirstPartySegment.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    switch (message.segmentProvider) {
                    default:
                        return "segmentProvider: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 7:
                        break;
                    }
                    if (!$util.isInteger(message.providerSegmentId) && !(message.providerSegmentId && $util.isInteger(message.providerSegmentId.low) && $util.isInteger(message.providerSegmentId.high)))
                        return "providerSegmentId: integer|Long expected";
                    return null;
                };

                /**
                 * Creates an AdvertiserFirstPartySegment message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment} AdvertiserFirstPartySegment
                 */
                AdvertiserFirstPartySegment.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment)
                        return object;
                    var message = new $root.teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment();
                    switch (object.segmentProvider) {
                    default:
                        if (typeof object.segmentProvider === "number") {
                            message.segmentProvider = object.segmentProvider;
                            break;
                        }
                        break;
                    case "ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_NIELSEN":
                    case 1:
                        message.segmentProvider = 1;
                        break;
                    case "ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_LIVERAMP":
                    case 2:
                        message.segmentProvider = 2;
                        break;
                    case "ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_BLUEKAI":
                    case 3:
                        message.segmentProvider = 3;
                        break;
                    case "ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_NEUSTAR":
                    case 4:
                        message.segmentProvider = 4;
                        break;
                    case "ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_SALESFORCE":
                    case 5:
                        message.segmentProvider = 5;
                        break;
                    case "ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_RETARGETLY":
                    case 7:
                        message.segmentProvider = 7;
                        break;
                    }
                    if (object.providerSegmentId != null)
                        if ($util.Long)
                            (message.providerSegmentId = $util.Long.fromValue(object.providerSegmentId)).unsigned = false;
                        else if (typeof object.providerSegmentId === "string")
                            message.providerSegmentId = parseInt(object.providerSegmentId, 10);
                        else if (typeof object.providerSegmentId === "number")
                            message.providerSegmentId = object.providerSegmentId;
                        else if (typeof object.providerSegmentId === "object")
                            message.providerSegmentId = new $util.LongBits(object.providerSegmentId.low >>> 0, object.providerSegmentId.high >>> 0).toNumber();
                    return message;
                };

                /**
                 * Creates a plain object from an AdvertiserFirstPartySegment message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment
                 * @static
                 * @param {teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment} message AdvertiserFirstPartySegment
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                AdvertiserFirstPartySegment.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.segmentProvider = options.enums === String ? "ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_NIELSEN" : 1;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.providerSegmentId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.providerSegmentId = options.longs === String ? "0" : 0;
                    }
                    if (message.segmentProvider != null && message.hasOwnProperty("segmentProvider"))
                        object.segmentProvider = options.enums === String ? $root.teads.api.AdvertiserFirstPartySegmentProvider[message.segmentProvider] === undefined ? message.segmentProvider : $root.teads.api.AdvertiserFirstPartySegmentProvider[message.segmentProvider] : message.segmentProvider;
                    if (message.providerSegmentId != null && message.hasOwnProperty("providerSegmentId"))
                        if (typeof message.providerSegmentId === "number")
                            object.providerSegmentId = options.longs === String ? String(message.providerSegmentId) : message.providerSegmentId;
                        else
                            object.providerSegmentId = options.longs === String ? $util.Long.prototype.toString.call(message.providerSegmentId) : options.longs === Number ? new $util.LongBits(message.providerSegmentId.low >>> 0, message.providerSegmentId.high >>> 0).toNumber() : message.providerSegmentId;
                    return object;
                };

                /**
                 * Converts this AdvertiserFirstPartySegment to JSON.
                 * @function toJSON
                 * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                AdvertiserFirstPartySegment.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for AdvertiserFirstPartySegment
                 * @function getTypeUrl
                 * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                AdvertiserFirstPartySegment.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.AddFirstPartySegmentToWhitelistForSeatRequest.AdvertiserFirstPartySegment";
                };

                return AdvertiserFirstPartySegment;
            })();

            return AddFirstPartySegmentToWhitelistForSeatRequest;
        })();

        api.AddFirstPartySegmentToWhitelistForSeatResponse = (function() {

            /**
             * Properties of an AddFirstPartySegmentToWhitelistForSeatResponse.
             * @memberof teads.api
             * @interface IAddFirstPartySegmentToWhitelistForSeatResponse
             */

            /**
             * Constructs a new AddFirstPartySegmentToWhitelistForSeatResponse.
             * @memberof teads.api
             * @classdesc Represents an AddFirstPartySegmentToWhitelistForSeatResponse.
             * @implements IAddFirstPartySegmentToWhitelistForSeatResponse
             * @constructor
             * @param {teads.api.IAddFirstPartySegmentToWhitelistForSeatResponse=} [properties] Properties to set
             */
            function AddFirstPartySegmentToWhitelistForSeatResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Creates a new AddFirstPartySegmentToWhitelistForSeatResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatResponse
             * @static
             * @param {teads.api.IAddFirstPartySegmentToWhitelistForSeatResponse=} [properties] Properties to set
             * @returns {teads.api.AddFirstPartySegmentToWhitelistForSeatResponse} AddFirstPartySegmentToWhitelistForSeatResponse instance
             */
            AddFirstPartySegmentToWhitelistForSeatResponse.create = function create(properties) {
                return new AddFirstPartySegmentToWhitelistForSeatResponse(properties);
            };

            /**
             * Encodes the specified AddFirstPartySegmentToWhitelistForSeatResponse message. Does not implicitly {@link teads.api.AddFirstPartySegmentToWhitelistForSeatResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatResponse
             * @static
             * @param {teads.api.IAddFirstPartySegmentToWhitelistForSeatResponse} message AddFirstPartySegmentToWhitelistForSeatResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AddFirstPartySegmentToWhitelistForSeatResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified AddFirstPartySegmentToWhitelistForSeatResponse message, length delimited. Does not implicitly {@link teads.api.AddFirstPartySegmentToWhitelistForSeatResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatResponse
             * @static
             * @param {teads.api.IAddFirstPartySegmentToWhitelistForSeatResponse} message AddFirstPartySegmentToWhitelistForSeatResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AddFirstPartySegmentToWhitelistForSeatResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an AddFirstPartySegmentToWhitelistForSeatResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.AddFirstPartySegmentToWhitelistForSeatResponse} AddFirstPartySegmentToWhitelistForSeatResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AddFirstPartySegmentToWhitelistForSeatResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.AddFirstPartySegmentToWhitelistForSeatResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes an AddFirstPartySegmentToWhitelistForSeatResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.AddFirstPartySegmentToWhitelistForSeatResponse} AddFirstPartySegmentToWhitelistForSeatResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AddFirstPartySegmentToWhitelistForSeatResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an AddFirstPartySegmentToWhitelistForSeatResponse message.
             * @function verify
             * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            AddFirstPartySegmentToWhitelistForSeatResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates an AddFirstPartySegmentToWhitelistForSeatResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.AddFirstPartySegmentToWhitelistForSeatResponse} AddFirstPartySegmentToWhitelistForSeatResponse
             */
            AddFirstPartySegmentToWhitelistForSeatResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.AddFirstPartySegmentToWhitelistForSeatResponse)
                    return object;
                return new $root.teads.api.AddFirstPartySegmentToWhitelistForSeatResponse();
            };

            /**
             * Creates a plain object from an AddFirstPartySegmentToWhitelistForSeatResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatResponse
             * @static
             * @param {teads.api.AddFirstPartySegmentToWhitelistForSeatResponse} message AddFirstPartySegmentToWhitelistForSeatResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            AddFirstPartySegmentToWhitelistForSeatResponse.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this AddFirstPartySegmentToWhitelistForSeatResponse to JSON.
             * @function toJSON
             * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            AddFirstPartySegmentToWhitelistForSeatResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for AddFirstPartySegmentToWhitelistForSeatResponse
             * @function getTypeUrl
             * @memberof teads.api.AddFirstPartySegmentToWhitelistForSeatResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            AddFirstPartySegmentToWhitelistForSeatResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.AddFirstPartySegmentToWhitelistForSeatResponse";
            };

            return AddFirstPartySegmentToWhitelistForSeatResponse;
        })();

        api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest = (function() {

            /**
             * Properties of an AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest.
             * @memberof teads.api
             * @interface IAddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest
             * @property {teads.api.ISecurityContext} securityContext AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest securityContext
             * @property {number} buyerSeatId AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest buyerSeatId
             * @property {string} segmentCode AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest segmentCode
             */

            /**
             * Constructs a new AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest.
             * @memberof teads.api
             * @classdesc Represents an AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest.
             * @implements IAddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest
             * @constructor
             * @param {teads.api.IAddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest=} [properties] Properties to set
             */
            function AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest
             * @instance
             */
            AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest.prototype.securityContext = null;

            /**
             * AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest buyerSeatId.
             * @member {number} buyerSeatId
             * @memberof teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest
             * @instance
             */
            AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest.prototype.buyerSeatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest segmentCode.
             * @member {string} segmentCode
             * @memberof teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest
             * @instance
             */
            AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest.prototype.segmentCode = "";

            /**
             * Creates a new AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest
             * @static
             * @param {teads.api.IAddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest=} [properties] Properties to set
             * @returns {teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest} AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest instance
             */
            AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest.create = function create(properties) {
                return new AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest(properties);
            };

            /**
             * Encodes the specified AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest message. Does not implicitly {@link teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest
             * @static
             * @param {teads.api.IAddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest} message AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.buyerSeatId);
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.segmentCode);
                return writer;
            };

            /**
             * Encodes the specified AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest message, length delimited. Does not implicitly {@link teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest
             * @static
             * @param {teads.api.IAddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest} message AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest} AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.buyerSeatId = reader.int64();
                            break;
                        }
                    case 3: {
                            message.segmentCode = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("buyerSeatId"))
                    throw $util.ProtocolError("missing required 'buyerSeatId'", { instance: message });
                if (!message.hasOwnProperty("segmentCode"))
                    throw $util.ProtocolError("missing required 'segmentCode'", { instance: message });
                return message;
            };

            /**
             * Decodes an AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest} AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest message.
             * @function verify
             * @memberof teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.buyerSeatId) && !(message.buyerSeatId && $util.isInteger(message.buyerSeatId.low) && $util.isInteger(message.buyerSeatId.high)))
                    return "buyerSeatId: integer|Long expected";
                if (!$util.isString(message.segmentCode))
                    return "segmentCode: string expected";
                return null;
            };

            /**
             * Creates an AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest} AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest
             */
            AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest)
                    return object;
                var message = new $root.teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.buyerSeatId != null)
                    if ($util.Long)
                        (message.buyerSeatId = $util.Long.fromValue(object.buyerSeatId)).unsigned = false;
                    else if (typeof object.buyerSeatId === "string")
                        message.buyerSeatId = parseInt(object.buyerSeatId, 10);
                    else if (typeof object.buyerSeatId === "number")
                        message.buyerSeatId = object.buyerSeatId;
                    else if (typeof object.buyerSeatId === "object")
                        message.buyerSeatId = new $util.LongBits(object.buyerSeatId.low >>> 0, object.buyerSeatId.high >>> 0).toNumber();
                if (object.segmentCode != null)
                    message.segmentCode = String(object.segmentCode);
                return message;
            };

            /**
             * Creates a plain object from an AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest
             * @static
             * @param {teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest} message AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.buyerSeatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.buyerSeatId = options.longs === String ? "0" : 0;
                    object.segmentCode = "";
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.buyerSeatId != null && message.hasOwnProperty("buyerSeatId"))
                    if (typeof message.buyerSeatId === "number")
                        object.buyerSeatId = options.longs === String ? String(message.buyerSeatId) : message.buyerSeatId;
                    else
                        object.buyerSeatId = options.longs === String ? $util.Long.prototype.toString.call(message.buyerSeatId) : options.longs === Number ? new $util.LongBits(message.buyerSeatId.low >>> 0, message.buyerSeatId.high >>> 0).toNumber() : message.buyerSeatId;
                if (message.segmentCode != null && message.hasOwnProperty("segmentCode"))
                    object.segmentCode = message.segmentCode;
                return object;
            };

            /**
             * Converts this AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest to JSON.
             * @function toJSON
             * @memberof teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest
             * @function getTypeUrl
             * @memberof teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest";
            };

            return AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest;
        })();

        api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse = (function() {

            /**
             * Properties of an AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse.
             * @memberof teads.api
             * @interface IAddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse
             */

            /**
             * Constructs a new AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse.
             * @memberof teads.api
             * @classdesc Represents an AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse.
             * @implements IAddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse
             * @constructor
             * @param {teads.api.IAddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse=} [properties] Properties to set
             */
            function AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Creates a new AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse
             * @static
             * @param {teads.api.IAddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse=} [properties] Properties to set
             * @returns {teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse} AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse instance
             */
            AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse.create = function create(properties) {
                return new AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse(properties);
            };

            /**
             * Encodes the specified AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse message. Does not implicitly {@link teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse
             * @static
             * @param {teads.api.IAddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse} message AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse message, length delimited. Does not implicitly {@link teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse
             * @static
             * @param {teads.api.IAddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse} message AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse} AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes an AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse} AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse message.
             * @function verify
             * @memberof teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates an AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse} AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse
             */
            AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse)
                    return object;
                return new $root.teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse();
            };

            /**
             * Creates a plain object from an AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse
             * @static
             * @param {teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse} message AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse to JSON.
             * @function toJSON
             * @memberof teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse
             * @function getTypeUrl
             * @memberof teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse";
            };

            return AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse;
        })();

        api.CanAccountEditCampaignRequest = (function() {

            /**
             * Properties of a CanAccountEditCampaignRequest.
             * @memberof teads.api
             * @interface ICanAccountEditCampaignRequest
             * @property {teads.api.ISecurityContext} securityContext CanAccountEditCampaignRequest securityContext
             * @property {number} campaignId CanAccountEditCampaignRequest campaignId
             * @property {teads.api.CanAccountEditCampaignRequest.IAccount} account CanAccountEditCampaignRequest account
             */

            /**
             * Constructs a new CanAccountEditCampaignRequest.
             * @memberof teads.api
             * @classdesc Represents a CanAccountEditCampaignRequest.
             * @implements ICanAccountEditCampaignRequest
             * @constructor
             * @param {teads.api.ICanAccountEditCampaignRequest=} [properties] Properties to set
             */
            function CanAccountEditCampaignRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CanAccountEditCampaignRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.CanAccountEditCampaignRequest
             * @instance
             */
            CanAccountEditCampaignRequest.prototype.securityContext = null;

            /**
             * CanAccountEditCampaignRequest campaignId.
             * @member {number} campaignId
             * @memberof teads.api.CanAccountEditCampaignRequest
             * @instance
             */
            CanAccountEditCampaignRequest.prototype.campaignId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * CanAccountEditCampaignRequest account.
             * @member {teads.api.CanAccountEditCampaignRequest.IAccount} account
             * @memberof teads.api.CanAccountEditCampaignRequest
             * @instance
             */
            CanAccountEditCampaignRequest.prototype.account = null;

            /**
             * Creates a new CanAccountEditCampaignRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.CanAccountEditCampaignRequest
             * @static
             * @param {teads.api.ICanAccountEditCampaignRequest=} [properties] Properties to set
             * @returns {teads.api.CanAccountEditCampaignRequest} CanAccountEditCampaignRequest instance
             */
            CanAccountEditCampaignRequest.create = function create(properties) {
                return new CanAccountEditCampaignRequest(properties);
            };

            /**
             * Encodes the specified CanAccountEditCampaignRequest message. Does not implicitly {@link teads.api.CanAccountEditCampaignRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.CanAccountEditCampaignRequest
             * @static
             * @param {teads.api.ICanAccountEditCampaignRequest} message CanAccountEditCampaignRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CanAccountEditCampaignRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.campaignId);
                $root.teads.api.CanAccountEditCampaignRequest.Account.encode(message.account, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified CanAccountEditCampaignRequest message, length delimited. Does not implicitly {@link teads.api.CanAccountEditCampaignRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.CanAccountEditCampaignRequest
             * @static
             * @param {teads.api.ICanAccountEditCampaignRequest} message CanAccountEditCampaignRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CanAccountEditCampaignRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CanAccountEditCampaignRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.CanAccountEditCampaignRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.CanAccountEditCampaignRequest} CanAccountEditCampaignRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CanAccountEditCampaignRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.CanAccountEditCampaignRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.campaignId = reader.int64();
                            break;
                        }
                    case 3: {
                            message.account = $root.teads.api.CanAccountEditCampaignRequest.Account.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("campaignId"))
                    throw $util.ProtocolError("missing required 'campaignId'", { instance: message });
                if (!message.hasOwnProperty("account"))
                    throw $util.ProtocolError("missing required 'account'", { instance: message });
                return message;
            };

            /**
             * Decodes a CanAccountEditCampaignRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.CanAccountEditCampaignRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.CanAccountEditCampaignRequest} CanAccountEditCampaignRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CanAccountEditCampaignRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CanAccountEditCampaignRequest message.
             * @function verify
             * @memberof teads.api.CanAccountEditCampaignRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CanAccountEditCampaignRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.campaignId) && !(message.campaignId && $util.isInteger(message.campaignId.low) && $util.isInteger(message.campaignId.high)))
                    return "campaignId: integer|Long expected";
                {
                    var error = $root.teads.api.CanAccountEditCampaignRequest.Account.verify(message.account);
                    if (error)
                        return "account." + error;
                }
                return null;
            };

            /**
             * Creates a CanAccountEditCampaignRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.CanAccountEditCampaignRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.CanAccountEditCampaignRequest} CanAccountEditCampaignRequest
             */
            CanAccountEditCampaignRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.CanAccountEditCampaignRequest)
                    return object;
                var message = new $root.teads.api.CanAccountEditCampaignRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.CanAccountEditCampaignRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.campaignId != null)
                    if ($util.Long)
                        (message.campaignId = $util.Long.fromValue(object.campaignId)).unsigned = false;
                    else if (typeof object.campaignId === "string")
                        message.campaignId = parseInt(object.campaignId, 10);
                    else if (typeof object.campaignId === "number")
                        message.campaignId = object.campaignId;
                    else if (typeof object.campaignId === "object")
                        message.campaignId = new $util.LongBits(object.campaignId.low >>> 0, object.campaignId.high >>> 0).toNumber();
                if (object.account != null) {
                    if (typeof object.account !== "object")
                        throw TypeError(".teads.api.CanAccountEditCampaignRequest.account: object expected");
                    message.account = $root.teads.api.CanAccountEditCampaignRequest.Account.fromObject(object.account);
                }
                return message;
            };

            /**
             * Creates a plain object from a CanAccountEditCampaignRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.CanAccountEditCampaignRequest
             * @static
             * @param {teads.api.CanAccountEditCampaignRequest} message CanAccountEditCampaignRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CanAccountEditCampaignRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.campaignId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.campaignId = options.longs === String ? "0" : 0;
                    object.account = null;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.campaignId != null && message.hasOwnProperty("campaignId"))
                    if (typeof message.campaignId === "number")
                        object.campaignId = options.longs === String ? String(message.campaignId) : message.campaignId;
                    else
                        object.campaignId = options.longs === String ? $util.Long.prototype.toString.call(message.campaignId) : options.longs === Number ? new $util.LongBits(message.campaignId.low >>> 0, message.campaignId.high >>> 0).toNumber() : message.campaignId;
                if (message.account != null && message.hasOwnProperty("account"))
                    object.account = $root.teads.api.CanAccountEditCampaignRequest.Account.toObject(message.account, options);
                return object;
            };

            /**
             * Converts this CanAccountEditCampaignRequest to JSON.
             * @function toJSON
             * @memberof teads.api.CanAccountEditCampaignRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CanAccountEditCampaignRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CanAccountEditCampaignRequest
             * @function getTypeUrl
             * @memberof teads.api.CanAccountEditCampaignRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CanAccountEditCampaignRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.CanAccountEditCampaignRequest";
            };

            CanAccountEditCampaignRequest.Account = (function() {

                /**
                 * Properties of an Account.
                 * @memberof teads.api.CanAccountEditCampaignRequest
                 * @interface IAccount
                 * @property {number} entityId Account entityId
                 * @property {number} profileId Account profileId
                 */

                /**
                 * Constructs a new Account.
                 * @memberof teads.api.CanAccountEditCampaignRequest
                 * @classdesc Represents an Account.
                 * @implements IAccount
                 * @constructor
                 * @param {teads.api.CanAccountEditCampaignRequest.IAccount=} [properties] Properties to set
                 */
                function Account(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Account entityId.
                 * @member {number} entityId
                 * @memberof teads.api.CanAccountEditCampaignRequest.Account
                 * @instance
                 */
                Account.prototype.entityId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * Account profileId.
                 * @member {number} profileId
                 * @memberof teads.api.CanAccountEditCampaignRequest.Account
                 * @instance
                 */
                Account.prototype.profileId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * Creates a new Account instance using the specified properties.
                 * @function create
                 * @memberof teads.api.CanAccountEditCampaignRequest.Account
                 * @static
                 * @param {teads.api.CanAccountEditCampaignRequest.IAccount=} [properties] Properties to set
                 * @returns {teads.api.CanAccountEditCampaignRequest.Account} Account instance
                 */
                Account.create = function create(properties) {
                    return new Account(properties);
                };

                /**
                 * Encodes the specified Account message. Does not implicitly {@link teads.api.CanAccountEditCampaignRequest.Account.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.CanAccountEditCampaignRequest.Account
                 * @static
                 * @param {teads.api.CanAccountEditCampaignRequest.IAccount} message Account message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Account.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.entityId);
                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.profileId);
                    return writer;
                };

                /**
                 * Encodes the specified Account message, length delimited. Does not implicitly {@link teads.api.CanAccountEditCampaignRequest.Account.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.CanAccountEditCampaignRequest.Account
                 * @static
                 * @param {teads.api.CanAccountEditCampaignRequest.IAccount} message Account message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Account.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes an Account message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.CanAccountEditCampaignRequest.Account
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.CanAccountEditCampaignRequest.Account} Account
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Account.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.CanAccountEditCampaignRequest.Account();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.entityId = reader.int64();
                                break;
                            }
                        case 2: {
                                message.profileId = reader.int64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("entityId"))
                        throw $util.ProtocolError("missing required 'entityId'", { instance: message });
                    if (!message.hasOwnProperty("profileId"))
                        throw $util.ProtocolError("missing required 'profileId'", { instance: message });
                    return message;
                };

                /**
                 * Decodes an Account message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.CanAccountEditCampaignRequest.Account
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.CanAccountEditCampaignRequest.Account} Account
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Account.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies an Account message.
                 * @function verify
                 * @memberof teads.api.CanAccountEditCampaignRequest.Account
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Account.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.entityId) && !(message.entityId && $util.isInteger(message.entityId.low) && $util.isInteger(message.entityId.high)))
                        return "entityId: integer|Long expected";
                    if (!$util.isInteger(message.profileId) && !(message.profileId && $util.isInteger(message.profileId.low) && $util.isInteger(message.profileId.high)))
                        return "profileId: integer|Long expected";
                    return null;
                };

                /**
                 * Creates an Account message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.CanAccountEditCampaignRequest.Account
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.CanAccountEditCampaignRequest.Account} Account
                 */
                Account.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.CanAccountEditCampaignRequest.Account)
                        return object;
                    var message = new $root.teads.api.CanAccountEditCampaignRequest.Account();
                    if (object.entityId != null)
                        if ($util.Long)
                            (message.entityId = $util.Long.fromValue(object.entityId)).unsigned = false;
                        else if (typeof object.entityId === "string")
                            message.entityId = parseInt(object.entityId, 10);
                        else if (typeof object.entityId === "number")
                            message.entityId = object.entityId;
                        else if (typeof object.entityId === "object")
                            message.entityId = new $util.LongBits(object.entityId.low >>> 0, object.entityId.high >>> 0).toNumber();
                    if (object.profileId != null)
                        if ($util.Long)
                            (message.profileId = $util.Long.fromValue(object.profileId)).unsigned = false;
                        else if (typeof object.profileId === "string")
                            message.profileId = parseInt(object.profileId, 10);
                        else if (typeof object.profileId === "number")
                            message.profileId = object.profileId;
                        else if (typeof object.profileId === "object")
                            message.profileId = new $util.LongBits(object.profileId.low >>> 0, object.profileId.high >>> 0).toNumber();
                    return message;
                };

                /**
                 * Creates a plain object from an Account message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.CanAccountEditCampaignRequest.Account
                 * @static
                 * @param {teads.api.CanAccountEditCampaignRequest.Account} message Account
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Account.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.entityId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.entityId = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.profileId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.profileId = options.longs === String ? "0" : 0;
                    }
                    if (message.entityId != null && message.hasOwnProperty("entityId"))
                        if (typeof message.entityId === "number")
                            object.entityId = options.longs === String ? String(message.entityId) : message.entityId;
                        else
                            object.entityId = options.longs === String ? $util.Long.prototype.toString.call(message.entityId) : options.longs === Number ? new $util.LongBits(message.entityId.low >>> 0, message.entityId.high >>> 0).toNumber() : message.entityId;
                    if (message.profileId != null && message.hasOwnProperty("profileId"))
                        if (typeof message.profileId === "number")
                            object.profileId = options.longs === String ? String(message.profileId) : message.profileId;
                        else
                            object.profileId = options.longs === String ? $util.Long.prototype.toString.call(message.profileId) : options.longs === Number ? new $util.LongBits(message.profileId.low >>> 0, message.profileId.high >>> 0).toNumber() : message.profileId;
                    return object;
                };

                /**
                 * Converts this Account to JSON.
                 * @function toJSON
                 * @memberof teads.api.CanAccountEditCampaignRequest.Account
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Account.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for Account
                 * @function getTypeUrl
                 * @memberof teads.api.CanAccountEditCampaignRequest.Account
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Account.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.CanAccountEditCampaignRequest.Account";
                };

                return Account;
            })();

            return CanAccountEditCampaignRequest;
        })();

        api.CanAccountEditCampaignResponse = (function() {

            /**
             * Properties of a CanAccountEditCampaignResponse.
             * @memberof teads.api
             * @interface ICanAccountEditCampaignResponse
             * @property {boolean} canEdit CanAccountEditCampaignResponse canEdit
             */

            /**
             * Constructs a new CanAccountEditCampaignResponse.
             * @memberof teads.api
             * @classdesc Represents a CanAccountEditCampaignResponse.
             * @implements ICanAccountEditCampaignResponse
             * @constructor
             * @param {teads.api.ICanAccountEditCampaignResponse=} [properties] Properties to set
             */
            function CanAccountEditCampaignResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CanAccountEditCampaignResponse canEdit.
             * @member {boolean} canEdit
             * @memberof teads.api.CanAccountEditCampaignResponse
             * @instance
             */
            CanAccountEditCampaignResponse.prototype.canEdit = false;

            /**
             * Creates a new CanAccountEditCampaignResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.CanAccountEditCampaignResponse
             * @static
             * @param {teads.api.ICanAccountEditCampaignResponse=} [properties] Properties to set
             * @returns {teads.api.CanAccountEditCampaignResponse} CanAccountEditCampaignResponse instance
             */
            CanAccountEditCampaignResponse.create = function create(properties) {
                return new CanAccountEditCampaignResponse(properties);
            };

            /**
             * Encodes the specified CanAccountEditCampaignResponse message. Does not implicitly {@link teads.api.CanAccountEditCampaignResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.CanAccountEditCampaignResponse
             * @static
             * @param {teads.api.ICanAccountEditCampaignResponse} message CanAccountEditCampaignResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CanAccountEditCampaignResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.canEdit);
                return writer;
            };

            /**
             * Encodes the specified CanAccountEditCampaignResponse message, length delimited. Does not implicitly {@link teads.api.CanAccountEditCampaignResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.CanAccountEditCampaignResponse
             * @static
             * @param {teads.api.ICanAccountEditCampaignResponse} message CanAccountEditCampaignResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CanAccountEditCampaignResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CanAccountEditCampaignResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.CanAccountEditCampaignResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.CanAccountEditCampaignResponse} CanAccountEditCampaignResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CanAccountEditCampaignResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.CanAccountEditCampaignResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.canEdit = reader.bool();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("canEdit"))
                    throw $util.ProtocolError("missing required 'canEdit'", { instance: message });
                return message;
            };

            /**
             * Decodes a CanAccountEditCampaignResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.CanAccountEditCampaignResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.CanAccountEditCampaignResponse} CanAccountEditCampaignResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CanAccountEditCampaignResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CanAccountEditCampaignResponse message.
             * @function verify
             * @memberof teads.api.CanAccountEditCampaignResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CanAccountEditCampaignResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (typeof message.canEdit !== "boolean")
                    return "canEdit: boolean expected";
                return null;
            };

            /**
             * Creates a CanAccountEditCampaignResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.CanAccountEditCampaignResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.CanAccountEditCampaignResponse} CanAccountEditCampaignResponse
             */
            CanAccountEditCampaignResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.CanAccountEditCampaignResponse)
                    return object;
                var message = new $root.teads.api.CanAccountEditCampaignResponse();
                if (object.canEdit != null)
                    message.canEdit = Boolean(object.canEdit);
                return message;
            };

            /**
             * Creates a plain object from a CanAccountEditCampaignResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.CanAccountEditCampaignResponse
             * @static
             * @param {teads.api.CanAccountEditCampaignResponse} message CanAccountEditCampaignResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CanAccountEditCampaignResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.canEdit = false;
                if (message.canEdit != null && message.hasOwnProperty("canEdit"))
                    object.canEdit = message.canEdit;
                return object;
            };

            /**
             * Converts this CanAccountEditCampaignResponse to JSON.
             * @function toJSON
             * @memberof teads.api.CanAccountEditCampaignResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CanAccountEditCampaignResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CanAccountEditCampaignResponse
             * @function getTypeUrl
             * @memberof teads.api.CanAccountEditCampaignResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CanAccountEditCampaignResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.CanAccountEditCampaignResponse";
            };

            return CanAccountEditCampaignResponse;
        })();

        api.CreateBuyerEntityRequest = (function() {

            /**
             * Properties of a CreateBuyerEntityRequest.
             * @memberof teads.api
             * @interface ICreateBuyerEntityRequest
             * @property {teads.api.ISecurityContext} securityContext CreateBuyerEntityRequest securityContext
             * @property {number} officeId CreateBuyerEntityRequest officeId
             * @property {number|null} [agencyId] CreateBuyerEntityRequest agencyId
             * @property {number|null} [advertiserId] CreateBuyerEntityRequest advertiserId
             * @property {string|null} [entityName] CreateBuyerEntityRequest entityName
             */

            /**
             * Constructs a new CreateBuyerEntityRequest.
             * @memberof teads.api
             * @classdesc Represents a CreateBuyerEntityRequest.
             * @implements ICreateBuyerEntityRequest
             * @constructor
             * @param {teads.api.ICreateBuyerEntityRequest=} [properties] Properties to set
             */
            function CreateBuyerEntityRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CreateBuyerEntityRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.CreateBuyerEntityRequest
             * @instance
             */
            CreateBuyerEntityRequest.prototype.securityContext = null;

            /**
             * CreateBuyerEntityRequest officeId.
             * @member {number} officeId
             * @memberof teads.api.CreateBuyerEntityRequest
             * @instance
             */
            CreateBuyerEntityRequest.prototype.officeId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * CreateBuyerEntityRequest agencyId.
             * @member {number|null|undefined} agencyId
             * @memberof teads.api.CreateBuyerEntityRequest
             * @instance
             */
            CreateBuyerEntityRequest.prototype.agencyId = null;

            /**
             * CreateBuyerEntityRequest advertiserId.
             * @member {number|null|undefined} advertiserId
             * @memberof teads.api.CreateBuyerEntityRequest
             * @instance
             */
            CreateBuyerEntityRequest.prototype.advertiserId = null;

            /**
             * CreateBuyerEntityRequest entityName.
             * @member {string} entityName
             * @memberof teads.api.CreateBuyerEntityRequest
             * @instance
             */
            CreateBuyerEntityRequest.prototype.entityName = "";

            // OneOf field names bound to virtual getters and setters
            var $oneOfFields;

            /**
             * CreateBuyerEntityRequest buyerId.
             * @member {"agencyId"|"advertiserId"|undefined} buyerId
             * @memberof teads.api.CreateBuyerEntityRequest
             * @instance
             */
            Object.defineProperty(CreateBuyerEntityRequest.prototype, "buyerId", {
                get: $util.oneOfGetter($oneOfFields = ["agencyId", "advertiserId"]),
                set: $util.oneOfSetter($oneOfFields)
            });

            /**
             * Creates a new CreateBuyerEntityRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.CreateBuyerEntityRequest
             * @static
             * @param {teads.api.ICreateBuyerEntityRequest=} [properties] Properties to set
             * @returns {teads.api.CreateBuyerEntityRequest} CreateBuyerEntityRequest instance
             */
            CreateBuyerEntityRequest.create = function create(properties) {
                return new CreateBuyerEntityRequest(properties);
            };

            /**
             * Encodes the specified CreateBuyerEntityRequest message. Does not implicitly {@link teads.api.CreateBuyerEntityRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.CreateBuyerEntityRequest
             * @static
             * @param {teads.api.ICreateBuyerEntityRequest} message CreateBuyerEntityRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateBuyerEntityRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.officeId);
                if (message.agencyId != null && Object.hasOwnProperty.call(message, "agencyId"))
                    writer.uint32(/* id 3, wireType 0 =*/24).int64(message.agencyId);
                if (message.advertiserId != null && Object.hasOwnProperty.call(message, "advertiserId"))
                    writer.uint32(/* id 4, wireType 0 =*/32).int64(message.advertiserId);
                if (message.entityName != null && Object.hasOwnProperty.call(message, "entityName"))
                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.entityName);
                return writer;
            };

            /**
             * Encodes the specified CreateBuyerEntityRequest message, length delimited. Does not implicitly {@link teads.api.CreateBuyerEntityRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.CreateBuyerEntityRequest
             * @static
             * @param {teads.api.ICreateBuyerEntityRequest} message CreateBuyerEntityRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateBuyerEntityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CreateBuyerEntityRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.CreateBuyerEntityRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.CreateBuyerEntityRequest} CreateBuyerEntityRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateBuyerEntityRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.CreateBuyerEntityRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.officeId = reader.int64();
                            break;
                        }
                    case 3: {
                            message.agencyId = reader.int64();
                            break;
                        }
                    case 4: {
                            message.advertiserId = reader.int64();
                            break;
                        }
                    case 5: {
                            message.entityName = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("officeId"))
                    throw $util.ProtocolError("missing required 'officeId'", { instance: message });
                return message;
            };

            /**
             * Decodes a CreateBuyerEntityRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.CreateBuyerEntityRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.CreateBuyerEntityRequest} CreateBuyerEntityRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateBuyerEntityRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CreateBuyerEntityRequest message.
             * @function verify
             * @memberof teads.api.CreateBuyerEntityRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CreateBuyerEntityRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                var properties = {};
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.officeId) && !(message.officeId && $util.isInteger(message.officeId.low) && $util.isInteger(message.officeId.high)))
                    return "officeId: integer|Long expected";
                if (message.agencyId != null && message.hasOwnProperty("agencyId")) {
                    properties.buyerId = 1;
                    if (!$util.isInteger(message.agencyId) && !(message.agencyId && $util.isInteger(message.agencyId.low) && $util.isInteger(message.agencyId.high)))
                        return "agencyId: integer|Long expected";
                }
                if (message.advertiserId != null && message.hasOwnProperty("advertiserId")) {
                    if (properties.buyerId === 1)
                        return "buyerId: multiple values";
                    properties.buyerId = 1;
                    if (!$util.isInteger(message.advertiserId) && !(message.advertiserId && $util.isInteger(message.advertiserId.low) && $util.isInteger(message.advertiserId.high)))
                        return "advertiserId: integer|Long expected";
                }
                if (message.entityName != null && message.hasOwnProperty("entityName"))
                    if (!$util.isString(message.entityName))
                        return "entityName: string expected";
                return null;
            };

            /**
             * Creates a CreateBuyerEntityRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.CreateBuyerEntityRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.CreateBuyerEntityRequest} CreateBuyerEntityRequest
             */
            CreateBuyerEntityRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.CreateBuyerEntityRequest)
                    return object;
                var message = new $root.teads.api.CreateBuyerEntityRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.CreateBuyerEntityRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.officeId != null)
                    if ($util.Long)
                        (message.officeId = $util.Long.fromValue(object.officeId)).unsigned = false;
                    else if (typeof object.officeId === "string")
                        message.officeId = parseInt(object.officeId, 10);
                    else if (typeof object.officeId === "number")
                        message.officeId = object.officeId;
                    else if (typeof object.officeId === "object")
                        message.officeId = new $util.LongBits(object.officeId.low >>> 0, object.officeId.high >>> 0).toNumber();
                if (object.agencyId != null)
                    if ($util.Long)
                        (message.agencyId = $util.Long.fromValue(object.agencyId)).unsigned = false;
                    else if (typeof object.agencyId === "string")
                        message.agencyId = parseInt(object.agencyId, 10);
                    else if (typeof object.agencyId === "number")
                        message.agencyId = object.agencyId;
                    else if (typeof object.agencyId === "object")
                        message.agencyId = new $util.LongBits(object.agencyId.low >>> 0, object.agencyId.high >>> 0).toNumber();
                if (object.advertiserId != null)
                    if ($util.Long)
                        (message.advertiserId = $util.Long.fromValue(object.advertiserId)).unsigned = false;
                    else if (typeof object.advertiserId === "string")
                        message.advertiserId = parseInt(object.advertiserId, 10);
                    else if (typeof object.advertiserId === "number")
                        message.advertiserId = object.advertiserId;
                    else if (typeof object.advertiserId === "object")
                        message.advertiserId = new $util.LongBits(object.advertiserId.low >>> 0, object.advertiserId.high >>> 0).toNumber();
                if (object.entityName != null)
                    message.entityName = String(object.entityName);
                return message;
            };

            /**
             * Creates a plain object from a CreateBuyerEntityRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.CreateBuyerEntityRequest
             * @static
             * @param {teads.api.CreateBuyerEntityRequest} message CreateBuyerEntityRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CreateBuyerEntityRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.officeId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.officeId = options.longs === String ? "0" : 0;
                    object.entityName = "";
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.officeId != null && message.hasOwnProperty("officeId"))
                    if (typeof message.officeId === "number")
                        object.officeId = options.longs === String ? String(message.officeId) : message.officeId;
                    else
                        object.officeId = options.longs === String ? $util.Long.prototype.toString.call(message.officeId) : options.longs === Number ? new $util.LongBits(message.officeId.low >>> 0, message.officeId.high >>> 0).toNumber() : message.officeId;
                if (message.agencyId != null && message.hasOwnProperty("agencyId")) {
                    if (typeof message.agencyId === "number")
                        object.agencyId = options.longs === String ? String(message.agencyId) : message.agencyId;
                    else
                        object.agencyId = options.longs === String ? $util.Long.prototype.toString.call(message.agencyId) : options.longs === Number ? new $util.LongBits(message.agencyId.low >>> 0, message.agencyId.high >>> 0).toNumber() : message.agencyId;
                    if (options.oneofs)
                        object.buyerId = "agencyId";
                }
                if (message.advertiserId != null && message.hasOwnProperty("advertiserId")) {
                    if (typeof message.advertiserId === "number")
                        object.advertiserId = options.longs === String ? String(message.advertiserId) : message.advertiserId;
                    else
                        object.advertiserId = options.longs === String ? $util.Long.prototype.toString.call(message.advertiserId) : options.longs === Number ? new $util.LongBits(message.advertiserId.low >>> 0, message.advertiserId.high >>> 0).toNumber() : message.advertiserId;
                    if (options.oneofs)
                        object.buyerId = "advertiserId";
                }
                if (message.entityName != null && message.hasOwnProperty("entityName"))
                    object.entityName = message.entityName;
                return object;
            };

            /**
             * Converts this CreateBuyerEntityRequest to JSON.
             * @function toJSON
             * @memberof teads.api.CreateBuyerEntityRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CreateBuyerEntityRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CreateBuyerEntityRequest
             * @function getTypeUrl
             * @memberof teads.api.CreateBuyerEntityRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CreateBuyerEntityRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.CreateBuyerEntityRequest";
            };

            return CreateBuyerEntityRequest;
        })();

        api.CreateBuyerEntityResponse = (function() {

            /**
             * Properties of a CreateBuyerEntityResponse.
             * @memberof teads.api
             * @interface ICreateBuyerEntityResponse
             * @property {number} entityId CreateBuyerEntityResponse entityId
             */

            /**
             * Constructs a new CreateBuyerEntityResponse.
             * @memberof teads.api
             * @classdesc Represents a CreateBuyerEntityResponse.
             * @implements ICreateBuyerEntityResponse
             * @constructor
             * @param {teads.api.ICreateBuyerEntityResponse=} [properties] Properties to set
             */
            function CreateBuyerEntityResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CreateBuyerEntityResponse entityId.
             * @member {number} entityId
             * @memberof teads.api.CreateBuyerEntityResponse
             * @instance
             */
            CreateBuyerEntityResponse.prototype.entityId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new CreateBuyerEntityResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.CreateBuyerEntityResponse
             * @static
             * @param {teads.api.ICreateBuyerEntityResponse=} [properties] Properties to set
             * @returns {teads.api.CreateBuyerEntityResponse} CreateBuyerEntityResponse instance
             */
            CreateBuyerEntityResponse.create = function create(properties) {
                return new CreateBuyerEntityResponse(properties);
            };

            /**
             * Encodes the specified CreateBuyerEntityResponse message. Does not implicitly {@link teads.api.CreateBuyerEntityResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.CreateBuyerEntityResponse
             * @static
             * @param {teads.api.ICreateBuyerEntityResponse} message CreateBuyerEntityResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateBuyerEntityResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.entityId);
                return writer;
            };

            /**
             * Encodes the specified CreateBuyerEntityResponse message, length delimited. Does not implicitly {@link teads.api.CreateBuyerEntityResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.CreateBuyerEntityResponse
             * @static
             * @param {teads.api.ICreateBuyerEntityResponse} message CreateBuyerEntityResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateBuyerEntityResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CreateBuyerEntityResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.CreateBuyerEntityResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.CreateBuyerEntityResponse} CreateBuyerEntityResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateBuyerEntityResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.CreateBuyerEntityResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.entityId = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("entityId"))
                    throw $util.ProtocolError("missing required 'entityId'", { instance: message });
                return message;
            };

            /**
             * Decodes a CreateBuyerEntityResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.CreateBuyerEntityResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.CreateBuyerEntityResponse} CreateBuyerEntityResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateBuyerEntityResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CreateBuyerEntityResponse message.
             * @function verify
             * @memberof teads.api.CreateBuyerEntityResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CreateBuyerEntityResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.entityId) && !(message.entityId && $util.isInteger(message.entityId.low) && $util.isInteger(message.entityId.high)))
                    return "entityId: integer|Long expected";
                return null;
            };

            /**
             * Creates a CreateBuyerEntityResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.CreateBuyerEntityResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.CreateBuyerEntityResponse} CreateBuyerEntityResponse
             */
            CreateBuyerEntityResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.CreateBuyerEntityResponse)
                    return object;
                var message = new $root.teads.api.CreateBuyerEntityResponse();
                if (object.entityId != null)
                    if ($util.Long)
                        (message.entityId = $util.Long.fromValue(object.entityId)).unsigned = false;
                    else if (typeof object.entityId === "string")
                        message.entityId = parseInt(object.entityId, 10);
                    else if (typeof object.entityId === "number")
                        message.entityId = object.entityId;
                    else if (typeof object.entityId === "object")
                        message.entityId = new $util.LongBits(object.entityId.low >>> 0, object.entityId.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from a CreateBuyerEntityResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.CreateBuyerEntityResponse
             * @static
             * @param {teads.api.CreateBuyerEntityResponse} message CreateBuyerEntityResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CreateBuyerEntityResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.entityId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.entityId = options.longs === String ? "0" : 0;
                if (message.entityId != null && message.hasOwnProperty("entityId"))
                    if (typeof message.entityId === "number")
                        object.entityId = options.longs === String ? String(message.entityId) : message.entityId;
                    else
                        object.entityId = options.longs === String ? $util.Long.prototype.toString.call(message.entityId) : options.longs === Number ? new $util.LongBits(message.entityId.low >>> 0, message.entityId.high >>> 0).toNumber() : message.entityId;
                return object;
            };

            /**
             * Converts this CreateBuyerEntityResponse to JSON.
             * @function toJSON
             * @memberof teads.api.CreateBuyerEntityResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CreateBuyerEntityResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CreateBuyerEntityResponse
             * @function getTypeUrl
             * @memberof teads.api.CreateBuyerEntityResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CreateBuyerEntityResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.CreateBuyerEntityResponse";
            };

            return CreateBuyerEntityResponse;
        })();

        api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest = (function() {

            /**
             * Properties of a CreateCampaignSkeletonsFromSalesforceOpportunityRequest.
             * @memberof teads.api
             * @interface ICreateCampaignSkeletonsFromSalesforceOpportunityRequest
             * @property {teads.api.ISecurityContext} securityContext CreateCampaignSkeletonsFromSalesforceOpportunityRequest securityContext
             * @property {string} salesforceOpportunityId CreateCampaignSkeletonsFromSalesforceOpportunityRequest salesforceOpportunityId
             * @property {Array.<teads.api.CampaignObjective>|null} [campaignObjectives] CreateCampaignSkeletonsFromSalesforceOpportunityRequest campaignObjectives
             * @property {number} seatEntityId CreateCampaignSkeletonsFromSalesforceOpportunityRequest seatEntityId
             * @property {number} profileId CreateCampaignSkeletonsFromSalesforceOpportunityRequest profileId
             * @property {boolean|null} [managerCompatibilityMode] CreateCampaignSkeletonsFromSalesforceOpportunityRequest managerCompatibilityMode
             * @property {Array.<teads.api.AdvertisingSolutionId>|null} [advertisingSolutionIds] CreateCampaignSkeletonsFromSalesforceOpportunityRequest advertisingSolutionIds
             */

            /**
             * Constructs a new CreateCampaignSkeletonsFromSalesforceOpportunityRequest.
             * @memberof teads.api
             * @classdesc Represents a CreateCampaignSkeletonsFromSalesforceOpportunityRequest.
             * @implements ICreateCampaignSkeletonsFromSalesforceOpportunityRequest
             * @constructor
             * @param {teads.api.ICreateCampaignSkeletonsFromSalesforceOpportunityRequest=} [properties] Properties to set
             */
            function CreateCampaignSkeletonsFromSalesforceOpportunityRequest(properties) {
                this.campaignObjectives = [];
                this.advertisingSolutionIds = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CreateCampaignSkeletonsFromSalesforceOpportunityRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest
             * @instance
             */
            CreateCampaignSkeletonsFromSalesforceOpportunityRequest.prototype.securityContext = null;

            /**
             * CreateCampaignSkeletonsFromSalesforceOpportunityRequest salesforceOpportunityId.
             * @member {string} salesforceOpportunityId
             * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest
             * @instance
             */
            CreateCampaignSkeletonsFromSalesforceOpportunityRequest.prototype.salesforceOpportunityId = "";

            /**
             * CreateCampaignSkeletonsFromSalesforceOpportunityRequest campaignObjectives.
             * @member {Array.<teads.api.CampaignObjective>} campaignObjectives
             * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest
             * @instance
             */
            CreateCampaignSkeletonsFromSalesforceOpportunityRequest.prototype.campaignObjectives = $util.emptyArray;

            /**
             * CreateCampaignSkeletonsFromSalesforceOpportunityRequest seatEntityId.
             * @member {number} seatEntityId
             * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest
             * @instance
             */
            CreateCampaignSkeletonsFromSalesforceOpportunityRequest.prototype.seatEntityId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * CreateCampaignSkeletonsFromSalesforceOpportunityRequest profileId.
             * @member {number} profileId
             * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest
             * @instance
             */
            CreateCampaignSkeletonsFromSalesforceOpportunityRequest.prototype.profileId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * CreateCampaignSkeletonsFromSalesforceOpportunityRequest managerCompatibilityMode.
             * @member {boolean} managerCompatibilityMode
             * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest
             * @instance
             */
            CreateCampaignSkeletonsFromSalesforceOpportunityRequest.prototype.managerCompatibilityMode = false;

            /**
             * CreateCampaignSkeletonsFromSalesforceOpportunityRequest advertisingSolutionIds.
             * @member {Array.<teads.api.AdvertisingSolutionId>} advertisingSolutionIds
             * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest
             * @instance
             */
            CreateCampaignSkeletonsFromSalesforceOpportunityRequest.prototype.advertisingSolutionIds = $util.emptyArray;

            /**
             * Creates a new CreateCampaignSkeletonsFromSalesforceOpportunityRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest
             * @static
             * @param {teads.api.ICreateCampaignSkeletonsFromSalesforceOpportunityRequest=} [properties] Properties to set
             * @returns {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest} CreateCampaignSkeletonsFromSalesforceOpportunityRequest instance
             */
            CreateCampaignSkeletonsFromSalesforceOpportunityRequest.create = function create(properties) {
                return new CreateCampaignSkeletonsFromSalesforceOpportunityRequest(properties);
            };

            /**
             * Encodes the specified CreateCampaignSkeletonsFromSalesforceOpportunityRequest message. Does not implicitly {@link teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest
             * @static
             * @param {teads.api.ICreateCampaignSkeletonsFromSalesforceOpportunityRequest} message CreateCampaignSkeletonsFromSalesforceOpportunityRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateCampaignSkeletonsFromSalesforceOpportunityRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.salesforceOpportunityId);
                if (message.campaignObjectives != null && message.campaignObjectives.length)
                    for (var i = 0; i < message.campaignObjectives.length; ++i)
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.campaignObjectives[i]);
                writer.uint32(/* id 4, wireType 0 =*/32).int64(message.seatEntityId);
                writer.uint32(/* id 5, wireType 0 =*/40).int64(message.profileId);
                if (message.managerCompatibilityMode != null && Object.hasOwnProperty.call(message, "managerCompatibilityMode"))
                    writer.uint32(/* id 6, wireType 0 =*/48).bool(message.managerCompatibilityMode);
                if (message.advertisingSolutionIds != null && message.advertisingSolutionIds.length)
                    for (var i = 0; i < message.advertisingSolutionIds.length; ++i)
                        writer.uint32(/* id 7, wireType 0 =*/56).int32(message.advertisingSolutionIds[i]);
                return writer;
            };

            /**
             * Encodes the specified CreateCampaignSkeletonsFromSalesforceOpportunityRequest message, length delimited. Does not implicitly {@link teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest
             * @static
             * @param {teads.api.ICreateCampaignSkeletonsFromSalesforceOpportunityRequest} message CreateCampaignSkeletonsFromSalesforceOpportunityRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateCampaignSkeletonsFromSalesforceOpportunityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CreateCampaignSkeletonsFromSalesforceOpportunityRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest} CreateCampaignSkeletonsFromSalesforceOpportunityRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateCampaignSkeletonsFromSalesforceOpportunityRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.salesforceOpportunityId = reader.string();
                            break;
                        }
                    case 3: {
                            if (!(message.campaignObjectives && message.campaignObjectives.length))
                                message.campaignObjectives = [];
                            if ((tag & 7) === 2) {
                                var end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.campaignObjectives.push(reader.int32());
                            } else
                                message.campaignObjectives.push(reader.int32());
                            break;
                        }
                    case 4: {
                            message.seatEntityId = reader.int64();
                            break;
                        }
                    case 5: {
                            message.profileId = reader.int64();
                            break;
                        }
                    case 6: {
                            message.managerCompatibilityMode = reader.bool();
                            break;
                        }
                    case 7: {
                            if (!(message.advertisingSolutionIds && message.advertisingSolutionIds.length))
                                message.advertisingSolutionIds = [];
                            if ((tag & 7) === 2) {
                                var end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.advertisingSolutionIds.push(reader.int32());
                            } else
                                message.advertisingSolutionIds.push(reader.int32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("salesforceOpportunityId"))
                    throw $util.ProtocolError("missing required 'salesforceOpportunityId'", { instance: message });
                if (!message.hasOwnProperty("seatEntityId"))
                    throw $util.ProtocolError("missing required 'seatEntityId'", { instance: message });
                if (!message.hasOwnProperty("profileId"))
                    throw $util.ProtocolError("missing required 'profileId'", { instance: message });
                return message;
            };

            /**
             * Decodes a CreateCampaignSkeletonsFromSalesforceOpportunityRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest} CreateCampaignSkeletonsFromSalesforceOpportunityRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateCampaignSkeletonsFromSalesforceOpportunityRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CreateCampaignSkeletonsFromSalesforceOpportunityRequest message.
             * @function verify
             * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CreateCampaignSkeletonsFromSalesforceOpportunityRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isString(message.salesforceOpportunityId))
                    return "salesforceOpportunityId: string expected";
                if (message.campaignObjectives != null && message.hasOwnProperty("campaignObjectives")) {
                    if (!Array.isArray(message.campaignObjectives))
                        return "campaignObjectives: array expected";
                    for (var i = 0; i < message.campaignObjectives.length; ++i)
                        switch (message.campaignObjectives[i]) {
                        default:
                            return "campaignObjectives: enum value[] expected";
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                }
                if (!$util.isInteger(message.seatEntityId) && !(message.seatEntityId && $util.isInteger(message.seatEntityId.low) && $util.isInteger(message.seatEntityId.high)))
                    return "seatEntityId: integer|Long expected";
                if (!$util.isInteger(message.profileId) && !(message.profileId && $util.isInteger(message.profileId.low) && $util.isInteger(message.profileId.high)))
                    return "profileId: integer|Long expected";
                if (message.managerCompatibilityMode != null && message.hasOwnProperty("managerCompatibilityMode"))
                    if (typeof message.managerCompatibilityMode !== "boolean")
                        return "managerCompatibilityMode: boolean expected";
                if (message.advertisingSolutionIds != null && message.hasOwnProperty("advertisingSolutionIds")) {
                    if (!Array.isArray(message.advertisingSolutionIds))
                        return "advertisingSolutionIds: array expected";
                    for (var i = 0; i < message.advertisingSolutionIds.length; ++i)
                        switch (message.advertisingSolutionIds[i]) {
                        default:
                            return "advertisingSolutionIds: enum value[] expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                            break;
                        }
                }
                return null;
            };

            /**
             * Creates a CreateCampaignSkeletonsFromSalesforceOpportunityRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest} CreateCampaignSkeletonsFromSalesforceOpportunityRequest
             */
            CreateCampaignSkeletonsFromSalesforceOpportunityRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest)
                    return object;
                var message = new $root.teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.salesforceOpportunityId != null)
                    message.salesforceOpportunityId = String(object.salesforceOpportunityId);
                if (object.campaignObjectives) {
                    if (!Array.isArray(object.campaignObjectives))
                        throw TypeError(".teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest.campaignObjectives: array expected");
                    message.campaignObjectives = [];
                    for (var i = 0; i < object.campaignObjectives.length; ++i)
                        switch (object.campaignObjectives[i]) {
                        default:
                            if (typeof object.campaignObjectives[i] === "number") {
                                message.campaignObjectives[i] = object.campaignObjectives[i];
                                break;
                            }
                        case "CAMPAIGN_OBJECTIVE_BRANDING":
                        case 0:
                            message.campaignObjectives[i] = 0;
                            break;
                        case "CAMPAIGN_OBJECTIVE_TRAFFIC_ACQUISITION":
                        case 1:
                            message.campaignObjectives[i] = 1;
                            break;
                        case "CAMPAIGN_OBJECTIVE_SOCIAL":
                        case 2:
                            message.campaignObjectives[i] = 2;
                            break;
                        case "CAMPAIGN_OBJECTIVE_CONVERSIONS":
                        case 3:
                            message.campaignObjectives[i] = 3;
                            break;
                        }
                }
                if (object.seatEntityId != null)
                    if ($util.Long)
                        (message.seatEntityId = $util.Long.fromValue(object.seatEntityId)).unsigned = false;
                    else if (typeof object.seatEntityId === "string")
                        message.seatEntityId = parseInt(object.seatEntityId, 10);
                    else if (typeof object.seatEntityId === "number")
                        message.seatEntityId = object.seatEntityId;
                    else if (typeof object.seatEntityId === "object")
                        message.seatEntityId = new $util.LongBits(object.seatEntityId.low >>> 0, object.seatEntityId.high >>> 0).toNumber();
                if (object.profileId != null)
                    if ($util.Long)
                        (message.profileId = $util.Long.fromValue(object.profileId)).unsigned = false;
                    else if (typeof object.profileId === "string")
                        message.profileId = parseInt(object.profileId, 10);
                    else if (typeof object.profileId === "number")
                        message.profileId = object.profileId;
                    else if (typeof object.profileId === "object")
                        message.profileId = new $util.LongBits(object.profileId.low >>> 0, object.profileId.high >>> 0).toNumber();
                if (object.managerCompatibilityMode != null)
                    message.managerCompatibilityMode = Boolean(object.managerCompatibilityMode);
                if (object.advertisingSolutionIds) {
                    if (!Array.isArray(object.advertisingSolutionIds))
                        throw TypeError(".teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest.advertisingSolutionIds: array expected");
                    message.advertisingSolutionIds = [];
                    for (var i = 0; i < object.advertisingSolutionIds.length; ++i)
                        switch (object.advertisingSolutionIds[i]) {
                        default:
                            if (typeof object.advertisingSolutionIds[i] === "number") {
                                message.advertisingSolutionIds[i] = object.advertisingSolutionIds[i];
                                break;
                            }
                        case "ADVERTISING_SOLUTION_ID_AWARENESS":
                        case 1:
                            message.advertisingSolutionIds[i] = 1;
                            break;
                        case "ADVERTISING_SOLUTION_ID_TA_CLICKS":
                        case 2:
                            message.advertisingSolutionIds[i] = 2;
                            break;
                        case "ADVERTISING_SOLUTION_ID_TA_VISITS":
                        case 3:
                            message.advertisingSolutionIds[i] = 3;
                            break;
                        case "ADVERTISING_SOLUTION_ID_TA_MIXED":
                        case 4:
                            message.advertisingSolutionIds[i] = 4;
                            break;
                        case "ADVERTISING_SOLUTION_ID_WEBSITE_CONVERSIONS":
                        case 5:
                            message.advertisingSolutionIds[i] = 5;
                            break;
                        case "ADVERTISING_SOLUTION_ID_SEAMLESS_COMMERCE":
                        case 6:
                            message.advertisingSolutionIds[i] = 6;
                            break;
                        case "ADVERTISING_SOLUTION_ID_TA_CLICKS_GUARANTEED_CPC":
                        case 7:
                            message.advertisingSolutionIds[i] = 7;
                            break;
                        case "ADVERTISING_SOLUTION_ID_TA_VISITS_GUARANTEED_CPC":
                        case 8:
                            message.advertisingSolutionIds[i] = 8;
                            break;
                        }
                }
                return message;
            };

            /**
             * Creates a plain object from a CreateCampaignSkeletonsFromSalesforceOpportunityRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest
             * @static
             * @param {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest} message CreateCampaignSkeletonsFromSalesforceOpportunityRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CreateCampaignSkeletonsFromSalesforceOpportunityRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults) {
                    object.campaignObjectives = [];
                    object.advertisingSolutionIds = [];
                }
                if (options.defaults) {
                    object.securityContext = null;
                    object.salesforceOpportunityId = "";
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seatEntityId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seatEntityId = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.profileId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.profileId = options.longs === String ? "0" : 0;
                    object.managerCompatibilityMode = false;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.salesforceOpportunityId != null && message.hasOwnProperty("salesforceOpportunityId"))
                    object.salesforceOpportunityId = message.salesforceOpportunityId;
                if (message.campaignObjectives && message.campaignObjectives.length) {
                    object.campaignObjectives = [];
                    for (var j = 0; j < message.campaignObjectives.length; ++j)
                        object.campaignObjectives[j] = options.enums === String ? $root.teads.api.CampaignObjective[message.campaignObjectives[j]] === undefined ? message.campaignObjectives[j] : $root.teads.api.CampaignObjective[message.campaignObjectives[j]] : message.campaignObjectives[j];
                }
                if (message.seatEntityId != null && message.hasOwnProperty("seatEntityId"))
                    if (typeof message.seatEntityId === "number")
                        object.seatEntityId = options.longs === String ? String(message.seatEntityId) : message.seatEntityId;
                    else
                        object.seatEntityId = options.longs === String ? $util.Long.prototype.toString.call(message.seatEntityId) : options.longs === Number ? new $util.LongBits(message.seatEntityId.low >>> 0, message.seatEntityId.high >>> 0).toNumber() : message.seatEntityId;
                if (message.profileId != null && message.hasOwnProperty("profileId"))
                    if (typeof message.profileId === "number")
                        object.profileId = options.longs === String ? String(message.profileId) : message.profileId;
                    else
                        object.profileId = options.longs === String ? $util.Long.prototype.toString.call(message.profileId) : options.longs === Number ? new $util.LongBits(message.profileId.low >>> 0, message.profileId.high >>> 0).toNumber() : message.profileId;
                if (message.managerCompatibilityMode != null && message.hasOwnProperty("managerCompatibilityMode"))
                    object.managerCompatibilityMode = message.managerCompatibilityMode;
                if (message.advertisingSolutionIds && message.advertisingSolutionIds.length) {
                    object.advertisingSolutionIds = [];
                    for (var j = 0; j < message.advertisingSolutionIds.length; ++j)
                        object.advertisingSolutionIds[j] = options.enums === String ? $root.teads.api.AdvertisingSolutionId[message.advertisingSolutionIds[j]] === undefined ? message.advertisingSolutionIds[j] : $root.teads.api.AdvertisingSolutionId[message.advertisingSolutionIds[j]] : message.advertisingSolutionIds[j];
                }
                return object;
            };

            /**
             * Converts this CreateCampaignSkeletonsFromSalesforceOpportunityRequest to JSON.
             * @function toJSON
             * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CreateCampaignSkeletonsFromSalesforceOpportunityRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CreateCampaignSkeletonsFromSalesforceOpportunityRequest
             * @function getTypeUrl
             * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CreateCampaignSkeletonsFromSalesforceOpportunityRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest";
            };

            return CreateCampaignSkeletonsFromSalesforceOpportunityRequest;
        })();

        api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse = (function() {

            /**
             * Properties of a CreateCampaignSkeletonsFromSalesforceOpportunityResponse.
             * @memberof teads.api
             * @interface ICreateCampaignSkeletonsFromSalesforceOpportunityResponse
             * @property {Array.<teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.ICreatedCampaign>|null} [createdCampaigns] CreateCampaignSkeletonsFromSalesforceOpportunityResponse createdCampaigns
             */

            /**
             * Constructs a new CreateCampaignSkeletonsFromSalesforceOpportunityResponse.
             * @memberof teads.api
             * @classdesc Represents a CreateCampaignSkeletonsFromSalesforceOpportunityResponse.
             * @implements ICreateCampaignSkeletonsFromSalesforceOpportunityResponse
             * @constructor
             * @param {teads.api.ICreateCampaignSkeletonsFromSalesforceOpportunityResponse=} [properties] Properties to set
             */
            function CreateCampaignSkeletonsFromSalesforceOpportunityResponse(properties) {
                this.createdCampaigns = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CreateCampaignSkeletonsFromSalesforceOpportunityResponse createdCampaigns.
             * @member {Array.<teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.ICreatedCampaign>} createdCampaigns
             * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse
             * @instance
             */
            CreateCampaignSkeletonsFromSalesforceOpportunityResponse.prototype.createdCampaigns = $util.emptyArray;

            /**
             * Creates a new CreateCampaignSkeletonsFromSalesforceOpportunityResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse
             * @static
             * @param {teads.api.ICreateCampaignSkeletonsFromSalesforceOpportunityResponse=} [properties] Properties to set
             * @returns {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse} CreateCampaignSkeletonsFromSalesforceOpportunityResponse instance
             */
            CreateCampaignSkeletonsFromSalesforceOpportunityResponse.create = function create(properties) {
                return new CreateCampaignSkeletonsFromSalesforceOpportunityResponse(properties);
            };

            /**
             * Encodes the specified CreateCampaignSkeletonsFromSalesforceOpportunityResponse message. Does not implicitly {@link teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse
             * @static
             * @param {teads.api.ICreateCampaignSkeletonsFromSalesforceOpportunityResponse} message CreateCampaignSkeletonsFromSalesforceOpportunityResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateCampaignSkeletonsFromSalesforceOpportunityResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.createdCampaigns != null && message.createdCampaigns.length)
                    for (var i = 0; i < message.createdCampaigns.length; ++i)
                        $root.teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign.encode(message.createdCampaigns[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified CreateCampaignSkeletonsFromSalesforceOpportunityResponse message, length delimited. Does not implicitly {@link teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse
             * @static
             * @param {teads.api.ICreateCampaignSkeletonsFromSalesforceOpportunityResponse} message CreateCampaignSkeletonsFromSalesforceOpportunityResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateCampaignSkeletonsFromSalesforceOpportunityResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CreateCampaignSkeletonsFromSalesforceOpportunityResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse} CreateCampaignSkeletonsFromSalesforceOpportunityResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateCampaignSkeletonsFromSalesforceOpportunityResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            if (!(message.createdCampaigns && message.createdCampaigns.length))
                                message.createdCampaigns = [];
                            message.createdCampaigns.push($root.teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a CreateCampaignSkeletonsFromSalesforceOpportunityResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse} CreateCampaignSkeletonsFromSalesforceOpportunityResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateCampaignSkeletonsFromSalesforceOpportunityResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CreateCampaignSkeletonsFromSalesforceOpportunityResponse message.
             * @function verify
             * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CreateCampaignSkeletonsFromSalesforceOpportunityResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.createdCampaigns != null && message.hasOwnProperty("createdCampaigns")) {
                    if (!Array.isArray(message.createdCampaigns))
                        return "createdCampaigns: array expected";
                    for (var i = 0; i < message.createdCampaigns.length; ++i) {
                        var error = $root.teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign.verify(message.createdCampaigns[i]);
                        if (error)
                            return "createdCampaigns." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a CreateCampaignSkeletonsFromSalesforceOpportunityResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse} CreateCampaignSkeletonsFromSalesforceOpportunityResponse
             */
            CreateCampaignSkeletonsFromSalesforceOpportunityResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse)
                    return object;
                var message = new $root.teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse();
                if (object.createdCampaigns) {
                    if (!Array.isArray(object.createdCampaigns))
                        throw TypeError(".teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.createdCampaigns: array expected");
                    message.createdCampaigns = [];
                    for (var i = 0; i < object.createdCampaigns.length; ++i) {
                        if (typeof object.createdCampaigns[i] !== "object")
                            throw TypeError(".teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.createdCampaigns: object expected");
                        message.createdCampaigns[i] = $root.teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign.fromObject(object.createdCampaigns[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a CreateCampaignSkeletonsFromSalesforceOpportunityResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse
             * @static
             * @param {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse} message CreateCampaignSkeletonsFromSalesforceOpportunityResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CreateCampaignSkeletonsFromSalesforceOpportunityResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.createdCampaigns = [];
                if (message.createdCampaigns && message.createdCampaigns.length) {
                    object.createdCampaigns = [];
                    for (var j = 0; j < message.createdCampaigns.length; ++j)
                        object.createdCampaigns[j] = $root.teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign.toObject(message.createdCampaigns[j], options);
                }
                return object;
            };

            /**
             * Converts this CreateCampaignSkeletonsFromSalesforceOpportunityResponse to JSON.
             * @function toJSON
             * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CreateCampaignSkeletonsFromSalesforceOpportunityResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CreateCampaignSkeletonsFromSalesforceOpportunityResponse
             * @function getTypeUrl
             * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CreateCampaignSkeletonsFromSalesforceOpportunityResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse";
            };

            CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign = (function() {

                /**
                 * Properties of a CreatedCampaign.
                 * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse
                 * @interface ICreatedCampaign
                 * @property {teads.api.CampaignObjective} campaignObjective CreatedCampaign campaignObjective
                 * @property {number} campaignId CreatedCampaign campaignId
                 * @property {Array.<teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.ILineItemDetail>|null} [lineItemDetails] CreatedCampaign lineItemDetails
                 */

                /**
                 * Constructs a new CreatedCampaign.
                 * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse
                 * @classdesc Represents a CreatedCampaign.
                 * @implements ICreatedCampaign
                 * @constructor
                 * @param {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.ICreatedCampaign=} [properties] Properties to set
                 */
                function CreatedCampaign(properties) {
                    this.lineItemDetails = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * CreatedCampaign campaignObjective.
                 * @member {teads.api.CampaignObjective} campaignObjective
                 * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign
                 * @instance
                 */
                CreatedCampaign.prototype.campaignObjective = 0;

                /**
                 * CreatedCampaign campaignId.
                 * @member {number} campaignId
                 * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign
                 * @instance
                 */
                CreatedCampaign.prototype.campaignId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * CreatedCampaign lineItemDetails.
                 * @member {Array.<teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.ILineItemDetail>} lineItemDetails
                 * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign
                 * @instance
                 */
                CreatedCampaign.prototype.lineItemDetails = $util.emptyArray;

                /**
                 * Creates a new CreatedCampaign instance using the specified properties.
                 * @function create
                 * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign
                 * @static
                 * @param {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.ICreatedCampaign=} [properties] Properties to set
                 * @returns {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign} CreatedCampaign instance
                 */
                CreatedCampaign.create = function create(properties) {
                    return new CreatedCampaign(properties);
                };

                /**
                 * Encodes the specified CreatedCampaign message. Does not implicitly {@link teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign
                 * @static
                 * @param {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.ICreatedCampaign} message CreatedCampaign message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CreatedCampaign.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.campaignObjective);
                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.campaignId);
                    if (message.lineItemDetails != null && message.lineItemDetails.length)
                        for (var i = 0; i < message.lineItemDetails.length; ++i)
                            $root.teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.LineItemDetail.encode(message.lineItemDetails[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified CreatedCampaign message, length delimited. Does not implicitly {@link teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign
                 * @static
                 * @param {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.ICreatedCampaign} message CreatedCampaign message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CreatedCampaign.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a CreatedCampaign message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign} CreatedCampaign
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CreatedCampaign.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.campaignObjective = reader.int32();
                                break;
                            }
                        case 2: {
                                message.campaignId = reader.int64();
                                break;
                            }
                        case 3: {
                                if (!(message.lineItemDetails && message.lineItemDetails.length))
                                    message.lineItemDetails = [];
                                message.lineItemDetails.push($root.teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.LineItemDetail.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("campaignObjective"))
                        throw $util.ProtocolError("missing required 'campaignObjective'", { instance: message });
                    if (!message.hasOwnProperty("campaignId"))
                        throw $util.ProtocolError("missing required 'campaignId'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a CreatedCampaign message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign} CreatedCampaign
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CreatedCampaign.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a CreatedCampaign message.
                 * @function verify
                 * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CreatedCampaign.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    switch (message.campaignObjective) {
                    default:
                        return "campaignObjective: enum value expected";
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    }
                    if (!$util.isInteger(message.campaignId) && !(message.campaignId && $util.isInteger(message.campaignId.low) && $util.isInteger(message.campaignId.high)))
                        return "campaignId: integer|Long expected";
                    if (message.lineItemDetails != null && message.hasOwnProperty("lineItemDetails")) {
                        if (!Array.isArray(message.lineItemDetails))
                            return "lineItemDetails: array expected";
                        for (var i = 0; i < message.lineItemDetails.length; ++i) {
                            var error = $root.teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.LineItemDetail.verify(message.lineItemDetails[i]);
                            if (error)
                                return "lineItemDetails." + error;
                        }
                    }
                    return null;
                };

                /**
                 * Creates a CreatedCampaign message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign} CreatedCampaign
                 */
                CreatedCampaign.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign)
                        return object;
                    var message = new $root.teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign();
                    switch (object.campaignObjective) {
                    default:
                        if (typeof object.campaignObjective === "number") {
                            message.campaignObjective = object.campaignObjective;
                            break;
                        }
                        break;
                    case "CAMPAIGN_OBJECTIVE_BRANDING":
                    case 0:
                        message.campaignObjective = 0;
                        break;
                    case "CAMPAIGN_OBJECTIVE_TRAFFIC_ACQUISITION":
                    case 1:
                        message.campaignObjective = 1;
                        break;
                    case "CAMPAIGN_OBJECTIVE_SOCIAL":
                    case 2:
                        message.campaignObjective = 2;
                        break;
                    case "CAMPAIGN_OBJECTIVE_CONVERSIONS":
                    case 3:
                        message.campaignObjective = 3;
                        break;
                    }
                    if (object.campaignId != null)
                        if ($util.Long)
                            (message.campaignId = $util.Long.fromValue(object.campaignId)).unsigned = false;
                        else if (typeof object.campaignId === "string")
                            message.campaignId = parseInt(object.campaignId, 10);
                        else if (typeof object.campaignId === "number")
                            message.campaignId = object.campaignId;
                        else if (typeof object.campaignId === "object")
                            message.campaignId = new $util.LongBits(object.campaignId.low >>> 0, object.campaignId.high >>> 0).toNumber();
                    if (object.lineItemDetails) {
                        if (!Array.isArray(object.lineItemDetails))
                            throw TypeError(".teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign.lineItemDetails: array expected");
                        message.lineItemDetails = [];
                        for (var i = 0; i < object.lineItemDetails.length; ++i) {
                            if (typeof object.lineItemDetails[i] !== "object")
                                throw TypeError(".teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign.lineItemDetails: object expected");
                            message.lineItemDetails[i] = $root.teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.LineItemDetail.fromObject(object.lineItemDetails[i]);
                        }
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a CreatedCampaign message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign
                 * @static
                 * @param {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign} message CreatedCampaign
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CreatedCampaign.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.lineItemDetails = [];
                    if (options.defaults) {
                        object.campaignObjective = options.enums === String ? "CAMPAIGN_OBJECTIVE_BRANDING" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.campaignId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.campaignId = options.longs === String ? "0" : 0;
                    }
                    if (message.campaignObjective != null && message.hasOwnProperty("campaignObjective"))
                        object.campaignObjective = options.enums === String ? $root.teads.api.CampaignObjective[message.campaignObjective] === undefined ? message.campaignObjective : $root.teads.api.CampaignObjective[message.campaignObjective] : message.campaignObjective;
                    if (message.campaignId != null && message.hasOwnProperty("campaignId"))
                        if (typeof message.campaignId === "number")
                            object.campaignId = options.longs === String ? String(message.campaignId) : message.campaignId;
                        else
                            object.campaignId = options.longs === String ? $util.Long.prototype.toString.call(message.campaignId) : options.longs === Number ? new $util.LongBits(message.campaignId.low >>> 0, message.campaignId.high >>> 0).toNumber() : message.campaignId;
                    if (message.lineItemDetails && message.lineItemDetails.length) {
                        object.lineItemDetails = [];
                        for (var j = 0; j < message.lineItemDetails.length; ++j)
                            object.lineItemDetails[j] = $root.teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.LineItemDetail.toObject(message.lineItemDetails[j], options);
                    }
                    return object;
                };

                /**
                 * Converts this CreatedCampaign to JSON.
                 * @function toJSON
                 * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CreatedCampaign.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for CreatedCampaign
                 * @function getTypeUrl
                 * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CreatedCampaign.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.CreatedCampaign";
                };

                return CreatedCampaign;
            })();

            CreateCampaignSkeletonsFromSalesforceOpportunityResponse.LineItemDetail = (function() {

                /**
                 * Properties of a LineItemDetail.
                 * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse
                 * @interface ILineItemDetail
                 * @property {string} id LineItemDetail id
                 */

                /**
                 * Constructs a new LineItemDetail.
                 * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse
                 * @classdesc Represents a LineItemDetail.
                 * @implements ILineItemDetail
                 * @constructor
                 * @param {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.ILineItemDetail=} [properties] Properties to set
                 */
                function LineItemDetail(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * LineItemDetail id.
                 * @member {string} id
                 * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.LineItemDetail
                 * @instance
                 */
                LineItemDetail.prototype.id = "";

                /**
                 * Creates a new LineItemDetail instance using the specified properties.
                 * @function create
                 * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.LineItemDetail
                 * @static
                 * @param {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.ILineItemDetail=} [properties] Properties to set
                 * @returns {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.LineItemDetail} LineItemDetail instance
                 */
                LineItemDetail.create = function create(properties) {
                    return new LineItemDetail(properties);
                };

                /**
                 * Encodes the specified LineItemDetail message. Does not implicitly {@link teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.LineItemDetail.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.LineItemDetail
                 * @static
                 * @param {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.ILineItemDetail} message LineItemDetail message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                LineItemDetail.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);
                    return writer;
                };

                /**
                 * Encodes the specified LineItemDetail message, length delimited. Does not implicitly {@link teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.LineItemDetail.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.LineItemDetail
                 * @static
                 * @param {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.ILineItemDetail} message LineItemDetail message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                LineItemDetail.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a LineItemDetail message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.LineItemDetail
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.LineItemDetail} LineItemDetail
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                LineItemDetail.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.LineItemDetail();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.id = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("id"))
                        throw $util.ProtocolError("missing required 'id'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a LineItemDetail message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.LineItemDetail
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.LineItemDetail} LineItemDetail
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                LineItemDetail.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a LineItemDetail message.
                 * @function verify
                 * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.LineItemDetail
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                LineItemDetail.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isString(message.id))
                        return "id: string expected";
                    return null;
                };

                /**
                 * Creates a LineItemDetail message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.LineItemDetail
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.LineItemDetail} LineItemDetail
                 */
                LineItemDetail.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.LineItemDetail)
                        return object;
                    var message = new $root.teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.LineItemDetail();
                    if (object.id != null)
                        message.id = String(object.id);
                    return message;
                };

                /**
                 * Creates a plain object from a LineItemDetail message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.LineItemDetail
                 * @static
                 * @param {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.LineItemDetail} message LineItemDetail
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                LineItemDetail.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.id = "";
                    if (message.id != null && message.hasOwnProperty("id"))
                        object.id = message.id;
                    return object;
                };

                /**
                 * Converts this LineItemDetail to JSON.
                 * @function toJSON
                 * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.LineItemDetail
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                LineItemDetail.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for LineItemDetail
                 * @function getTypeUrl
                 * @memberof teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.LineItemDetail
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                LineItemDetail.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse.LineItemDetail";
                };

                return LineItemDetail;
            })();

            return CreateCampaignSkeletonsFromSalesforceOpportunityResponse;
        })();

        api.CreateClientSeatForBuyerRequest = (function() {

            /**
             * Properties of a CreateClientSeatForBuyerRequest.
             * @memberof teads.api
             * @interface ICreateClientSeatForBuyerRequest
             * @property {teads.api.ISecurityContext} securityContext CreateClientSeatForBuyerRequest securityContext
             * @property {number} officeId CreateClientSeatForBuyerRequest officeId
             * @property {number} entityId CreateClientSeatForBuyerRequest entityId
             * @property {number|null} [agencyId] CreateClientSeatForBuyerRequest agencyId
             * @property {number|null} [advertiserId] CreateClientSeatForBuyerRequest advertiserId
             * @property {string} seatName CreateClientSeatForBuyerRequest seatName
             * @property {number} fee CreateClientSeatForBuyerRequest fee
             * @property {string} salesforceContractId CreateClientSeatForBuyerRequest salesforceContractId
             * @property {Array.<string>|null} [clientEmails] CreateClientSeatForBuyerRequest clientEmails
             * @property {string} salesforceSeatId CreateClientSeatForBuyerRequest salesforceSeatId
             * @property {number} salesforceContractVersion CreateClientSeatForBuyerRequest salesforceContractVersion
             */

            /**
             * Constructs a new CreateClientSeatForBuyerRequest.
             * @memberof teads.api
             * @classdesc Represents a CreateClientSeatForBuyerRequest.
             * @implements ICreateClientSeatForBuyerRequest
             * @constructor
             * @param {teads.api.ICreateClientSeatForBuyerRequest=} [properties] Properties to set
             */
            function CreateClientSeatForBuyerRequest(properties) {
                this.clientEmails = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CreateClientSeatForBuyerRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.CreateClientSeatForBuyerRequest
             * @instance
             */
            CreateClientSeatForBuyerRequest.prototype.securityContext = null;

            /**
             * CreateClientSeatForBuyerRequest officeId.
             * @member {number} officeId
             * @memberof teads.api.CreateClientSeatForBuyerRequest
             * @instance
             */
            CreateClientSeatForBuyerRequest.prototype.officeId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * CreateClientSeatForBuyerRequest entityId.
             * @member {number} entityId
             * @memberof teads.api.CreateClientSeatForBuyerRequest
             * @instance
             */
            CreateClientSeatForBuyerRequest.prototype.entityId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * CreateClientSeatForBuyerRequest agencyId.
             * @member {number|null|undefined} agencyId
             * @memberof teads.api.CreateClientSeatForBuyerRequest
             * @instance
             */
            CreateClientSeatForBuyerRequest.prototype.agencyId = null;

            /**
             * CreateClientSeatForBuyerRequest advertiserId.
             * @member {number|null|undefined} advertiserId
             * @memberof teads.api.CreateClientSeatForBuyerRequest
             * @instance
             */
            CreateClientSeatForBuyerRequest.prototype.advertiserId = null;

            /**
             * CreateClientSeatForBuyerRequest seatName.
             * @member {string} seatName
             * @memberof teads.api.CreateClientSeatForBuyerRequest
             * @instance
             */
            CreateClientSeatForBuyerRequest.prototype.seatName = "";

            /**
             * CreateClientSeatForBuyerRequest fee.
             * @member {number} fee
             * @memberof teads.api.CreateClientSeatForBuyerRequest
             * @instance
             */
            CreateClientSeatForBuyerRequest.prototype.fee = 0;

            /**
             * CreateClientSeatForBuyerRequest salesforceContractId.
             * @member {string} salesforceContractId
             * @memberof teads.api.CreateClientSeatForBuyerRequest
             * @instance
             */
            CreateClientSeatForBuyerRequest.prototype.salesforceContractId = "";

            /**
             * CreateClientSeatForBuyerRequest clientEmails.
             * @member {Array.<string>} clientEmails
             * @memberof teads.api.CreateClientSeatForBuyerRequest
             * @instance
             */
            CreateClientSeatForBuyerRequest.prototype.clientEmails = $util.emptyArray;

            /**
             * CreateClientSeatForBuyerRequest salesforceSeatId.
             * @member {string} salesforceSeatId
             * @memberof teads.api.CreateClientSeatForBuyerRequest
             * @instance
             */
            CreateClientSeatForBuyerRequest.prototype.salesforceSeatId = "";

            /**
             * CreateClientSeatForBuyerRequest salesforceContractVersion.
             * @member {number} salesforceContractVersion
             * @memberof teads.api.CreateClientSeatForBuyerRequest
             * @instance
             */
            CreateClientSeatForBuyerRequest.prototype.salesforceContractVersion = 0;

            // OneOf field names bound to virtual getters and setters
            var $oneOfFields;

            /**
             * CreateClientSeatForBuyerRequest buyerId.
             * @member {"agencyId"|"advertiserId"|undefined} buyerId
             * @memberof teads.api.CreateClientSeatForBuyerRequest
             * @instance
             */
            Object.defineProperty(CreateClientSeatForBuyerRequest.prototype, "buyerId", {
                get: $util.oneOfGetter($oneOfFields = ["agencyId", "advertiserId"]),
                set: $util.oneOfSetter($oneOfFields)
            });

            /**
             * Creates a new CreateClientSeatForBuyerRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.CreateClientSeatForBuyerRequest
             * @static
             * @param {teads.api.ICreateClientSeatForBuyerRequest=} [properties] Properties to set
             * @returns {teads.api.CreateClientSeatForBuyerRequest} CreateClientSeatForBuyerRequest instance
             */
            CreateClientSeatForBuyerRequest.create = function create(properties) {
                return new CreateClientSeatForBuyerRequest(properties);
            };

            /**
             * Encodes the specified CreateClientSeatForBuyerRequest message. Does not implicitly {@link teads.api.CreateClientSeatForBuyerRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.CreateClientSeatForBuyerRequest
             * @static
             * @param {teads.api.ICreateClientSeatForBuyerRequest} message CreateClientSeatForBuyerRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateClientSeatForBuyerRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.officeId);
                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.entityId);
                if (message.agencyId != null && Object.hasOwnProperty.call(message, "agencyId"))
                    writer.uint32(/* id 4, wireType 0 =*/32).int64(message.agencyId);
                if (message.advertiserId != null && Object.hasOwnProperty.call(message, "advertiserId"))
                    writer.uint32(/* id 5, wireType 0 =*/40).int64(message.advertiserId);
                writer.uint32(/* id 6, wireType 2 =*/50).string(message.seatName);
                writer.uint32(/* id 7, wireType 1 =*/57).double(message.fee);
                writer.uint32(/* id 8, wireType 2 =*/66).string(message.salesforceContractId);
                if (message.clientEmails != null && message.clientEmails.length)
                    for (var i = 0; i < message.clientEmails.length; ++i)
                        writer.uint32(/* id 9, wireType 2 =*/74).string(message.clientEmails[i]);
                writer.uint32(/* id 10, wireType 2 =*/82).string(message.salesforceSeatId);
                writer.uint32(/* id 11, wireType 0 =*/88).int32(message.salesforceContractVersion);
                return writer;
            };

            /**
             * Encodes the specified CreateClientSeatForBuyerRequest message, length delimited. Does not implicitly {@link teads.api.CreateClientSeatForBuyerRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.CreateClientSeatForBuyerRequest
             * @static
             * @param {teads.api.ICreateClientSeatForBuyerRequest} message CreateClientSeatForBuyerRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateClientSeatForBuyerRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CreateClientSeatForBuyerRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.CreateClientSeatForBuyerRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.CreateClientSeatForBuyerRequest} CreateClientSeatForBuyerRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateClientSeatForBuyerRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.CreateClientSeatForBuyerRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.officeId = reader.int64();
                            break;
                        }
                    case 3: {
                            message.entityId = reader.int64();
                            break;
                        }
                    case 4: {
                            message.agencyId = reader.int64();
                            break;
                        }
                    case 5: {
                            message.advertiserId = reader.int64();
                            break;
                        }
                    case 6: {
                            message.seatName = reader.string();
                            break;
                        }
                    case 7: {
                            message.fee = reader.double();
                            break;
                        }
                    case 8: {
                            message.salesforceContractId = reader.string();
                            break;
                        }
                    case 9: {
                            if (!(message.clientEmails && message.clientEmails.length))
                                message.clientEmails = [];
                            message.clientEmails.push(reader.string());
                            break;
                        }
                    case 10: {
                            message.salesforceSeatId = reader.string();
                            break;
                        }
                    case 11: {
                            message.salesforceContractVersion = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("officeId"))
                    throw $util.ProtocolError("missing required 'officeId'", { instance: message });
                if (!message.hasOwnProperty("entityId"))
                    throw $util.ProtocolError("missing required 'entityId'", { instance: message });
                if (!message.hasOwnProperty("seatName"))
                    throw $util.ProtocolError("missing required 'seatName'", { instance: message });
                if (!message.hasOwnProperty("fee"))
                    throw $util.ProtocolError("missing required 'fee'", { instance: message });
                if (!message.hasOwnProperty("salesforceContractId"))
                    throw $util.ProtocolError("missing required 'salesforceContractId'", { instance: message });
                if (!message.hasOwnProperty("salesforceSeatId"))
                    throw $util.ProtocolError("missing required 'salesforceSeatId'", { instance: message });
                if (!message.hasOwnProperty("salesforceContractVersion"))
                    throw $util.ProtocolError("missing required 'salesforceContractVersion'", { instance: message });
                return message;
            };

            /**
             * Decodes a CreateClientSeatForBuyerRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.CreateClientSeatForBuyerRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.CreateClientSeatForBuyerRequest} CreateClientSeatForBuyerRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateClientSeatForBuyerRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CreateClientSeatForBuyerRequest message.
             * @function verify
             * @memberof teads.api.CreateClientSeatForBuyerRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CreateClientSeatForBuyerRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                var properties = {};
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.officeId) && !(message.officeId && $util.isInteger(message.officeId.low) && $util.isInteger(message.officeId.high)))
                    return "officeId: integer|Long expected";
                if (!$util.isInteger(message.entityId) && !(message.entityId && $util.isInteger(message.entityId.low) && $util.isInteger(message.entityId.high)))
                    return "entityId: integer|Long expected";
                if (message.agencyId != null && message.hasOwnProperty("agencyId")) {
                    properties.buyerId = 1;
                    if (!$util.isInteger(message.agencyId) && !(message.agencyId && $util.isInteger(message.agencyId.low) && $util.isInteger(message.agencyId.high)))
                        return "agencyId: integer|Long expected";
                }
                if (message.advertiserId != null && message.hasOwnProperty("advertiserId")) {
                    if (properties.buyerId === 1)
                        return "buyerId: multiple values";
                    properties.buyerId = 1;
                    if (!$util.isInteger(message.advertiserId) && !(message.advertiserId && $util.isInteger(message.advertiserId.low) && $util.isInteger(message.advertiserId.high)))
                        return "advertiserId: integer|Long expected";
                }
                if (!$util.isString(message.seatName))
                    return "seatName: string expected";
                if (typeof message.fee !== "number")
                    return "fee: number expected";
                if (!$util.isString(message.salesforceContractId))
                    return "salesforceContractId: string expected";
                if (message.clientEmails != null && message.hasOwnProperty("clientEmails")) {
                    if (!Array.isArray(message.clientEmails))
                        return "clientEmails: array expected";
                    for (var i = 0; i < message.clientEmails.length; ++i)
                        if (!$util.isString(message.clientEmails[i]))
                            return "clientEmails: string[] expected";
                }
                if (!$util.isString(message.salesforceSeatId))
                    return "salesforceSeatId: string expected";
                if (!$util.isInteger(message.salesforceContractVersion))
                    return "salesforceContractVersion: integer expected";
                return null;
            };

            /**
             * Creates a CreateClientSeatForBuyerRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.CreateClientSeatForBuyerRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.CreateClientSeatForBuyerRequest} CreateClientSeatForBuyerRequest
             */
            CreateClientSeatForBuyerRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.CreateClientSeatForBuyerRequest)
                    return object;
                var message = new $root.teads.api.CreateClientSeatForBuyerRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.CreateClientSeatForBuyerRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.officeId != null)
                    if ($util.Long)
                        (message.officeId = $util.Long.fromValue(object.officeId)).unsigned = false;
                    else if (typeof object.officeId === "string")
                        message.officeId = parseInt(object.officeId, 10);
                    else if (typeof object.officeId === "number")
                        message.officeId = object.officeId;
                    else if (typeof object.officeId === "object")
                        message.officeId = new $util.LongBits(object.officeId.low >>> 0, object.officeId.high >>> 0).toNumber();
                if (object.entityId != null)
                    if ($util.Long)
                        (message.entityId = $util.Long.fromValue(object.entityId)).unsigned = false;
                    else if (typeof object.entityId === "string")
                        message.entityId = parseInt(object.entityId, 10);
                    else if (typeof object.entityId === "number")
                        message.entityId = object.entityId;
                    else if (typeof object.entityId === "object")
                        message.entityId = new $util.LongBits(object.entityId.low >>> 0, object.entityId.high >>> 0).toNumber();
                if (object.agencyId != null)
                    if ($util.Long)
                        (message.agencyId = $util.Long.fromValue(object.agencyId)).unsigned = false;
                    else if (typeof object.agencyId === "string")
                        message.agencyId = parseInt(object.agencyId, 10);
                    else if (typeof object.agencyId === "number")
                        message.agencyId = object.agencyId;
                    else if (typeof object.agencyId === "object")
                        message.agencyId = new $util.LongBits(object.agencyId.low >>> 0, object.agencyId.high >>> 0).toNumber();
                if (object.advertiserId != null)
                    if ($util.Long)
                        (message.advertiserId = $util.Long.fromValue(object.advertiserId)).unsigned = false;
                    else if (typeof object.advertiserId === "string")
                        message.advertiserId = parseInt(object.advertiserId, 10);
                    else if (typeof object.advertiserId === "number")
                        message.advertiserId = object.advertiserId;
                    else if (typeof object.advertiserId === "object")
                        message.advertiserId = new $util.LongBits(object.advertiserId.low >>> 0, object.advertiserId.high >>> 0).toNumber();
                if (object.seatName != null)
                    message.seatName = String(object.seatName);
                if (object.fee != null)
                    message.fee = Number(object.fee);
                if (object.salesforceContractId != null)
                    message.salesforceContractId = String(object.salesforceContractId);
                if (object.clientEmails) {
                    if (!Array.isArray(object.clientEmails))
                        throw TypeError(".teads.api.CreateClientSeatForBuyerRequest.clientEmails: array expected");
                    message.clientEmails = [];
                    for (var i = 0; i < object.clientEmails.length; ++i)
                        message.clientEmails[i] = String(object.clientEmails[i]);
                }
                if (object.salesforceSeatId != null)
                    message.salesforceSeatId = String(object.salesforceSeatId);
                if (object.salesforceContractVersion != null)
                    message.salesforceContractVersion = object.salesforceContractVersion | 0;
                return message;
            };

            /**
             * Creates a plain object from a CreateClientSeatForBuyerRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.CreateClientSeatForBuyerRequest
             * @static
             * @param {teads.api.CreateClientSeatForBuyerRequest} message CreateClientSeatForBuyerRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CreateClientSeatForBuyerRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.clientEmails = [];
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.officeId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.officeId = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.entityId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.entityId = options.longs === String ? "0" : 0;
                    object.seatName = "";
                    object.fee = 0;
                    object.salesforceContractId = "";
                    object.salesforceSeatId = "";
                    object.salesforceContractVersion = 0;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.officeId != null && message.hasOwnProperty("officeId"))
                    if (typeof message.officeId === "number")
                        object.officeId = options.longs === String ? String(message.officeId) : message.officeId;
                    else
                        object.officeId = options.longs === String ? $util.Long.prototype.toString.call(message.officeId) : options.longs === Number ? new $util.LongBits(message.officeId.low >>> 0, message.officeId.high >>> 0).toNumber() : message.officeId;
                if (message.entityId != null && message.hasOwnProperty("entityId"))
                    if (typeof message.entityId === "number")
                        object.entityId = options.longs === String ? String(message.entityId) : message.entityId;
                    else
                        object.entityId = options.longs === String ? $util.Long.prototype.toString.call(message.entityId) : options.longs === Number ? new $util.LongBits(message.entityId.low >>> 0, message.entityId.high >>> 0).toNumber() : message.entityId;
                if (message.agencyId != null && message.hasOwnProperty("agencyId")) {
                    if (typeof message.agencyId === "number")
                        object.agencyId = options.longs === String ? String(message.agencyId) : message.agencyId;
                    else
                        object.agencyId = options.longs === String ? $util.Long.prototype.toString.call(message.agencyId) : options.longs === Number ? new $util.LongBits(message.agencyId.low >>> 0, message.agencyId.high >>> 0).toNumber() : message.agencyId;
                    if (options.oneofs)
                        object.buyerId = "agencyId";
                }
                if (message.advertiserId != null && message.hasOwnProperty("advertiserId")) {
                    if (typeof message.advertiserId === "number")
                        object.advertiserId = options.longs === String ? String(message.advertiserId) : message.advertiserId;
                    else
                        object.advertiserId = options.longs === String ? $util.Long.prototype.toString.call(message.advertiserId) : options.longs === Number ? new $util.LongBits(message.advertiserId.low >>> 0, message.advertiserId.high >>> 0).toNumber() : message.advertiserId;
                    if (options.oneofs)
                        object.buyerId = "advertiserId";
                }
                if (message.seatName != null && message.hasOwnProperty("seatName"))
                    object.seatName = message.seatName;
                if (message.fee != null && message.hasOwnProperty("fee"))
                    object.fee = options.json && !isFinite(message.fee) ? String(message.fee) : message.fee;
                if (message.salesforceContractId != null && message.hasOwnProperty("salesforceContractId"))
                    object.salesforceContractId = message.salesforceContractId;
                if (message.clientEmails && message.clientEmails.length) {
                    object.clientEmails = [];
                    for (var j = 0; j < message.clientEmails.length; ++j)
                        object.clientEmails[j] = message.clientEmails[j];
                }
                if (message.salesforceSeatId != null && message.hasOwnProperty("salesforceSeatId"))
                    object.salesforceSeatId = message.salesforceSeatId;
                if (message.salesforceContractVersion != null && message.hasOwnProperty("salesforceContractVersion"))
                    object.salesforceContractVersion = message.salesforceContractVersion;
                return object;
            };

            /**
             * Converts this CreateClientSeatForBuyerRequest to JSON.
             * @function toJSON
             * @memberof teads.api.CreateClientSeatForBuyerRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CreateClientSeatForBuyerRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CreateClientSeatForBuyerRequest
             * @function getTypeUrl
             * @memberof teads.api.CreateClientSeatForBuyerRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CreateClientSeatForBuyerRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.CreateClientSeatForBuyerRequest";
            };

            return CreateClientSeatForBuyerRequest;
        })();

        api.CreateClientSeatForBuyerResponse = (function() {

            /**
             * Properties of a CreateClientSeatForBuyerResponse.
             * @memberof teads.api
             * @interface ICreateClientSeatForBuyerResponse
             * @property {number} seatId CreateClientSeatForBuyerResponse seatId
             */

            /**
             * Constructs a new CreateClientSeatForBuyerResponse.
             * @memberof teads.api
             * @classdesc Represents a CreateClientSeatForBuyerResponse.
             * @implements ICreateClientSeatForBuyerResponse
             * @constructor
             * @param {teads.api.ICreateClientSeatForBuyerResponse=} [properties] Properties to set
             */
            function CreateClientSeatForBuyerResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CreateClientSeatForBuyerResponse seatId.
             * @member {number} seatId
             * @memberof teads.api.CreateClientSeatForBuyerResponse
             * @instance
             */
            CreateClientSeatForBuyerResponse.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new CreateClientSeatForBuyerResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.CreateClientSeatForBuyerResponse
             * @static
             * @param {teads.api.ICreateClientSeatForBuyerResponse=} [properties] Properties to set
             * @returns {teads.api.CreateClientSeatForBuyerResponse} CreateClientSeatForBuyerResponse instance
             */
            CreateClientSeatForBuyerResponse.create = function create(properties) {
                return new CreateClientSeatForBuyerResponse(properties);
            };

            /**
             * Encodes the specified CreateClientSeatForBuyerResponse message. Does not implicitly {@link teads.api.CreateClientSeatForBuyerResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.CreateClientSeatForBuyerResponse
             * @static
             * @param {teads.api.ICreateClientSeatForBuyerResponse} message CreateClientSeatForBuyerResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateClientSeatForBuyerResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seatId);
                return writer;
            };

            /**
             * Encodes the specified CreateClientSeatForBuyerResponse message, length delimited. Does not implicitly {@link teads.api.CreateClientSeatForBuyerResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.CreateClientSeatForBuyerResponse
             * @static
             * @param {teads.api.ICreateClientSeatForBuyerResponse} message CreateClientSeatForBuyerResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateClientSeatForBuyerResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CreateClientSeatForBuyerResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.CreateClientSeatForBuyerResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.CreateClientSeatForBuyerResponse} CreateClientSeatForBuyerResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateClientSeatForBuyerResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.CreateClientSeatForBuyerResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.seatId = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("seatId"))
                    throw $util.ProtocolError("missing required 'seatId'", { instance: message });
                return message;
            };

            /**
             * Decodes a CreateClientSeatForBuyerResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.CreateClientSeatForBuyerResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.CreateClientSeatForBuyerResponse} CreateClientSeatForBuyerResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateClientSeatForBuyerResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CreateClientSeatForBuyerResponse message.
             * @function verify
             * @memberof teads.api.CreateClientSeatForBuyerResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CreateClientSeatForBuyerResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                    return "seatId: integer|Long expected";
                return null;
            };

            /**
             * Creates a CreateClientSeatForBuyerResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.CreateClientSeatForBuyerResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.CreateClientSeatForBuyerResponse} CreateClientSeatForBuyerResponse
             */
            CreateClientSeatForBuyerResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.CreateClientSeatForBuyerResponse)
                    return object;
                var message = new $root.teads.api.CreateClientSeatForBuyerResponse();
                if (object.seatId != null)
                    if ($util.Long)
                        (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                    else if (typeof object.seatId === "string")
                        message.seatId = parseInt(object.seatId, 10);
                    else if (typeof object.seatId === "number")
                        message.seatId = object.seatId;
                    else if (typeof object.seatId === "object")
                        message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from a CreateClientSeatForBuyerResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.CreateClientSeatForBuyerResponse
             * @static
             * @param {teads.api.CreateClientSeatForBuyerResponse} message CreateClientSeatForBuyerResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CreateClientSeatForBuyerResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seatId = options.longs === String ? "0" : 0;
                if (message.seatId != null && message.hasOwnProperty("seatId"))
                    if (typeof message.seatId === "number")
                        object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                    else
                        object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                return object;
            };

            /**
             * Converts this CreateClientSeatForBuyerResponse to JSON.
             * @function toJSON
             * @memberof teads.api.CreateClientSeatForBuyerResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CreateClientSeatForBuyerResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CreateClientSeatForBuyerResponse
             * @function getTypeUrl
             * @memberof teads.api.CreateClientSeatForBuyerResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CreateClientSeatForBuyerResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.CreateClientSeatForBuyerResponse";
            };

            return CreateClientSeatForBuyerResponse;
        })();

        api.CreateCustomTargetingRuleForCampaignRequest = (function() {

            /**
             * Properties of a CreateCustomTargetingRuleForCampaignRequest.
             * @memberof teads.api
             * @interface ICreateCustomTargetingRuleForCampaignRequest
             * @property {teads.api.ISecurityContext} securityContext CreateCustomTargetingRuleForCampaignRequest securityContext
             * @property {number} campaignId CreateCustomTargetingRuleForCampaignRequest campaignId
             * @property {string} name CreateCustomTargetingRuleForCampaignRequest name
             * @property {string} tblString CreateCustomTargetingRuleForCampaignRequest tblString
             * @property {teads.api.CustomTargetingRuleAudiencesDeliveryType} demographicAudiencesDeliveryType CreateCustomTargetingRuleForCampaignRequest demographicAudiencesDeliveryType
             * @property {teads.api.CustomTargetingRuleAudiencesAccuracyLevel} otherAudiencesAccuracyLevel CreateCustomTargetingRuleForCampaignRequest otherAudiencesAccuracyLevel
             * @property {boolean} cookielessCriteriaOnly CreateCustomTargetingRuleForCampaignRequest cookielessCriteriaOnly
             * @property {string} description CreateCustomTargetingRuleForCampaignRequest description
             * @property {number} reasonId CreateCustomTargetingRuleForCampaignRequest reasonId
             * @property {teads.api.CustomTargetingEnvironmentChannel|null} [channel] CreateCustomTargetingRuleForCampaignRequest channel
             */

            /**
             * Constructs a new CreateCustomTargetingRuleForCampaignRequest.
             * @memberof teads.api
             * @classdesc Represents a CreateCustomTargetingRuleForCampaignRequest.
             * @implements ICreateCustomTargetingRuleForCampaignRequest
             * @constructor
             * @param {teads.api.ICreateCustomTargetingRuleForCampaignRequest=} [properties] Properties to set
             */
            function CreateCustomTargetingRuleForCampaignRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CreateCustomTargetingRuleForCampaignRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignRequest
             * @instance
             */
            CreateCustomTargetingRuleForCampaignRequest.prototype.securityContext = null;

            /**
             * CreateCustomTargetingRuleForCampaignRequest campaignId.
             * @member {number} campaignId
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignRequest
             * @instance
             */
            CreateCustomTargetingRuleForCampaignRequest.prototype.campaignId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * CreateCustomTargetingRuleForCampaignRequest name.
             * @member {string} name
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignRequest
             * @instance
             */
            CreateCustomTargetingRuleForCampaignRequest.prototype.name = "";

            /**
             * CreateCustomTargetingRuleForCampaignRequest tblString.
             * @member {string} tblString
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignRequest
             * @instance
             */
            CreateCustomTargetingRuleForCampaignRequest.prototype.tblString = "";

            /**
             * CreateCustomTargetingRuleForCampaignRequest demographicAudiencesDeliveryType.
             * @member {teads.api.CustomTargetingRuleAudiencesDeliveryType} demographicAudiencesDeliveryType
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignRequest
             * @instance
             */
            CreateCustomTargetingRuleForCampaignRequest.prototype.demographicAudiencesDeliveryType = 2;

            /**
             * CreateCustomTargetingRuleForCampaignRequest otherAudiencesAccuracyLevel.
             * @member {teads.api.CustomTargetingRuleAudiencesAccuracyLevel} otherAudiencesAccuracyLevel
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignRequest
             * @instance
             */
            CreateCustomTargetingRuleForCampaignRequest.prototype.otherAudiencesAccuracyLevel = 1;

            /**
             * CreateCustomTargetingRuleForCampaignRequest cookielessCriteriaOnly.
             * @member {boolean} cookielessCriteriaOnly
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignRequest
             * @instance
             */
            CreateCustomTargetingRuleForCampaignRequest.prototype.cookielessCriteriaOnly = false;

            /**
             * CreateCustomTargetingRuleForCampaignRequest description.
             * @member {string} description
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignRequest
             * @instance
             */
            CreateCustomTargetingRuleForCampaignRequest.prototype.description = "";

            /**
             * CreateCustomTargetingRuleForCampaignRequest reasonId.
             * @member {number} reasonId
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignRequest
             * @instance
             */
            CreateCustomTargetingRuleForCampaignRequest.prototype.reasonId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * CreateCustomTargetingRuleForCampaignRequest channel.
             * @member {teads.api.CustomTargetingEnvironmentChannel} channel
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignRequest
             * @instance
             */
            CreateCustomTargetingRuleForCampaignRequest.prototype.channel = 1;

            /**
             * Creates a new CreateCustomTargetingRuleForCampaignRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignRequest
             * @static
             * @param {teads.api.ICreateCustomTargetingRuleForCampaignRequest=} [properties] Properties to set
             * @returns {teads.api.CreateCustomTargetingRuleForCampaignRequest} CreateCustomTargetingRuleForCampaignRequest instance
             */
            CreateCustomTargetingRuleForCampaignRequest.create = function create(properties) {
                return new CreateCustomTargetingRuleForCampaignRequest(properties);
            };

            /**
             * Encodes the specified CreateCustomTargetingRuleForCampaignRequest message. Does not implicitly {@link teads.api.CreateCustomTargetingRuleForCampaignRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignRequest
             * @static
             * @param {teads.api.ICreateCustomTargetingRuleForCampaignRequest} message CreateCustomTargetingRuleForCampaignRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateCustomTargetingRuleForCampaignRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.campaignId);
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.tblString);
                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.demographicAudiencesDeliveryType);
                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.otherAudiencesAccuracyLevel);
                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.cookielessCriteriaOnly);
                writer.uint32(/* id 8, wireType 2 =*/66).string(message.description);
                writer.uint32(/* id 9, wireType 0 =*/72).int64(message.reasonId);
                if (message.channel != null && Object.hasOwnProperty.call(message, "channel"))
                    writer.uint32(/* id 10, wireType 0 =*/80).int32(message.channel);
                return writer;
            };

            /**
             * Encodes the specified CreateCustomTargetingRuleForCampaignRequest message, length delimited. Does not implicitly {@link teads.api.CreateCustomTargetingRuleForCampaignRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignRequest
             * @static
             * @param {teads.api.ICreateCustomTargetingRuleForCampaignRequest} message CreateCustomTargetingRuleForCampaignRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateCustomTargetingRuleForCampaignRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CreateCustomTargetingRuleForCampaignRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.CreateCustomTargetingRuleForCampaignRequest} CreateCustomTargetingRuleForCampaignRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateCustomTargetingRuleForCampaignRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.CreateCustomTargetingRuleForCampaignRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.campaignId = reader.int64();
                            break;
                        }
                    case 3: {
                            message.name = reader.string();
                            break;
                        }
                    case 4: {
                            message.tblString = reader.string();
                            break;
                        }
                    case 5: {
                            message.demographicAudiencesDeliveryType = reader.int32();
                            break;
                        }
                    case 6: {
                            message.otherAudiencesAccuracyLevel = reader.int32();
                            break;
                        }
                    case 7: {
                            message.cookielessCriteriaOnly = reader.bool();
                            break;
                        }
                    case 8: {
                            message.description = reader.string();
                            break;
                        }
                    case 9: {
                            message.reasonId = reader.int64();
                            break;
                        }
                    case 10: {
                            message.channel = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("campaignId"))
                    throw $util.ProtocolError("missing required 'campaignId'", { instance: message });
                if (!message.hasOwnProperty("name"))
                    throw $util.ProtocolError("missing required 'name'", { instance: message });
                if (!message.hasOwnProperty("tblString"))
                    throw $util.ProtocolError("missing required 'tblString'", { instance: message });
                if (!message.hasOwnProperty("demographicAudiencesDeliveryType"))
                    throw $util.ProtocolError("missing required 'demographicAudiencesDeliveryType'", { instance: message });
                if (!message.hasOwnProperty("otherAudiencesAccuracyLevel"))
                    throw $util.ProtocolError("missing required 'otherAudiencesAccuracyLevel'", { instance: message });
                if (!message.hasOwnProperty("cookielessCriteriaOnly"))
                    throw $util.ProtocolError("missing required 'cookielessCriteriaOnly'", { instance: message });
                if (!message.hasOwnProperty("description"))
                    throw $util.ProtocolError("missing required 'description'", { instance: message });
                if (!message.hasOwnProperty("reasonId"))
                    throw $util.ProtocolError("missing required 'reasonId'", { instance: message });
                return message;
            };

            /**
             * Decodes a CreateCustomTargetingRuleForCampaignRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.CreateCustomTargetingRuleForCampaignRequest} CreateCustomTargetingRuleForCampaignRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateCustomTargetingRuleForCampaignRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CreateCustomTargetingRuleForCampaignRequest message.
             * @function verify
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CreateCustomTargetingRuleForCampaignRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.campaignId) && !(message.campaignId && $util.isInteger(message.campaignId.low) && $util.isInteger(message.campaignId.high)))
                    return "campaignId: integer|Long expected";
                if (!$util.isString(message.name))
                    return "name: string expected";
                if (!$util.isString(message.tblString))
                    return "tblString: string expected";
                switch (message.demographicAudiencesDeliveryType) {
                default:
                    return "demographicAudiencesDeliveryType: enum value expected";
                case 2:
                case 3:
                case 4:
                case 5:
                    break;
                }
                switch (message.otherAudiencesAccuracyLevel) {
                default:
                    return "otherAudiencesAccuracyLevel: enum value expected";
                case 1:
                case 2:
                case 3:
                    break;
                }
                if (typeof message.cookielessCriteriaOnly !== "boolean")
                    return "cookielessCriteriaOnly: boolean expected";
                if (!$util.isString(message.description))
                    return "description: string expected";
                if (!$util.isInteger(message.reasonId) && !(message.reasonId && $util.isInteger(message.reasonId.low) && $util.isInteger(message.reasonId.high)))
                    return "reasonId: integer|Long expected";
                if (message.channel != null && message.hasOwnProperty("channel"))
                    switch (message.channel) {
                    default:
                        return "channel: enum value expected";
                    case 1:
                    case 2:
                        break;
                    }
                return null;
            };

            /**
             * Creates a CreateCustomTargetingRuleForCampaignRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.CreateCustomTargetingRuleForCampaignRequest} CreateCustomTargetingRuleForCampaignRequest
             */
            CreateCustomTargetingRuleForCampaignRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.CreateCustomTargetingRuleForCampaignRequest)
                    return object;
                var message = new $root.teads.api.CreateCustomTargetingRuleForCampaignRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.CreateCustomTargetingRuleForCampaignRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.campaignId != null)
                    if ($util.Long)
                        (message.campaignId = $util.Long.fromValue(object.campaignId)).unsigned = false;
                    else if (typeof object.campaignId === "string")
                        message.campaignId = parseInt(object.campaignId, 10);
                    else if (typeof object.campaignId === "number")
                        message.campaignId = object.campaignId;
                    else if (typeof object.campaignId === "object")
                        message.campaignId = new $util.LongBits(object.campaignId.low >>> 0, object.campaignId.high >>> 0).toNumber();
                if (object.name != null)
                    message.name = String(object.name);
                if (object.tblString != null)
                    message.tblString = String(object.tblString);
                switch (object.demographicAudiencesDeliveryType) {
                default:
                    if (typeof object.demographicAudiencesDeliveryType === "number") {
                        message.demographicAudiencesDeliveryType = object.demographicAudiencesDeliveryType;
                        break;
                    }
                    break;
                case "CUSTOM_TARGETING_RULE_AUDIENCES_DELIVERY_TYPE_HIGH_ACCURACY":
                case 2:
                    message.demographicAudiencesDeliveryType = 2;
                    break;
                case "CUSTOM_TARGETING_RULE_AUDIENCES_DELIVERY_TYPE_ACCURACY":
                case 3:
                    message.demographicAudiencesDeliveryType = 3;
                    break;
                case "CUSTOM_TARGETING_RULE_AUDIENCES_DELIVERY_TYPE_STANDARD":
                case 4:
                    message.demographicAudiencesDeliveryType = 4;
                    break;
                case "CUSTOM_TARGETING_RULE_AUDIENCES_DELIVERY_TYPE_REACH":
                case 5:
                    message.demographicAudiencesDeliveryType = 5;
                    break;
                }
                switch (object.otherAudiencesAccuracyLevel) {
                default:
                    if (typeof object.otherAudiencesAccuracyLevel === "number") {
                        message.otherAudiencesAccuracyLevel = object.otherAudiencesAccuracyLevel;
                        break;
                    }
                    break;
                case "CUSTOM_TARGETING_RULE_AUDIENCES_ACCURACY_LEVEL_HIGH":
                case 1:
                    message.otherAudiencesAccuracyLevel = 1;
                    break;
                case "CUSTOM_TARGETING_RULE_AUDIENCES_ACCURACY_LEVEL_MEDIUM":
                case 2:
                    message.otherAudiencesAccuracyLevel = 2;
                    break;
                case "CUSTOM_TARGETING_RULE_AUDIENCES_ACCURACY_LEVEL_LOW":
                case 3:
                    message.otherAudiencesAccuracyLevel = 3;
                    break;
                }
                if (object.cookielessCriteriaOnly != null)
                    message.cookielessCriteriaOnly = Boolean(object.cookielessCriteriaOnly);
                if (object.description != null)
                    message.description = String(object.description);
                if (object.reasonId != null)
                    if ($util.Long)
                        (message.reasonId = $util.Long.fromValue(object.reasonId)).unsigned = false;
                    else if (typeof object.reasonId === "string")
                        message.reasonId = parseInt(object.reasonId, 10);
                    else if (typeof object.reasonId === "number")
                        message.reasonId = object.reasonId;
                    else if (typeof object.reasonId === "object")
                        message.reasonId = new $util.LongBits(object.reasonId.low >>> 0, object.reasonId.high >>> 0).toNumber();
                switch (object.channel) {
                default:
                    if (typeof object.channel === "number") {
                        message.channel = object.channel;
                        break;
                    }
                    break;
                case "CUSTOM_TARGETING_ENVIRONMENT_CHANNEL_WEB":
                case 1:
                    message.channel = 1;
                    break;
                case "CUSTOM_TARGETING_ENVIRONMENT_CHANNEL_CTV":
                case 2:
                    message.channel = 2;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a CreateCustomTargetingRuleForCampaignRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignRequest
             * @static
             * @param {teads.api.CreateCustomTargetingRuleForCampaignRequest} message CreateCustomTargetingRuleForCampaignRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CreateCustomTargetingRuleForCampaignRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.campaignId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.campaignId = options.longs === String ? "0" : 0;
                    object.name = "";
                    object.tblString = "";
                    object.demographicAudiencesDeliveryType = options.enums === String ? "CUSTOM_TARGETING_RULE_AUDIENCES_DELIVERY_TYPE_HIGH_ACCURACY" : 2;
                    object.otherAudiencesAccuracyLevel = options.enums === String ? "CUSTOM_TARGETING_RULE_AUDIENCES_ACCURACY_LEVEL_HIGH" : 1;
                    object.cookielessCriteriaOnly = false;
                    object.description = "";
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.reasonId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.reasonId = options.longs === String ? "0" : 0;
                    object.channel = options.enums === String ? "CUSTOM_TARGETING_ENVIRONMENT_CHANNEL_WEB" : 1;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.campaignId != null && message.hasOwnProperty("campaignId"))
                    if (typeof message.campaignId === "number")
                        object.campaignId = options.longs === String ? String(message.campaignId) : message.campaignId;
                    else
                        object.campaignId = options.longs === String ? $util.Long.prototype.toString.call(message.campaignId) : options.longs === Number ? new $util.LongBits(message.campaignId.low >>> 0, message.campaignId.high >>> 0).toNumber() : message.campaignId;
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.tblString != null && message.hasOwnProperty("tblString"))
                    object.tblString = message.tblString;
                if (message.demographicAudiencesDeliveryType != null && message.hasOwnProperty("demographicAudiencesDeliveryType"))
                    object.demographicAudiencesDeliveryType = options.enums === String ? $root.teads.api.CustomTargetingRuleAudiencesDeliveryType[message.demographicAudiencesDeliveryType] === undefined ? message.demographicAudiencesDeliveryType : $root.teads.api.CustomTargetingRuleAudiencesDeliveryType[message.demographicAudiencesDeliveryType] : message.demographicAudiencesDeliveryType;
                if (message.otherAudiencesAccuracyLevel != null && message.hasOwnProperty("otherAudiencesAccuracyLevel"))
                    object.otherAudiencesAccuracyLevel = options.enums === String ? $root.teads.api.CustomTargetingRuleAudiencesAccuracyLevel[message.otherAudiencesAccuracyLevel] === undefined ? message.otherAudiencesAccuracyLevel : $root.teads.api.CustomTargetingRuleAudiencesAccuracyLevel[message.otherAudiencesAccuracyLevel] : message.otherAudiencesAccuracyLevel;
                if (message.cookielessCriteriaOnly != null && message.hasOwnProperty("cookielessCriteriaOnly"))
                    object.cookielessCriteriaOnly = message.cookielessCriteriaOnly;
                if (message.description != null && message.hasOwnProperty("description"))
                    object.description = message.description;
                if (message.reasonId != null && message.hasOwnProperty("reasonId"))
                    if (typeof message.reasonId === "number")
                        object.reasonId = options.longs === String ? String(message.reasonId) : message.reasonId;
                    else
                        object.reasonId = options.longs === String ? $util.Long.prototype.toString.call(message.reasonId) : options.longs === Number ? new $util.LongBits(message.reasonId.low >>> 0, message.reasonId.high >>> 0).toNumber() : message.reasonId;
                if (message.channel != null && message.hasOwnProperty("channel"))
                    object.channel = options.enums === String ? $root.teads.api.CustomTargetingEnvironmentChannel[message.channel] === undefined ? message.channel : $root.teads.api.CustomTargetingEnvironmentChannel[message.channel] : message.channel;
                return object;
            };

            /**
             * Converts this CreateCustomTargetingRuleForCampaignRequest to JSON.
             * @function toJSON
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CreateCustomTargetingRuleForCampaignRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CreateCustomTargetingRuleForCampaignRequest
             * @function getTypeUrl
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CreateCustomTargetingRuleForCampaignRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.CreateCustomTargetingRuleForCampaignRequest";
            };

            return CreateCustomTargetingRuleForCampaignRequest;
        })();

        api.CreateCustomTargetingRuleForCampaignResponse = (function() {

            /**
             * Properties of a CreateCustomTargetingRuleForCampaignResponse.
             * @memberof teads.api
             * @interface ICreateCustomTargetingRuleForCampaignResponse
             * @property {number} ruleId CreateCustomTargetingRuleForCampaignResponse ruleId
             */

            /**
             * Constructs a new CreateCustomTargetingRuleForCampaignResponse.
             * @memberof teads.api
             * @classdesc Represents a CreateCustomTargetingRuleForCampaignResponse.
             * @implements ICreateCustomTargetingRuleForCampaignResponse
             * @constructor
             * @param {teads.api.ICreateCustomTargetingRuleForCampaignResponse=} [properties] Properties to set
             */
            function CreateCustomTargetingRuleForCampaignResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CreateCustomTargetingRuleForCampaignResponse ruleId.
             * @member {number} ruleId
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignResponse
             * @instance
             */
            CreateCustomTargetingRuleForCampaignResponse.prototype.ruleId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new CreateCustomTargetingRuleForCampaignResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignResponse
             * @static
             * @param {teads.api.ICreateCustomTargetingRuleForCampaignResponse=} [properties] Properties to set
             * @returns {teads.api.CreateCustomTargetingRuleForCampaignResponse} CreateCustomTargetingRuleForCampaignResponse instance
             */
            CreateCustomTargetingRuleForCampaignResponse.create = function create(properties) {
                return new CreateCustomTargetingRuleForCampaignResponse(properties);
            };

            /**
             * Encodes the specified CreateCustomTargetingRuleForCampaignResponse message. Does not implicitly {@link teads.api.CreateCustomTargetingRuleForCampaignResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignResponse
             * @static
             * @param {teads.api.ICreateCustomTargetingRuleForCampaignResponse} message CreateCustomTargetingRuleForCampaignResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateCustomTargetingRuleForCampaignResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.ruleId);
                return writer;
            };

            /**
             * Encodes the specified CreateCustomTargetingRuleForCampaignResponse message, length delimited. Does not implicitly {@link teads.api.CreateCustomTargetingRuleForCampaignResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignResponse
             * @static
             * @param {teads.api.ICreateCustomTargetingRuleForCampaignResponse} message CreateCustomTargetingRuleForCampaignResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateCustomTargetingRuleForCampaignResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CreateCustomTargetingRuleForCampaignResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.CreateCustomTargetingRuleForCampaignResponse} CreateCustomTargetingRuleForCampaignResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateCustomTargetingRuleForCampaignResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.CreateCustomTargetingRuleForCampaignResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.ruleId = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("ruleId"))
                    throw $util.ProtocolError("missing required 'ruleId'", { instance: message });
                return message;
            };

            /**
             * Decodes a CreateCustomTargetingRuleForCampaignResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.CreateCustomTargetingRuleForCampaignResponse} CreateCustomTargetingRuleForCampaignResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateCustomTargetingRuleForCampaignResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CreateCustomTargetingRuleForCampaignResponse message.
             * @function verify
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CreateCustomTargetingRuleForCampaignResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.ruleId) && !(message.ruleId && $util.isInteger(message.ruleId.low) && $util.isInteger(message.ruleId.high)))
                    return "ruleId: integer|Long expected";
                return null;
            };

            /**
             * Creates a CreateCustomTargetingRuleForCampaignResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.CreateCustomTargetingRuleForCampaignResponse} CreateCustomTargetingRuleForCampaignResponse
             */
            CreateCustomTargetingRuleForCampaignResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.CreateCustomTargetingRuleForCampaignResponse)
                    return object;
                var message = new $root.teads.api.CreateCustomTargetingRuleForCampaignResponse();
                if (object.ruleId != null)
                    if ($util.Long)
                        (message.ruleId = $util.Long.fromValue(object.ruleId)).unsigned = false;
                    else if (typeof object.ruleId === "string")
                        message.ruleId = parseInt(object.ruleId, 10);
                    else if (typeof object.ruleId === "number")
                        message.ruleId = object.ruleId;
                    else if (typeof object.ruleId === "object")
                        message.ruleId = new $util.LongBits(object.ruleId.low >>> 0, object.ruleId.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from a CreateCustomTargetingRuleForCampaignResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignResponse
             * @static
             * @param {teads.api.CreateCustomTargetingRuleForCampaignResponse} message CreateCustomTargetingRuleForCampaignResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CreateCustomTargetingRuleForCampaignResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.ruleId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.ruleId = options.longs === String ? "0" : 0;
                if (message.ruleId != null && message.hasOwnProperty("ruleId"))
                    if (typeof message.ruleId === "number")
                        object.ruleId = options.longs === String ? String(message.ruleId) : message.ruleId;
                    else
                        object.ruleId = options.longs === String ? $util.Long.prototype.toString.call(message.ruleId) : options.longs === Number ? new $util.LongBits(message.ruleId.low >>> 0, message.ruleId.high >>> 0).toNumber() : message.ruleId;
                return object;
            };

            /**
             * Converts this CreateCustomTargetingRuleForCampaignResponse to JSON.
             * @function toJSON
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CreateCustomTargetingRuleForCampaignResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CreateCustomTargetingRuleForCampaignResponse
             * @function getTypeUrl
             * @memberof teads.api.CreateCustomTargetingRuleForCampaignResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CreateCustomTargetingRuleForCampaignResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.CreateCustomTargetingRuleForCampaignResponse";
            };

            return CreateCustomTargetingRuleForCampaignResponse;
        })();

        api.CreateInternalSeatForBuyerRequest = (function() {

            /**
             * Properties of a CreateInternalSeatForBuyerRequest.
             * @memberof teads.api
             * @interface ICreateInternalSeatForBuyerRequest
             * @property {teads.api.ISecurityContext} securityContext CreateInternalSeatForBuyerRequest securityContext
             * @property {number} officeId CreateInternalSeatForBuyerRequest officeId
             * @property {number} entityId CreateInternalSeatForBuyerRequest entityId
             * @property {number|null} [agencyId] CreateInternalSeatForBuyerRequest agencyId
             * @property {number|null} [advertiserId] CreateInternalSeatForBuyerRequest advertiserId
             * @property {string} seatName CreateInternalSeatForBuyerRequest seatName
             * @property {number} fee CreateInternalSeatForBuyerRequest fee
             * @property {string|null} [multipleSeatsReason] CreateInternalSeatForBuyerRequest multipleSeatsReason
             */

            /**
             * Constructs a new CreateInternalSeatForBuyerRequest.
             * @memberof teads.api
             * @classdesc Represents a CreateInternalSeatForBuyerRequest.
             * @implements ICreateInternalSeatForBuyerRequest
             * @constructor
             * @param {teads.api.ICreateInternalSeatForBuyerRequest=} [properties] Properties to set
             */
            function CreateInternalSeatForBuyerRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CreateInternalSeatForBuyerRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.CreateInternalSeatForBuyerRequest
             * @instance
             */
            CreateInternalSeatForBuyerRequest.prototype.securityContext = null;

            /**
             * CreateInternalSeatForBuyerRequest officeId.
             * @member {number} officeId
             * @memberof teads.api.CreateInternalSeatForBuyerRequest
             * @instance
             */
            CreateInternalSeatForBuyerRequest.prototype.officeId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * CreateInternalSeatForBuyerRequest entityId.
             * @member {number} entityId
             * @memberof teads.api.CreateInternalSeatForBuyerRequest
             * @instance
             */
            CreateInternalSeatForBuyerRequest.prototype.entityId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * CreateInternalSeatForBuyerRequest agencyId.
             * @member {number|null|undefined} agencyId
             * @memberof teads.api.CreateInternalSeatForBuyerRequest
             * @instance
             */
            CreateInternalSeatForBuyerRequest.prototype.agencyId = null;

            /**
             * CreateInternalSeatForBuyerRequest advertiserId.
             * @member {number|null|undefined} advertiserId
             * @memberof teads.api.CreateInternalSeatForBuyerRequest
             * @instance
             */
            CreateInternalSeatForBuyerRequest.prototype.advertiserId = null;

            /**
             * CreateInternalSeatForBuyerRequest seatName.
             * @member {string} seatName
             * @memberof teads.api.CreateInternalSeatForBuyerRequest
             * @instance
             */
            CreateInternalSeatForBuyerRequest.prototype.seatName = "";

            /**
             * CreateInternalSeatForBuyerRequest fee.
             * @member {number} fee
             * @memberof teads.api.CreateInternalSeatForBuyerRequest
             * @instance
             */
            CreateInternalSeatForBuyerRequest.prototype.fee = 0;

            /**
             * CreateInternalSeatForBuyerRequest multipleSeatsReason.
             * @member {string} multipleSeatsReason
             * @memberof teads.api.CreateInternalSeatForBuyerRequest
             * @instance
             */
            CreateInternalSeatForBuyerRequest.prototype.multipleSeatsReason = "";

            // OneOf field names bound to virtual getters and setters
            var $oneOfFields;

            /**
             * CreateInternalSeatForBuyerRequest buyerId.
             * @member {"agencyId"|"advertiserId"|undefined} buyerId
             * @memberof teads.api.CreateInternalSeatForBuyerRequest
             * @instance
             */
            Object.defineProperty(CreateInternalSeatForBuyerRequest.prototype, "buyerId", {
                get: $util.oneOfGetter($oneOfFields = ["agencyId", "advertiserId"]),
                set: $util.oneOfSetter($oneOfFields)
            });

            /**
             * Creates a new CreateInternalSeatForBuyerRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.CreateInternalSeatForBuyerRequest
             * @static
             * @param {teads.api.ICreateInternalSeatForBuyerRequest=} [properties] Properties to set
             * @returns {teads.api.CreateInternalSeatForBuyerRequest} CreateInternalSeatForBuyerRequest instance
             */
            CreateInternalSeatForBuyerRequest.create = function create(properties) {
                return new CreateInternalSeatForBuyerRequest(properties);
            };

            /**
             * Encodes the specified CreateInternalSeatForBuyerRequest message. Does not implicitly {@link teads.api.CreateInternalSeatForBuyerRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.CreateInternalSeatForBuyerRequest
             * @static
             * @param {teads.api.ICreateInternalSeatForBuyerRequest} message CreateInternalSeatForBuyerRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateInternalSeatForBuyerRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.officeId);
                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.entityId);
                if (message.agencyId != null && Object.hasOwnProperty.call(message, "agencyId"))
                    writer.uint32(/* id 4, wireType 0 =*/32).int64(message.agencyId);
                if (message.advertiserId != null && Object.hasOwnProperty.call(message, "advertiserId"))
                    writer.uint32(/* id 5, wireType 0 =*/40).int64(message.advertiserId);
                writer.uint32(/* id 6, wireType 2 =*/50).string(message.seatName);
                writer.uint32(/* id 7, wireType 1 =*/57).double(message.fee);
                if (message.multipleSeatsReason != null && Object.hasOwnProperty.call(message, "multipleSeatsReason"))
                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.multipleSeatsReason);
                return writer;
            };

            /**
             * Encodes the specified CreateInternalSeatForBuyerRequest message, length delimited. Does not implicitly {@link teads.api.CreateInternalSeatForBuyerRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.CreateInternalSeatForBuyerRequest
             * @static
             * @param {teads.api.ICreateInternalSeatForBuyerRequest} message CreateInternalSeatForBuyerRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateInternalSeatForBuyerRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CreateInternalSeatForBuyerRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.CreateInternalSeatForBuyerRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.CreateInternalSeatForBuyerRequest} CreateInternalSeatForBuyerRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateInternalSeatForBuyerRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.CreateInternalSeatForBuyerRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.officeId = reader.int64();
                            break;
                        }
                    case 3: {
                            message.entityId = reader.int64();
                            break;
                        }
                    case 4: {
                            message.agencyId = reader.int64();
                            break;
                        }
                    case 5: {
                            message.advertiserId = reader.int64();
                            break;
                        }
                    case 6: {
                            message.seatName = reader.string();
                            break;
                        }
                    case 7: {
                            message.fee = reader.double();
                            break;
                        }
                    case 8: {
                            message.multipleSeatsReason = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("officeId"))
                    throw $util.ProtocolError("missing required 'officeId'", { instance: message });
                if (!message.hasOwnProperty("entityId"))
                    throw $util.ProtocolError("missing required 'entityId'", { instance: message });
                if (!message.hasOwnProperty("seatName"))
                    throw $util.ProtocolError("missing required 'seatName'", { instance: message });
                if (!message.hasOwnProperty("fee"))
                    throw $util.ProtocolError("missing required 'fee'", { instance: message });
                return message;
            };

            /**
             * Decodes a CreateInternalSeatForBuyerRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.CreateInternalSeatForBuyerRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.CreateInternalSeatForBuyerRequest} CreateInternalSeatForBuyerRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateInternalSeatForBuyerRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CreateInternalSeatForBuyerRequest message.
             * @function verify
             * @memberof teads.api.CreateInternalSeatForBuyerRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CreateInternalSeatForBuyerRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                var properties = {};
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.officeId) && !(message.officeId && $util.isInteger(message.officeId.low) && $util.isInteger(message.officeId.high)))
                    return "officeId: integer|Long expected";
                if (!$util.isInteger(message.entityId) && !(message.entityId && $util.isInteger(message.entityId.low) && $util.isInteger(message.entityId.high)))
                    return "entityId: integer|Long expected";
                if (message.agencyId != null && message.hasOwnProperty("agencyId")) {
                    properties.buyerId = 1;
                    if (!$util.isInteger(message.agencyId) && !(message.agencyId && $util.isInteger(message.agencyId.low) && $util.isInteger(message.agencyId.high)))
                        return "agencyId: integer|Long expected";
                }
                if (message.advertiserId != null && message.hasOwnProperty("advertiserId")) {
                    if (properties.buyerId === 1)
                        return "buyerId: multiple values";
                    properties.buyerId = 1;
                    if (!$util.isInteger(message.advertiserId) && !(message.advertiserId && $util.isInteger(message.advertiserId.low) && $util.isInteger(message.advertiserId.high)))
                        return "advertiserId: integer|Long expected";
                }
                if (!$util.isString(message.seatName))
                    return "seatName: string expected";
                if (typeof message.fee !== "number")
                    return "fee: number expected";
                if (message.multipleSeatsReason != null && message.hasOwnProperty("multipleSeatsReason"))
                    if (!$util.isString(message.multipleSeatsReason))
                        return "multipleSeatsReason: string expected";
                return null;
            };

            /**
             * Creates a CreateInternalSeatForBuyerRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.CreateInternalSeatForBuyerRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.CreateInternalSeatForBuyerRequest} CreateInternalSeatForBuyerRequest
             */
            CreateInternalSeatForBuyerRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.CreateInternalSeatForBuyerRequest)
                    return object;
                var message = new $root.teads.api.CreateInternalSeatForBuyerRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.CreateInternalSeatForBuyerRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.officeId != null)
                    if ($util.Long)
                        (message.officeId = $util.Long.fromValue(object.officeId)).unsigned = false;
                    else if (typeof object.officeId === "string")
                        message.officeId = parseInt(object.officeId, 10);
                    else if (typeof object.officeId === "number")
                        message.officeId = object.officeId;
                    else if (typeof object.officeId === "object")
                        message.officeId = new $util.LongBits(object.officeId.low >>> 0, object.officeId.high >>> 0).toNumber();
                if (object.entityId != null)
                    if ($util.Long)
                        (message.entityId = $util.Long.fromValue(object.entityId)).unsigned = false;
                    else if (typeof object.entityId === "string")
                        message.entityId = parseInt(object.entityId, 10);
                    else if (typeof object.entityId === "number")
                        message.entityId = object.entityId;
                    else if (typeof object.entityId === "object")
                        message.entityId = new $util.LongBits(object.entityId.low >>> 0, object.entityId.high >>> 0).toNumber();
                if (object.agencyId != null)
                    if ($util.Long)
                        (message.agencyId = $util.Long.fromValue(object.agencyId)).unsigned = false;
                    else if (typeof object.agencyId === "string")
                        message.agencyId = parseInt(object.agencyId, 10);
                    else if (typeof object.agencyId === "number")
                        message.agencyId = object.agencyId;
                    else if (typeof object.agencyId === "object")
                        message.agencyId = new $util.LongBits(object.agencyId.low >>> 0, object.agencyId.high >>> 0).toNumber();
                if (object.advertiserId != null)
                    if ($util.Long)
                        (message.advertiserId = $util.Long.fromValue(object.advertiserId)).unsigned = false;
                    else if (typeof object.advertiserId === "string")
                        message.advertiserId = parseInt(object.advertiserId, 10);
                    else if (typeof object.advertiserId === "number")
                        message.advertiserId = object.advertiserId;
                    else if (typeof object.advertiserId === "object")
                        message.advertiserId = new $util.LongBits(object.advertiserId.low >>> 0, object.advertiserId.high >>> 0).toNumber();
                if (object.seatName != null)
                    message.seatName = String(object.seatName);
                if (object.fee != null)
                    message.fee = Number(object.fee);
                if (object.multipleSeatsReason != null)
                    message.multipleSeatsReason = String(object.multipleSeatsReason);
                return message;
            };

            /**
             * Creates a plain object from a CreateInternalSeatForBuyerRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.CreateInternalSeatForBuyerRequest
             * @static
             * @param {teads.api.CreateInternalSeatForBuyerRequest} message CreateInternalSeatForBuyerRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CreateInternalSeatForBuyerRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.officeId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.officeId = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.entityId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.entityId = options.longs === String ? "0" : 0;
                    object.seatName = "";
                    object.fee = 0;
                    object.multipleSeatsReason = "";
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.officeId != null && message.hasOwnProperty("officeId"))
                    if (typeof message.officeId === "number")
                        object.officeId = options.longs === String ? String(message.officeId) : message.officeId;
                    else
                        object.officeId = options.longs === String ? $util.Long.prototype.toString.call(message.officeId) : options.longs === Number ? new $util.LongBits(message.officeId.low >>> 0, message.officeId.high >>> 0).toNumber() : message.officeId;
                if (message.entityId != null && message.hasOwnProperty("entityId"))
                    if (typeof message.entityId === "number")
                        object.entityId = options.longs === String ? String(message.entityId) : message.entityId;
                    else
                        object.entityId = options.longs === String ? $util.Long.prototype.toString.call(message.entityId) : options.longs === Number ? new $util.LongBits(message.entityId.low >>> 0, message.entityId.high >>> 0).toNumber() : message.entityId;
                if (message.agencyId != null && message.hasOwnProperty("agencyId")) {
                    if (typeof message.agencyId === "number")
                        object.agencyId = options.longs === String ? String(message.agencyId) : message.agencyId;
                    else
                        object.agencyId = options.longs === String ? $util.Long.prototype.toString.call(message.agencyId) : options.longs === Number ? new $util.LongBits(message.agencyId.low >>> 0, message.agencyId.high >>> 0).toNumber() : message.agencyId;
                    if (options.oneofs)
                        object.buyerId = "agencyId";
                }
                if (message.advertiserId != null && message.hasOwnProperty("advertiserId")) {
                    if (typeof message.advertiserId === "number")
                        object.advertiserId = options.longs === String ? String(message.advertiserId) : message.advertiserId;
                    else
                        object.advertiserId = options.longs === String ? $util.Long.prototype.toString.call(message.advertiserId) : options.longs === Number ? new $util.LongBits(message.advertiserId.low >>> 0, message.advertiserId.high >>> 0).toNumber() : message.advertiserId;
                    if (options.oneofs)
                        object.buyerId = "advertiserId";
                }
                if (message.seatName != null && message.hasOwnProperty("seatName"))
                    object.seatName = message.seatName;
                if (message.fee != null && message.hasOwnProperty("fee"))
                    object.fee = options.json && !isFinite(message.fee) ? String(message.fee) : message.fee;
                if (message.multipleSeatsReason != null && message.hasOwnProperty("multipleSeatsReason"))
                    object.multipleSeatsReason = message.multipleSeatsReason;
                return object;
            };

            /**
             * Converts this CreateInternalSeatForBuyerRequest to JSON.
             * @function toJSON
             * @memberof teads.api.CreateInternalSeatForBuyerRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CreateInternalSeatForBuyerRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CreateInternalSeatForBuyerRequest
             * @function getTypeUrl
             * @memberof teads.api.CreateInternalSeatForBuyerRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CreateInternalSeatForBuyerRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.CreateInternalSeatForBuyerRequest";
            };

            return CreateInternalSeatForBuyerRequest;
        })();

        api.CreateInternalSeatForBuyerResponse = (function() {

            /**
             * Properties of a CreateInternalSeatForBuyerResponse.
             * @memberof teads.api
             * @interface ICreateInternalSeatForBuyerResponse
             * @property {number} seatId CreateInternalSeatForBuyerResponse seatId
             */

            /**
             * Constructs a new CreateInternalSeatForBuyerResponse.
             * @memberof teads.api
             * @classdesc Represents a CreateInternalSeatForBuyerResponse.
             * @implements ICreateInternalSeatForBuyerResponse
             * @constructor
             * @param {teads.api.ICreateInternalSeatForBuyerResponse=} [properties] Properties to set
             */
            function CreateInternalSeatForBuyerResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CreateInternalSeatForBuyerResponse seatId.
             * @member {number} seatId
             * @memberof teads.api.CreateInternalSeatForBuyerResponse
             * @instance
             */
            CreateInternalSeatForBuyerResponse.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new CreateInternalSeatForBuyerResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.CreateInternalSeatForBuyerResponse
             * @static
             * @param {teads.api.ICreateInternalSeatForBuyerResponse=} [properties] Properties to set
             * @returns {teads.api.CreateInternalSeatForBuyerResponse} CreateInternalSeatForBuyerResponse instance
             */
            CreateInternalSeatForBuyerResponse.create = function create(properties) {
                return new CreateInternalSeatForBuyerResponse(properties);
            };

            /**
             * Encodes the specified CreateInternalSeatForBuyerResponse message. Does not implicitly {@link teads.api.CreateInternalSeatForBuyerResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.CreateInternalSeatForBuyerResponse
             * @static
             * @param {teads.api.ICreateInternalSeatForBuyerResponse} message CreateInternalSeatForBuyerResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateInternalSeatForBuyerResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seatId);
                return writer;
            };

            /**
             * Encodes the specified CreateInternalSeatForBuyerResponse message, length delimited. Does not implicitly {@link teads.api.CreateInternalSeatForBuyerResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.CreateInternalSeatForBuyerResponse
             * @static
             * @param {teads.api.ICreateInternalSeatForBuyerResponse} message CreateInternalSeatForBuyerResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateInternalSeatForBuyerResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CreateInternalSeatForBuyerResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.CreateInternalSeatForBuyerResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.CreateInternalSeatForBuyerResponse} CreateInternalSeatForBuyerResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateInternalSeatForBuyerResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.CreateInternalSeatForBuyerResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.seatId = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("seatId"))
                    throw $util.ProtocolError("missing required 'seatId'", { instance: message });
                return message;
            };

            /**
             * Decodes a CreateInternalSeatForBuyerResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.CreateInternalSeatForBuyerResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.CreateInternalSeatForBuyerResponse} CreateInternalSeatForBuyerResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateInternalSeatForBuyerResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CreateInternalSeatForBuyerResponse message.
             * @function verify
             * @memberof teads.api.CreateInternalSeatForBuyerResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CreateInternalSeatForBuyerResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                    return "seatId: integer|Long expected";
                return null;
            };

            /**
             * Creates a CreateInternalSeatForBuyerResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.CreateInternalSeatForBuyerResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.CreateInternalSeatForBuyerResponse} CreateInternalSeatForBuyerResponse
             */
            CreateInternalSeatForBuyerResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.CreateInternalSeatForBuyerResponse)
                    return object;
                var message = new $root.teads.api.CreateInternalSeatForBuyerResponse();
                if (object.seatId != null)
                    if ($util.Long)
                        (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                    else if (typeof object.seatId === "string")
                        message.seatId = parseInt(object.seatId, 10);
                    else if (typeof object.seatId === "number")
                        message.seatId = object.seatId;
                    else if (typeof object.seatId === "object")
                        message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from a CreateInternalSeatForBuyerResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.CreateInternalSeatForBuyerResponse
             * @static
             * @param {teads.api.CreateInternalSeatForBuyerResponse} message CreateInternalSeatForBuyerResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CreateInternalSeatForBuyerResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seatId = options.longs === String ? "0" : 0;
                if (message.seatId != null && message.hasOwnProperty("seatId"))
                    if (typeof message.seatId === "number")
                        object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                    else
                        object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                return object;
            };

            /**
             * Converts this CreateInternalSeatForBuyerResponse to JSON.
             * @function toJSON
             * @memberof teads.api.CreateInternalSeatForBuyerResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CreateInternalSeatForBuyerResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CreateInternalSeatForBuyerResponse
             * @function getTypeUrl
             * @memberof teads.api.CreateInternalSeatForBuyerResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CreateInternalSeatForBuyerResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.CreateInternalSeatForBuyerResponse";
            };

            return CreateInternalSeatForBuyerResponse;
        })();

        api.CreateIoBuyerSeatForEntityRequest = (function() {

            /**
             * Properties of a CreateIoBuyerSeatForEntityRequest.
             * @memberof teads.api
             * @interface ICreateIoBuyerSeatForEntityRequest
             * @property {teads.api.ISecurityContext} securityContext CreateIoBuyerSeatForEntityRequest securityContext
             * @property {number} officeId CreateIoBuyerSeatForEntityRequest officeId
             * @property {number} entityId CreateIoBuyerSeatForEntityRequest entityId
             * @property {number|null} [agencyId] CreateIoBuyerSeatForEntityRequest agencyId
             * @property {number|null} [advertiserId] CreateIoBuyerSeatForEntityRequest advertiserId
             * @property {boolean|null} [canSetMultiplePixels] CreateIoBuyerSeatForEntityRequest canSetMultiplePixels
             * @property {number|null} [fee] CreateIoBuyerSeatForEntityRequest fee
             * @property {string|null} [seatName] CreateIoBuyerSeatForEntityRequest seatName
             * @property {string|null} [multipleSeatsReason] CreateIoBuyerSeatForEntityRequest multipleSeatsReason
             */

            /**
             * Constructs a new CreateIoBuyerSeatForEntityRequest.
             * @memberof teads.api
             * @classdesc Represents a CreateIoBuyerSeatForEntityRequest.
             * @implements ICreateIoBuyerSeatForEntityRequest
             * @constructor
             * @param {teads.api.ICreateIoBuyerSeatForEntityRequest=} [properties] Properties to set
             */
            function CreateIoBuyerSeatForEntityRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CreateIoBuyerSeatForEntityRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.CreateIoBuyerSeatForEntityRequest
             * @instance
             */
            CreateIoBuyerSeatForEntityRequest.prototype.securityContext = null;

            /**
             * CreateIoBuyerSeatForEntityRequest officeId.
             * @member {number} officeId
             * @memberof teads.api.CreateIoBuyerSeatForEntityRequest
             * @instance
             */
            CreateIoBuyerSeatForEntityRequest.prototype.officeId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * CreateIoBuyerSeatForEntityRequest entityId.
             * @member {number} entityId
             * @memberof teads.api.CreateIoBuyerSeatForEntityRequest
             * @instance
             */
            CreateIoBuyerSeatForEntityRequest.prototype.entityId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * CreateIoBuyerSeatForEntityRequest agencyId.
             * @member {number|null|undefined} agencyId
             * @memberof teads.api.CreateIoBuyerSeatForEntityRequest
             * @instance
             */
            CreateIoBuyerSeatForEntityRequest.prototype.agencyId = null;

            /**
             * CreateIoBuyerSeatForEntityRequest advertiserId.
             * @member {number|null|undefined} advertiserId
             * @memberof teads.api.CreateIoBuyerSeatForEntityRequest
             * @instance
             */
            CreateIoBuyerSeatForEntityRequest.prototype.advertiserId = null;

            /**
             * CreateIoBuyerSeatForEntityRequest canSetMultiplePixels.
             * @member {boolean} canSetMultiplePixels
             * @memberof teads.api.CreateIoBuyerSeatForEntityRequest
             * @instance
             */
            CreateIoBuyerSeatForEntityRequest.prototype.canSetMultiplePixels = false;

            /**
             * CreateIoBuyerSeatForEntityRequest fee.
             * @member {number} fee
             * @memberof teads.api.CreateIoBuyerSeatForEntityRequest
             * @instance
             */
            CreateIoBuyerSeatForEntityRequest.prototype.fee = 0;

            /**
             * CreateIoBuyerSeatForEntityRequest seatName.
             * @member {string} seatName
             * @memberof teads.api.CreateIoBuyerSeatForEntityRequest
             * @instance
             */
            CreateIoBuyerSeatForEntityRequest.prototype.seatName = "";

            /**
             * CreateIoBuyerSeatForEntityRequest multipleSeatsReason.
             * @member {string} multipleSeatsReason
             * @memberof teads.api.CreateIoBuyerSeatForEntityRequest
             * @instance
             */
            CreateIoBuyerSeatForEntityRequest.prototype.multipleSeatsReason = "";

            // OneOf field names bound to virtual getters and setters
            var $oneOfFields;

            /**
             * CreateIoBuyerSeatForEntityRequest buyerId.
             * @member {"agencyId"|"advertiserId"|undefined} buyerId
             * @memberof teads.api.CreateIoBuyerSeatForEntityRequest
             * @instance
             */
            Object.defineProperty(CreateIoBuyerSeatForEntityRequest.prototype, "buyerId", {
                get: $util.oneOfGetter($oneOfFields = ["agencyId", "advertiserId"]),
                set: $util.oneOfSetter($oneOfFields)
            });

            /**
             * Creates a new CreateIoBuyerSeatForEntityRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.CreateIoBuyerSeatForEntityRequest
             * @static
             * @param {teads.api.ICreateIoBuyerSeatForEntityRequest=} [properties] Properties to set
             * @returns {teads.api.CreateIoBuyerSeatForEntityRequest} CreateIoBuyerSeatForEntityRequest instance
             */
            CreateIoBuyerSeatForEntityRequest.create = function create(properties) {
                return new CreateIoBuyerSeatForEntityRequest(properties);
            };

            /**
             * Encodes the specified CreateIoBuyerSeatForEntityRequest message. Does not implicitly {@link teads.api.CreateIoBuyerSeatForEntityRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.CreateIoBuyerSeatForEntityRequest
             * @static
             * @param {teads.api.ICreateIoBuyerSeatForEntityRequest} message CreateIoBuyerSeatForEntityRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateIoBuyerSeatForEntityRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.officeId);
                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.entityId);
                if (message.agencyId != null && Object.hasOwnProperty.call(message, "agencyId"))
                    writer.uint32(/* id 4, wireType 0 =*/32).int64(message.agencyId);
                if (message.advertiserId != null && Object.hasOwnProperty.call(message, "advertiserId"))
                    writer.uint32(/* id 5, wireType 0 =*/40).int64(message.advertiserId);
                if (message.canSetMultiplePixels != null && Object.hasOwnProperty.call(message, "canSetMultiplePixels"))
                    writer.uint32(/* id 6, wireType 0 =*/48).bool(message.canSetMultiplePixels);
                if (message.fee != null && Object.hasOwnProperty.call(message, "fee"))
                    writer.uint32(/* id 7, wireType 1 =*/57).double(message.fee);
                if (message.seatName != null && Object.hasOwnProperty.call(message, "seatName"))
                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.seatName);
                if (message.multipleSeatsReason != null && Object.hasOwnProperty.call(message, "multipleSeatsReason"))
                    writer.uint32(/* id 9, wireType 2 =*/74).string(message.multipleSeatsReason);
                return writer;
            };

            /**
             * Encodes the specified CreateIoBuyerSeatForEntityRequest message, length delimited. Does not implicitly {@link teads.api.CreateIoBuyerSeatForEntityRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.CreateIoBuyerSeatForEntityRequest
             * @static
             * @param {teads.api.ICreateIoBuyerSeatForEntityRequest} message CreateIoBuyerSeatForEntityRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateIoBuyerSeatForEntityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CreateIoBuyerSeatForEntityRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.CreateIoBuyerSeatForEntityRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.CreateIoBuyerSeatForEntityRequest} CreateIoBuyerSeatForEntityRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateIoBuyerSeatForEntityRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.CreateIoBuyerSeatForEntityRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.officeId = reader.int64();
                            break;
                        }
                    case 3: {
                            message.entityId = reader.int64();
                            break;
                        }
                    case 4: {
                            message.agencyId = reader.int64();
                            break;
                        }
                    case 5: {
                            message.advertiserId = reader.int64();
                            break;
                        }
                    case 6: {
                            message.canSetMultiplePixels = reader.bool();
                            break;
                        }
                    case 7: {
                            message.fee = reader.double();
                            break;
                        }
                    case 8: {
                            message.seatName = reader.string();
                            break;
                        }
                    case 9: {
                            message.multipleSeatsReason = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("officeId"))
                    throw $util.ProtocolError("missing required 'officeId'", { instance: message });
                if (!message.hasOwnProperty("entityId"))
                    throw $util.ProtocolError("missing required 'entityId'", { instance: message });
                return message;
            };

            /**
             * Decodes a CreateIoBuyerSeatForEntityRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.CreateIoBuyerSeatForEntityRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.CreateIoBuyerSeatForEntityRequest} CreateIoBuyerSeatForEntityRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateIoBuyerSeatForEntityRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CreateIoBuyerSeatForEntityRequest message.
             * @function verify
             * @memberof teads.api.CreateIoBuyerSeatForEntityRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CreateIoBuyerSeatForEntityRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                var properties = {};
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.officeId) && !(message.officeId && $util.isInteger(message.officeId.low) && $util.isInteger(message.officeId.high)))
                    return "officeId: integer|Long expected";
                if (!$util.isInteger(message.entityId) && !(message.entityId && $util.isInteger(message.entityId.low) && $util.isInteger(message.entityId.high)))
                    return "entityId: integer|Long expected";
                if (message.agencyId != null && message.hasOwnProperty("agencyId")) {
                    properties.buyerId = 1;
                    if (!$util.isInteger(message.agencyId) && !(message.agencyId && $util.isInteger(message.agencyId.low) && $util.isInteger(message.agencyId.high)))
                        return "agencyId: integer|Long expected";
                }
                if (message.advertiserId != null && message.hasOwnProperty("advertiserId")) {
                    if (properties.buyerId === 1)
                        return "buyerId: multiple values";
                    properties.buyerId = 1;
                    if (!$util.isInteger(message.advertiserId) && !(message.advertiserId && $util.isInteger(message.advertiserId.low) && $util.isInteger(message.advertiserId.high)))
                        return "advertiserId: integer|Long expected";
                }
                if (message.canSetMultiplePixels != null && message.hasOwnProperty("canSetMultiplePixels"))
                    if (typeof message.canSetMultiplePixels !== "boolean")
                        return "canSetMultiplePixels: boolean expected";
                if (message.fee != null && message.hasOwnProperty("fee"))
                    if (typeof message.fee !== "number")
                        return "fee: number expected";
                if (message.seatName != null && message.hasOwnProperty("seatName"))
                    if (!$util.isString(message.seatName))
                        return "seatName: string expected";
                if (message.multipleSeatsReason != null && message.hasOwnProperty("multipleSeatsReason"))
                    if (!$util.isString(message.multipleSeatsReason))
                        return "multipleSeatsReason: string expected";
                return null;
            };

            /**
             * Creates a CreateIoBuyerSeatForEntityRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.CreateIoBuyerSeatForEntityRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.CreateIoBuyerSeatForEntityRequest} CreateIoBuyerSeatForEntityRequest
             */
            CreateIoBuyerSeatForEntityRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.CreateIoBuyerSeatForEntityRequest)
                    return object;
                var message = new $root.teads.api.CreateIoBuyerSeatForEntityRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.CreateIoBuyerSeatForEntityRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.officeId != null)
                    if ($util.Long)
                        (message.officeId = $util.Long.fromValue(object.officeId)).unsigned = false;
                    else if (typeof object.officeId === "string")
                        message.officeId = parseInt(object.officeId, 10);
                    else if (typeof object.officeId === "number")
                        message.officeId = object.officeId;
                    else if (typeof object.officeId === "object")
                        message.officeId = new $util.LongBits(object.officeId.low >>> 0, object.officeId.high >>> 0).toNumber();
                if (object.entityId != null)
                    if ($util.Long)
                        (message.entityId = $util.Long.fromValue(object.entityId)).unsigned = false;
                    else if (typeof object.entityId === "string")
                        message.entityId = parseInt(object.entityId, 10);
                    else if (typeof object.entityId === "number")
                        message.entityId = object.entityId;
                    else if (typeof object.entityId === "object")
                        message.entityId = new $util.LongBits(object.entityId.low >>> 0, object.entityId.high >>> 0).toNumber();
                if (object.agencyId != null)
                    if ($util.Long)
                        (message.agencyId = $util.Long.fromValue(object.agencyId)).unsigned = false;
                    else if (typeof object.agencyId === "string")
                        message.agencyId = parseInt(object.agencyId, 10);
                    else if (typeof object.agencyId === "number")
                        message.agencyId = object.agencyId;
                    else if (typeof object.agencyId === "object")
                        message.agencyId = new $util.LongBits(object.agencyId.low >>> 0, object.agencyId.high >>> 0).toNumber();
                if (object.advertiserId != null)
                    if ($util.Long)
                        (message.advertiserId = $util.Long.fromValue(object.advertiserId)).unsigned = false;
                    else if (typeof object.advertiserId === "string")
                        message.advertiserId = parseInt(object.advertiserId, 10);
                    else if (typeof object.advertiserId === "number")
                        message.advertiserId = object.advertiserId;
                    else if (typeof object.advertiserId === "object")
                        message.advertiserId = new $util.LongBits(object.advertiserId.low >>> 0, object.advertiserId.high >>> 0).toNumber();
                if (object.canSetMultiplePixels != null)
                    message.canSetMultiplePixels = Boolean(object.canSetMultiplePixels);
                if (object.fee != null)
                    message.fee = Number(object.fee);
                if (object.seatName != null)
                    message.seatName = String(object.seatName);
                if (object.multipleSeatsReason != null)
                    message.multipleSeatsReason = String(object.multipleSeatsReason);
                return message;
            };

            /**
             * Creates a plain object from a CreateIoBuyerSeatForEntityRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.CreateIoBuyerSeatForEntityRequest
             * @static
             * @param {teads.api.CreateIoBuyerSeatForEntityRequest} message CreateIoBuyerSeatForEntityRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CreateIoBuyerSeatForEntityRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.officeId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.officeId = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.entityId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.entityId = options.longs === String ? "0" : 0;
                    object.canSetMultiplePixels = false;
                    object.fee = 0;
                    object.seatName = "";
                    object.multipleSeatsReason = "";
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.officeId != null && message.hasOwnProperty("officeId"))
                    if (typeof message.officeId === "number")
                        object.officeId = options.longs === String ? String(message.officeId) : message.officeId;
                    else
                        object.officeId = options.longs === String ? $util.Long.prototype.toString.call(message.officeId) : options.longs === Number ? new $util.LongBits(message.officeId.low >>> 0, message.officeId.high >>> 0).toNumber() : message.officeId;
                if (message.entityId != null && message.hasOwnProperty("entityId"))
                    if (typeof message.entityId === "number")
                        object.entityId = options.longs === String ? String(message.entityId) : message.entityId;
                    else
                        object.entityId = options.longs === String ? $util.Long.prototype.toString.call(message.entityId) : options.longs === Number ? new $util.LongBits(message.entityId.low >>> 0, message.entityId.high >>> 0).toNumber() : message.entityId;
                if (message.agencyId != null && message.hasOwnProperty("agencyId")) {
                    if (typeof message.agencyId === "number")
                        object.agencyId = options.longs === String ? String(message.agencyId) : message.agencyId;
                    else
                        object.agencyId = options.longs === String ? $util.Long.prototype.toString.call(message.agencyId) : options.longs === Number ? new $util.LongBits(message.agencyId.low >>> 0, message.agencyId.high >>> 0).toNumber() : message.agencyId;
                    if (options.oneofs)
                        object.buyerId = "agencyId";
                }
                if (message.advertiserId != null && message.hasOwnProperty("advertiserId")) {
                    if (typeof message.advertiserId === "number")
                        object.advertiserId = options.longs === String ? String(message.advertiserId) : message.advertiserId;
                    else
                        object.advertiserId = options.longs === String ? $util.Long.prototype.toString.call(message.advertiserId) : options.longs === Number ? new $util.LongBits(message.advertiserId.low >>> 0, message.advertiserId.high >>> 0).toNumber() : message.advertiserId;
                    if (options.oneofs)
                        object.buyerId = "advertiserId";
                }
                if (message.canSetMultiplePixels != null && message.hasOwnProperty("canSetMultiplePixels"))
                    object.canSetMultiplePixels = message.canSetMultiplePixels;
                if (message.fee != null && message.hasOwnProperty("fee"))
                    object.fee = options.json && !isFinite(message.fee) ? String(message.fee) : message.fee;
                if (message.seatName != null && message.hasOwnProperty("seatName"))
                    object.seatName = message.seatName;
                if (message.multipleSeatsReason != null && message.hasOwnProperty("multipleSeatsReason"))
                    object.multipleSeatsReason = message.multipleSeatsReason;
                return object;
            };

            /**
             * Converts this CreateIoBuyerSeatForEntityRequest to JSON.
             * @function toJSON
             * @memberof teads.api.CreateIoBuyerSeatForEntityRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CreateIoBuyerSeatForEntityRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CreateIoBuyerSeatForEntityRequest
             * @function getTypeUrl
             * @memberof teads.api.CreateIoBuyerSeatForEntityRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CreateIoBuyerSeatForEntityRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.CreateIoBuyerSeatForEntityRequest";
            };

            return CreateIoBuyerSeatForEntityRequest;
        })();

        api.CreateIoBuyerSeatForEntityResponse = (function() {

            /**
             * Properties of a CreateIoBuyerSeatForEntityResponse.
             * @memberof teads.api
             * @interface ICreateIoBuyerSeatForEntityResponse
             * @property {number} seatId CreateIoBuyerSeatForEntityResponse seatId
             */

            /**
             * Constructs a new CreateIoBuyerSeatForEntityResponse.
             * @memberof teads.api
             * @classdesc Represents a CreateIoBuyerSeatForEntityResponse.
             * @implements ICreateIoBuyerSeatForEntityResponse
             * @constructor
             * @param {teads.api.ICreateIoBuyerSeatForEntityResponse=} [properties] Properties to set
             */
            function CreateIoBuyerSeatForEntityResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CreateIoBuyerSeatForEntityResponse seatId.
             * @member {number} seatId
             * @memberof teads.api.CreateIoBuyerSeatForEntityResponse
             * @instance
             */
            CreateIoBuyerSeatForEntityResponse.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new CreateIoBuyerSeatForEntityResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.CreateIoBuyerSeatForEntityResponse
             * @static
             * @param {teads.api.ICreateIoBuyerSeatForEntityResponse=} [properties] Properties to set
             * @returns {teads.api.CreateIoBuyerSeatForEntityResponse} CreateIoBuyerSeatForEntityResponse instance
             */
            CreateIoBuyerSeatForEntityResponse.create = function create(properties) {
                return new CreateIoBuyerSeatForEntityResponse(properties);
            };

            /**
             * Encodes the specified CreateIoBuyerSeatForEntityResponse message. Does not implicitly {@link teads.api.CreateIoBuyerSeatForEntityResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.CreateIoBuyerSeatForEntityResponse
             * @static
             * @param {teads.api.ICreateIoBuyerSeatForEntityResponse} message CreateIoBuyerSeatForEntityResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateIoBuyerSeatForEntityResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seatId);
                return writer;
            };

            /**
             * Encodes the specified CreateIoBuyerSeatForEntityResponse message, length delimited. Does not implicitly {@link teads.api.CreateIoBuyerSeatForEntityResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.CreateIoBuyerSeatForEntityResponse
             * @static
             * @param {teads.api.ICreateIoBuyerSeatForEntityResponse} message CreateIoBuyerSeatForEntityResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateIoBuyerSeatForEntityResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CreateIoBuyerSeatForEntityResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.CreateIoBuyerSeatForEntityResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.CreateIoBuyerSeatForEntityResponse} CreateIoBuyerSeatForEntityResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateIoBuyerSeatForEntityResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.CreateIoBuyerSeatForEntityResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.seatId = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("seatId"))
                    throw $util.ProtocolError("missing required 'seatId'", { instance: message });
                return message;
            };

            /**
             * Decodes a CreateIoBuyerSeatForEntityResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.CreateIoBuyerSeatForEntityResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.CreateIoBuyerSeatForEntityResponse} CreateIoBuyerSeatForEntityResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateIoBuyerSeatForEntityResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CreateIoBuyerSeatForEntityResponse message.
             * @function verify
             * @memberof teads.api.CreateIoBuyerSeatForEntityResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CreateIoBuyerSeatForEntityResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                    return "seatId: integer|Long expected";
                return null;
            };

            /**
             * Creates a CreateIoBuyerSeatForEntityResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.CreateIoBuyerSeatForEntityResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.CreateIoBuyerSeatForEntityResponse} CreateIoBuyerSeatForEntityResponse
             */
            CreateIoBuyerSeatForEntityResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.CreateIoBuyerSeatForEntityResponse)
                    return object;
                var message = new $root.teads.api.CreateIoBuyerSeatForEntityResponse();
                if (object.seatId != null)
                    if ($util.Long)
                        (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                    else if (typeof object.seatId === "string")
                        message.seatId = parseInt(object.seatId, 10);
                    else if (typeof object.seatId === "number")
                        message.seatId = object.seatId;
                    else if (typeof object.seatId === "object")
                        message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from a CreateIoBuyerSeatForEntityResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.CreateIoBuyerSeatForEntityResponse
             * @static
             * @param {teads.api.CreateIoBuyerSeatForEntityResponse} message CreateIoBuyerSeatForEntityResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CreateIoBuyerSeatForEntityResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seatId = options.longs === String ? "0" : 0;
                if (message.seatId != null && message.hasOwnProperty("seatId"))
                    if (typeof message.seatId === "number")
                        object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                    else
                        object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                return object;
            };

            /**
             * Converts this CreateIoBuyerSeatForEntityResponse to JSON.
             * @function toJSON
             * @memberof teads.api.CreateIoBuyerSeatForEntityResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CreateIoBuyerSeatForEntityResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CreateIoBuyerSeatForEntityResponse
             * @function getTypeUrl
             * @memberof teads.api.CreateIoBuyerSeatForEntityResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CreateIoBuyerSeatForEntityResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.CreateIoBuyerSeatForEntityResponse";
            };

            return CreateIoBuyerSeatForEntityResponse;
        })();

        api.CreateManagedBuyerSeatForEntityRequest = (function() {

            /**
             * Properties of a CreateManagedBuyerSeatForEntityRequest.
             * @memberof teads.api
             * @interface ICreateManagedBuyerSeatForEntityRequest
             * @property {teads.api.ISecurityContext} securityContext CreateManagedBuyerSeatForEntityRequest securityContext
             * @property {number} officeId CreateManagedBuyerSeatForEntityRequest officeId
             * @property {number} entityId CreateManagedBuyerSeatForEntityRequest entityId
             * @property {teads.api.MsaType} msaType CreateManagedBuyerSeatForEntityRequest msaType
             * @property {number} managedFee CreateManagedBuyerSeatForEntityRequest managedFee
             * @property {number|null} [agencyId] CreateManagedBuyerSeatForEntityRequest agencyId
             * @property {number|null} [advertiserId] CreateManagedBuyerSeatForEntityRequest advertiserId
             * @property {string} salesforceContractId CreateManagedBuyerSeatForEntityRequest salesforceContractId
             * @property {string|null} [seatName] CreateManagedBuyerSeatForEntityRequest seatName
             * @property {string|null} [multipleSeatsReason] CreateManagedBuyerSeatForEntityRequest multipleSeatsReason
             */

            /**
             * Constructs a new CreateManagedBuyerSeatForEntityRequest.
             * @memberof teads.api
             * @classdesc Represents a CreateManagedBuyerSeatForEntityRequest.
             * @implements ICreateManagedBuyerSeatForEntityRequest
             * @constructor
             * @param {teads.api.ICreateManagedBuyerSeatForEntityRequest=} [properties] Properties to set
             */
            function CreateManagedBuyerSeatForEntityRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CreateManagedBuyerSeatForEntityRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.CreateManagedBuyerSeatForEntityRequest
             * @instance
             */
            CreateManagedBuyerSeatForEntityRequest.prototype.securityContext = null;

            /**
             * CreateManagedBuyerSeatForEntityRequest officeId.
             * @member {number} officeId
             * @memberof teads.api.CreateManagedBuyerSeatForEntityRequest
             * @instance
             */
            CreateManagedBuyerSeatForEntityRequest.prototype.officeId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * CreateManagedBuyerSeatForEntityRequest entityId.
             * @member {number} entityId
             * @memberof teads.api.CreateManagedBuyerSeatForEntityRequest
             * @instance
             */
            CreateManagedBuyerSeatForEntityRequest.prototype.entityId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * CreateManagedBuyerSeatForEntityRequest msaType.
             * @member {teads.api.MsaType} msaType
             * @memberof teads.api.CreateManagedBuyerSeatForEntityRequest
             * @instance
             */
            CreateManagedBuyerSeatForEntityRequest.prototype.msaType = 1;

            /**
             * CreateManagedBuyerSeatForEntityRequest managedFee.
             * @member {number} managedFee
             * @memberof teads.api.CreateManagedBuyerSeatForEntityRequest
             * @instance
             */
            CreateManagedBuyerSeatForEntityRequest.prototype.managedFee = 0;

            /**
             * CreateManagedBuyerSeatForEntityRequest agencyId.
             * @member {number|null|undefined} agencyId
             * @memberof teads.api.CreateManagedBuyerSeatForEntityRequest
             * @instance
             */
            CreateManagedBuyerSeatForEntityRequest.prototype.agencyId = null;

            /**
             * CreateManagedBuyerSeatForEntityRequest advertiserId.
             * @member {number|null|undefined} advertiserId
             * @memberof teads.api.CreateManagedBuyerSeatForEntityRequest
             * @instance
             */
            CreateManagedBuyerSeatForEntityRequest.prototype.advertiserId = null;

            /**
             * CreateManagedBuyerSeatForEntityRequest salesforceContractId.
             * @member {string} salesforceContractId
             * @memberof teads.api.CreateManagedBuyerSeatForEntityRequest
             * @instance
             */
            CreateManagedBuyerSeatForEntityRequest.prototype.salesforceContractId = "";

            /**
             * CreateManagedBuyerSeatForEntityRequest seatName.
             * @member {string} seatName
             * @memberof teads.api.CreateManagedBuyerSeatForEntityRequest
             * @instance
             */
            CreateManagedBuyerSeatForEntityRequest.prototype.seatName = "";

            /**
             * CreateManagedBuyerSeatForEntityRequest multipleSeatsReason.
             * @member {string} multipleSeatsReason
             * @memberof teads.api.CreateManagedBuyerSeatForEntityRequest
             * @instance
             */
            CreateManagedBuyerSeatForEntityRequest.prototype.multipleSeatsReason = "";

            // OneOf field names bound to virtual getters and setters
            var $oneOfFields;

            /**
             * CreateManagedBuyerSeatForEntityRequest buyerId.
             * @member {"agencyId"|"advertiserId"|undefined} buyerId
             * @memberof teads.api.CreateManagedBuyerSeatForEntityRequest
             * @instance
             */
            Object.defineProperty(CreateManagedBuyerSeatForEntityRequest.prototype, "buyerId", {
                get: $util.oneOfGetter($oneOfFields = ["agencyId", "advertiserId"]),
                set: $util.oneOfSetter($oneOfFields)
            });

            /**
             * Creates a new CreateManagedBuyerSeatForEntityRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.CreateManagedBuyerSeatForEntityRequest
             * @static
             * @param {teads.api.ICreateManagedBuyerSeatForEntityRequest=} [properties] Properties to set
             * @returns {teads.api.CreateManagedBuyerSeatForEntityRequest} CreateManagedBuyerSeatForEntityRequest instance
             */
            CreateManagedBuyerSeatForEntityRequest.create = function create(properties) {
                return new CreateManagedBuyerSeatForEntityRequest(properties);
            };

            /**
             * Encodes the specified CreateManagedBuyerSeatForEntityRequest message. Does not implicitly {@link teads.api.CreateManagedBuyerSeatForEntityRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.CreateManagedBuyerSeatForEntityRequest
             * @static
             * @param {teads.api.ICreateManagedBuyerSeatForEntityRequest} message CreateManagedBuyerSeatForEntityRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateManagedBuyerSeatForEntityRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.officeId);
                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.entityId);
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.msaType);
                writer.uint32(/* id 5, wireType 1 =*/41).double(message.managedFee);
                if (message.agencyId != null && Object.hasOwnProperty.call(message, "agencyId"))
                    writer.uint32(/* id 6, wireType 0 =*/48).int64(message.agencyId);
                if (message.advertiserId != null && Object.hasOwnProperty.call(message, "advertiserId"))
                    writer.uint32(/* id 7, wireType 0 =*/56).int64(message.advertiserId);
                writer.uint32(/* id 8, wireType 2 =*/66).string(message.salesforceContractId);
                if (message.seatName != null && Object.hasOwnProperty.call(message, "seatName"))
                    writer.uint32(/* id 9, wireType 2 =*/74).string(message.seatName);
                if (message.multipleSeatsReason != null && Object.hasOwnProperty.call(message, "multipleSeatsReason"))
                    writer.uint32(/* id 10, wireType 2 =*/82).string(message.multipleSeatsReason);
                return writer;
            };

            /**
             * Encodes the specified CreateManagedBuyerSeatForEntityRequest message, length delimited. Does not implicitly {@link teads.api.CreateManagedBuyerSeatForEntityRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.CreateManagedBuyerSeatForEntityRequest
             * @static
             * @param {teads.api.ICreateManagedBuyerSeatForEntityRequest} message CreateManagedBuyerSeatForEntityRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateManagedBuyerSeatForEntityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CreateManagedBuyerSeatForEntityRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.CreateManagedBuyerSeatForEntityRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.CreateManagedBuyerSeatForEntityRequest} CreateManagedBuyerSeatForEntityRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateManagedBuyerSeatForEntityRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.CreateManagedBuyerSeatForEntityRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.officeId = reader.int64();
                            break;
                        }
                    case 3: {
                            message.entityId = reader.int64();
                            break;
                        }
                    case 4: {
                            message.msaType = reader.int32();
                            break;
                        }
                    case 5: {
                            message.managedFee = reader.double();
                            break;
                        }
                    case 6: {
                            message.agencyId = reader.int64();
                            break;
                        }
                    case 7: {
                            message.advertiserId = reader.int64();
                            break;
                        }
                    case 8: {
                            message.salesforceContractId = reader.string();
                            break;
                        }
                    case 9: {
                            message.seatName = reader.string();
                            break;
                        }
                    case 10: {
                            message.multipleSeatsReason = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("officeId"))
                    throw $util.ProtocolError("missing required 'officeId'", { instance: message });
                if (!message.hasOwnProperty("entityId"))
                    throw $util.ProtocolError("missing required 'entityId'", { instance: message });
                if (!message.hasOwnProperty("msaType"))
                    throw $util.ProtocolError("missing required 'msaType'", { instance: message });
                if (!message.hasOwnProperty("managedFee"))
                    throw $util.ProtocolError("missing required 'managedFee'", { instance: message });
                if (!message.hasOwnProperty("salesforceContractId"))
                    throw $util.ProtocolError("missing required 'salesforceContractId'", { instance: message });
                return message;
            };

            /**
             * Decodes a CreateManagedBuyerSeatForEntityRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.CreateManagedBuyerSeatForEntityRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.CreateManagedBuyerSeatForEntityRequest} CreateManagedBuyerSeatForEntityRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateManagedBuyerSeatForEntityRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CreateManagedBuyerSeatForEntityRequest message.
             * @function verify
             * @memberof teads.api.CreateManagedBuyerSeatForEntityRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CreateManagedBuyerSeatForEntityRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                var properties = {};
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.officeId) && !(message.officeId && $util.isInteger(message.officeId.low) && $util.isInteger(message.officeId.high)))
                    return "officeId: integer|Long expected";
                if (!$util.isInteger(message.entityId) && !(message.entityId && $util.isInteger(message.entityId.low) && $util.isInteger(message.entityId.high)))
                    return "entityId: integer|Long expected";
                switch (message.msaType) {
                default:
                    return "msaType: enum value expected";
                case 1:
                case 2:
                    break;
                }
                if (typeof message.managedFee !== "number")
                    return "managedFee: number expected";
                if (message.agencyId != null && message.hasOwnProperty("agencyId")) {
                    properties.buyerId = 1;
                    if (!$util.isInteger(message.agencyId) && !(message.agencyId && $util.isInteger(message.agencyId.low) && $util.isInteger(message.agencyId.high)))
                        return "agencyId: integer|Long expected";
                }
                if (message.advertiserId != null && message.hasOwnProperty("advertiserId")) {
                    if (properties.buyerId === 1)
                        return "buyerId: multiple values";
                    properties.buyerId = 1;
                    if (!$util.isInteger(message.advertiserId) && !(message.advertiserId && $util.isInteger(message.advertiserId.low) && $util.isInteger(message.advertiserId.high)))
                        return "advertiserId: integer|Long expected";
                }
                if (!$util.isString(message.salesforceContractId))
                    return "salesforceContractId: string expected";
                if (message.seatName != null && message.hasOwnProperty("seatName"))
                    if (!$util.isString(message.seatName))
                        return "seatName: string expected";
                if (message.multipleSeatsReason != null && message.hasOwnProperty("multipleSeatsReason"))
                    if (!$util.isString(message.multipleSeatsReason))
                        return "multipleSeatsReason: string expected";
                return null;
            };

            /**
             * Creates a CreateManagedBuyerSeatForEntityRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.CreateManagedBuyerSeatForEntityRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.CreateManagedBuyerSeatForEntityRequest} CreateManagedBuyerSeatForEntityRequest
             */
            CreateManagedBuyerSeatForEntityRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.CreateManagedBuyerSeatForEntityRequest)
                    return object;
                var message = new $root.teads.api.CreateManagedBuyerSeatForEntityRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.CreateManagedBuyerSeatForEntityRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.officeId != null)
                    if ($util.Long)
                        (message.officeId = $util.Long.fromValue(object.officeId)).unsigned = false;
                    else if (typeof object.officeId === "string")
                        message.officeId = parseInt(object.officeId, 10);
                    else if (typeof object.officeId === "number")
                        message.officeId = object.officeId;
                    else if (typeof object.officeId === "object")
                        message.officeId = new $util.LongBits(object.officeId.low >>> 0, object.officeId.high >>> 0).toNumber();
                if (object.entityId != null)
                    if ($util.Long)
                        (message.entityId = $util.Long.fromValue(object.entityId)).unsigned = false;
                    else if (typeof object.entityId === "string")
                        message.entityId = parseInt(object.entityId, 10);
                    else if (typeof object.entityId === "number")
                        message.entityId = object.entityId;
                    else if (typeof object.entityId === "object")
                        message.entityId = new $util.LongBits(object.entityId.low >>> 0, object.entityId.high >>> 0).toNumber();
                switch (object.msaType) {
                default:
                    if (typeof object.msaType === "number") {
                        message.msaType = object.msaType;
                        break;
                    }
                    break;
                case "MSA_TYPE_DIGITAL":
                case 1:
                    message.msaType = 1;
                    break;
                case "MSA_TYPE_PAPER":
                case 2:
                    message.msaType = 2;
                    break;
                }
                if (object.managedFee != null)
                    message.managedFee = Number(object.managedFee);
                if (object.agencyId != null)
                    if ($util.Long)
                        (message.agencyId = $util.Long.fromValue(object.agencyId)).unsigned = false;
                    else if (typeof object.agencyId === "string")
                        message.agencyId = parseInt(object.agencyId, 10);
                    else if (typeof object.agencyId === "number")
                        message.agencyId = object.agencyId;
                    else if (typeof object.agencyId === "object")
                        message.agencyId = new $util.LongBits(object.agencyId.low >>> 0, object.agencyId.high >>> 0).toNumber();
                if (object.advertiserId != null)
                    if ($util.Long)
                        (message.advertiserId = $util.Long.fromValue(object.advertiserId)).unsigned = false;
                    else if (typeof object.advertiserId === "string")
                        message.advertiserId = parseInt(object.advertiserId, 10);
                    else if (typeof object.advertiserId === "number")
                        message.advertiserId = object.advertiserId;
                    else if (typeof object.advertiserId === "object")
                        message.advertiserId = new $util.LongBits(object.advertiserId.low >>> 0, object.advertiserId.high >>> 0).toNumber();
                if (object.salesforceContractId != null)
                    message.salesforceContractId = String(object.salesforceContractId);
                if (object.seatName != null)
                    message.seatName = String(object.seatName);
                if (object.multipleSeatsReason != null)
                    message.multipleSeatsReason = String(object.multipleSeatsReason);
                return message;
            };

            /**
             * Creates a plain object from a CreateManagedBuyerSeatForEntityRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.CreateManagedBuyerSeatForEntityRequest
             * @static
             * @param {teads.api.CreateManagedBuyerSeatForEntityRequest} message CreateManagedBuyerSeatForEntityRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CreateManagedBuyerSeatForEntityRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.officeId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.officeId = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.entityId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.entityId = options.longs === String ? "0" : 0;
                    object.msaType = options.enums === String ? "MSA_TYPE_DIGITAL" : 1;
                    object.managedFee = 0;
                    object.salesforceContractId = "";
                    object.seatName = "";
                    object.multipleSeatsReason = "";
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.officeId != null && message.hasOwnProperty("officeId"))
                    if (typeof message.officeId === "number")
                        object.officeId = options.longs === String ? String(message.officeId) : message.officeId;
                    else
                        object.officeId = options.longs === String ? $util.Long.prototype.toString.call(message.officeId) : options.longs === Number ? new $util.LongBits(message.officeId.low >>> 0, message.officeId.high >>> 0).toNumber() : message.officeId;
                if (message.entityId != null && message.hasOwnProperty("entityId"))
                    if (typeof message.entityId === "number")
                        object.entityId = options.longs === String ? String(message.entityId) : message.entityId;
                    else
                        object.entityId = options.longs === String ? $util.Long.prototype.toString.call(message.entityId) : options.longs === Number ? new $util.LongBits(message.entityId.low >>> 0, message.entityId.high >>> 0).toNumber() : message.entityId;
                if (message.msaType != null && message.hasOwnProperty("msaType"))
                    object.msaType = options.enums === String ? $root.teads.api.MsaType[message.msaType] === undefined ? message.msaType : $root.teads.api.MsaType[message.msaType] : message.msaType;
                if (message.managedFee != null && message.hasOwnProperty("managedFee"))
                    object.managedFee = options.json && !isFinite(message.managedFee) ? String(message.managedFee) : message.managedFee;
                if (message.agencyId != null && message.hasOwnProperty("agencyId")) {
                    if (typeof message.agencyId === "number")
                        object.agencyId = options.longs === String ? String(message.agencyId) : message.agencyId;
                    else
                        object.agencyId = options.longs === String ? $util.Long.prototype.toString.call(message.agencyId) : options.longs === Number ? new $util.LongBits(message.agencyId.low >>> 0, message.agencyId.high >>> 0).toNumber() : message.agencyId;
                    if (options.oneofs)
                        object.buyerId = "agencyId";
                }
                if (message.advertiserId != null && message.hasOwnProperty("advertiserId")) {
                    if (typeof message.advertiserId === "number")
                        object.advertiserId = options.longs === String ? String(message.advertiserId) : message.advertiserId;
                    else
                        object.advertiserId = options.longs === String ? $util.Long.prototype.toString.call(message.advertiserId) : options.longs === Number ? new $util.LongBits(message.advertiserId.low >>> 0, message.advertiserId.high >>> 0).toNumber() : message.advertiserId;
                    if (options.oneofs)
                        object.buyerId = "advertiserId";
                }
                if (message.salesforceContractId != null && message.hasOwnProperty("salesforceContractId"))
                    object.salesforceContractId = message.salesforceContractId;
                if (message.seatName != null && message.hasOwnProperty("seatName"))
                    object.seatName = message.seatName;
                if (message.multipleSeatsReason != null && message.hasOwnProperty("multipleSeatsReason"))
                    object.multipleSeatsReason = message.multipleSeatsReason;
                return object;
            };

            /**
             * Converts this CreateManagedBuyerSeatForEntityRequest to JSON.
             * @function toJSON
             * @memberof teads.api.CreateManagedBuyerSeatForEntityRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CreateManagedBuyerSeatForEntityRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CreateManagedBuyerSeatForEntityRequest
             * @function getTypeUrl
             * @memberof teads.api.CreateManagedBuyerSeatForEntityRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CreateManagedBuyerSeatForEntityRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.CreateManagedBuyerSeatForEntityRequest";
            };

            return CreateManagedBuyerSeatForEntityRequest;
        })();

        api.CreateManagedBuyerSeatForEntityResponse = (function() {

            /**
             * Properties of a CreateManagedBuyerSeatForEntityResponse.
             * @memberof teads.api
             * @interface ICreateManagedBuyerSeatForEntityResponse
             * @property {number} seatId CreateManagedBuyerSeatForEntityResponse seatId
             */

            /**
             * Constructs a new CreateManagedBuyerSeatForEntityResponse.
             * @memberof teads.api
             * @classdesc Represents a CreateManagedBuyerSeatForEntityResponse.
             * @implements ICreateManagedBuyerSeatForEntityResponse
             * @constructor
             * @param {teads.api.ICreateManagedBuyerSeatForEntityResponse=} [properties] Properties to set
             */
            function CreateManagedBuyerSeatForEntityResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CreateManagedBuyerSeatForEntityResponse seatId.
             * @member {number} seatId
             * @memberof teads.api.CreateManagedBuyerSeatForEntityResponse
             * @instance
             */
            CreateManagedBuyerSeatForEntityResponse.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new CreateManagedBuyerSeatForEntityResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.CreateManagedBuyerSeatForEntityResponse
             * @static
             * @param {teads.api.ICreateManagedBuyerSeatForEntityResponse=} [properties] Properties to set
             * @returns {teads.api.CreateManagedBuyerSeatForEntityResponse} CreateManagedBuyerSeatForEntityResponse instance
             */
            CreateManagedBuyerSeatForEntityResponse.create = function create(properties) {
                return new CreateManagedBuyerSeatForEntityResponse(properties);
            };

            /**
             * Encodes the specified CreateManagedBuyerSeatForEntityResponse message. Does not implicitly {@link teads.api.CreateManagedBuyerSeatForEntityResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.CreateManagedBuyerSeatForEntityResponse
             * @static
             * @param {teads.api.ICreateManagedBuyerSeatForEntityResponse} message CreateManagedBuyerSeatForEntityResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateManagedBuyerSeatForEntityResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seatId);
                return writer;
            };

            /**
             * Encodes the specified CreateManagedBuyerSeatForEntityResponse message, length delimited. Does not implicitly {@link teads.api.CreateManagedBuyerSeatForEntityResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.CreateManagedBuyerSeatForEntityResponse
             * @static
             * @param {teads.api.ICreateManagedBuyerSeatForEntityResponse} message CreateManagedBuyerSeatForEntityResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateManagedBuyerSeatForEntityResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CreateManagedBuyerSeatForEntityResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.CreateManagedBuyerSeatForEntityResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.CreateManagedBuyerSeatForEntityResponse} CreateManagedBuyerSeatForEntityResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateManagedBuyerSeatForEntityResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.CreateManagedBuyerSeatForEntityResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.seatId = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("seatId"))
                    throw $util.ProtocolError("missing required 'seatId'", { instance: message });
                return message;
            };

            /**
             * Decodes a CreateManagedBuyerSeatForEntityResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.CreateManagedBuyerSeatForEntityResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.CreateManagedBuyerSeatForEntityResponse} CreateManagedBuyerSeatForEntityResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateManagedBuyerSeatForEntityResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CreateManagedBuyerSeatForEntityResponse message.
             * @function verify
             * @memberof teads.api.CreateManagedBuyerSeatForEntityResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CreateManagedBuyerSeatForEntityResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                    return "seatId: integer|Long expected";
                return null;
            };

            /**
             * Creates a CreateManagedBuyerSeatForEntityResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.CreateManagedBuyerSeatForEntityResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.CreateManagedBuyerSeatForEntityResponse} CreateManagedBuyerSeatForEntityResponse
             */
            CreateManagedBuyerSeatForEntityResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.CreateManagedBuyerSeatForEntityResponse)
                    return object;
                var message = new $root.teads.api.CreateManagedBuyerSeatForEntityResponse();
                if (object.seatId != null)
                    if ($util.Long)
                        (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                    else if (typeof object.seatId === "string")
                        message.seatId = parseInt(object.seatId, 10);
                    else if (typeof object.seatId === "number")
                        message.seatId = object.seatId;
                    else if (typeof object.seatId === "object")
                        message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from a CreateManagedBuyerSeatForEntityResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.CreateManagedBuyerSeatForEntityResponse
             * @static
             * @param {teads.api.CreateManagedBuyerSeatForEntityResponse} message CreateManagedBuyerSeatForEntityResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CreateManagedBuyerSeatForEntityResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seatId = options.longs === String ? "0" : 0;
                if (message.seatId != null && message.hasOwnProperty("seatId"))
                    if (typeof message.seatId === "number")
                        object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                    else
                        object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                return object;
            };

            /**
             * Converts this CreateManagedBuyerSeatForEntityResponse to JSON.
             * @function toJSON
             * @memberof teads.api.CreateManagedBuyerSeatForEntityResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CreateManagedBuyerSeatForEntityResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CreateManagedBuyerSeatForEntityResponse
             * @function getTypeUrl
             * @memberof teads.api.CreateManagedBuyerSeatForEntityResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CreateManagedBuyerSeatForEntityResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.CreateManagedBuyerSeatForEntityResponse";
            };

            return CreateManagedBuyerSeatForEntityResponse;
        })();

        api.CreateSelfServedBuyerSeatForEntityRequest = (function() {

            /**
             * Properties of a CreateSelfServedBuyerSeatForEntityRequest.
             * @memberof teads.api
             * @interface ICreateSelfServedBuyerSeatForEntityRequest
             * @property {teads.api.ISecurityContext} securityContext CreateSelfServedBuyerSeatForEntityRequest securityContext
             * @property {number} officeId CreateSelfServedBuyerSeatForEntityRequest officeId
             * @property {number} entityId CreateSelfServedBuyerSeatForEntityRequest entityId
             * @property {teads.api.MsaType} msaType CreateSelfServedBuyerSeatForEntityRequest msaType
             * @property {number} platformFee CreateSelfServedBuyerSeatForEntityRequest platformFee
             * @property {number|null} [agencyId] CreateSelfServedBuyerSeatForEntityRequest agencyId
             * @property {number|null} [advertiserId] CreateSelfServedBuyerSeatForEntityRequest advertiserId
             * @property {string} salesforceContractId CreateSelfServedBuyerSeatForEntityRequest salesforceContractId
             * @property {string|null} [seatName] CreateSelfServedBuyerSeatForEntityRequest seatName
             * @property {string|null} [multipleSeatsReason] CreateSelfServedBuyerSeatForEntityRequest multipleSeatsReason
             */

            /**
             * Constructs a new CreateSelfServedBuyerSeatForEntityRequest.
             * @memberof teads.api
             * @classdesc Represents a CreateSelfServedBuyerSeatForEntityRequest.
             * @implements ICreateSelfServedBuyerSeatForEntityRequest
             * @constructor
             * @param {teads.api.ICreateSelfServedBuyerSeatForEntityRequest=} [properties] Properties to set
             */
            function CreateSelfServedBuyerSeatForEntityRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CreateSelfServedBuyerSeatForEntityRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityRequest
             * @instance
             */
            CreateSelfServedBuyerSeatForEntityRequest.prototype.securityContext = null;

            /**
             * CreateSelfServedBuyerSeatForEntityRequest officeId.
             * @member {number} officeId
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityRequest
             * @instance
             */
            CreateSelfServedBuyerSeatForEntityRequest.prototype.officeId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * CreateSelfServedBuyerSeatForEntityRequest entityId.
             * @member {number} entityId
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityRequest
             * @instance
             */
            CreateSelfServedBuyerSeatForEntityRequest.prototype.entityId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * CreateSelfServedBuyerSeatForEntityRequest msaType.
             * @member {teads.api.MsaType} msaType
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityRequest
             * @instance
             */
            CreateSelfServedBuyerSeatForEntityRequest.prototype.msaType = 1;

            /**
             * CreateSelfServedBuyerSeatForEntityRequest platformFee.
             * @member {number} platformFee
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityRequest
             * @instance
             */
            CreateSelfServedBuyerSeatForEntityRequest.prototype.platformFee = 0;

            /**
             * CreateSelfServedBuyerSeatForEntityRequest agencyId.
             * @member {number|null|undefined} agencyId
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityRequest
             * @instance
             */
            CreateSelfServedBuyerSeatForEntityRequest.prototype.agencyId = null;

            /**
             * CreateSelfServedBuyerSeatForEntityRequest advertiserId.
             * @member {number|null|undefined} advertiserId
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityRequest
             * @instance
             */
            CreateSelfServedBuyerSeatForEntityRequest.prototype.advertiserId = null;

            /**
             * CreateSelfServedBuyerSeatForEntityRequest salesforceContractId.
             * @member {string} salesforceContractId
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityRequest
             * @instance
             */
            CreateSelfServedBuyerSeatForEntityRequest.prototype.salesforceContractId = "";

            /**
             * CreateSelfServedBuyerSeatForEntityRequest seatName.
             * @member {string} seatName
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityRequest
             * @instance
             */
            CreateSelfServedBuyerSeatForEntityRequest.prototype.seatName = "";

            /**
             * CreateSelfServedBuyerSeatForEntityRequest multipleSeatsReason.
             * @member {string} multipleSeatsReason
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityRequest
             * @instance
             */
            CreateSelfServedBuyerSeatForEntityRequest.prototype.multipleSeatsReason = "";

            // OneOf field names bound to virtual getters and setters
            var $oneOfFields;

            /**
             * CreateSelfServedBuyerSeatForEntityRequest buyerId.
             * @member {"agencyId"|"advertiserId"|undefined} buyerId
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityRequest
             * @instance
             */
            Object.defineProperty(CreateSelfServedBuyerSeatForEntityRequest.prototype, "buyerId", {
                get: $util.oneOfGetter($oneOfFields = ["agencyId", "advertiserId"]),
                set: $util.oneOfSetter($oneOfFields)
            });

            /**
             * Creates a new CreateSelfServedBuyerSeatForEntityRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityRequest
             * @static
             * @param {teads.api.ICreateSelfServedBuyerSeatForEntityRequest=} [properties] Properties to set
             * @returns {teads.api.CreateSelfServedBuyerSeatForEntityRequest} CreateSelfServedBuyerSeatForEntityRequest instance
             */
            CreateSelfServedBuyerSeatForEntityRequest.create = function create(properties) {
                return new CreateSelfServedBuyerSeatForEntityRequest(properties);
            };

            /**
             * Encodes the specified CreateSelfServedBuyerSeatForEntityRequest message. Does not implicitly {@link teads.api.CreateSelfServedBuyerSeatForEntityRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityRequest
             * @static
             * @param {teads.api.ICreateSelfServedBuyerSeatForEntityRequest} message CreateSelfServedBuyerSeatForEntityRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateSelfServedBuyerSeatForEntityRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.officeId);
                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.entityId);
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.msaType);
                writer.uint32(/* id 5, wireType 1 =*/41).double(message.platformFee);
                if (message.agencyId != null && Object.hasOwnProperty.call(message, "agencyId"))
                    writer.uint32(/* id 6, wireType 0 =*/48).int64(message.agencyId);
                if (message.advertiserId != null && Object.hasOwnProperty.call(message, "advertiserId"))
                    writer.uint32(/* id 7, wireType 0 =*/56).int64(message.advertiserId);
                writer.uint32(/* id 8, wireType 2 =*/66).string(message.salesforceContractId);
                if (message.seatName != null && Object.hasOwnProperty.call(message, "seatName"))
                    writer.uint32(/* id 9, wireType 2 =*/74).string(message.seatName);
                if (message.multipleSeatsReason != null && Object.hasOwnProperty.call(message, "multipleSeatsReason"))
                    writer.uint32(/* id 10, wireType 2 =*/82).string(message.multipleSeatsReason);
                return writer;
            };

            /**
             * Encodes the specified CreateSelfServedBuyerSeatForEntityRequest message, length delimited. Does not implicitly {@link teads.api.CreateSelfServedBuyerSeatForEntityRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityRequest
             * @static
             * @param {teads.api.ICreateSelfServedBuyerSeatForEntityRequest} message CreateSelfServedBuyerSeatForEntityRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateSelfServedBuyerSeatForEntityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CreateSelfServedBuyerSeatForEntityRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.CreateSelfServedBuyerSeatForEntityRequest} CreateSelfServedBuyerSeatForEntityRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateSelfServedBuyerSeatForEntityRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.CreateSelfServedBuyerSeatForEntityRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.officeId = reader.int64();
                            break;
                        }
                    case 3: {
                            message.entityId = reader.int64();
                            break;
                        }
                    case 4: {
                            message.msaType = reader.int32();
                            break;
                        }
                    case 5: {
                            message.platformFee = reader.double();
                            break;
                        }
                    case 6: {
                            message.agencyId = reader.int64();
                            break;
                        }
                    case 7: {
                            message.advertiserId = reader.int64();
                            break;
                        }
                    case 8: {
                            message.salesforceContractId = reader.string();
                            break;
                        }
                    case 9: {
                            message.seatName = reader.string();
                            break;
                        }
                    case 10: {
                            message.multipleSeatsReason = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("officeId"))
                    throw $util.ProtocolError("missing required 'officeId'", { instance: message });
                if (!message.hasOwnProperty("entityId"))
                    throw $util.ProtocolError("missing required 'entityId'", { instance: message });
                if (!message.hasOwnProperty("msaType"))
                    throw $util.ProtocolError("missing required 'msaType'", { instance: message });
                if (!message.hasOwnProperty("platformFee"))
                    throw $util.ProtocolError("missing required 'platformFee'", { instance: message });
                if (!message.hasOwnProperty("salesforceContractId"))
                    throw $util.ProtocolError("missing required 'salesforceContractId'", { instance: message });
                return message;
            };

            /**
             * Decodes a CreateSelfServedBuyerSeatForEntityRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.CreateSelfServedBuyerSeatForEntityRequest} CreateSelfServedBuyerSeatForEntityRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateSelfServedBuyerSeatForEntityRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CreateSelfServedBuyerSeatForEntityRequest message.
             * @function verify
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CreateSelfServedBuyerSeatForEntityRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                var properties = {};
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.officeId) && !(message.officeId && $util.isInteger(message.officeId.low) && $util.isInteger(message.officeId.high)))
                    return "officeId: integer|Long expected";
                if (!$util.isInteger(message.entityId) && !(message.entityId && $util.isInteger(message.entityId.low) && $util.isInteger(message.entityId.high)))
                    return "entityId: integer|Long expected";
                switch (message.msaType) {
                default:
                    return "msaType: enum value expected";
                case 1:
                case 2:
                    break;
                }
                if (typeof message.platformFee !== "number")
                    return "platformFee: number expected";
                if (message.agencyId != null && message.hasOwnProperty("agencyId")) {
                    properties.buyerId = 1;
                    if (!$util.isInteger(message.agencyId) && !(message.agencyId && $util.isInteger(message.agencyId.low) && $util.isInteger(message.agencyId.high)))
                        return "agencyId: integer|Long expected";
                }
                if (message.advertiserId != null && message.hasOwnProperty("advertiserId")) {
                    if (properties.buyerId === 1)
                        return "buyerId: multiple values";
                    properties.buyerId = 1;
                    if (!$util.isInteger(message.advertiserId) && !(message.advertiserId && $util.isInteger(message.advertiserId.low) && $util.isInteger(message.advertiserId.high)))
                        return "advertiserId: integer|Long expected";
                }
                if (!$util.isString(message.salesforceContractId))
                    return "salesforceContractId: string expected";
                if (message.seatName != null && message.hasOwnProperty("seatName"))
                    if (!$util.isString(message.seatName))
                        return "seatName: string expected";
                if (message.multipleSeatsReason != null && message.hasOwnProperty("multipleSeatsReason"))
                    if (!$util.isString(message.multipleSeatsReason))
                        return "multipleSeatsReason: string expected";
                return null;
            };

            /**
             * Creates a CreateSelfServedBuyerSeatForEntityRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.CreateSelfServedBuyerSeatForEntityRequest} CreateSelfServedBuyerSeatForEntityRequest
             */
            CreateSelfServedBuyerSeatForEntityRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.CreateSelfServedBuyerSeatForEntityRequest)
                    return object;
                var message = new $root.teads.api.CreateSelfServedBuyerSeatForEntityRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.CreateSelfServedBuyerSeatForEntityRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.officeId != null)
                    if ($util.Long)
                        (message.officeId = $util.Long.fromValue(object.officeId)).unsigned = false;
                    else if (typeof object.officeId === "string")
                        message.officeId = parseInt(object.officeId, 10);
                    else if (typeof object.officeId === "number")
                        message.officeId = object.officeId;
                    else if (typeof object.officeId === "object")
                        message.officeId = new $util.LongBits(object.officeId.low >>> 0, object.officeId.high >>> 0).toNumber();
                if (object.entityId != null)
                    if ($util.Long)
                        (message.entityId = $util.Long.fromValue(object.entityId)).unsigned = false;
                    else if (typeof object.entityId === "string")
                        message.entityId = parseInt(object.entityId, 10);
                    else if (typeof object.entityId === "number")
                        message.entityId = object.entityId;
                    else if (typeof object.entityId === "object")
                        message.entityId = new $util.LongBits(object.entityId.low >>> 0, object.entityId.high >>> 0).toNumber();
                switch (object.msaType) {
                default:
                    if (typeof object.msaType === "number") {
                        message.msaType = object.msaType;
                        break;
                    }
                    break;
                case "MSA_TYPE_DIGITAL":
                case 1:
                    message.msaType = 1;
                    break;
                case "MSA_TYPE_PAPER":
                case 2:
                    message.msaType = 2;
                    break;
                }
                if (object.platformFee != null)
                    message.platformFee = Number(object.platformFee);
                if (object.agencyId != null)
                    if ($util.Long)
                        (message.agencyId = $util.Long.fromValue(object.agencyId)).unsigned = false;
                    else if (typeof object.agencyId === "string")
                        message.agencyId = parseInt(object.agencyId, 10);
                    else if (typeof object.agencyId === "number")
                        message.agencyId = object.agencyId;
                    else if (typeof object.agencyId === "object")
                        message.agencyId = new $util.LongBits(object.agencyId.low >>> 0, object.agencyId.high >>> 0).toNumber();
                if (object.advertiserId != null)
                    if ($util.Long)
                        (message.advertiserId = $util.Long.fromValue(object.advertiserId)).unsigned = false;
                    else if (typeof object.advertiserId === "string")
                        message.advertiserId = parseInt(object.advertiserId, 10);
                    else if (typeof object.advertiserId === "number")
                        message.advertiserId = object.advertiserId;
                    else if (typeof object.advertiserId === "object")
                        message.advertiserId = new $util.LongBits(object.advertiserId.low >>> 0, object.advertiserId.high >>> 0).toNumber();
                if (object.salesforceContractId != null)
                    message.salesforceContractId = String(object.salesforceContractId);
                if (object.seatName != null)
                    message.seatName = String(object.seatName);
                if (object.multipleSeatsReason != null)
                    message.multipleSeatsReason = String(object.multipleSeatsReason);
                return message;
            };

            /**
             * Creates a plain object from a CreateSelfServedBuyerSeatForEntityRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityRequest
             * @static
             * @param {teads.api.CreateSelfServedBuyerSeatForEntityRequest} message CreateSelfServedBuyerSeatForEntityRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CreateSelfServedBuyerSeatForEntityRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.officeId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.officeId = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.entityId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.entityId = options.longs === String ? "0" : 0;
                    object.msaType = options.enums === String ? "MSA_TYPE_DIGITAL" : 1;
                    object.platformFee = 0;
                    object.salesforceContractId = "";
                    object.seatName = "";
                    object.multipleSeatsReason = "";
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.officeId != null && message.hasOwnProperty("officeId"))
                    if (typeof message.officeId === "number")
                        object.officeId = options.longs === String ? String(message.officeId) : message.officeId;
                    else
                        object.officeId = options.longs === String ? $util.Long.prototype.toString.call(message.officeId) : options.longs === Number ? new $util.LongBits(message.officeId.low >>> 0, message.officeId.high >>> 0).toNumber() : message.officeId;
                if (message.entityId != null && message.hasOwnProperty("entityId"))
                    if (typeof message.entityId === "number")
                        object.entityId = options.longs === String ? String(message.entityId) : message.entityId;
                    else
                        object.entityId = options.longs === String ? $util.Long.prototype.toString.call(message.entityId) : options.longs === Number ? new $util.LongBits(message.entityId.low >>> 0, message.entityId.high >>> 0).toNumber() : message.entityId;
                if (message.msaType != null && message.hasOwnProperty("msaType"))
                    object.msaType = options.enums === String ? $root.teads.api.MsaType[message.msaType] === undefined ? message.msaType : $root.teads.api.MsaType[message.msaType] : message.msaType;
                if (message.platformFee != null && message.hasOwnProperty("platformFee"))
                    object.platformFee = options.json && !isFinite(message.platformFee) ? String(message.platformFee) : message.platformFee;
                if (message.agencyId != null && message.hasOwnProperty("agencyId")) {
                    if (typeof message.agencyId === "number")
                        object.agencyId = options.longs === String ? String(message.agencyId) : message.agencyId;
                    else
                        object.agencyId = options.longs === String ? $util.Long.prototype.toString.call(message.agencyId) : options.longs === Number ? new $util.LongBits(message.agencyId.low >>> 0, message.agencyId.high >>> 0).toNumber() : message.agencyId;
                    if (options.oneofs)
                        object.buyerId = "agencyId";
                }
                if (message.advertiserId != null && message.hasOwnProperty("advertiserId")) {
                    if (typeof message.advertiserId === "number")
                        object.advertiserId = options.longs === String ? String(message.advertiserId) : message.advertiserId;
                    else
                        object.advertiserId = options.longs === String ? $util.Long.prototype.toString.call(message.advertiserId) : options.longs === Number ? new $util.LongBits(message.advertiserId.low >>> 0, message.advertiserId.high >>> 0).toNumber() : message.advertiserId;
                    if (options.oneofs)
                        object.buyerId = "advertiserId";
                }
                if (message.salesforceContractId != null && message.hasOwnProperty("salesforceContractId"))
                    object.salesforceContractId = message.salesforceContractId;
                if (message.seatName != null && message.hasOwnProperty("seatName"))
                    object.seatName = message.seatName;
                if (message.multipleSeatsReason != null && message.hasOwnProperty("multipleSeatsReason"))
                    object.multipleSeatsReason = message.multipleSeatsReason;
                return object;
            };

            /**
             * Converts this CreateSelfServedBuyerSeatForEntityRequest to JSON.
             * @function toJSON
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CreateSelfServedBuyerSeatForEntityRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CreateSelfServedBuyerSeatForEntityRequest
             * @function getTypeUrl
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CreateSelfServedBuyerSeatForEntityRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.CreateSelfServedBuyerSeatForEntityRequest";
            };

            return CreateSelfServedBuyerSeatForEntityRequest;
        })();

        api.CreateSelfServedBuyerSeatForEntityResponse = (function() {

            /**
             * Properties of a CreateSelfServedBuyerSeatForEntityResponse.
             * @memberof teads.api
             * @interface ICreateSelfServedBuyerSeatForEntityResponse
             * @property {number} seatId CreateSelfServedBuyerSeatForEntityResponse seatId
             */

            /**
             * Constructs a new CreateSelfServedBuyerSeatForEntityResponse.
             * @memberof teads.api
             * @classdesc Represents a CreateSelfServedBuyerSeatForEntityResponse.
             * @implements ICreateSelfServedBuyerSeatForEntityResponse
             * @constructor
             * @param {teads.api.ICreateSelfServedBuyerSeatForEntityResponse=} [properties] Properties to set
             */
            function CreateSelfServedBuyerSeatForEntityResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * CreateSelfServedBuyerSeatForEntityResponse seatId.
             * @member {number} seatId
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityResponse
             * @instance
             */
            CreateSelfServedBuyerSeatForEntityResponse.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new CreateSelfServedBuyerSeatForEntityResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityResponse
             * @static
             * @param {teads.api.ICreateSelfServedBuyerSeatForEntityResponse=} [properties] Properties to set
             * @returns {teads.api.CreateSelfServedBuyerSeatForEntityResponse} CreateSelfServedBuyerSeatForEntityResponse instance
             */
            CreateSelfServedBuyerSeatForEntityResponse.create = function create(properties) {
                return new CreateSelfServedBuyerSeatForEntityResponse(properties);
            };

            /**
             * Encodes the specified CreateSelfServedBuyerSeatForEntityResponse message. Does not implicitly {@link teads.api.CreateSelfServedBuyerSeatForEntityResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityResponse
             * @static
             * @param {teads.api.ICreateSelfServedBuyerSeatForEntityResponse} message CreateSelfServedBuyerSeatForEntityResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateSelfServedBuyerSeatForEntityResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seatId);
                return writer;
            };

            /**
             * Encodes the specified CreateSelfServedBuyerSeatForEntityResponse message, length delimited. Does not implicitly {@link teads.api.CreateSelfServedBuyerSeatForEntityResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityResponse
             * @static
             * @param {teads.api.ICreateSelfServedBuyerSeatForEntityResponse} message CreateSelfServedBuyerSeatForEntityResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            CreateSelfServedBuyerSeatForEntityResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a CreateSelfServedBuyerSeatForEntityResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.CreateSelfServedBuyerSeatForEntityResponse} CreateSelfServedBuyerSeatForEntityResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateSelfServedBuyerSeatForEntityResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.CreateSelfServedBuyerSeatForEntityResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.seatId = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("seatId"))
                    throw $util.ProtocolError("missing required 'seatId'", { instance: message });
                return message;
            };

            /**
             * Decodes a CreateSelfServedBuyerSeatForEntityResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.CreateSelfServedBuyerSeatForEntityResponse} CreateSelfServedBuyerSeatForEntityResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            CreateSelfServedBuyerSeatForEntityResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a CreateSelfServedBuyerSeatForEntityResponse message.
             * @function verify
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            CreateSelfServedBuyerSeatForEntityResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                    return "seatId: integer|Long expected";
                return null;
            };

            /**
             * Creates a CreateSelfServedBuyerSeatForEntityResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.CreateSelfServedBuyerSeatForEntityResponse} CreateSelfServedBuyerSeatForEntityResponse
             */
            CreateSelfServedBuyerSeatForEntityResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.CreateSelfServedBuyerSeatForEntityResponse)
                    return object;
                var message = new $root.teads.api.CreateSelfServedBuyerSeatForEntityResponse();
                if (object.seatId != null)
                    if ($util.Long)
                        (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                    else if (typeof object.seatId === "string")
                        message.seatId = parseInt(object.seatId, 10);
                    else if (typeof object.seatId === "number")
                        message.seatId = object.seatId;
                    else if (typeof object.seatId === "object")
                        message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from a CreateSelfServedBuyerSeatForEntityResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityResponse
             * @static
             * @param {teads.api.CreateSelfServedBuyerSeatForEntityResponse} message CreateSelfServedBuyerSeatForEntityResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            CreateSelfServedBuyerSeatForEntityResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seatId = options.longs === String ? "0" : 0;
                if (message.seatId != null && message.hasOwnProperty("seatId"))
                    if (typeof message.seatId === "number")
                        object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                    else
                        object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                return object;
            };

            /**
             * Converts this CreateSelfServedBuyerSeatForEntityResponse to JSON.
             * @function toJSON
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            CreateSelfServedBuyerSeatForEntityResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for CreateSelfServedBuyerSeatForEntityResponse
             * @function getTypeUrl
             * @memberof teads.api.CreateSelfServedBuyerSeatForEntityResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            CreateSelfServedBuyerSeatForEntityResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.CreateSelfServedBuyerSeatForEntityResponse";
            };

            return CreateSelfServedBuyerSeatForEntityResponse;
        })();

        api.DeactivateFeatureForSeatRequest = (function() {

            /**
             * Properties of a DeactivateFeatureForSeatRequest.
             * @memberof teads.api
             * @interface IDeactivateFeatureForSeatRequest
             * @property {teads.api.ISecurityContext} securityContext DeactivateFeatureForSeatRequest securityContext
             * @property {number} seatId DeactivateFeatureForSeatRequest seatId
             * @property {teads.api.SeatFeature} seatFeature DeactivateFeatureForSeatRequest seatFeature
             */

            /**
             * Constructs a new DeactivateFeatureForSeatRequest.
             * @memberof teads.api
             * @classdesc Represents a DeactivateFeatureForSeatRequest.
             * @implements IDeactivateFeatureForSeatRequest
             * @constructor
             * @param {teads.api.IDeactivateFeatureForSeatRequest=} [properties] Properties to set
             */
            function DeactivateFeatureForSeatRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * DeactivateFeatureForSeatRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.DeactivateFeatureForSeatRequest
             * @instance
             */
            DeactivateFeatureForSeatRequest.prototype.securityContext = null;

            /**
             * DeactivateFeatureForSeatRequest seatId.
             * @member {number} seatId
             * @memberof teads.api.DeactivateFeatureForSeatRequest
             * @instance
             */
            DeactivateFeatureForSeatRequest.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * DeactivateFeatureForSeatRequest seatFeature.
             * @member {teads.api.SeatFeature} seatFeature
             * @memberof teads.api.DeactivateFeatureForSeatRequest
             * @instance
             */
            DeactivateFeatureForSeatRequest.prototype.seatFeature = 0;

            /**
             * Creates a new DeactivateFeatureForSeatRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.DeactivateFeatureForSeatRequest
             * @static
             * @param {teads.api.IDeactivateFeatureForSeatRequest=} [properties] Properties to set
             * @returns {teads.api.DeactivateFeatureForSeatRequest} DeactivateFeatureForSeatRequest instance
             */
            DeactivateFeatureForSeatRequest.create = function create(properties) {
                return new DeactivateFeatureForSeatRequest(properties);
            };

            /**
             * Encodes the specified DeactivateFeatureForSeatRequest message. Does not implicitly {@link teads.api.DeactivateFeatureForSeatRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.DeactivateFeatureForSeatRequest
             * @static
             * @param {teads.api.IDeactivateFeatureForSeatRequest} message DeactivateFeatureForSeatRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DeactivateFeatureForSeatRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.seatId);
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.seatFeature);
                return writer;
            };

            /**
             * Encodes the specified DeactivateFeatureForSeatRequest message, length delimited. Does not implicitly {@link teads.api.DeactivateFeatureForSeatRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.DeactivateFeatureForSeatRequest
             * @static
             * @param {teads.api.IDeactivateFeatureForSeatRequest} message DeactivateFeatureForSeatRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DeactivateFeatureForSeatRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a DeactivateFeatureForSeatRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.DeactivateFeatureForSeatRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.DeactivateFeatureForSeatRequest} DeactivateFeatureForSeatRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DeactivateFeatureForSeatRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.DeactivateFeatureForSeatRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.seatId = reader.int64();
                            break;
                        }
                    case 3: {
                            message.seatFeature = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("seatId"))
                    throw $util.ProtocolError("missing required 'seatId'", { instance: message });
                if (!message.hasOwnProperty("seatFeature"))
                    throw $util.ProtocolError("missing required 'seatFeature'", { instance: message });
                return message;
            };

            /**
             * Decodes a DeactivateFeatureForSeatRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.DeactivateFeatureForSeatRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.DeactivateFeatureForSeatRequest} DeactivateFeatureForSeatRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DeactivateFeatureForSeatRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a DeactivateFeatureForSeatRequest message.
             * @function verify
             * @memberof teads.api.DeactivateFeatureForSeatRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            DeactivateFeatureForSeatRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                    return "seatId: integer|Long expected";
                switch (message.seatFeature) {
                default:
                    return "seatFeature: enum value expected";
                case 0:
                case 1:
                case 2:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                    break;
                }
                return null;
            };

            /**
             * Creates a DeactivateFeatureForSeatRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.DeactivateFeatureForSeatRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.DeactivateFeatureForSeatRequest} DeactivateFeatureForSeatRequest
             */
            DeactivateFeatureForSeatRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.DeactivateFeatureForSeatRequest)
                    return object;
                var message = new $root.teads.api.DeactivateFeatureForSeatRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.DeactivateFeatureForSeatRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.seatId != null)
                    if ($util.Long)
                        (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                    else if (typeof object.seatId === "string")
                        message.seatId = parseInt(object.seatId, 10);
                    else if (typeof object.seatId === "number")
                        message.seatId = object.seatId;
                    else if (typeof object.seatId === "object")
                        message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                switch (object.seatFeature) {
                default:
                    if (typeof object.seatFeature === "number") {
                        message.seatFeature = object.seatFeature;
                        break;
                    }
                    break;
                case "SEAT_FEATURE_MULTIPLE_PIXELS":
                case 0:
                    message.seatFeature = 0;
                    break;
                case "SEAT_FEATURE_SHARE_WITH_ADVERTISERS":
                case 1:
                    message.seatFeature = 1;
                    break;
                case "SEAT_FEATURE_PREFER_VIEW_TO_PLAY_START_MODE":
                case 2:
                    message.seatFeature = 2;
                    break;
                case "SEAT_FEATURE_ACCURACY_LEVELS":
                case 4:
                    message.seatFeature = 4;
                    break;
                case "SEAT_FEATURE_AGENCY_FEE":
                case 5:
                    message.seatFeature = 5;
                    break;
                case "SEAT_FEATURE_CUSTOM_AUDIENCE_ALTICE_US":
                case 6:
                    message.seatFeature = 6;
                    break;
                case "SEAT_FEATURE_CUSTOM_CREATIVES_FOR_PERFORMANCE":
                case 7:
                    message.seatFeature = 7;
                    break;
                case "SEAT_FEATURE_LUMEN":
                case 8:
                    message.seatFeature = 8;
                    break;
                case "SEAT_FEATURE_CUSTOM_AUDIENCE_SKP":
                case 9:
                    message.seatFeature = 9;
                    break;
                case "SEAT_FEATURE_CUSTOM_AUDIENCE_CROSSIX":
                case 10:
                    message.seatFeature = 10;
                    break;
                case "SEAT_FEATURE_CUSTOM_AUDIENCE_ALTICE_FR":
                case 11:
                    message.seatFeature = 11;
                    break;
                case "SEAT_FEATURE_REMARKETING_SEGMENTATION_ACCESS":
                case 12:
                    message.seatFeature = 12;
                    break;
                case "SEAT_FEATURE_CPV":
                case 13:
                    message.seatFeature = 13;
                    break;
                case "SEAT_FEATURE_PLAYER_MODE_SELECTION_FOR_BRANDING":
                case 14:
                    message.seatFeature = 14;
                    break;
                case "SEAT_FEATURE_PLAYER_MODE_SELECTION_FOR_BRANDFORMANCE":
                case 15:
                    message.seatFeature = 15;
                    break;
                case "SEAT_FEATURE_LOOKALIKE_SEGMENTATION_ACCESS":
                case 16:
                    message.seatFeature = 16;
                    break;
                case "SEAT_FEATURE_CUSTOM_AUDIENCE_THIRD_PARTY_DATA_ACCESS":
                case 17:
                    message.seatFeature = 17;
                    break;
                case "SEAT_FEATURE_HAS_OPTED_IN_AD_ASSISTANT":
                case 18:
                    message.seatFeature = 18;
                    break;
                case "SEAT_FEATURE_PLAYER_MODE_SELECTION_FOR_BRANDING_CPCV":
                case 19:
                    message.seatFeature = 19;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a DeactivateFeatureForSeatRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.DeactivateFeatureForSeatRequest
             * @static
             * @param {teads.api.DeactivateFeatureForSeatRequest} message DeactivateFeatureForSeatRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            DeactivateFeatureForSeatRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seatId = options.longs === String ? "0" : 0;
                    object.seatFeature = options.enums === String ? "SEAT_FEATURE_MULTIPLE_PIXELS" : 0;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.seatId != null && message.hasOwnProperty("seatId"))
                    if (typeof message.seatId === "number")
                        object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                    else
                        object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                if (message.seatFeature != null && message.hasOwnProperty("seatFeature"))
                    object.seatFeature = options.enums === String ? $root.teads.api.SeatFeature[message.seatFeature] === undefined ? message.seatFeature : $root.teads.api.SeatFeature[message.seatFeature] : message.seatFeature;
                return object;
            };

            /**
             * Converts this DeactivateFeatureForSeatRequest to JSON.
             * @function toJSON
             * @memberof teads.api.DeactivateFeatureForSeatRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            DeactivateFeatureForSeatRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for DeactivateFeatureForSeatRequest
             * @function getTypeUrl
             * @memberof teads.api.DeactivateFeatureForSeatRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            DeactivateFeatureForSeatRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.DeactivateFeatureForSeatRequest";
            };

            return DeactivateFeatureForSeatRequest;
        })();

        api.DeactivateFeatureForSeatResponse = (function() {

            /**
             * Properties of a DeactivateFeatureForSeatResponse.
             * @memberof teads.api
             * @interface IDeactivateFeatureForSeatResponse
             */

            /**
             * Constructs a new DeactivateFeatureForSeatResponse.
             * @memberof teads.api
             * @classdesc Represents a DeactivateFeatureForSeatResponse.
             * @implements IDeactivateFeatureForSeatResponse
             * @constructor
             * @param {teads.api.IDeactivateFeatureForSeatResponse=} [properties] Properties to set
             */
            function DeactivateFeatureForSeatResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Creates a new DeactivateFeatureForSeatResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.DeactivateFeatureForSeatResponse
             * @static
             * @param {teads.api.IDeactivateFeatureForSeatResponse=} [properties] Properties to set
             * @returns {teads.api.DeactivateFeatureForSeatResponse} DeactivateFeatureForSeatResponse instance
             */
            DeactivateFeatureForSeatResponse.create = function create(properties) {
                return new DeactivateFeatureForSeatResponse(properties);
            };

            /**
             * Encodes the specified DeactivateFeatureForSeatResponse message. Does not implicitly {@link teads.api.DeactivateFeatureForSeatResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.DeactivateFeatureForSeatResponse
             * @static
             * @param {teads.api.IDeactivateFeatureForSeatResponse} message DeactivateFeatureForSeatResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DeactivateFeatureForSeatResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified DeactivateFeatureForSeatResponse message, length delimited. Does not implicitly {@link teads.api.DeactivateFeatureForSeatResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.DeactivateFeatureForSeatResponse
             * @static
             * @param {teads.api.IDeactivateFeatureForSeatResponse} message DeactivateFeatureForSeatResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DeactivateFeatureForSeatResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a DeactivateFeatureForSeatResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.DeactivateFeatureForSeatResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.DeactivateFeatureForSeatResponse} DeactivateFeatureForSeatResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DeactivateFeatureForSeatResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.DeactivateFeatureForSeatResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a DeactivateFeatureForSeatResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.DeactivateFeatureForSeatResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.DeactivateFeatureForSeatResponse} DeactivateFeatureForSeatResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DeactivateFeatureForSeatResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a DeactivateFeatureForSeatResponse message.
             * @function verify
             * @memberof teads.api.DeactivateFeatureForSeatResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            DeactivateFeatureForSeatResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates a DeactivateFeatureForSeatResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.DeactivateFeatureForSeatResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.DeactivateFeatureForSeatResponse} DeactivateFeatureForSeatResponse
             */
            DeactivateFeatureForSeatResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.DeactivateFeatureForSeatResponse)
                    return object;
                return new $root.teads.api.DeactivateFeatureForSeatResponse();
            };

            /**
             * Creates a plain object from a DeactivateFeatureForSeatResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.DeactivateFeatureForSeatResponse
             * @static
             * @param {teads.api.DeactivateFeatureForSeatResponse} message DeactivateFeatureForSeatResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            DeactivateFeatureForSeatResponse.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this DeactivateFeatureForSeatResponse to JSON.
             * @function toJSON
             * @memberof teads.api.DeactivateFeatureForSeatResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            DeactivateFeatureForSeatResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for DeactivateFeatureForSeatResponse
             * @function getTypeUrl
             * @memberof teads.api.DeactivateFeatureForSeatResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            DeactivateFeatureForSeatResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.DeactivateFeatureForSeatResponse";
            };

            return DeactivateFeatureForSeatResponse;
        })();

        api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest = (function() {

            /**
             * Properties of a DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest.
             * @memberof teads.api
             * @interface IDeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest
             * @property {teads.api.ISecurityContext} securityContext DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest securityContext
             * @property {number} buyerSeatId DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest buyerSeatId
             * @property {Array.<string>|null} [segmentCodes] DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest segmentCodes
             */

            /**
             * Constructs a new DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest.
             * @memberof teads.api
             * @classdesc Represents a DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest.
             * @implements IDeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest
             * @constructor
             * @param {teads.api.IDeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest=} [properties] Properties to set
             */
            function DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest(properties) {
                this.segmentCodes = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest
             * @instance
             */
            DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest.prototype.securityContext = null;

            /**
             * DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest buyerSeatId.
             * @member {number} buyerSeatId
             * @memberof teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest
             * @instance
             */
            DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest.prototype.buyerSeatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest segmentCodes.
             * @member {Array.<string>} segmentCodes
             * @memberof teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest
             * @instance
             */
            DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest.prototype.segmentCodes = $util.emptyArray;

            /**
             * Creates a new DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest
             * @static
             * @param {teads.api.IDeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest=} [properties] Properties to set
             * @returns {teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest} DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest instance
             */
            DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest.create = function create(properties) {
                return new DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest(properties);
            };

            /**
             * Encodes the specified DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest message. Does not implicitly {@link teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest
             * @static
             * @param {teads.api.IDeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest} message DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.buyerSeatId);
                if (message.segmentCodes != null && message.segmentCodes.length)
                    for (var i = 0; i < message.segmentCodes.length; ++i)
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.segmentCodes[i]);
                return writer;
            };

            /**
             * Encodes the specified DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest message, length delimited. Does not implicitly {@link teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest
             * @static
             * @param {teads.api.IDeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest} message DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest} DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.buyerSeatId = reader.int64();
                            break;
                        }
                    case 3: {
                            if (!(message.segmentCodes && message.segmentCodes.length))
                                message.segmentCodes = [];
                            message.segmentCodes.push(reader.string());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("buyerSeatId"))
                    throw $util.ProtocolError("missing required 'buyerSeatId'", { instance: message });
                return message;
            };

            /**
             * Decodes a DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest} DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest message.
             * @function verify
             * @memberof teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.buyerSeatId) && !(message.buyerSeatId && $util.isInteger(message.buyerSeatId.low) && $util.isInteger(message.buyerSeatId.high)))
                    return "buyerSeatId: integer|Long expected";
                if (message.segmentCodes != null && message.hasOwnProperty("segmentCodes")) {
                    if (!Array.isArray(message.segmentCodes))
                        return "segmentCodes: array expected";
                    for (var i = 0; i < message.segmentCodes.length; ++i)
                        if (!$util.isString(message.segmentCodes[i]))
                            return "segmentCodes: string[] expected";
                }
                return null;
            };

            /**
             * Creates a DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest} DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest
             */
            DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest)
                    return object;
                var message = new $root.teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.buyerSeatId != null)
                    if ($util.Long)
                        (message.buyerSeatId = $util.Long.fromValue(object.buyerSeatId)).unsigned = false;
                    else if (typeof object.buyerSeatId === "string")
                        message.buyerSeatId = parseInt(object.buyerSeatId, 10);
                    else if (typeof object.buyerSeatId === "number")
                        message.buyerSeatId = object.buyerSeatId;
                    else if (typeof object.buyerSeatId === "object")
                        message.buyerSeatId = new $util.LongBits(object.buyerSeatId.low >>> 0, object.buyerSeatId.high >>> 0).toNumber();
                if (object.segmentCodes) {
                    if (!Array.isArray(object.segmentCodes))
                        throw TypeError(".teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest.segmentCodes: array expected");
                    message.segmentCodes = [];
                    for (var i = 0; i < object.segmentCodes.length; ++i)
                        message.segmentCodes[i] = String(object.segmentCodes[i]);
                }
                return message;
            };

            /**
             * Creates a plain object from a DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest
             * @static
             * @param {teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest} message DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.segmentCodes = [];
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.buyerSeatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.buyerSeatId = options.longs === String ? "0" : 0;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.buyerSeatId != null && message.hasOwnProperty("buyerSeatId"))
                    if (typeof message.buyerSeatId === "number")
                        object.buyerSeatId = options.longs === String ? String(message.buyerSeatId) : message.buyerSeatId;
                    else
                        object.buyerSeatId = options.longs === String ? $util.Long.prototype.toString.call(message.buyerSeatId) : options.longs === Number ? new $util.LongBits(message.buyerSeatId.low >>> 0, message.buyerSeatId.high >>> 0).toNumber() : message.buyerSeatId;
                if (message.segmentCodes && message.segmentCodes.length) {
                    object.segmentCodes = [];
                    for (var j = 0; j < message.segmentCodes.length; ++j)
                        object.segmentCodes[j] = message.segmentCodes[j];
                }
                return object;
            };

            /**
             * Converts this DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest to JSON.
             * @function toJSON
             * @memberof teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest
             * @function getTypeUrl
             * @memberof teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest";
            };

            return DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest;
        })();

        api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse = (function() {

            /**
             * Properties of a DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse.
             * @memberof teads.api
             * @interface IDeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse
             */

            /**
             * Constructs a new DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse.
             * @memberof teads.api
             * @classdesc Represents a DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse.
             * @implements IDeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse
             * @constructor
             * @param {teads.api.IDeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse=} [properties] Properties to set
             */
            function DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Creates a new DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse
             * @static
             * @param {teads.api.IDeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse=} [properties] Properties to set
             * @returns {teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse} DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse instance
             */
            DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse.create = function create(properties) {
                return new DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse(properties);
            };

            /**
             * Encodes the specified DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse message. Does not implicitly {@link teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse
             * @static
             * @param {teads.api.IDeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse} message DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse message, length delimited. Does not implicitly {@link teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse
             * @static
             * @param {teads.api.IDeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse} message DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse} DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse} DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse message.
             * @function verify
             * @memberof teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates a DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse} DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse
             */
            DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse)
                    return object;
                return new $root.teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse();
            };

            /**
             * Creates a plain object from a DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse
             * @static
             * @param {teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse} message DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse to JSON.
             * @function toJSON
             * @memberof teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse
             * @function getTypeUrl
             * @memberof teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse";
            };

            return DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse;
        })();

        api.DisableBuyerSeatRequest = (function() {

            /**
             * Properties of a DisableBuyerSeatRequest.
             * @memberof teads.api
             * @interface IDisableBuyerSeatRequest
             * @property {teads.api.ISecurityContext} securityContext DisableBuyerSeatRequest securityContext
             * @property {number} seatId DisableBuyerSeatRequest seatId
             */

            /**
             * Constructs a new DisableBuyerSeatRequest.
             * @memberof teads.api
             * @classdesc Represents a DisableBuyerSeatRequest.
             * @implements IDisableBuyerSeatRequest
             * @constructor
             * @param {teads.api.IDisableBuyerSeatRequest=} [properties] Properties to set
             */
            function DisableBuyerSeatRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * DisableBuyerSeatRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.DisableBuyerSeatRequest
             * @instance
             */
            DisableBuyerSeatRequest.prototype.securityContext = null;

            /**
             * DisableBuyerSeatRequest seatId.
             * @member {number} seatId
             * @memberof teads.api.DisableBuyerSeatRequest
             * @instance
             */
            DisableBuyerSeatRequest.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new DisableBuyerSeatRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.DisableBuyerSeatRequest
             * @static
             * @param {teads.api.IDisableBuyerSeatRequest=} [properties] Properties to set
             * @returns {teads.api.DisableBuyerSeatRequest} DisableBuyerSeatRequest instance
             */
            DisableBuyerSeatRequest.create = function create(properties) {
                return new DisableBuyerSeatRequest(properties);
            };

            /**
             * Encodes the specified DisableBuyerSeatRequest message. Does not implicitly {@link teads.api.DisableBuyerSeatRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.DisableBuyerSeatRequest
             * @static
             * @param {teads.api.IDisableBuyerSeatRequest} message DisableBuyerSeatRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DisableBuyerSeatRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.seatId);
                return writer;
            };

            /**
             * Encodes the specified DisableBuyerSeatRequest message, length delimited. Does not implicitly {@link teads.api.DisableBuyerSeatRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.DisableBuyerSeatRequest
             * @static
             * @param {teads.api.IDisableBuyerSeatRequest} message DisableBuyerSeatRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DisableBuyerSeatRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a DisableBuyerSeatRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.DisableBuyerSeatRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.DisableBuyerSeatRequest} DisableBuyerSeatRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DisableBuyerSeatRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.DisableBuyerSeatRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.seatId = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("seatId"))
                    throw $util.ProtocolError("missing required 'seatId'", { instance: message });
                return message;
            };

            /**
             * Decodes a DisableBuyerSeatRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.DisableBuyerSeatRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.DisableBuyerSeatRequest} DisableBuyerSeatRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DisableBuyerSeatRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a DisableBuyerSeatRequest message.
             * @function verify
             * @memberof teads.api.DisableBuyerSeatRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            DisableBuyerSeatRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                    return "seatId: integer|Long expected";
                return null;
            };

            /**
             * Creates a DisableBuyerSeatRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.DisableBuyerSeatRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.DisableBuyerSeatRequest} DisableBuyerSeatRequest
             */
            DisableBuyerSeatRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.DisableBuyerSeatRequest)
                    return object;
                var message = new $root.teads.api.DisableBuyerSeatRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.DisableBuyerSeatRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.seatId != null)
                    if ($util.Long)
                        (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                    else if (typeof object.seatId === "string")
                        message.seatId = parseInt(object.seatId, 10);
                    else if (typeof object.seatId === "number")
                        message.seatId = object.seatId;
                    else if (typeof object.seatId === "object")
                        message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from a DisableBuyerSeatRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.DisableBuyerSeatRequest
             * @static
             * @param {teads.api.DisableBuyerSeatRequest} message DisableBuyerSeatRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            DisableBuyerSeatRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seatId = options.longs === String ? "0" : 0;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.seatId != null && message.hasOwnProperty("seatId"))
                    if (typeof message.seatId === "number")
                        object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                    else
                        object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                return object;
            };

            /**
             * Converts this DisableBuyerSeatRequest to JSON.
             * @function toJSON
             * @memberof teads.api.DisableBuyerSeatRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            DisableBuyerSeatRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for DisableBuyerSeatRequest
             * @function getTypeUrl
             * @memberof teads.api.DisableBuyerSeatRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            DisableBuyerSeatRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.DisableBuyerSeatRequest";
            };

            return DisableBuyerSeatRequest;
        })();

        api.DisableBuyerSeatResponse = (function() {

            /**
             * Properties of a DisableBuyerSeatResponse.
             * @memberof teads.api
             * @interface IDisableBuyerSeatResponse
             */

            /**
             * Constructs a new DisableBuyerSeatResponse.
             * @memberof teads.api
             * @classdesc Represents a DisableBuyerSeatResponse.
             * @implements IDisableBuyerSeatResponse
             * @constructor
             * @param {teads.api.IDisableBuyerSeatResponse=} [properties] Properties to set
             */
            function DisableBuyerSeatResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Creates a new DisableBuyerSeatResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.DisableBuyerSeatResponse
             * @static
             * @param {teads.api.IDisableBuyerSeatResponse=} [properties] Properties to set
             * @returns {teads.api.DisableBuyerSeatResponse} DisableBuyerSeatResponse instance
             */
            DisableBuyerSeatResponse.create = function create(properties) {
                return new DisableBuyerSeatResponse(properties);
            };

            /**
             * Encodes the specified DisableBuyerSeatResponse message. Does not implicitly {@link teads.api.DisableBuyerSeatResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.DisableBuyerSeatResponse
             * @static
             * @param {teads.api.IDisableBuyerSeatResponse} message DisableBuyerSeatResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DisableBuyerSeatResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified DisableBuyerSeatResponse message, length delimited. Does not implicitly {@link teads.api.DisableBuyerSeatResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.DisableBuyerSeatResponse
             * @static
             * @param {teads.api.IDisableBuyerSeatResponse} message DisableBuyerSeatResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DisableBuyerSeatResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a DisableBuyerSeatResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.DisableBuyerSeatResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.DisableBuyerSeatResponse} DisableBuyerSeatResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DisableBuyerSeatResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.DisableBuyerSeatResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a DisableBuyerSeatResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.DisableBuyerSeatResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.DisableBuyerSeatResponse} DisableBuyerSeatResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DisableBuyerSeatResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a DisableBuyerSeatResponse message.
             * @function verify
             * @memberof teads.api.DisableBuyerSeatResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            DisableBuyerSeatResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates a DisableBuyerSeatResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.DisableBuyerSeatResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.DisableBuyerSeatResponse} DisableBuyerSeatResponse
             */
            DisableBuyerSeatResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.DisableBuyerSeatResponse)
                    return object;
                return new $root.teads.api.DisableBuyerSeatResponse();
            };

            /**
             * Creates a plain object from a DisableBuyerSeatResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.DisableBuyerSeatResponse
             * @static
             * @param {teads.api.DisableBuyerSeatResponse} message DisableBuyerSeatResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            DisableBuyerSeatResponse.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this DisableBuyerSeatResponse to JSON.
             * @function toJSON
             * @memberof teads.api.DisableBuyerSeatResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            DisableBuyerSeatResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for DisableBuyerSeatResponse
             * @function getTypeUrl
             * @memberof teads.api.DisableBuyerSeatResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            DisableBuyerSeatResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.DisableBuyerSeatResponse";
            };

            return DisableBuyerSeatResponse;
        })();

        api.EnableBuyerSeatRequest = (function() {

            /**
             * Properties of an EnableBuyerSeatRequest.
             * @memberof teads.api
             * @interface IEnableBuyerSeatRequest
             * @property {teads.api.ISecurityContext} securityContext EnableBuyerSeatRequest securityContext
             * @property {number} seatId EnableBuyerSeatRequest seatId
             */

            /**
             * Constructs a new EnableBuyerSeatRequest.
             * @memberof teads.api
             * @classdesc Represents an EnableBuyerSeatRequest.
             * @implements IEnableBuyerSeatRequest
             * @constructor
             * @param {teads.api.IEnableBuyerSeatRequest=} [properties] Properties to set
             */
            function EnableBuyerSeatRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * EnableBuyerSeatRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.EnableBuyerSeatRequest
             * @instance
             */
            EnableBuyerSeatRequest.prototype.securityContext = null;

            /**
             * EnableBuyerSeatRequest seatId.
             * @member {number} seatId
             * @memberof teads.api.EnableBuyerSeatRequest
             * @instance
             */
            EnableBuyerSeatRequest.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new EnableBuyerSeatRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.EnableBuyerSeatRequest
             * @static
             * @param {teads.api.IEnableBuyerSeatRequest=} [properties] Properties to set
             * @returns {teads.api.EnableBuyerSeatRequest} EnableBuyerSeatRequest instance
             */
            EnableBuyerSeatRequest.create = function create(properties) {
                return new EnableBuyerSeatRequest(properties);
            };

            /**
             * Encodes the specified EnableBuyerSeatRequest message. Does not implicitly {@link teads.api.EnableBuyerSeatRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.EnableBuyerSeatRequest
             * @static
             * @param {teads.api.IEnableBuyerSeatRequest} message EnableBuyerSeatRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            EnableBuyerSeatRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.seatId);
                return writer;
            };

            /**
             * Encodes the specified EnableBuyerSeatRequest message, length delimited. Does not implicitly {@link teads.api.EnableBuyerSeatRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.EnableBuyerSeatRequest
             * @static
             * @param {teads.api.IEnableBuyerSeatRequest} message EnableBuyerSeatRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            EnableBuyerSeatRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an EnableBuyerSeatRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.EnableBuyerSeatRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.EnableBuyerSeatRequest} EnableBuyerSeatRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            EnableBuyerSeatRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.EnableBuyerSeatRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.seatId = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("seatId"))
                    throw $util.ProtocolError("missing required 'seatId'", { instance: message });
                return message;
            };

            /**
             * Decodes an EnableBuyerSeatRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.EnableBuyerSeatRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.EnableBuyerSeatRequest} EnableBuyerSeatRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            EnableBuyerSeatRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an EnableBuyerSeatRequest message.
             * @function verify
             * @memberof teads.api.EnableBuyerSeatRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            EnableBuyerSeatRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                    return "seatId: integer|Long expected";
                return null;
            };

            /**
             * Creates an EnableBuyerSeatRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.EnableBuyerSeatRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.EnableBuyerSeatRequest} EnableBuyerSeatRequest
             */
            EnableBuyerSeatRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.EnableBuyerSeatRequest)
                    return object;
                var message = new $root.teads.api.EnableBuyerSeatRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.EnableBuyerSeatRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.seatId != null)
                    if ($util.Long)
                        (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                    else if (typeof object.seatId === "string")
                        message.seatId = parseInt(object.seatId, 10);
                    else if (typeof object.seatId === "number")
                        message.seatId = object.seatId;
                    else if (typeof object.seatId === "object")
                        message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from an EnableBuyerSeatRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.EnableBuyerSeatRequest
             * @static
             * @param {teads.api.EnableBuyerSeatRequest} message EnableBuyerSeatRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            EnableBuyerSeatRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seatId = options.longs === String ? "0" : 0;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.seatId != null && message.hasOwnProperty("seatId"))
                    if (typeof message.seatId === "number")
                        object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                    else
                        object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                return object;
            };

            /**
             * Converts this EnableBuyerSeatRequest to JSON.
             * @function toJSON
             * @memberof teads.api.EnableBuyerSeatRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            EnableBuyerSeatRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for EnableBuyerSeatRequest
             * @function getTypeUrl
             * @memberof teads.api.EnableBuyerSeatRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            EnableBuyerSeatRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.EnableBuyerSeatRequest";
            };

            return EnableBuyerSeatRequest;
        })();

        api.EnableBuyerSeatResponse = (function() {

            /**
             * Properties of an EnableBuyerSeatResponse.
             * @memberof teads.api
             * @interface IEnableBuyerSeatResponse
             */

            /**
             * Constructs a new EnableBuyerSeatResponse.
             * @memberof teads.api
             * @classdesc Represents an EnableBuyerSeatResponse.
             * @implements IEnableBuyerSeatResponse
             * @constructor
             * @param {teads.api.IEnableBuyerSeatResponse=} [properties] Properties to set
             */
            function EnableBuyerSeatResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Creates a new EnableBuyerSeatResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.EnableBuyerSeatResponse
             * @static
             * @param {teads.api.IEnableBuyerSeatResponse=} [properties] Properties to set
             * @returns {teads.api.EnableBuyerSeatResponse} EnableBuyerSeatResponse instance
             */
            EnableBuyerSeatResponse.create = function create(properties) {
                return new EnableBuyerSeatResponse(properties);
            };

            /**
             * Encodes the specified EnableBuyerSeatResponse message. Does not implicitly {@link teads.api.EnableBuyerSeatResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.EnableBuyerSeatResponse
             * @static
             * @param {teads.api.IEnableBuyerSeatResponse} message EnableBuyerSeatResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            EnableBuyerSeatResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified EnableBuyerSeatResponse message, length delimited. Does not implicitly {@link teads.api.EnableBuyerSeatResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.EnableBuyerSeatResponse
             * @static
             * @param {teads.api.IEnableBuyerSeatResponse} message EnableBuyerSeatResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            EnableBuyerSeatResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an EnableBuyerSeatResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.EnableBuyerSeatResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.EnableBuyerSeatResponse} EnableBuyerSeatResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            EnableBuyerSeatResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.EnableBuyerSeatResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes an EnableBuyerSeatResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.EnableBuyerSeatResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.EnableBuyerSeatResponse} EnableBuyerSeatResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            EnableBuyerSeatResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an EnableBuyerSeatResponse message.
             * @function verify
             * @memberof teads.api.EnableBuyerSeatResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            EnableBuyerSeatResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates an EnableBuyerSeatResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.EnableBuyerSeatResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.EnableBuyerSeatResponse} EnableBuyerSeatResponse
             */
            EnableBuyerSeatResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.EnableBuyerSeatResponse)
                    return object;
                return new $root.teads.api.EnableBuyerSeatResponse();
            };

            /**
             * Creates a plain object from an EnableBuyerSeatResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.EnableBuyerSeatResponse
             * @static
             * @param {teads.api.EnableBuyerSeatResponse} message EnableBuyerSeatResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            EnableBuyerSeatResponse.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this EnableBuyerSeatResponse to JSON.
             * @function toJSON
             * @memberof teads.api.EnableBuyerSeatResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            EnableBuyerSeatResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for EnableBuyerSeatResponse
             * @function getTypeUrl
             * @memberof teads.api.EnableBuyerSeatResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            EnableBuyerSeatResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.EnableBuyerSeatResponse";
            };

            return EnableBuyerSeatResponse;
        })();

        api.FindActiveAccountsForProfileRequest = (function() {

            /**
             * Properties of a FindActiveAccountsForProfileRequest.
             * @memberof teads.api
             * @interface IFindActiveAccountsForProfileRequest
             * @property {teads.api.ISecurityContext} securityContext FindActiveAccountsForProfileRequest securityContext
             * @property {number} profileId FindActiveAccountsForProfileRequest profileId
             */

            /**
             * Constructs a new FindActiveAccountsForProfileRequest.
             * @memberof teads.api
             * @classdesc Represents a FindActiveAccountsForProfileRequest.
             * @implements IFindActiveAccountsForProfileRequest
             * @constructor
             * @param {teads.api.IFindActiveAccountsForProfileRequest=} [properties] Properties to set
             */
            function FindActiveAccountsForProfileRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * FindActiveAccountsForProfileRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.FindActiveAccountsForProfileRequest
             * @instance
             */
            FindActiveAccountsForProfileRequest.prototype.securityContext = null;

            /**
             * FindActiveAccountsForProfileRequest profileId.
             * @member {number} profileId
             * @memberof teads.api.FindActiveAccountsForProfileRequest
             * @instance
             */
            FindActiveAccountsForProfileRequest.prototype.profileId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new FindActiveAccountsForProfileRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.FindActiveAccountsForProfileRequest
             * @static
             * @param {teads.api.IFindActiveAccountsForProfileRequest=} [properties] Properties to set
             * @returns {teads.api.FindActiveAccountsForProfileRequest} FindActiveAccountsForProfileRequest instance
             */
            FindActiveAccountsForProfileRequest.create = function create(properties) {
                return new FindActiveAccountsForProfileRequest(properties);
            };

            /**
             * Encodes the specified FindActiveAccountsForProfileRequest message. Does not implicitly {@link teads.api.FindActiveAccountsForProfileRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.FindActiveAccountsForProfileRequest
             * @static
             * @param {teads.api.IFindActiveAccountsForProfileRequest} message FindActiveAccountsForProfileRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindActiveAccountsForProfileRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.profileId);
                return writer;
            };

            /**
             * Encodes the specified FindActiveAccountsForProfileRequest message, length delimited. Does not implicitly {@link teads.api.FindActiveAccountsForProfileRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.FindActiveAccountsForProfileRequest
             * @static
             * @param {teads.api.IFindActiveAccountsForProfileRequest} message FindActiveAccountsForProfileRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindActiveAccountsForProfileRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a FindActiveAccountsForProfileRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.FindActiveAccountsForProfileRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.FindActiveAccountsForProfileRequest} FindActiveAccountsForProfileRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindActiveAccountsForProfileRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindActiveAccountsForProfileRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.profileId = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("profileId"))
                    throw $util.ProtocolError("missing required 'profileId'", { instance: message });
                return message;
            };

            /**
             * Decodes a FindActiveAccountsForProfileRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.FindActiveAccountsForProfileRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.FindActiveAccountsForProfileRequest} FindActiveAccountsForProfileRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindActiveAccountsForProfileRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a FindActiveAccountsForProfileRequest message.
             * @function verify
             * @memberof teads.api.FindActiveAccountsForProfileRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FindActiveAccountsForProfileRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.profileId) && !(message.profileId && $util.isInteger(message.profileId.low) && $util.isInteger(message.profileId.high)))
                    return "profileId: integer|Long expected";
                return null;
            };

            /**
             * Creates a FindActiveAccountsForProfileRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.FindActiveAccountsForProfileRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.FindActiveAccountsForProfileRequest} FindActiveAccountsForProfileRequest
             */
            FindActiveAccountsForProfileRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.FindActiveAccountsForProfileRequest)
                    return object;
                var message = new $root.teads.api.FindActiveAccountsForProfileRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.FindActiveAccountsForProfileRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.profileId != null)
                    if ($util.Long)
                        (message.profileId = $util.Long.fromValue(object.profileId)).unsigned = false;
                    else if (typeof object.profileId === "string")
                        message.profileId = parseInt(object.profileId, 10);
                    else if (typeof object.profileId === "number")
                        message.profileId = object.profileId;
                    else if (typeof object.profileId === "object")
                        message.profileId = new $util.LongBits(object.profileId.low >>> 0, object.profileId.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from a FindActiveAccountsForProfileRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.FindActiveAccountsForProfileRequest
             * @static
             * @param {teads.api.FindActiveAccountsForProfileRequest} message FindActiveAccountsForProfileRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FindActiveAccountsForProfileRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.profileId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.profileId = options.longs === String ? "0" : 0;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.profileId != null && message.hasOwnProperty("profileId"))
                    if (typeof message.profileId === "number")
                        object.profileId = options.longs === String ? String(message.profileId) : message.profileId;
                    else
                        object.profileId = options.longs === String ? $util.Long.prototype.toString.call(message.profileId) : options.longs === Number ? new $util.LongBits(message.profileId.low >>> 0, message.profileId.high >>> 0).toNumber() : message.profileId;
                return object;
            };

            /**
             * Converts this FindActiveAccountsForProfileRequest to JSON.
             * @function toJSON
             * @memberof teads.api.FindActiveAccountsForProfileRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FindActiveAccountsForProfileRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for FindActiveAccountsForProfileRequest
             * @function getTypeUrl
             * @memberof teads.api.FindActiveAccountsForProfileRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            FindActiveAccountsForProfileRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.FindActiveAccountsForProfileRequest";
            };

            return FindActiveAccountsForProfileRequest;
        })();

        api.FindActiveAccountsForProfileResponse = (function() {

            /**
             * Properties of a FindActiveAccountsForProfileResponse.
             * @memberof teads.api
             * @interface IFindActiveAccountsForProfileResponse
             * @property {Array.<teads.api.FindActiveAccountsForProfileResponse.IAccount>|null} [accounts] FindActiveAccountsForProfileResponse accounts
             */

            /**
             * Constructs a new FindActiveAccountsForProfileResponse.
             * @memberof teads.api
             * @classdesc Represents a FindActiveAccountsForProfileResponse.
             * @implements IFindActiveAccountsForProfileResponse
             * @constructor
             * @param {teads.api.IFindActiveAccountsForProfileResponse=} [properties] Properties to set
             */
            function FindActiveAccountsForProfileResponse(properties) {
                this.accounts = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * FindActiveAccountsForProfileResponse accounts.
             * @member {Array.<teads.api.FindActiveAccountsForProfileResponse.IAccount>} accounts
             * @memberof teads.api.FindActiveAccountsForProfileResponse
             * @instance
             */
            FindActiveAccountsForProfileResponse.prototype.accounts = $util.emptyArray;

            /**
             * Creates a new FindActiveAccountsForProfileResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.FindActiveAccountsForProfileResponse
             * @static
             * @param {teads.api.IFindActiveAccountsForProfileResponse=} [properties] Properties to set
             * @returns {teads.api.FindActiveAccountsForProfileResponse} FindActiveAccountsForProfileResponse instance
             */
            FindActiveAccountsForProfileResponse.create = function create(properties) {
                return new FindActiveAccountsForProfileResponse(properties);
            };

            /**
             * Encodes the specified FindActiveAccountsForProfileResponse message. Does not implicitly {@link teads.api.FindActiveAccountsForProfileResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.FindActiveAccountsForProfileResponse
             * @static
             * @param {teads.api.IFindActiveAccountsForProfileResponse} message FindActiveAccountsForProfileResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindActiveAccountsForProfileResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.accounts != null && message.accounts.length)
                    for (var i = 0; i < message.accounts.length; ++i)
                        $root.teads.api.FindActiveAccountsForProfileResponse.Account.encode(message.accounts[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified FindActiveAccountsForProfileResponse message, length delimited. Does not implicitly {@link teads.api.FindActiveAccountsForProfileResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.FindActiveAccountsForProfileResponse
             * @static
             * @param {teads.api.IFindActiveAccountsForProfileResponse} message FindActiveAccountsForProfileResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindActiveAccountsForProfileResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a FindActiveAccountsForProfileResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.FindActiveAccountsForProfileResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.FindActiveAccountsForProfileResponse} FindActiveAccountsForProfileResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindActiveAccountsForProfileResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindActiveAccountsForProfileResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            if (!(message.accounts && message.accounts.length))
                                message.accounts = [];
                            message.accounts.push($root.teads.api.FindActiveAccountsForProfileResponse.Account.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a FindActiveAccountsForProfileResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.FindActiveAccountsForProfileResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.FindActiveAccountsForProfileResponse} FindActiveAccountsForProfileResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindActiveAccountsForProfileResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a FindActiveAccountsForProfileResponse message.
             * @function verify
             * @memberof teads.api.FindActiveAccountsForProfileResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FindActiveAccountsForProfileResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.accounts != null && message.hasOwnProperty("accounts")) {
                    if (!Array.isArray(message.accounts))
                        return "accounts: array expected";
                    for (var i = 0; i < message.accounts.length; ++i) {
                        var error = $root.teads.api.FindActiveAccountsForProfileResponse.Account.verify(message.accounts[i]);
                        if (error)
                            return "accounts." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a FindActiveAccountsForProfileResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.FindActiveAccountsForProfileResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.FindActiveAccountsForProfileResponse} FindActiveAccountsForProfileResponse
             */
            FindActiveAccountsForProfileResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.FindActiveAccountsForProfileResponse)
                    return object;
                var message = new $root.teads.api.FindActiveAccountsForProfileResponse();
                if (object.accounts) {
                    if (!Array.isArray(object.accounts))
                        throw TypeError(".teads.api.FindActiveAccountsForProfileResponse.accounts: array expected");
                    message.accounts = [];
                    for (var i = 0; i < object.accounts.length; ++i) {
                        if (typeof object.accounts[i] !== "object")
                            throw TypeError(".teads.api.FindActiveAccountsForProfileResponse.accounts: object expected");
                        message.accounts[i] = $root.teads.api.FindActiveAccountsForProfileResponse.Account.fromObject(object.accounts[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a FindActiveAccountsForProfileResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.FindActiveAccountsForProfileResponse
             * @static
             * @param {teads.api.FindActiveAccountsForProfileResponse} message FindActiveAccountsForProfileResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FindActiveAccountsForProfileResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.accounts = [];
                if (message.accounts && message.accounts.length) {
                    object.accounts = [];
                    for (var j = 0; j < message.accounts.length; ++j)
                        object.accounts[j] = $root.teads.api.FindActiveAccountsForProfileResponse.Account.toObject(message.accounts[j], options);
                }
                return object;
            };

            /**
             * Converts this FindActiveAccountsForProfileResponse to JSON.
             * @function toJSON
             * @memberof teads.api.FindActiveAccountsForProfileResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FindActiveAccountsForProfileResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for FindActiveAccountsForProfileResponse
             * @function getTypeUrl
             * @memberof teads.api.FindActiveAccountsForProfileResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            FindActiveAccountsForProfileResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.FindActiveAccountsForProfileResponse";
            };

            FindActiveAccountsForProfileResponse.Account = (function() {

                /**
                 * Properties of an Account.
                 * @memberof teads.api.FindActiveAccountsForProfileResponse
                 * @interface IAccount
                 * @property {teads.api.FindActiveAccountsForProfileResponse.IAccountId} accountId Account accountId
                 * @property {string} name Account name
                 * @property {teads.api.AccountType} accountType Account accountType
                 * @property {string|null} [parentName] Account parentName
                 */

                /**
                 * Constructs a new Account.
                 * @memberof teads.api.FindActiveAccountsForProfileResponse
                 * @classdesc Represents an Account.
                 * @implements IAccount
                 * @constructor
                 * @param {teads.api.FindActiveAccountsForProfileResponse.IAccount=} [properties] Properties to set
                 */
                function Account(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Account accountId.
                 * @member {teads.api.FindActiveAccountsForProfileResponse.IAccountId} accountId
                 * @memberof teads.api.FindActiveAccountsForProfileResponse.Account
                 * @instance
                 */
                Account.prototype.accountId = null;

                /**
                 * Account name.
                 * @member {string} name
                 * @memberof teads.api.FindActiveAccountsForProfileResponse.Account
                 * @instance
                 */
                Account.prototype.name = "";

                /**
                 * Account accountType.
                 * @member {teads.api.AccountType} accountType
                 * @memberof teads.api.FindActiveAccountsForProfileResponse.Account
                 * @instance
                 */
                Account.prototype.accountType = 1;

                /**
                 * Account parentName.
                 * @member {string} parentName
                 * @memberof teads.api.FindActiveAccountsForProfileResponse.Account
                 * @instance
                 */
                Account.prototype.parentName = "";

                /**
                 * Creates a new Account instance using the specified properties.
                 * @function create
                 * @memberof teads.api.FindActiveAccountsForProfileResponse.Account
                 * @static
                 * @param {teads.api.FindActiveAccountsForProfileResponse.IAccount=} [properties] Properties to set
                 * @returns {teads.api.FindActiveAccountsForProfileResponse.Account} Account instance
                 */
                Account.create = function create(properties) {
                    return new Account(properties);
                };

                /**
                 * Encodes the specified Account message. Does not implicitly {@link teads.api.FindActiveAccountsForProfileResponse.Account.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.FindActiveAccountsForProfileResponse.Account
                 * @static
                 * @param {teads.api.FindActiveAccountsForProfileResponse.IAccount} message Account message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Account.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    $root.teads.api.FindActiveAccountsForProfileResponse.AccountId.encode(message.accountId, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.accountType);
                    if (message.parentName != null && Object.hasOwnProperty.call(message, "parentName"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.parentName);
                    return writer;
                };

                /**
                 * Encodes the specified Account message, length delimited. Does not implicitly {@link teads.api.FindActiveAccountsForProfileResponse.Account.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.FindActiveAccountsForProfileResponse.Account
                 * @static
                 * @param {teads.api.FindActiveAccountsForProfileResponse.IAccount} message Account message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Account.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes an Account message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.FindActiveAccountsForProfileResponse.Account
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.FindActiveAccountsForProfileResponse.Account} Account
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Account.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindActiveAccountsForProfileResponse.Account();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.accountId = $root.teads.api.FindActiveAccountsForProfileResponse.AccountId.decode(reader, reader.uint32());
                                break;
                            }
                        case 2: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.accountType = reader.int32();
                                break;
                            }
                        case 4: {
                                message.parentName = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("accountId"))
                        throw $util.ProtocolError("missing required 'accountId'", { instance: message });
                    if (!message.hasOwnProperty("name"))
                        throw $util.ProtocolError("missing required 'name'", { instance: message });
                    if (!message.hasOwnProperty("accountType"))
                        throw $util.ProtocolError("missing required 'accountType'", { instance: message });
                    return message;
                };

                /**
                 * Decodes an Account message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.FindActiveAccountsForProfileResponse.Account
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.FindActiveAccountsForProfileResponse.Account} Account
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Account.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies an Account message.
                 * @function verify
                 * @memberof teads.api.FindActiveAccountsForProfileResponse.Account
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Account.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    {
                        var error = $root.teads.api.FindActiveAccountsForProfileResponse.AccountId.verify(message.accountId);
                        if (error)
                            return "accountId." + error;
                    }
                    if (!$util.isString(message.name))
                        return "name: string expected";
                    switch (message.accountType) {
                    default:
                        return "accountType: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                        break;
                    }
                    if (message.parentName != null && message.hasOwnProperty("parentName"))
                        if (!$util.isString(message.parentName))
                            return "parentName: string expected";
                    return null;
                };

                /**
                 * Creates an Account message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.FindActiveAccountsForProfileResponse.Account
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.FindActiveAccountsForProfileResponse.Account} Account
                 */
                Account.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.FindActiveAccountsForProfileResponse.Account)
                        return object;
                    var message = new $root.teads.api.FindActiveAccountsForProfileResponse.Account();
                    if (object.accountId != null) {
                        if (typeof object.accountId !== "object")
                            throw TypeError(".teads.api.FindActiveAccountsForProfileResponse.Account.accountId: object expected");
                        message.accountId = $root.teads.api.FindActiveAccountsForProfileResponse.AccountId.fromObject(object.accountId);
                    }
                    if (object.name != null)
                        message.name = String(object.name);
                    switch (object.accountType) {
                    default:
                        if (typeof object.accountType === "number") {
                            message.accountType = object.accountType;
                            break;
                        }
                        break;
                    case "ACCOUNT_TYPE_INTERNAL_EMPLOYEE":
                    case 1:
                        message.accountType = 1;
                        break;
                    case "ACCOUNT_TYPE_PUBLISHER":
                    case 2:
                        message.accountType = 2;
                        break;
                    case "ACCOUNT_TYPE_ADVERTISER":
                    case 3:
                        message.accountType = 3;
                        break;
                    case "ACCOUNT_TYPE_AGENCY":
                    case 4:
                        message.accountType = 4;
                        break;
                    }
                    if (object.parentName != null)
                        message.parentName = String(object.parentName);
                    return message;
                };

                /**
                 * Creates a plain object from an Account message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.FindActiveAccountsForProfileResponse.Account
                 * @static
                 * @param {teads.api.FindActiveAccountsForProfileResponse.Account} message Account
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Account.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.accountId = null;
                        object.name = "";
                        object.accountType = options.enums === String ? "ACCOUNT_TYPE_INTERNAL_EMPLOYEE" : 1;
                        object.parentName = "";
                    }
                    if (message.accountId != null && message.hasOwnProperty("accountId"))
                        object.accountId = $root.teads.api.FindActiveAccountsForProfileResponse.AccountId.toObject(message.accountId, options);
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.accountType != null && message.hasOwnProperty("accountType"))
                        object.accountType = options.enums === String ? $root.teads.api.AccountType[message.accountType] === undefined ? message.accountType : $root.teads.api.AccountType[message.accountType] : message.accountType;
                    if (message.parentName != null && message.hasOwnProperty("parentName"))
                        object.parentName = message.parentName;
                    return object;
                };

                /**
                 * Converts this Account to JSON.
                 * @function toJSON
                 * @memberof teads.api.FindActiveAccountsForProfileResponse.Account
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Account.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for Account
                 * @function getTypeUrl
                 * @memberof teads.api.FindActiveAccountsForProfileResponse.Account
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Account.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.FindActiveAccountsForProfileResponse.Account";
                };

                return Account;
            })();

            FindActiveAccountsForProfileResponse.AccountId = (function() {

                /**
                 * Properties of an AccountId.
                 * @memberof teads.api.FindActiveAccountsForProfileResponse
                 * @interface IAccountId
                 * @property {number} profileId AccountId profileId
                 * @property {number} entityId AccountId entityId
                 */

                /**
                 * Constructs a new AccountId.
                 * @memberof teads.api.FindActiveAccountsForProfileResponse
                 * @classdesc Represents an AccountId.
                 * @implements IAccountId
                 * @constructor
                 * @param {teads.api.FindActiveAccountsForProfileResponse.IAccountId=} [properties] Properties to set
                 */
                function AccountId(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * AccountId profileId.
                 * @member {number} profileId
                 * @memberof teads.api.FindActiveAccountsForProfileResponse.AccountId
                 * @instance
                 */
                AccountId.prototype.profileId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * AccountId entityId.
                 * @member {number} entityId
                 * @memberof teads.api.FindActiveAccountsForProfileResponse.AccountId
                 * @instance
                 */
                AccountId.prototype.entityId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * Creates a new AccountId instance using the specified properties.
                 * @function create
                 * @memberof teads.api.FindActiveAccountsForProfileResponse.AccountId
                 * @static
                 * @param {teads.api.FindActiveAccountsForProfileResponse.IAccountId=} [properties] Properties to set
                 * @returns {teads.api.FindActiveAccountsForProfileResponse.AccountId} AccountId instance
                 */
                AccountId.create = function create(properties) {
                    return new AccountId(properties);
                };

                /**
                 * Encodes the specified AccountId message. Does not implicitly {@link teads.api.FindActiveAccountsForProfileResponse.AccountId.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.FindActiveAccountsForProfileResponse.AccountId
                 * @static
                 * @param {teads.api.FindActiveAccountsForProfileResponse.IAccountId} message AccountId message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                AccountId.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.profileId);
                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.entityId);
                    return writer;
                };

                /**
                 * Encodes the specified AccountId message, length delimited. Does not implicitly {@link teads.api.FindActiveAccountsForProfileResponse.AccountId.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.FindActiveAccountsForProfileResponse.AccountId
                 * @static
                 * @param {teads.api.FindActiveAccountsForProfileResponse.IAccountId} message AccountId message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                AccountId.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes an AccountId message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.FindActiveAccountsForProfileResponse.AccountId
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.FindActiveAccountsForProfileResponse.AccountId} AccountId
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                AccountId.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindActiveAccountsForProfileResponse.AccountId();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.profileId = reader.int64();
                                break;
                            }
                        case 2: {
                                message.entityId = reader.int64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("profileId"))
                        throw $util.ProtocolError("missing required 'profileId'", { instance: message });
                    if (!message.hasOwnProperty("entityId"))
                        throw $util.ProtocolError("missing required 'entityId'", { instance: message });
                    return message;
                };

                /**
                 * Decodes an AccountId message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.FindActiveAccountsForProfileResponse.AccountId
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.FindActiveAccountsForProfileResponse.AccountId} AccountId
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                AccountId.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies an AccountId message.
                 * @function verify
                 * @memberof teads.api.FindActiveAccountsForProfileResponse.AccountId
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                AccountId.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.profileId) && !(message.profileId && $util.isInteger(message.profileId.low) && $util.isInteger(message.profileId.high)))
                        return "profileId: integer|Long expected";
                    if (!$util.isInteger(message.entityId) && !(message.entityId && $util.isInteger(message.entityId.low) && $util.isInteger(message.entityId.high)))
                        return "entityId: integer|Long expected";
                    return null;
                };

                /**
                 * Creates an AccountId message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.FindActiveAccountsForProfileResponse.AccountId
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.FindActiveAccountsForProfileResponse.AccountId} AccountId
                 */
                AccountId.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.FindActiveAccountsForProfileResponse.AccountId)
                        return object;
                    var message = new $root.teads.api.FindActiveAccountsForProfileResponse.AccountId();
                    if (object.profileId != null)
                        if ($util.Long)
                            (message.profileId = $util.Long.fromValue(object.profileId)).unsigned = false;
                        else if (typeof object.profileId === "string")
                            message.profileId = parseInt(object.profileId, 10);
                        else if (typeof object.profileId === "number")
                            message.profileId = object.profileId;
                        else if (typeof object.profileId === "object")
                            message.profileId = new $util.LongBits(object.profileId.low >>> 0, object.profileId.high >>> 0).toNumber();
                    if (object.entityId != null)
                        if ($util.Long)
                            (message.entityId = $util.Long.fromValue(object.entityId)).unsigned = false;
                        else if (typeof object.entityId === "string")
                            message.entityId = parseInt(object.entityId, 10);
                        else if (typeof object.entityId === "number")
                            message.entityId = object.entityId;
                        else if (typeof object.entityId === "object")
                            message.entityId = new $util.LongBits(object.entityId.low >>> 0, object.entityId.high >>> 0).toNumber();
                    return message;
                };

                /**
                 * Creates a plain object from an AccountId message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.FindActiveAccountsForProfileResponse.AccountId
                 * @static
                 * @param {teads.api.FindActiveAccountsForProfileResponse.AccountId} message AccountId
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                AccountId.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.profileId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.profileId = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.entityId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.entityId = options.longs === String ? "0" : 0;
                    }
                    if (message.profileId != null && message.hasOwnProperty("profileId"))
                        if (typeof message.profileId === "number")
                            object.profileId = options.longs === String ? String(message.profileId) : message.profileId;
                        else
                            object.profileId = options.longs === String ? $util.Long.prototype.toString.call(message.profileId) : options.longs === Number ? new $util.LongBits(message.profileId.low >>> 0, message.profileId.high >>> 0).toNumber() : message.profileId;
                    if (message.entityId != null && message.hasOwnProperty("entityId"))
                        if (typeof message.entityId === "number")
                            object.entityId = options.longs === String ? String(message.entityId) : message.entityId;
                        else
                            object.entityId = options.longs === String ? $util.Long.prototype.toString.call(message.entityId) : options.longs === Number ? new $util.LongBits(message.entityId.low >>> 0, message.entityId.high >>> 0).toNumber() : message.entityId;
                    return object;
                };

                /**
                 * Converts this AccountId to JSON.
                 * @function toJSON
                 * @memberof teads.api.FindActiveAccountsForProfileResponse.AccountId
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                AccountId.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for AccountId
                 * @function getTypeUrl
                 * @memberof teads.api.FindActiveAccountsForProfileResponse.AccountId
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                AccountId.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.FindActiveAccountsForProfileResponse.AccountId";
                };

                return AccountId;
            })();

            return FindActiveAccountsForProfileResponse;
        })();

        api.FindBuyerPixelsForAdvertiserRequest = (function() {

            /**
             * Properties of a FindBuyerPixelsForAdvertiserRequest.
             * @memberof teads.api
             * @interface IFindBuyerPixelsForAdvertiserRequest
             * @property {teads.api.ISecurityContext} securityContext FindBuyerPixelsForAdvertiserRequest securityContext
             * @property {number} advertiserId FindBuyerPixelsForAdvertiserRequest advertiserId
             * @property {string|null} [search] FindBuyerPixelsForAdvertiserRequest search
             */

            /**
             * Constructs a new FindBuyerPixelsForAdvertiserRequest.
             * @memberof teads.api
             * @classdesc Represents a FindBuyerPixelsForAdvertiserRequest.
             * @implements IFindBuyerPixelsForAdvertiserRequest
             * @constructor
             * @param {teads.api.IFindBuyerPixelsForAdvertiserRequest=} [properties] Properties to set
             */
            function FindBuyerPixelsForAdvertiserRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * FindBuyerPixelsForAdvertiserRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.FindBuyerPixelsForAdvertiserRequest
             * @instance
             */
            FindBuyerPixelsForAdvertiserRequest.prototype.securityContext = null;

            /**
             * FindBuyerPixelsForAdvertiserRequest advertiserId.
             * @member {number} advertiserId
             * @memberof teads.api.FindBuyerPixelsForAdvertiserRequest
             * @instance
             */
            FindBuyerPixelsForAdvertiserRequest.prototype.advertiserId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * FindBuyerPixelsForAdvertiserRequest search.
             * @member {string} search
             * @memberof teads.api.FindBuyerPixelsForAdvertiserRequest
             * @instance
             */
            FindBuyerPixelsForAdvertiserRequest.prototype.search = "";

            /**
             * Creates a new FindBuyerPixelsForAdvertiserRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.FindBuyerPixelsForAdvertiserRequest
             * @static
             * @param {teads.api.IFindBuyerPixelsForAdvertiserRequest=} [properties] Properties to set
             * @returns {teads.api.FindBuyerPixelsForAdvertiserRequest} FindBuyerPixelsForAdvertiserRequest instance
             */
            FindBuyerPixelsForAdvertiserRequest.create = function create(properties) {
                return new FindBuyerPixelsForAdvertiserRequest(properties);
            };

            /**
             * Encodes the specified FindBuyerPixelsForAdvertiserRequest message. Does not implicitly {@link teads.api.FindBuyerPixelsForAdvertiserRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.FindBuyerPixelsForAdvertiserRequest
             * @static
             * @param {teads.api.IFindBuyerPixelsForAdvertiserRequest} message FindBuyerPixelsForAdvertiserRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindBuyerPixelsForAdvertiserRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.advertiserId);
                if (message.search != null && Object.hasOwnProperty.call(message, "search"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.search);
                return writer;
            };

            /**
             * Encodes the specified FindBuyerPixelsForAdvertiserRequest message, length delimited. Does not implicitly {@link teads.api.FindBuyerPixelsForAdvertiserRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.FindBuyerPixelsForAdvertiserRequest
             * @static
             * @param {teads.api.IFindBuyerPixelsForAdvertiserRequest} message FindBuyerPixelsForAdvertiserRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindBuyerPixelsForAdvertiserRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a FindBuyerPixelsForAdvertiserRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.FindBuyerPixelsForAdvertiserRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.FindBuyerPixelsForAdvertiserRequest} FindBuyerPixelsForAdvertiserRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindBuyerPixelsForAdvertiserRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindBuyerPixelsForAdvertiserRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.advertiserId = reader.int64();
                            break;
                        }
                    case 3: {
                            message.search = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("advertiserId"))
                    throw $util.ProtocolError("missing required 'advertiserId'", { instance: message });
                return message;
            };

            /**
             * Decodes a FindBuyerPixelsForAdvertiserRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.FindBuyerPixelsForAdvertiserRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.FindBuyerPixelsForAdvertiserRequest} FindBuyerPixelsForAdvertiserRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindBuyerPixelsForAdvertiserRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a FindBuyerPixelsForAdvertiserRequest message.
             * @function verify
             * @memberof teads.api.FindBuyerPixelsForAdvertiserRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FindBuyerPixelsForAdvertiserRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.advertiserId) && !(message.advertiserId && $util.isInteger(message.advertiserId.low) && $util.isInteger(message.advertiserId.high)))
                    return "advertiserId: integer|Long expected";
                if (message.search != null && message.hasOwnProperty("search"))
                    if (!$util.isString(message.search))
                        return "search: string expected";
                return null;
            };

            /**
             * Creates a FindBuyerPixelsForAdvertiserRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.FindBuyerPixelsForAdvertiserRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.FindBuyerPixelsForAdvertiserRequest} FindBuyerPixelsForAdvertiserRequest
             */
            FindBuyerPixelsForAdvertiserRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.FindBuyerPixelsForAdvertiserRequest)
                    return object;
                var message = new $root.teads.api.FindBuyerPixelsForAdvertiserRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.FindBuyerPixelsForAdvertiserRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.advertiserId != null)
                    if ($util.Long)
                        (message.advertiserId = $util.Long.fromValue(object.advertiserId)).unsigned = false;
                    else if (typeof object.advertiserId === "string")
                        message.advertiserId = parseInt(object.advertiserId, 10);
                    else if (typeof object.advertiserId === "number")
                        message.advertiserId = object.advertiserId;
                    else if (typeof object.advertiserId === "object")
                        message.advertiserId = new $util.LongBits(object.advertiserId.low >>> 0, object.advertiserId.high >>> 0).toNumber();
                if (object.search != null)
                    message.search = String(object.search);
                return message;
            };

            /**
             * Creates a plain object from a FindBuyerPixelsForAdvertiserRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.FindBuyerPixelsForAdvertiserRequest
             * @static
             * @param {teads.api.FindBuyerPixelsForAdvertiserRequest} message FindBuyerPixelsForAdvertiserRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FindBuyerPixelsForAdvertiserRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.advertiserId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.advertiserId = options.longs === String ? "0" : 0;
                    object.search = "";
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.advertiserId != null && message.hasOwnProperty("advertiserId"))
                    if (typeof message.advertiserId === "number")
                        object.advertiserId = options.longs === String ? String(message.advertiserId) : message.advertiserId;
                    else
                        object.advertiserId = options.longs === String ? $util.Long.prototype.toString.call(message.advertiserId) : options.longs === Number ? new $util.LongBits(message.advertiserId.low >>> 0, message.advertiserId.high >>> 0).toNumber() : message.advertiserId;
                if (message.search != null && message.hasOwnProperty("search"))
                    object.search = message.search;
                return object;
            };

            /**
             * Converts this FindBuyerPixelsForAdvertiserRequest to JSON.
             * @function toJSON
             * @memberof teads.api.FindBuyerPixelsForAdvertiserRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FindBuyerPixelsForAdvertiserRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for FindBuyerPixelsForAdvertiserRequest
             * @function getTypeUrl
             * @memberof teads.api.FindBuyerPixelsForAdvertiserRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            FindBuyerPixelsForAdvertiserRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.FindBuyerPixelsForAdvertiserRequest";
            };

            return FindBuyerPixelsForAdvertiserRequest;
        })();

        api.FindBuyerPixelsForAdvertiserResponse = (function() {

            /**
             * Properties of a FindBuyerPixelsForAdvertiserResponse.
             * @memberof teads.api
             * @interface IFindBuyerPixelsForAdvertiserResponse
             * @property {Array.<teads.api.FindBuyerPixelsForAdvertiserResponse.IBuyerPixelsByEntity>|null} [buyerPixelsByEntity] FindBuyerPixelsForAdvertiserResponse buyerPixelsByEntity
             */

            /**
             * Constructs a new FindBuyerPixelsForAdvertiserResponse.
             * @memberof teads.api
             * @classdesc Represents a FindBuyerPixelsForAdvertiserResponse.
             * @implements IFindBuyerPixelsForAdvertiserResponse
             * @constructor
             * @param {teads.api.IFindBuyerPixelsForAdvertiserResponse=} [properties] Properties to set
             */
            function FindBuyerPixelsForAdvertiserResponse(properties) {
                this.buyerPixelsByEntity = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * FindBuyerPixelsForAdvertiserResponse buyerPixelsByEntity.
             * @member {Array.<teads.api.FindBuyerPixelsForAdvertiserResponse.IBuyerPixelsByEntity>} buyerPixelsByEntity
             * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse
             * @instance
             */
            FindBuyerPixelsForAdvertiserResponse.prototype.buyerPixelsByEntity = $util.emptyArray;

            /**
             * Creates a new FindBuyerPixelsForAdvertiserResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse
             * @static
             * @param {teads.api.IFindBuyerPixelsForAdvertiserResponse=} [properties] Properties to set
             * @returns {teads.api.FindBuyerPixelsForAdvertiserResponse} FindBuyerPixelsForAdvertiserResponse instance
             */
            FindBuyerPixelsForAdvertiserResponse.create = function create(properties) {
                return new FindBuyerPixelsForAdvertiserResponse(properties);
            };

            /**
             * Encodes the specified FindBuyerPixelsForAdvertiserResponse message. Does not implicitly {@link teads.api.FindBuyerPixelsForAdvertiserResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse
             * @static
             * @param {teads.api.IFindBuyerPixelsForAdvertiserResponse} message FindBuyerPixelsForAdvertiserResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindBuyerPixelsForAdvertiserResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.buyerPixelsByEntity != null && message.buyerPixelsByEntity.length)
                    for (var i = 0; i < message.buyerPixelsByEntity.length; ++i)
                        $root.teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity.encode(message.buyerPixelsByEntity[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified FindBuyerPixelsForAdvertiserResponse message, length delimited. Does not implicitly {@link teads.api.FindBuyerPixelsForAdvertiserResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse
             * @static
             * @param {teads.api.IFindBuyerPixelsForAdvertiserResponse} message FindBuyerPixelsForAdvertiserResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindBuyerPixelsForAdvertiserResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a FindBuyerPixelsForAdvertiserResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.FindBuyerPixelsForAdvertiserResponse} FindBuyerPixelsForAdvertiserResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindBuyerPixelsForAdvertiserResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindBuyerPixelsForAdvertiserResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 2: {
                            if (!(message.buyerPixelsByEntity && message.buyerPixelsByEntity.length))
                                message.buyerPixelsByEntity = [];
                            message.buyerPixelsByEntity.push($root.teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a FindBuyerPixelsForAdvertiserResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.FindBuyerPixelsForAdvertiserResponse} FindBuyerPixelsForAdvertiserResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindBuyerPixelsForAdvertiserResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a FindBuyerPixelsForAdvertiserResponse message.
             * @function verify
             * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FindBuyerPixelsForAdvertiserResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.buyerPixelsByEntity != null && message.hasOwnProperty("buyerPixelsByEntity")) {
                    if (!Array.isArray(message.buyerPixelsByEntity))
                        return "buyerPixelsByEntity: array expected";
                    for (var i = 0; i < message.buyerPixelsByEntity.length; ++i) {
                        var error = $root.teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity.verify(message.buyerPixelsByEntity[i]);
                        if (error)
                            return "buyerPixelsByEntity." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a FindBuyerPixelsForAdvertiserResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.FindBuyerPixelsForAdvertiserResponse} FindBuyerPixelsForAdvertiserResponse
             */
            FindBuyerPixelsForAdvertiserResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.FindBuyerPixelsForAdvertiserResponse)
                    return object;
                var message = new $root.teads.api.FindBuyerPixelsForAdvertiserResponse();
                if (object.buyerPixelsByEntity) {
                    if (!Array.isArray(object.buyerPixelsByEntity))
                        throw TypeError(".teads.api.FindBuyerPixelsForAdvertiserResponse.buyerPixelsByEntity: array expected");
                    message.buyerPixelsByEntity = [];
                    for (var i = 0; i < object.buyerPixelsByEntity.length; ++i) {
                        if (typeof object.buyerPixelsByEntity[i] !== "object")
                            throw TypeError(".teads.api.FindBuyerPixelsForAdvertiserResponse.buyerPixelsByEntity: object expected");
                        message.buyerPixelsByEntity[i] = $root.teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity.fromObject(object.buyerPixelsByEntity[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a FindBuyerPixelsForAdvertiserResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse
             * @static
             * @param {teads.api.FindBuyerPixelsForAdvertiserResponse} message FindBuyerPixelsForAdvertiserResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FindBuyerPixelsForAdvertiserResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.buyerPixelsByEntity = [];
                if (message.buyerPixelsByEntity && message.buyerPixelsByEntity.length) {
                    object.buyerPixelsByEntity = [];
                    for (var j = 0; j < message.buyerPixelsByEntity.length; ++j)
                        object.buyerPixelsByEntity[j] = $root.teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity.toObject(message.buyerPixelsByEntity[j], options);
                }
                return object;
            };

            /**
             * Converts this FindBuyerPixelsForAdvertiserResponse to JSON.
             * @function toJSON
             * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FindBuyerPixelsForAdvertiserResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for FindBuyerPixelsForAdvertiserResponse
             * @function getTypeUrl
             * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            FindBuyerPixelsForAdvertiserResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.FindBuyerPixelsForAdvertiserResponse";
            };

            FindBuyerPixelsForAdvertiserResponse.BuyerPixel = (function() {

                /**
                 * Properties of a BuyerPixel.
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse
                 * @interface IBuyerPixel
                 * @property {number} id BuyerPixel id
                 * @property {string} name BuyerPixel name
                 * @property {google.protobuf.ITimestamp|null} [lastActivityDate] BuyerPixel lastActivityDate
                 */

                /**
                 * Constructs a new BuyerPixel.
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse
                 * @classdesc Represents a BuyerPixel.
                 * @implements IBuyerPixel
                 * @constructor
                 * @param {teads.api.FindBuyerPixelsForAdvertiserResponse.IBuyerPixel=} [properties] Properties to set
                 */
                function BuyerPixel(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * BuyerPixel id.
                 * @member {number} id
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel
                 * @instance
                 */
                BuyerPixel.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * BuyerPixel name.
                 * @member {string} name
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel
                 * @instance
                 */
                BuyerPixel.prototype.name = "";

                /**
                 * BuyerPixel lastActivityDate.
                 * @member {google.protobuf.ITimestamp|null|undefined} lastActivityDate
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel
                 * @instance
                 */
                BuyerPixel.prototype.lastActivityDate = null;

                /**
                 * Creates a new BuyerPixel instance using the specified properties.
                 * @function create
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel
                 * @static
                 * @param {teads.api.FindBuyerPixelsForAdvertiserResponse.IBuyerPixel=} [properties] Properties to set
                 * @returns {teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel} BuyerPixel instance
                 */
                BuyerPixel.create = function create(properties) {
                    return new BuyerPixel(properties);
                };

                /**
                 * Encodes the specified BuyerPixel message. Does not implicitly {@link teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel
                 * @static
                 * @param {teads.api.FindBuyerPixelsForAdvertiserResponse.IBuyerPixel} message BuyerPixel message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BuyerPixel.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.id);
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
                    if (message.lastActivityDate != null && Object.hasOwnProperty.call(message, "lastActivityDate"))
                        $root.google.protobuf.Timestamp.encode(message.lastActivityDate, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified BuyerPixel message, length delimited. Does not implicitly {@link teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel
                 * @static
                 * @param {teads.api.FindBuyerPixelsForAdvertiserResponse.IBuyerPixel} message BuyerPixel message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BuyerPixel.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a BuyerPixel message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel} BuyerPixel
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BuyerPixel.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.id = reader.int64();
                                break;
                            }
                        case 2: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.lastActivityDate = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("id"))
                        throw $util.ProtocolError("missing required 'id'", { instance: message });
                    if (!message.hasOwnProperty("name"))
                        throw $util.ProtocolError("missing required 'name'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a BuyerPixel message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel} BuyerPixel
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BuyerPixel.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a BuyerPixel message.
                 * @function verify
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                BuyerPixel.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.id) && !(message.id && $util.isInteger(message.id.low) && $util.isInteger(message.id.high)))
                        return "id: integer|Long expected";
                    if (!$util.isString(message.name))
                        return "name: string expected";
                    if (message.lastActivityDate != null && message.hasOwnProperty("lastActivityDate")) {
                        var error = $root.google.protobuf.Timestamp.verify(message.lastActivityDate);
                        if (error)
                            return "lastActivityDate." + error;
                    }
                    return null;
                };

                /**
                 * Creates a BuyerPixel message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel} BuyerPixel
                 */
                BuyerPixel.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel)
                        return object;
                    var message = new $root.teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel();
                    if (object.id != null)
                        if ($util.Long)
                            (message.id = $util.Long.fromValue(object.id)).unsigned = false;
                        else if (typeof object.id === "string")
                            message.id = parseInt(object.id, 10);
                        else if (typeof object.id === "number")
                            message.id = object.id;
                        else if (typeof object.id === "object")
                            message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.lastActivityDate != null) {
                        if (typeof object.lastActivityDate !== "object")
                            throw TypeError(".teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel.lastActivityDate: object expected");
                        message.lastActivityDate = $root.google.protobuf.Timestamp.fromObject(object.lastActivityDate);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a BuyerPixel message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel
                 * @static
                 * @param {teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel} message BuyerPixel
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                BuyerPixel.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.id = options.longs === String ? "0" : 0;
                        object.name = "";
                        object.lastActivityDate = null;
                    }
                    if (message.id != null && message.hasOwnProperty("id"))
                        if (typeof message.id === "number")
                            object.id = options.longs === String ? String(message.id) : message.id;
                        else
                            object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber() : message.id;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.lastActivityDate != null && message.hasOwnProperty("lastActivityDate"))
                        object.lastActivityDate = $root.google.protobuf.Timestamp.toObject(message.lastActivityDate, options);
                    return object;
                };

                /**
                 * Converts this BuyerPixel to JSON.
                 * @function toJSON
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                BuyerPixel.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for BuyerPixel
                 * @function getTypeUrl
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                BuyerPixel.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel";
                };

                return BuyerPixel;
            })();

            FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity = (function() {

                /**
                 * Properties of a BuyerPixelsByEntity.
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse
                 * @interface IBuyerPixelsByEntity
                 * @property {number} entityId BuyerPixelsByEntity entityId
                 * @property {string} seatName BuyerPixelsByEntity seatName
                 * @property {Array.<teads.api.FindBuyerPixelsForAdvertiserResponse.IBuyerPixel>|null} [buyerPixels] BuyerPixelsByEntity buyerPixels
                 */

                /**
                 * Constructs a new BuyerPixelsByEntity.
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse
                 * @classdesc Represents a BuyerPixelsByEntity.
                 * @implements IBuyerPixelsByEntity
                 * @constructor
                 * @param {teads.api.FindBuyerPixelsForAdvertiserResponse.IBuyerPixelsByEntity=} [properties] Properties to set
                 */
                function BuyerPixelsByEntity(properties) {
                    this.buyerPixels = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * BuyerPixelsByEntity entityId.
                 * @member {number} entityId
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity
                 * @instance
                 */
                BuyerPixelsByEntity.prototype.entityId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * BuyerPixelsByEntity seatName.
                 * @member {string} seatName
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity
                 * @instance
                 */
                BuyerPixelsByEntity.prototype.seatName = "";

                /**
                 * BuyerPixelsByEntity buyerPixels.
                 * @member {Array.<teads.api.FindBuyerPixelsForAdvertiserResponse.IBuyerPixel>} buyerPixels
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity
                 * @instance
                 */
                BuyerPixelsByEntity.prototype.buyerPixels = $util.emptyArray;

                /**
                 * Creates a new BuyerPixelsByEntity instance using the specified properties.
                 * @function create
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity
                 * @static
                 * @param {teads.api.FindBuyerPixelsForAdvertiserResponse.IBuyerPixelsByEntity=} [properties] Properties to set
                 * @returns {teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity} BuyerPixelsByEntity instance
                 */
                BuyerPixelsByEntity.create = function create(properties) {
                    return new BuyerPixelsByEntity(properties);
                };

                /**
                 * Encodes the specified BuyerPixelsByEntity message. Does not implicitly {@link teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity
                 * @static
                 * @param {teads.api.FindBuyerPixelsForAdvertiserResponse.IBuyerPixelsByEntity} message BuyerPixelsByEntity message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BuyerPixelsByEntity.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.entityId);
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.seatName);
                    if (message.buyerPixels != null && message.buyerPixels.length)
                        for (var i = 0; i < message.buyerPixels.length; ++i)
                            $root.teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel.encode(message.buyerPixels[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified BuyerPixelsByEntity message, length delimited. Does not implicitly {@link teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity
                 * @static
                 * @param {teads.api.FindBuyerPixelsForAdvertiserResponse.IBuyerPixelsByEntity} message BuyerPixelsByEntity message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BuyerPixelsByEntity.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a BuyerPixelsByEntity message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity} BuyerPixelsByEntity
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BuyerPixelsByEntity.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.entityId = reader.int64();
                                break;
                            }
                        case 2: {
                                message.seatName = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.buyerPixels && message.buyerPixels.length))
                                    message.buyerPixels = [];
                                message.buyerPixels.push($root.teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("entityId"))
                        throw $util.ProtocolError("missing required 'entityId'", { instance: message });
                    if (!message.hasOwnProperty("seatName"))
                        throw $util.ProtocolError("missing required 'seatName'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a BuyerPixelsByEntity message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity} BuyerPixelsByEntity
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BuyerPixelsByEntity.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a BuyerPixelsByEntity message.
                 * @function verify
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                BuyerPixelsByEntity.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.entityId) && !(message.entityId && $util.isInteger(message.entityId.low) && $util.isInteger(message.entityId.high)))
                        return "entityId: integer|Long expected";
                    if (!$util.isString(message.seatName))
                        return "seatName: string expected";
                    if (message.buyerPixels != null && message.hasOwnProperty("buyerPixels")) {
                        if (!Array.isArray(message.buyerPixels))
                            return "buyerPixels: array expected";
                        for (var i = 0; i < message.buyerPixels.length; ++i) {
                            var error = $root.teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel.verify(message.buyerPixels[i]);
                            if (error)
                                return "buyerPixels." + error;
                        }
                    }
                    return null;
                };

                /**
                 * Creates a BuyerPixelsByEntity message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity} BuyerPixelsByEntity
                 */
                BuyerPixelsByEntity.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity)
                        return object;
                    var message = new $root.teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity();
                    if (object.entityId != null)
                        if ($util.Long)
                            (message.entityId = $util.Long.fromValue(object.entityId)).unsigned = false;
                        else if (typeof object.entityId === "string")
                            message.entityId = parseInt(object.entityId, 10);
                        else if (typeof object.entityId === "number")
                            message.entityId = object.entityId;
                        else if (typeof object.entityId === "object")
                            message.entityId = new $util.LongBits(object.entityId.low >>> 0, object.entityId.high >>> 0).toNumber();
                    if (object.seatName != null)
                        message.seatName = String(object.seatName);
                    if (object.buyerPixels) {
                        if (!Array.isArray(object.buyerPixels))
                            throw TypeError(".teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity.buyerPixels: array expected");
                        message.buyerPixels = [];
                        for (var i = 0; i < object.buyerPixels.length; ++i) {
                            if (typeof object.buyerPixels[i] !== "object")
                                throw TypeError(".teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity.buyerPixels: object expected");
                            message.buyerPixels[i] = $root.teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel.fromObject(object.buyerPixels[i]);
                        }
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a BuyerPixelsByEntity message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity
                 * @static
                 * @param {teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity} message BuyerPixelsByEntity
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                BuyerPixelsByEntity.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.buyerPixels = [];
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.entityId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.entityId = options.longs === String ? "0" : 0;
                        object.seatName = "";
                    }
                    if (message.entityId != null && message.hasOwnProperty("entityId"))
                        if (typeof message.entityId === "number")
                            object.entityId = options.longs === String ? String(message.entityId) : message.entityId;
                        else
                            object.entityId = options.longs === String ? $util.Long.prototype.toString.call(message.entityId) : options.longs === Number ? new $util.LongBits(message.entityId.low >>> 0, message.entityId.high >>> 0).toNumber() : message.entityId;
                    if (message.seatName != null && message.hasOwnProperty("seatName"))
                        object.seatName = message.seatName;
                    if (message.buyerPixels && message.buyerPixels.length) {
                        object.buyerPixels = [];
                        for (var j = 0; j < message.buyerPixels.length; ++j)
                            object.buyerPixels[j] = $root.teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixel.toObject(message.buyerPixels[j], options);
                    }
                    return object;
                };

                /**
                 * Converts this BuyerPixelsByEntity to JSON.
                 * @function toJSON
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                BuyerPixelsByEntity.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for BuyerPixelsByEntity
                 * @function getTypeUrl
                 * @memberof teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                BuyerPixelsByEntity.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.FindBuyerPixelsForAdvertiserResponse.BuyerPixelsByEntity";
                };

                return BuyerPixelsByEntity;
            })();

            return FindBuyerPixelsForAdvertiserResponse;
        })();

        api.FindBuyerSeatForEntityRequest = (function() {

            /**
             * Properties of a FindBuyerSeatForEntityRequest.
             * @memberof teads.api
             * @interface IFindBuyerSeatForEntityRequest
             * @property {teads.api.ISecurityContext} securityContext FindBuyerSeatForEntityRequest securityContext
             * @property {number} entityId FindBuyerSeatForEntityRequest entityId
             */

            /**
             * Constructs a new FindBuyerSeatForEntityRequest.
             * @memberof teads.api
             * @classdesc Represents a FindBuyerSeatForEntityRequest.
             * @implements IFindBuyerSeatForEntityRequest
             * @constructor
             * @param {teads.api.IFindBuyerSeatForEntityRequest=} [properties] Properties to set
             */
            function FindBuyerSeatForEntityRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * FindBuyerSeatForEntityRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.FindBuyerSeatForEntityRequest
             * @instance
             */
            FindBuyerSeatForEntityRequest.prototype.securityContext = null;

            /**
             * FindBuyerSeatForEntityRequest entityId.
             * @member {number} entityId
             * @memberof teads.api.FindBuyerSeatForEntityRequest
             * @instance
             */
            FindBuyerSeatForEntityRequest.prototype.entityId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new FindBuyerSeatForEntityRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.FindBuyerSeatForEntityRequest
             * @static
             * @param {teads.api.IFindBuyerSeatForEntityRequest=} [properties] Properties to set
             * @returns {teads.api.FindBuyerSeatForEntityRequest} FindBuyerSeatForEntityRequest instance
             */
            FindBuyerSeatForEntityRequest.create = function create(properties) {
                return new FindBuyerSeatForEntityRequest(properties);
            };

            /**
             * Encodes the specified FindBuyerSeatForEntityRequest message. Does not implicitly {@link teads.api.FindBuyerSeatForEntityRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.FindBuyerSeatForEntityRequest
             * @static
             * @param {teads.api.IFindBuyerSeatForEntityRequest} message FindBuyerSeatForEntityRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindBuyerSeatForEntityRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.entityId);
                return writer;
            };

            /**
             * Encodes the specified FindBuyerSeatForEntityRequest message, length delimited. Does not implicitly {@link teads.api.FindBuyerSeatForEntityRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.FindBuyerSeatForEntityRequest
             * @static
             * @param {teads.api.IFindBuyerSeatForEntityRequest} message FindBuyerSeatForEntityRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindBuyerSeatForEntityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a FindBuyerSeatForEntityRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.FindBuyerSeatForEntityRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.FindBuyerSeatForEntityRequest} FindBuyerSeatForEntityRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindBuyerSeatForEntityRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindBuyerSeatForEntityRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.entityId = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("entityId"))
                    throw $util.ProtocolError("missing required 'entityId'", { instance: message });
                return message;
            };

            /**
             * Decodes a FindBuyerSeatForEntityRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.FindBuyerSeatForEntityRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.FindBuyerSeatForEntityRequest} FindBuyerSeatForEntityRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindBuyerSeatForEntityRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a FindBuyerSeatForEntityRequest message.
             * @function verify
             * @memberof teads.api.FindBuyerSeatForEntityRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FindBuyerSeatForEntityRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.entityId) && !(message.entityId && $util.isInteger(message.entityId.low) && $util.isInteger(message.entityId.high)))
                    return "entityId: integer|Long expected";
                return null;
            };

            /**
             * Creates a FindBuyerSeatForEntityRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.FindBuyerSeatForEntityRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.FindBuyerSeatForEntityRequest} FindBuyerSeatForEntityRequest
             */
            FindBuyerSeatForEntityRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.FindBuyerSeatForEntityRequest)
                    return object;
                var message = new $root.teads.api.FindBuyerSeatForEntityRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.FindBuyerSeatForEntityRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.entityId != null)
                    if ($util.Long)
                        (message.entityId = $util.Long.fromValue(object.entityId)).unsigned = false;
                    else if (typeof object.entityId === "string")
                        message.entityId = parseInt(object.entityId, 10);
                    else if (typeof object.entityId === "number")
                        message.entityId = object.entityId;
                    else if (typeof object.entityId === "object")
                        message.entityId = new $util.LongBits(object.entityId.low >>> 0, object.entityId.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from a FindBuyerSeatForEntityRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.FindBuyerSeatForEntityRequest
             * @static
             * @param {teads.api.FindBuyerSeatForEntityRequest} message FindBuyerSeatForEntityRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FindBuyerSeatForEntityRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.entityId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.entityId = options.longs === String ? "0" : 0;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.entityId != null && message.hasOwnProperty("entityId"))
                    if (typeof message.entityId === "number")
                        object.entityId = options.longs === String ? String(message.entityId) : message.entityId;
                    else
                        object.entityId = options.longs === String ? $util.Long.prototype.toString.call(message.entityId) : options.longs === Number ? new $util.LongBits(message.entityId.low >>> 0, message.entityId.high >>> 0).toNumber() : message.entityId;
                return object;
            };

            /**
             * Converts this FindBuyerSeatForEntityRequest to JSON.
             * @function toJSON
             * @memberof teads.api.FindBuyerSeatForEntityRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FindBuyerSeatForEntityRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for FindBuyerSeatForEntityRequest
             * @function getTypeUrl
             * @memberof teads.api.FindBuyerSeatForEntityRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            FindBuyerSeatForEntityRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.FindBuyerSeatForEntityRequest";
            };

            return FindBuyerSeatForEntityRequest;
        })();

        api.FindBuyerSeatForEntityResponse = (function() {

            /**
             * Properties of a FindBuyerSeatForEntityResponse.
             * @memberof teads.api
             * @interface IFindBuyerSeatForEntityResponse
             * @property {number} seatId FindBuyerSeatForEntityResponse seatId
             * @property {string} name FindBuyerSeatForEntityResponse name
             * @property {number} fee FindBuyerSeatForEntityResponse fee
             * @property {teads.api.BuyerSeatStatus} status FindBuyerSeatForEntityResponse status
             * @property {string|null} [salesforceContractId] FindBuyerSeatForEntityResponse salesforceContractId
             * @property {teads.api.BuyerServiceLevel} serviceLevel FindBuyerSeatForEntityResponse serviceLevel
             * @property {string|null} [salesforceSeatId] FindBuyerSeatForEntityResponse salesforceSeatId
             * @property {Array.<teads.api.SeatFeature>|null} [activatedSeatSettings] FindBuyerSeatForEntityResponse activatedSeatSettings
             * @property {boolean} canRunInternalTestCampaign FindBuyerSeatForEntityResponse canRunInternalTestCampaign
             */

            /**
             * Constructs a new FindBuyerSeatForEntityResponse.
             * @memberof teads.api
             * @classdesc Represents a FindBuyerSeatForEntityResponse.
             * @implements IFindBuyerSeatForEntityResponse
             * @constructor
             * @param {teads.api.IFindBuyerSeatForEntityResponse=} [properties] Properties to set
             */
            function FindBuyerSeatForEntityResponse(properties) {
                this.activatedSeatSettings = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * FindBuyerSeatForEntityResponse seatId.
             * @member {number} seatId
             * @memberof teads.api.FindBuyerSeatForEntityResponse
             * @instance
             */
            FindBuyerSeatForEntityResponse.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * FindBuyerSeatForEntityResponse name.
             * @member {string} name
             * @memberof teads.api.FindBuyerSeatForEntityResponse
             * @instance
             */
            FindBuyerSeatForEntityResponse.prototype.name = "";

            /**
             * FindBuyerSeatForEntityResponse fee.
             * @member {number} fee
             * @memberof teads.api.FindBuyerSeatForEntityResponse
             * @instance
             */
            FindBuyerSeatForEntityResponse.prototype.fee = 0;

            /**
             * FindBuyerSeatForEntityResponse status.
             * @member {teads.api.BuyerSeatStatus} status
             * @memberof teads.api.FindBuyerSeatForEntityResponse
             * @instance
             */
            FindBuyerSeatForEntityResponse.prototype.status = 1;

            /**
             * FindBuyerSeatForEntityResponse salesforceContractId.
             * @member {string} salesforceContractId
             * @memberof teads.api.FindBuyerSeatForEntityResponse
             * @instance
             */
            FindBuyerSeatForEntityResponse.prototype.salesforceContractId = "";

            /**
             * FindBuyerSeatForEntityResponse serviceLevel.
             * @member {teads.api.BuyerServiceLevel} serviceLevel
             * @memberof teads.api.FindBuyerSeatForEntityResponse
             * @instance
             */
            FindBuyerSeatForEntityResponse.prototype.serviceLevel = 1;

            /**
             * FindBuyerSeatForEntityResponse salesforceSeatId.
             * @member {string} salesforceSeatId
             * @memberof teads.api.FindBuyerSeatForEntityResponse
             * @instance
             */
            FindBuyerSeatForEntityResponse.prototype.salesforceSeatId = "";

            /**
             * FindBuyerSeatForEntityResponse activatedSeatSettings.
             * @member {Array.<teads.api.SeatFeature>} activatedSeatSettings
             * @memberof teads.api.FindBuyerSeatForEntityResponse
             * @instance
             */
            FindBuyerSeatForEntityResponse.prototype.activatedSeatSettings = $util.emptyArray;

            /**
             * FindBuyerSeatForEntityResponse canRunInternalTestCampaign.
             * @member {boolean} canRunInternalTestCampaign
             * @memberof teads.api.FindBuyerSeatForEntityResponse
             * @instance
             */
            FindBuyerSeatForEntityResponse.prototype.canRunInternalTestCampaign = false;

            /**
             * Creates a new FindBuyerSeatForEntityResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.FindBuyerSeatForEntityResponse
             * @static
             * @param {teads.api.IFindBuyerSeatForEntityResponse=} [properties] Properties to set
             * @returns {teads.api.FindBuyerSeatForEntityResponse} FindBuyerSeatForEntityResponse instance
             */
            FindBuyerSeatForEntityResponse.create = function create(properties) {
                return new FindBuyerSeatForEntityResponse(properties);
            };

            /**
             * Encodes the specified FindBuyerSeatForEntityResponse message. Does not implicitly {@link teads.api.FindBuyerSeatForEntityResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.FindBuyerSeatForEntityResponse
             * @static
             * @param {teads.api.IFindBuyerSeatForEntityResponse} message FindBuyerSeatForEntityResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindBuyerSeatForEntityResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seatId);
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
                writer.uint32(/* id 3, wireType 1 =*/25).double(message.fee);
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.status);
                if (message.salesforceContractId != null && Object.hasOwnProperty.call(message, "salesforceContractId"))
                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.salesforceContractId);
                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.serviceLevel);
                if (message.salesforceSeatId != null && Object.hasOwnProperty.call(message, "salesforceSeatId"))
                    writer.uint32(/* id 10, wireType 2 =*/82).string(message.salesforceSeatId);
                if (message.activatedSeatSettings != null && message.activatedSeatSettings.length)
                    for (var i = 0; i < message.activatedSeatSettings.length; ++i)
                        writer.uint32(/* id 18, wireType 0 =*/144).int32(message.activatedSeatSettings[i]);
                writer.uint32(/* id 19, wireType 0 =*/152).bool(message.canRunInternalTestCampaign);
                return writer;
            };

            /**
             * Encodes the specified FindBuyerSeatForEntityResponse message, length delimited. Does not implicitly {@link teads.api.FindBuyerSeatForEntityResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.FindBuyerSeatForEntityResponse
             * @static
             * @param {teads.api.IFindBuyerSeatForEntityResponse} message FindBuyerSeatForEntityResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindBuyerSeatForEntityResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a FindBuyerSeatForEntityResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.FindBuyerSeatForEntityResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.FindBuyerSeatForEntityResponse} FindBuyerSeatForEntityResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindBuyerSeatForEntityResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindBuyerSeatForEntityResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.seatId = reader.int64();
                            break;
                        }
                    case 2: {
                            message.name = reader.string();
                            break;
                        }
                    case 3: {
                            message.fee = reader.double();
                            break;
                        }
                    case 4: {
                            message.status = reader.int32();
                            break;
                        }
                    case 5: {
                            message.salesforceContractId = reader.string();
                            break;
                        }
                    case 8: {
                            message.serviceLevel = reader.int32();
                            break;
                        }
                    case 10: {
                            message.salesforceSeatId = reader.string();
                            break;
                        }
                    case 18: {
                            if (!(message.activatedSeatSettings && message.activatedSeatSettings.length))
                                message.activatedSeatSettings = [];
                            if ((tag & 7) === 2) {
                                var end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.activatedSeatSettings.push(reader.int32());
                            } else
                                message.activatedSeatSettings.push(reader.int32());
                            break;
                        }
                    case 19: {
                            message.canRunInternalTestCampaign = reader.bool();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("seatId"))
                    throw $util.ProtocolError("missing required 'seatId'", { instance: message });
                if (!message.hasOwnProperty("name"))
                    throw $util.ProtocolError("missing required 'name'", { instance: message });
                if (!message.hasOwnProperty("fee"))
                    throw $util.ProtocolError("missing required 'fee'", { instance: message });
                if (!message.hasOwnProperty("status"))
                    throw $util.ProtocolError("missing required 'status'", { instance: message });
                if (!message.hasOwnProperty("serviceLevel"))
                    throw $util.ProtocolError("missing required 'serviceLevel'", { instance: message });
                if (!message.hasOwnProperty("canRunInternalTestCampaign"))
                    throw $util.ProtocolError("missing required 'canRunInternalTestCampaign'", { instance: message });
                return message;
            };

            /**
             * Decodes a FindBuyerSeatForEntityResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.FindBuyerSeatForEntityResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.FindBuyerSeatForEntityResponse} FindBuyerSeatForEntityResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindBuyerSeatForEntityResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a FindBuyerSeatForEntityResponse message.
             * @function verify
             * @memberof teads.api.FindBuyerSeatForEntityResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FindBuyerSeatForEntityResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                    return "seatId: integer|Long expected";
                if (!$util.isString(message.name))
                    return "name: string expected";
                if (typeof message.fee !== "number")
                    return "fee: number expected";
                switch (message.status) {
                default:
                    return "status: enum value expected";
                case 1:
                case 2:
                case 3:
                case 4:
                    break;
                }
                if (message.salesforceContractId != null && message.hasOwnProperty("salesforceContractId"))
                    if (!$util.isString(message.salesforceContractId))
                        return "salesforceContractId: string expected";
                switch (message.serviceLevel) {
                default:
                    return "serviceLevel: enum value expected";
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                    break;
                }
                if (message.salesforceSeatId != null && message.hasOwnProperty("salesforceSeatId"))
                    if (!$util.isString(message.salesforceSeatId))
                        return "salesforceSeatId: string expected";
                if (message.activatedSeatSettings != null && message.hasOwnProperty("activatedSeatSettings")) {
                    if (!Array.isArray(message.activatedSeatSettings))
                        return "activatedSeatSettings: array expected";
                    for (var i = 0; i < message.activatedSeatSettings.length; ++i)
                        switch (message.activatedSeatSettings[i]) {
                        default:
                            return "activatedSeatSettings: enum value[] expected";
                        case 0:
                        case 1:
                        case 2:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                        case 19:
                            break;
                        }
                }
                if (typeof message.canRunInternalTestCampaign !== "boolean")
                    return "canRunInternalTestCampaign: boolean expected";
                return null;
            };

            /**
             * Creates a FindBuyerSeatForEntityResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.FindBuyerSeatForEntityResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.FindBuyerSeatForEntityResponse} FindBuyerSeatForEntityResponse
             */
            FindBuyerSeatForEntityResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.FindBuyerSeatForEntityResponse)
                    return object;
                var message = new $root.teads.api.FindBuyerSeatForEntityResponse();
                if (object.seatId != null)
                    if ($util.Long)
                        (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                    else if (typeof object.seatId === "string")
                        message.seatId = parseInt(object.seatId, 10);
                    else if (typeof object.seatId === "number")
                        message.seatId = object.seatId;
                    else if (typeof object.seatId === "object")
                        message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                if (object.name != null)
                    message.name = String(object.name);
                if (object.fee != null)
                    message.fee = Number(object.fee);
                switch (object.status) {
                default:
                    if (typeof object.status === "number") {
                        message.status = object.status;
                        break;
                    }
                    break;
                case "BUYER_SEAT_STATUS_ENABLED":
                case 1:
                    message.status = 1;
                    break;
                case "BUYER_SEAT_STATUS_DISABLED":
                case 2:
                    message.status = 2;
                    break;
                case "BUYER_SEAT_STATUS_PENDING_CLIENT_INPUT":
                case 3:
                    message.status = 3;
                    break;
                case "BUYER_SEAT_STATUS_PENDING_TEADS_INPUT":
                case 4:
                    message.status = 4;
                    break;
                }
                if (object.salesforceContractId != null)
                    message.salesforceContractId = String(object.salesforceContractId);
                switch (object.serviceLevel) {
                default:
                    if (typeof object.serviceLevel === "number") {
                        message.serviceLevel = object.serviceLevel;
                        break;
                    }
                    break;
                case "BUYER_SERVICE_LEVEL_MANAGED":
                case 1:
                    message.serviceLevel = 1;
                    break;
                case "BUYER_SERVICE_LEVEL_SELF_SERVED":
                case 2:
                    message.serviceLevel = 2;
                    break;
                case "BUYER_SERVICE_LEVEL_IO":
                case 3:
                    message.serviceLevel = 3;
                    break;
                case "BUYER_SERVICE_LEVEL_INTERNAL":
                case 4:
                    message.serviceLevel = 4;
                    break;
                case "BUYER_SERVICE_LEVEL_CLIENT":
                case 5:
                    message.serviceLevel = 5;
                    break;
                }
                if (object.salesforceSeatId != null)
                    message.salesforceSeatId = String(object.salesforceSeatId);
                if (object.activatedSeatSettings) {
                    if (!Array.isArray(object.activatedSeatSettings))
                        throw TypeError(".teads.api.FindBuyerSeatForEntityResponse.activatedSeatSettings: array expected");
                    message.activatedSeatSettings = [];
                    for (var i = 0; i < object.activatedSeatSettings.length; ++i)
                        switch (object.activatedSeatSettings[i]) {
                        default:
                            if (typeof object.activatedSeatSettings[i] === "number") {
                                message.activatedSeatSettings[i] = object.activatedSeatSettings[i];
                                break;
                            }
                        case "SEAT_FEATURE_MULTIPLE_PIXELS":
                        case 0:
                            message.activatedSeatSettings[i] = 0;
                            break;
                        case "SEAT_FEATURE_SHARE_WITH_ADVERTISERS":
                        case 1:
                            message.activatedSeatSettings[i] = 1;
                            break;
                        case "SEAT_FEATURE_PREFER_VIEW_TO_PLAY_START_MODE":
                        case 2:
                            message.activatedSeatSettings[i] = 2;
                            break;
                        case "SEAT_FEATURE_ACCURACY_LEVELS":
                        case 4:
                            message.activatedSeatSettings[i] = 4;
                            break;
                        case "SEAT_FEATURE_AGENCY_FEE":
                        case 5:
                            message.activatedSeatSettings[i] = 5;
                            break;
                        case "SEAT_FEATURE_CUSTOM_AUDIENCE_ALTICE_US":
                        case 6:
                            message.activatedSeatSettings[i] = 6;
                            break;
                        case "SEAT_FEATURE_CUSTOM_CREATIVES_FOR_PERFORMANCE":
                        case 7:
                            message.activatedSeatSettings[i] = 7;
                            break;
                        case "SEAT_FEATURE_LUMEN":
                        case 8:
                            message.activatedSeatSettings[i] = 8;
                            break;
                        case "SEAT_FEATURE_CUSTOM_AUDIENCE_SKP":
                        case 9:
                            message.activatedSeatSettings[i] = 9;
                            break;
                        case "SEAT_FEATURE_CUSTOM_AUDIENCE_CROSSIX":
                        case 10:
                            message.activatedSeatSettings[i] = 10;
                            break;
                        case "SEAT_FEATURE_CUSTOM_AUDIENCE_ALTICE_FR":
                        case 11:
                            message.activatedSeatSettings[i] = 11;
                            break;
                        case "SEAT_FEATURE_REMARKETING_SEGMENTATION_ACCESS":
                        case 12:
                            message.activatedSeatSettings[i] = 12;
                            break;
                        case "SEAT_FEATURE_CPV":
                        case 13:
                            message.activatedSeatSettings[i] = 13;
                            break;
                        case "SEAT_FEATURE_PLAYER_MODE_SELECTION_FOR_BRANDING":
                        case 14:
                            message.activatedSeatSettings[i] = 14;
                            break;
                        case "SEAT_FEATURE_PLAYER_MODE_SELECTION_FOR_BRANDFORMANCE":
                        case 15:
                            message.activatedSeatSettings[i] = 15;
                            break;
                        case "SEAT_FEATURE_LOOKALIKE_SEGMENTATION_ACCESS":
                        case 16:
                            message.activatedSeatSettings[i] = 16;
                            break;
                        case "SEAT_FEATURE_CUSTOM_AUDIENCE_THIRD_PARTY_DATA_ACCESS":
                        case 17:
                            message.activatedSeatSettings[i] = 17;
                            break;
                        case "SEAT_FEATURE_HAS_OPTED_IN_AD_ASSISTANT":
                        case 18:
                            message.activatedSeatSettings[i] = 18;
                            break;
                        case "SEAT_FEATURE_PLAYER_MODE_SELECTION_FOR_BRANDING_CPCV":
                        case 19:
                            message.activatedSeatSettings[i] = 19;
                            break;
                        }
                }
                if (object.canRunInternalTestCampaign != null)
                    message.canRunInternalTestCampaign = Boolean(object.canRunInternalTestCampaign);
                return message;
            };

            /**
             * Creates a plain object from a FindBuyerSeatForEntityResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.FindBuyerSeatForEntityResponse
             * @static
             * @param {teads.api.FindBuyerSeatForEntityResponse} message FindBuyerSeatForEntityResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FindBuyerSeatForEntityResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.activatedSeatSettings = [];
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seatId = options.longs === String ? "0" : 0;
                    object.name = "";
                    object.fee = 0;
                    object.status = options.enums === String ? "BUYER_SEAT_STATUS_ENABLED" : 1;
                    object.salesforceContractId = "";
                    object.serviceLevel = options.enums === String ? "BUYER_SERVICE_LEVEL_MANAGED" : 1;
                    object.salesforceSeatId = "";
                    object.canRunInternalTestCampaign = false;
                }
                if (message.seatId != null && message.hasOwnProperty("seatId"))
                    if (typeof message.seatId === "number")
                        object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                    else
                        object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.fee != null && message.hasOwnProperty("fee"))
                    object.fee = options.json && !isFinite(message.fee) ? String(message.fee) : message.fee;
                if (message.status != null && message.hasOwnProperty("status"))
                    object.status = options.enums === String ? $root.teads.api.BuyerSeatStatus[message.status] === undefined ? message.status : $root.teads.api.BuyerSeatStatus[message.status] : message.status;
                if (message.salesforceContractId != null && message.hasOwnProperty("salesforceContractId"))
                    object.salesforceContractId = message.salesforceContractId;
                if (message.serviceLevel != null && message.hasOwnProperty("serviceLevel"))
                    object.serviceLevel = options.enums === String ? $root.teads.api.BuyerServiceLevel[message.serviceLevel] === undefined ? message.serviceLevel : $root.teads.api.BuyerServiceLevel[message.serviceLevel] : message.serviceLevel;
                if (message.salesforceSeatId != null && message.hasOwnProperty("salesforceSeatId"))
                    object.salesforceSeatId = message.salesforceSeatId;
                if (message.activatedSeatSettings && message.activatedSeatSettings.length) {
                    object.activatedSeatSettings = [];
                    for (var j = 0; j < message.activatedSeatSettings.length; ++j)
                        object.activatedSeatSettings[j] = options.enums === String ? $root.teads.api.SeatFeature[message.activatedSeatSettings[j]] === undefined ? message.activatedSeatSettings[j] : $root.teads.api.SeatFeature[message.activatedSeatSettings[j]] : message.activatedSeatSettings[j];
                }
                if (message.canRunInternalTestCampaign != null && message.hasOwnProperty("canRunInternalTestCampaign"))
                    object.canRunInternalTestCampaign = message.canRunInternalTestCampaign;
                return object;
            };

            /**
             * Converts this FindBuyerSeatForEntityResponse to JSON.
             * @function toJSON
             * @memberof teads.api.FindBuyerSeatForEntityResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FindBuyerSeatForEntityResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for FindBuyerSeatForEntityResponse
             * @function getTypeUrl
             * @memberof teads.api.FindBuyerSeatForEntityResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            FindBuyerSeatForEntityResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.FindBuyerSeatForEntityResponse";
            };

            return FindBuyerSeatForEntityResponse;
        })();

        api.FindBuyerSeatForSalesforceSeatRequest = (function() {

            /**
             * Properties of a FindBuyerSeatForSalesforceSeatRequest.
             * @memberof teads.api
             * @interface IFindBuyerSeatForSalesforceSeatRequest
             * @property {teads.api.ISecurityContext} securityContext FindBuyerSeatForSalesforceSeatRequest securityContext
             * @property {string} salesforceSeatId FindBuyerSeatForSalesforceSeatRequest salesforceSeatId
             */

            /**
             * Constructs a new FindBuyerSeatForSalesforceSeatRequest.
             * @memberof teads.api
             * @classdesc Represents a FindBuyerSeatForSalesforceSeatRequest.
             * @implements IFindBuyerSeatForSalesforceSeatRequest
             * @constructor
             * @param {teads.api.IFindBuyerSeatForSalesforceSeatRequest=} [properties] Properties to set
             */
            function FindBuyerSeatForSalesforceSeatRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * FindBuyerSeatForSalesforceSeatRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatRequest
             * @instance
             */
            FindBuyerSeatForSalesforceSeatRequest.prototype.securityContext = null;

            /**
             * FindBuyerSeatForSalesforceSeatRequest salesforceSeatId.
             * @member {string} salesforceSeatId
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatRequest
             * @instance
             */
            FindBuyerSeatForSalesforceSeatRequest.prototype.salesforceSeatId = "";

            /**
             * Creates a new FindBuyerSeatForSalesforceSeatRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatRequest
             * @static
             * @param {teads.api.IFindBuyerSeatForSalesforceSeatRequest=} [properties] Properties to set
             * @returns {teads.api.FindBuyerSeatForSalesforceSeatRequest} FindBuyerSeatForSalesforceSeatRequest instance
             */
            FindBuyerSeatForSalesforceSeatRequest.create = function create(properties) {
                return new FindBuyerSeatForSalesforceSeatRequest(properties);
            };

            /**
             * Encodes the specified FindBuyerSeatForSalesforceSeatRequest message. Does not implicitly {@link teads.api.FindBuyerSeatForSalesforceSeatRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatRequest
             * @static
             * @param {teads.api.IFindBuyerSeatForSalesforceSeatRequest} message FindBuyerSeatForSalesforceSeatRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindBuyerSeatForSalesforceSeatRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.salesforceSeatId);
                return writer;
            };

            /**
             * Encodes the specified FindBuyerSeatForSalesforceSeatRequest message, length delimited. Does not implicitly {@link teads.api.FindBuyerSeatForSalesforceSeatRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatRequest
             * @static
             * @param {teads.api.IFindBuyerSeatForSalesforceSeatRequest} message FindBuyerSeatForSalesforceSeatRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindBuyerSeatForSalesforceSeatRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a FindBuyerSeatForSalesforceSeatRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.FindBuyerSeatForSalesforceSeatRequest} FindBuyerSeatForSalesforceSeatRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindBuyerSeatForSalesforceSeatRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindBuyerSeatForSalesforceSeatRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.salesforceSeatId = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("salesforceSeatId"))
                    throw $util.ProtocolError("missing required 'salesforceSeatId'", { instance: message });
                return message;
            };

            /**
             * Decodes a FindBuyerSeatForSalesforceSeatRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.FindBuyerSeatForSalesforceSeatRequest} FindBuyerSeatForSalesforceSeatRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindBuyerSeatForSalesforceSeatRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a FindBuyerSeatForSalesforceSeatRequest message.
             * @function verify
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FindBuyerSeatForSalesforceSeatRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isString(message.salesforceSeatId))
                    return "salesforceSeatId: string expected";
                return null;
            };

            /**
             * Creates a FindBuyerSeatForSalesforceSeatRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.FindBuyerSeatForSalesforceSeatRequest} FindBuyerSeatForSalesforceSeatRequest
             */
            FindBuyerSeatForSalesforceSeatRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.FindBuyerSeatForSalesforceSeatRequest)
                    return object;
                var message = new $root.teads.api.FindBuyerSeatForSalesforceSeatRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.FindBuyerSeatForSalesforceSeatRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.salesforceSeatId != null)
                    message.salesforceSeatId = String(object.salesforceSeatId);
                return message;
            };

            /**
             * Creates a plain object from a FindBuyerSeatForSalesforceSeatRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatRequest
             * @static
             * @param {teads.api.FindBuyerSeatForSalesforceSeatRequest} message FindBuyerSeatForSalesforceSeatRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FindBuyerSeatForSalesforceSeatRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    object.salesforceSeatId = "";
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.salesforceSeatId != null && message.hasOwnProperty("salesforceSeatId"))
                    object.salesforceSeatId = message.salesforceSeatId;
                return object;
            };

            /**
             * Converts this FindBuyerSeatForSalesforceSeatRequest to JSON.
             * @function toJSON
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FindBuyerSeatForSalesforceSeatRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for FindBuyerSeatForSalesforceSeatRequest
             * @function getTypeUrl
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            FindBuyerSeatForSalesforceSeatRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.FindBuyerSeatForSalesforceSeatRequest";
            };

            return FindBuyerSeatForSalesforceSeatRequest;
        })();

        api.FindBuyerSeatForSalesforceSeatResponse = (function() {

            /**
             * Properties of a FindBuyerSeatForSalesforceSeatResponse.
             * @memberof teads.api
             * @interface IFindBuyerSeatForSalesforceSeatResponse
             * @property {number} seatId FindBuyerSeatForSalesforceSeatResponse seatId
             * @property {number} entityId FindBuyerSeatForSalesforceSeatResponse entityId
             * @property {number} officeId FindBuyerSeatForSalesforceSeatResponse officeId
             * @property {string} name FindBuyerSeatForSalesforceSeatResponse name
             * @property {teads.api.BuyerSeatType} type FindBuyerSeatForSalesforceSeatResponse type
             * @property {teads.api.BuyerSeatStatus} status FindBuyerSeatForSalesforceSeatResponse status
             * @property {teads.api.BuyerServiceLevel} serviceLevel FindBuyerSeatForSalesforceSeatResponse serviceLevel
             * @property {number} fee FindBuyerSeatForSalesforceSeatResponse fee
             * @property {string|null} [salesforceContractId] FindBuyerSeatForSalesforceSeatResponse salesforceContractId
             * @property {number|null} [salesforceContractVersion] FindBuyerSeatForSalesforceSeatResponse salesforceContractVersion
             */

            /**
             * Constructs a new FindBuyerSeatForSalesforceSeatResponse.
             * @memberof teads.api
             * @classdesc Represents a FindBuyerSeatForSalesforceSeatResponse.
             * @implements IFindBuyerSeatForSalesforceSeatResponse
             * @constructor
             * @param {teads.api.IFindBuyerSeatForSalesforceSeatResponse=} [properties] Properties to set
             */
            function FindBuyerSeatForSalesforceSeatResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * FindBuyerSeatForSalesforceSeatResponse seatId.
             * @member {number} seatId
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatResponse
             * @instance
             */
            FindBuyerSeatForSalesforceSeatResponse.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * FindBuyerSeatForSalesforceSeatResponse entityId.
             * @member {number} entityId
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatResponse
             * @instance
             */
            FindBuyerSeatForSalesforceSeatResponse.prototype.entityId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * FindBuyerSeatForSalesforceSeatResponse officeId.
             * @member {number} officeId
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatResponse
             * @instance
             */
            FindBuyerSeatForSalesforceSeatResponse.prototype.officeId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * FindBuyerSeatForSalesforceSeatResponse name.
             * @member {string} name
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatResponse
             * @instance
             */
            FindBuyerSeatForSalesforceSeatResponse.prototype.name = "";

            /**
             * FindBuyerSeatForSalesforceSeatResponse type.
             * @member {teads.api.BuyerSeatType} type
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatResponse
             * @instance
             */
            FindBuyerSeatForSalesforceSeatResponse.prototype.type = 1;

            /**
             * FindBuyerSeatForSalesforceSeatResponse status.
             * @member {teads.api.BuyerSeatStatus} status
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatResponse
             * @instance
             */
            FindBuyerSeatForSalesforceSeatResponse.prototype.status = 1;

            /**
             * FindBuyerSeatForSalesforceSeatResponse serviceLevel.
             * @member {teads.api.BuyerServiceLevel} serviceLevel
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatResponse
             * @instance
             */
            FindBuyerSeatForSalesforceSeatResponse.prototype.serviceLevel = 1;

            /**
             * FindBuyerSeatForSalesforceSeatResponse fee.
             * @member {number} fee
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatResponse
             * @instance
             */
            FindBuyerSeatForSalesforceSeatResponse.prototype.fee = 0;

            /**
             * FindBuyerSeatForSalesforceSeatResponse salesforceContractId.
             * @member {string} salesforceContractId
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatResponse
             * @instance
             */
            FindBuyerSeatForSalesforceSeatResponse.prototype.salesforceContractId = "";

            /**
             * FindBuyerSeatForSalesforceSeatResponse salesforceContractVersion.
             * @member {number} salesforceContractVersion
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatResponse
             * @instance
             */
            FindBuyerSeatForSalesforceSeatResponse.prototype.salesforceContractVersion = 0;

            /**
             * Creates a new FindBuyerSeatForSalesforceSeatResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatResponse
             * @static
             * @param {teads.api.IFindBuyerSeatForSalesforceSeatResponse=} [properties] Properties to set
             * @returns {teads.api.FindBuyerSeatForSalesforceSeatResponse} FindBuyerSeatForSalesforceSeatResponse instance
             */
            FindBuyerSeatForSalesforceSeatResponse.create = function create(properties) {
                return new FindBuyerSeatForSalesforceSeatResponse(properties);
            };

            /**
             * Encodes the specified FindBuyerSeatForSalesforceSeatResponse message. Does not implicitly {@link teads.api.FindBuyerSeatForSalesforceSeatResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatResponse
             * @static
             * @param {teads.api.IFindBuyerSeatForSalesforceSeatResponse} message FindBuyerSeatForSalesforceSeatResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindBuyerSeatForSalesforceSeatResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seatId);
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.entityId);
                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.officeId);
                writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.status);
                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.serviceLevel);
                writer.uint32(/* id 8, wireType 1 =*/65).double(message.fee);
                if (message.salesforceContractId != null && Object.hasOwnProperty.call(message, "salesforceContractId"))
                    writer.uint32(/* id 9, wireType 2 =*/74).string(message.salesforceContractId);
                if (message.salesforceContractVersion != null && Object.hasOwnProperty.call(message, "salesforceContractVersion"))
                    writer.uint32(/* id 10, wireType 0 =*/80).int32(message.salesforceContractVersion);
                return writer;
            };

            /**
             * Encodes the specified FindBuyerSeatForSalesforceSeatResponse message, length delimited. Does not implicitly {@link teads.api.FindBuyerSeatForSalesforceSeatResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatResponse
             * @static
             * @param {teads.api.IFindBuyerSeatForSalesforceSeatResponse} message FindBuyerSeatForSalesforceSeatResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindBuyerSeatForSalesforceSeatResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a FindBuyerSeatForSalesforceSeatResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.FindBuyerSeatForSalesforceSeatResponse} FindBuyerSeatForSalesforceSeatResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindBuyerSeatForSalesforceSeatResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindBuyerSeatForSalesforceSeatResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.seatId = reader.int64();
                            break;
                        }
                    case 2: {
                            message.entityId = reader.int64();
                            break;
                        }
                    case 3: {
                            message.officeId = reader.int64();
                            break;
                        }
                    case 4: {
                            message.name = reader.string();
                            break;
                        }
                    case 5: {
                            message.type = reader.int32();
                            break;
                        }
                    case 6: {
                            message.status = reader.int32();
                            break;
                        }
                    case 7: {
                            message.serviceLevel = reader.int32();
                            break;
                        }
                    case 8: {
                            message.fee = reader.double();
                            break;
                        }
                    case 9: {
                            message.salesforceContractId = reader.string();
                            break;
                        }
                    case 10: {
                            message.salesforceContractVersion = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("seatId"))
                    throw $util.ProtocolError("missing required 'seatId'", { instance: message });
                if (!message.hasOwnProperty("entityId"))
                    throw $util.ProtocolError("missing required 'entityId'", { instance: message });
                if (!message.hasOwnProperty("officeId"))
                    throw $util.ProtocolError("missing required 'officeId'", { instance: message });
                if (!message.hasOwnProperty("name"))
                    throw $util.ProtocolError("missing required 'name'", { instance: message });
                if (!message.hasOwnProperty("type"))
                    throw $util.ProtocolError("missing required 'type'", { instance: message });
                if (!message.hasOwnProperty("status"))
                    throw $util.ProtocolError("missing required 'status'", { instance: message });
                if (!message.hasOwnProperty("serviceLevel"))
                    throw $util.ProtocolError("missing required 'serviceLevel'", { instance: message });
                if (!message.hasOwnProperty("fee"))
                    throw $util.ProtocolError("missing required 'fee'", { instance: message });
                return message;
            };

            /**
             * Decodes a FindBuyerSeatForSalesforceSeatResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.FindBuyerSeatForSalesforceSeatResponse} FindBuyerSeatForSalesforceSeatResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindBuyerSeatForSalesforceSeatResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a FindBuyerSeatForSalesforceSeatResponse message.
             * @function verify
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FindBuyerSeatForSalesforceSeatResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                    return "seatId: integer|Long expected";
                if (!$util.isInteger(message.entityId) && !(message.entityId && $util.isInteger(message.entityId.low) && $util.isInteger(message.entityId.high)))
                    return "entityId: integer|Long expected";
                if (!$util.isInteger(message.officeId) && !(message.officeId && $util.isInteger(message.officeId.low) && $util.isInteger(message.officeId.high)))
                    return "officeId: integer|Long expected";
                if (!$util.isString(message.name))
                    return "name: string expected";
                switch (message.type) {
                default:
                    return "type: enum value expected";
                case 1:
                case 2:
                    break;
                }
                switch (message.status) {
                default:
                    return "status: enum value expected";
                case 1:
                case 2:
                case 3:
                case 4:
                    break;
                }
                switch (message.serviceLevel) {
                default:
                    return "serviceLevel: enum value expected";
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                    break;
                }
                if (typeof message.fee !== "number")
                    return "fee: number expected";
                if (message.salesforceContractId != null && message.hasOwnProperty("salesforceContractId"))
                    if (!$util.isString(message.salesforceContractId))
                        return "salesforceContractId: string expected";
                if (message.salesforceContractVersion != null && message.hasOwnProperty("salesforceContractVersion"))
                    if (!$util.isInteger(message.salesforceContractVersion))
                        return "salesforceContractVersion: integer expected";
                return null;
            };

            /**
             * Creates a FindBuyerSeatForSalesforceSeatResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.FindBuyerSeatForSalesforceSeatResponse} FindBuyerSeatForSalesforceSeatResponse
             */
            FindBuyerSeatForSalesforceSeatResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.FindBuyerSeatForSalesforceSeatResponse)
                    return object;
                var message = new $root.teads.api.FindBuyerSeatForSalesforceSeatResponse();
                if (object.seatId != null)
                    if ($util.Long)
                        (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                    else if (typeof object.seatId === "string")
                        message.seatId = parseInt(object.seatId, 10);
                    else if (typeof object.seatId === "number")
                        message.seatId = object.seatId;
                    else if (typeof object.seatId === "object")
                        message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                if (object.entityId != null)
                    if ($util.Long)
                        (message.entityId = $util.Long.fromValue(object.entityId)).unsigned = false;
                    else if (typeof object.entityId === "string")
                        message.entityId = parseInt(object.entityId, 10);
                    else if (typeof object.entityId === "number")
                        message.entityId = object.entityId;
                    else if (typeof object.entityId === "object")
                        message.entityId = new $util.LongBits(object.entityId.low >>> 0, object.entityId.high >>> 0).toNumber();
                if (object.officeId != null)
                    if ($util.Long)
                        (message.officeId = $util.Long.fromValue(object.officeId)).unsigned = false;
                    else if (typeof object.officeId === "string")
                        message.officeId = parseInt(object.officeId, 10);
                    else if (typeof object.officeId === "number")
                        message.officeId = object.officeId;
                    else if (typeof object.officeId === "object")
                        message.officeId = new $util.LongBits(object.officeId.low >>> 0, object.officeId.high >>> 0).toNumber();
                if (object.name != null)
                    message.name = String(object.name);
                switch (object.type) {
                default:
                    if (typeof object.type === "number") {
                        message.type = object.type;
                        break;
                    }
                    break;
                case "BUYER_SEAT_TYPE_ADVERTISER":
                case 1:
                    message.type = 1;
                    break;
                case "BUYER_SEAT_TYPE_AGENCY":
                case 2:
                    message.type = 2;
                    break;
                }
                switch (object.status) {
                default:
                    if (typeof object.status === "number") {
                        message.status = object.status;
                        break;
                    }
                    break;
                case "BUYER_SEAT_STATUS_ENABLED":
                case 1:
                    message.status = 1;
                    break;
                case "BUYER_SEAT_STATUS_DISABLED":
                case 2:
                    message.status = 2;
                    break;
                case "BUYER_SEAT_STATUS_PENDING_CLIENT_INPUT":
                case 3:
                    message.status = 3;
                    break;
                case "BUYER_SEAT_STATUS_PENDING_TEADS_INPUT":
                case 4:
                    message.status = 4;
                    break;
                }
                switch (object.serviceLevel) {
                default:
                    if (typeof object.serviceLevel === "number") {
                        message.serviceLevel = object.serviceLevel;
                        break;
                    }
                    break;
                case "BUYER_SERVICE_LEVEL_MANAGED":
                case 1:
                    message.serviceLevel = 1;
                    break;
                case "BUYER_SERVICE_LEVEL_SELF_SERVED":
                case 2:
                    message.serviceLevel = 2;
                    break;
                case "BUYER_SERVICE_LEVEL_IO":
                case 3:
                    message.serviceLevel = 3;
                    break;
                case "BUYER_SERVICE_LEVEL_INTERNAL":
                case 4:
                    message.serviceLevel = 4;
                    break;
                case "BUYER_SERVICE_LEVEL_CLIENT":
                case 5:
                    message.serviceLevel = 5;
                    break;
                }
                if (object.fee != null)
                    message.fee = Number(object.fee);
                if (object.salesforceContractId != null)
                    message.salesforceContractId = String(object.salesforceContractId);
                if (object.salesforceContractVersion != null)
                    message.salesforceContractVersion = object.salesforceContractVersion | 0;
                return message;
            };

            /**
             * Creates a plain object from a FindBuyerSeatForSalesforceSeatResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatResponse
             * @static
             * @param {teads.api.FindBuyerSeatForSalesforceSeatResponse} message FindBuyerSeatForSalesforceSeatResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FindBuyerSeatForSalesforceSeatResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seatId = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.entityId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.entityId = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.officeId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.officeId = options.longs === String ? "0" : 0;
                    object.name = "";
                    object.type = options.enums === String ? "BUYER_SEAT_TYPE_ADVERTISER" : 1;
                    object.status = options.enums === String ? "BUYER_SEAT_STATUS_ENABLED" : 1;
                    object.serviceLevel = options.enums === String ? "BUYER_SERVICE_LEVEL_MANAGED" : 1;
                    object.fee = 0;
                    object.salesforceContractId = "";
                    object.salesforceContractVersion = 0;
                }
                if (message.seatId != null && message.hasOwnProperty("seatId"))
                    if (typeof message.seatId === "number")
                        object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                    else
                        object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                if (message.entityId != null && message.hasOwnProperty("entityId"))
                    if (typeof message.entityId === "number")
                        object.entityId = options.longs === String ? String(message.entityId) : message.entityId;
                    else
                        object.entityId = options.longs === String ? $util.Long.prototype.toString.call(message.entityId) : options.longs === Number ? new $util.LongBits(message.entityId.low >>> 0, message.entityId.high >>> 0).toNumber() : message.entityId;
                if (message.officeId != null && message.hasOwnProperty("officeId"))
                    if (typeof message.officeId === "number")
                        object.officeId = options.longs === String ? String(message.officeId) : message.officeId;
                    else
                        object.officeId = options.longs === String ? $util.Long.prototype.toString.call(message.officeId) : options.longs === Number ? new $util.LongBits(message.officeId.low >>> 0, message.officeId.high >>> 0).toNumber() : message.officeId;
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.type != null && message.hasOwnProperty("type"))
                    object.type = options.enums === String ? $root.teads.api.BuyerSeatType[message.type] === undefined ? message.type : $root.teads.api.BuyerSeatType[message.type] : message.type;
                if (message.status != null && message.hasOwnProperty("status"))
                    object.status = options.enums === String ? $root.teads.api.BuyerSeatStatus[message.status] === undefined ? message.status : $root.teads.api.BuyerSeatStatus[message.status] : message.status;
                if (message.serviceLevel != null && message.hasOwnProperty("serviceLevel"))
                    object.serviceLevel = options.enums === String ? $root.teads.api.BuyerServiceLevel[message.serviceLevel] === undefined ? message.serviceLevel : $root.teads.api.BuyerServiceLevel[message.serviceLevel] : message.serviceLevel;
                if (message.fee != null && message.hasOwnProperty("fee"))
                    object.fee = options.json && !isFinite(message.fee) ? String(message.fee) : message.fee;
                if (message.salesforceContractId != null && message.hasOwnProperty("salesforceContractId"))
                    object.salesforceContractId = message.salesforceContractId;
                if (message.salesforceContractVersion != null && message.hasOwnProperty("salesforceContractVersion"))
                    object.salesforceContractVersion = message.salesforceContractVersion;
                return object;
            };

            /**
             * Converts this FindBuyerSeatForSalesforceSeatResponse to JSON.
             * @function toJSON
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FindBuyerSeatForSalesforceSeatResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for FindBuyerSeatForSalesforceSeatResponse
             * @function getTypeUrl
             * @memberof teads.api.FindBuyerSeatForSalesforceSeatResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            FindBuyerSeatForSalesforceSeatResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.FindBuyerSeatForSalesforceSeatResponse";
            };

            return FindBuyerSeatForSalesforceSeatResponse;
        })();

        api.FindCampaignsForSalesforceOpportunityAndProfileRequest = (function() {

            /**
             * Properties of a FindCampaignsForSalesforceOpportunityAndProfileRequest.
             * @memberof teads.api
             * @interface IFindCampaignsForSalesforceOpportunityAndProfileRequest
             * @property {teads.api.ISecurityContext} securityContext FindCampaignsForSalesforceOpportunityAndProfileRequest securityContext
             * @property {string} opportunityId FindCampaignsForSalesforceOpportunityAndProfileRequest opportunityId
             * @property {teads.api.CampaignObjective} campaignObjective FindCampaignsForSalesforceOpportunityAndProfileRequest campaignObjective
             * @property {number} profileId FindCampaignsForSalesforceOpportunityAndProfileRequest profileId
             * @property {teads.api.AdvertisingSolutionId|null} [advertisingSolutionId] FindCampaignsForSalesforceOpportunityAndProfileRequest advertisingSolutionId
             */

            /**
             * Constructs a new FindCampaignsForSalesforceOpportunityAndProfileRequest.
             * @memberof teads.api
             * @classdesc Represents a FindCampaignsForSalesforceOpportunityAndProfileRequest.
             * @implements IFindCampaignsForSalesforceOpportunityAndProfileRequest
             * @constructor
             * @param {teads.api.IFindCampaignsForSalesforceOpportunityAndProfileRequest=} [properties] Properties to set
             */
            function FindCampaignsForSalesforceOpportunityAndProfileRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * FindCampaignsForSalesforceOpportunityAndProfileRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileRequest
             * @instance
             */
            FindCampaignsForSalesforceOpportunityAndProfileRequest.prototype.securityContext = null;

            /**
             * FindCampaignsForSalesforceOpportunityAndProfileRequest opportunityId.
             * @member {string} opportunityId
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileRequest
             * @instance
             */
            FindCampaignsForSalesforceOpportunityAndProfileRequest.prototype.opportunityId = "";

            /**
             * FindCampaignsForSalesforceOpportunityAndProfileRequest campaignObjective.
             * @member {teads.api.CampaignObjective} campaignObjective
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileRequest
             * @instance
             */
            FindCampaignsForSalesforceOpportunityAndProfileRequest.prototype.campaignObjective = 0;

            /**
             * FindCampaignsForSalesforceOpportunityAndProfileRequest profileId.
             * @member {number} profileId
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileRequest
             * @instance
             */
            FindCampaignsForSalesforceOpportunityAndProfileRequest.prototype.profileId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * FindCampaignsForSalesforceOpportunityAndProfileRequest advertisingSolutionId.
             * @member {teads.api.AdvertisingSolutionId} advertisingSolutionId
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileRequest
             * @instance
             */
            FindCampaignsForSalesforceOpportunityAndProfileRequest.prototype.advertisingSolutionId = 1;

            /**
             * Creates a new FindCampaignsForSalesforceOpportunityAndProfileRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileRequest
             * @static
             * @param {teads.api.IFindCampaignsForSalesforceOpportunityAndProfileRequest=} [properties] Properties to set
             * @returns {teads.api.FindCampaignsForSalesforceOpportunityAndProfileRequest} FindCampaignsForSalesforceOpportunityAndProfileRequest instance
             */
            FindCampaignsForSalesforceOpportunityAndProfileRequest.create = function create(properties) {
                return new FindCampaignsForSalesforceOpportunityAndProfileRequest(properties);
            };

            /**
             * Encodes the specified FindCampaignsForSalesforceOpportunityAndProfileRequest message. Does not implicitly {@link teads.api.FindCampaignsForSalesforceOpportunityAndProfileRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileRequest
             * @static
             * @param {teads.api.IFindCampaignsForSalesforceOpportunityAndProfileRequest} message FindCampaignsForSalesforceOpportunityAndProfileRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindCampaignsForSalesforceOpportunityAndProfileRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.opportunityId);
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.campaignObjective);
                writer.uint32(/* id 4, wireType 0 =*/32).int64(message.profileId);
                if (message.advertisingSolutionId != null && Object.hasOwnProperty.call(message, "advertisingSolutionId"))
                    writer.uint32(/* id 5, wireType 0 =*/40).int32(message.advertisingSolutionId);
                return writer;
            };

            /**
             * Encodes the specified FindCampaignsForSalesforceOpportunityAndProfileRequest message, length delimited. Does not implicitly {@link teads.api.FindCampaignsForSalesforceOpportunityAndProfileRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileRequest
             * @static
             * @param {teads.api.IFindCampaignsForSalesforceOpportunityAndProfileRequest} message FindCampaignsForSalesforceOpportunityAndProfileRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindCampaignsForSalesforceOpportunityAndProfileRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a FindCampaignsForSalesforceOpportunityAndProfileRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.FindCampaignsForSalesforceOpportunityAndProfileRequest} FindCampaignsForSalesforceOpportunityAndProfileRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindCampaignsForSalesforceOpportunityAndProfileRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.opportunityId = reader.string();
                            break;
                        }
                    case 3: {
                            message.campaignObjective = reader.int32();
                            break;
                        }
                    case 4: {
                            message.profileId = reader.int64();
                            break;
                        }
                    case 5: {
                            message.advertisingSolutionId = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("opportunityId"))
                    throw $util.ProtocolError("missing required 'opportunityId'", { instance: message });
                if (!message.hasOwnProperty("campaignObjective"))
                    throw $util.ProtocolError("missing required 'campaignObjective'", { instance: message });
                if (!message.hasOwnProperty("profileId"))
                    throw $util.ProtocolError("missing required 'profileId'", { instance: message });
                return message;
            };

            /**
             * Decodes a FindCampaignsForSalesforceOpportunityAndProfileRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.FindCampaignsForSalesforceOpportunityAndProfileRequest} FindCampaignsForSalesforceOpportunityAndProfileRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindCampaignsForSalesforceOpportunityAndProfileRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a FindCampaignsForSalesforceOpportunityAndProfileRequest message.
             * @function verify
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FindCampaignsForSalesforceOpportunityAndProfileRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isString(message.opportunityId))
                    return "opportunityId: string expected";
                switch (message.campaignObjective) {
                default:
                    return "campaignObjective: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                    break;
                }
                if (!$util.isInteger(message.profileId) && !(message.profileId && $util.isInteger(message.profileId.low) && $util.isInteger(message.profileId.high)))
                    return "profileId: integer|Long expected";
                if (message.advertisingSolutionId != null && message.hasOwnProperty("advertisingSolutionId"))
                    switch (message.advertisingSolutionId) {
                    default:
                        return "advertisingSolutionId: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                        break;
                    }
                return null;
            };

            /**
             * Creates a FindCampaignsForSalesforceOpportunityAndProfileRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.FindCampaignsForSalesforceOpportunityAndProfileRequest} FindCampaignsForSalesforceOpportunityAndProfileRequest
             */
            FindCampaignsForSalesforceOpportunityAndProfileRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileRequest)
                    return object;
                var message = new $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.FindCampaignsForSalesforceOpportunityAndProfileRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.opportunityId != null)
                    message.opportunityId = String(object.opportunityId);
                switch (object.campaignObjective) {
                default:
                    if (typeof object.campaignObjective === "number") {
                        message.campaignObjective = object.campaignObjective;
                        break;
                    }
                    break;
                case "CAMPAIGN_OBJECTIVE_BRANDING":
                case 0:
                    message.campaignObjective = 0;
                    break;
                case "CAMPAIGN_OBJECTIVE_TRAFFIC_ACQUISITION":
                case 1:
                    message.campaignObjective = 1;
                    break;
                case "CAMPAIGN_OBJECTIVE_SOCIAL":
                case 2:
                    message.campaignObjective = 2;
                    break;
                case "CAMPAIGN_OBJECTIVE_CONVERSIONS":
                case 3:
                    message.campaignObjective = 3;
                    break;
                }
                if (object.profileId != null)
                    if ($util.Long)
                        (message.profileId = $util.Long.fromValue(object.profileId)).unsigned = false;
                    else if (typeof object.profileId === "string")
                        message.profileId = parseInt(object.profileId, 10);
                    else if (typeof object.profileId === "number")
                        message.profileId = object.profileId;
                    else if (typeof object.profileId === "object")
                        message.profileId = new $util.LongBits(object.profileId.low >>> 0, object.profileId.high >>> 0).toNumber();
                switch (object.advertisingSolutionId) {
                default:
                    if (typeof object.advertisingSolutionId === "number") {
                        message.advertisingSolutionId = object.advertisingSolutionId;
                        break;
                    }
                    break;
                case "ADVERTISING_SOLUTION_ID_AWARENESS":
                case 1:
                    message.advertisingSolutionId = 1;
                    break;
                case "ADVERTISING_SOLUTION_ID_TA_CLICKS":
                case 2:
                    message.advertisingSolutionId = 2;
                    break;
                case "ADVERTISING_SOLUTION_ID_TA_VISITS":
                case 3:
                    message.advertisingSolutionId = 3;
                    break;
                case "ADVERTISING_SOLUTION_ID_TA_MIXED":
                case 4:
                    message.advertisingSolutionId = 4;
                    break;
                case "ADVERTISING_SOLUTION_ID_WEBSITE_CONVERSIONS":
                case 5:
                    message.advertisingSolutionId = 5;
                    break;
                case "ADVERTISING_SOLUTION_ID_SEAMLESS_COMMERCE":
                case 6:
                    message.advertisingSolutionId = 6;
                    break;
                case "ADVERTISING_SOLUTION_ID_TA_CLICKS_GUARANTEED_CPC":
                case 7:
                    message.advertisingSolutionId = 7;
                    break;
                case "ADVERTISING_SOLUTION_ID_TA_VISITS_GUARANTEED_CPC":
                case 8:
                    message.advertisingSolutionId = 8;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a FindCampaignsForSalesforceOpportunityAndProfileRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileRequest
             * @static
             * @param {teads.api.FindCampaignsForSalesforceOpportunityAndProfileRequest} message FindCampaignsForSalesforceOpportunityAndProfileRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FindCampaignsForSalesforceOpportunityAndProfileRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    object.opportunityId = "";
                    object.campaignObjective = options.enums === String ? "CAMPAIGN_OBJECTIVE_BRANDING" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.profileId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.profileId = options.longs === String ? "0" : 0;
                    object.advertisingSolutionId = options.enums === String ? "ADVERTISING_SOLUTION_ID_AWARENESS" : 1;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.opportunityId != null && message.hasOwnProperty("opportunityId"))
                    object.opportunityId = message.opportunityId;
                if (message.campaignObjective != null && message.hasOwnProperty("campaignObjective"))
                    object.campaignObjective = options.enums === String ? $root.teads.api.CampaignObjective[message.campaignObjective] === undefined ? message.campaignObjective : $root.teads.api.CampaignObjective[message.campaignObjective] : message.campaignObjective;
                if (message.profileId != null && message.hasOwnProperty("profileId"))
                    if (typeof message.profileId === "number")
                        object.profileId = options.longs === String ? String(message.profileId) : message.profileId;
                    else
                        object.profileId = options.longs === String ? $util.Long.prototype.toString.call(message.profileId) : options.longs === Number ? new $util.LongBits(message.profileId.low >>> 0, message.profileId.high >>> 0).toNumber() : message.profileId;
                if (message.advertisingSolutionId != null && message.hasOwnProperty("advertisingSolutionId"))
                    object.advertisingSolutionId = options.enums === String ? $root.teads.api.AdvertisingSolutionId[message.advertisingSolutionId] === undefined ? message.advertisingSolutionId : $root.teads.api.AdvertisingSolutionId[message.advertisingSolutionId] : message.advertisingSolutionId;
                return object;
            };

            /**
             * Converts this FindCampaignsForSalesforceOpportunityAndProfileRequest to JSON.
             * @function toJSON
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FindCampaignsForSalesforceOpportunityAndProfileRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for FindCampaignsForSalesforceOpportunityAndProfileRequest
             * @function getTypeUrl
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            FindCampaignsForSalesforceOpportunityAndProfileRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.FindCampaignsForSalesforceOpportunityAndProfileRequest";
            };

            return FindCampaignsForSalesforceOpportunityAndProfileRequest;
        })();

        api.FindCampaignsForSalesforceOpportunityAndProfileResponse = (function() {

            /**
             * Properties of a FindCampaignsForSalesforceOpportunityAndProfileResponse.
             * @memberof teads.api
             * @interface IFindCampaignsForSalesforceOpportunityAndProfileResponse
             * @property {Array.<teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.ICampaignInfo>|null} [campaigns] FindCampaignsForSalesforceOpportunityAndProfileResponse campaigns
             */

            /**
             * Constructs a new FindCampaignsForSalesforceOpportunityAndProfileResponse.
             * @memberof teads.api
             * @classdesc Represents a FindCampaignsForSalesforceOpportunityAndProfileResponse.
             * @implements IFindCampaignsForSalesforceOpportunityAndProfileResponse
             * @constructor
             * @param {teads.api.IFindCampaignsForSalesforceOpportunityAndProfileResponse=} [properties] Properties to set
             */
            function FindCampaignsForSalesforceOpportunityAndProfileResponse(properties) {
                this.campaigns = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * FindCampaignsForSalesforceOpportunityAndProfileResponse campaigns.
             * @member {Array.<teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.ICampaignInfo>} campaigns
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse
             * @instance
             */
            FindCampaignsForSalesforceOpportunityAndProfileResponse.prototype.campaigns = $util.emptyArray;

            /**
             * Creates a new FindCampaignsForSalesforceOpportunityAndProfileResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse
             * @static
             * @param {teads.api.IFindCampaignsForSalesforceOpportunityAndProfileResponse=} [properties] Properties to set
             * @returns {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse} FindCampaignsForSalesforceOpportunityAndProfileResponse instance
             */
            FindCampaignsForSalesforceOpportunityAndProfileResponse.create = function create(properties) {
                return new FindCampaignsForSalesforceOpportunityAndProfileResponse(properties);
            };

            /**
             * Encodes the specified FindCampaignsForSalesforceOpportunityAndProfileResponse message. Does not implicitly {@link teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse
             * @static
             * @param {teads.api.IFindCampaignsForSalesforceOpportunityAndProfileResponse} message FindCampaignsForSalesforceOpportunityAndProfileResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindCampaignsForSalesforceOpportunityAndProfileResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.campaigns != null && message.campaigns.length)
                    for (var i = 0; i < message.campaigns.length; ++i)
                        $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo.encode(message.campaigns[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified FindCampaignsForSalesforceOpportunityAndProfileResponse message, length delimited. Does not implicitly {@link teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse
             * @static
             * @param {teads.api.IFindCampaignsForSalesforceOpportunityAndProfileResponse} message FindCampaignsForSalesforceOpportunityAndProfileResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindCampaignsForSalesforceOpportunityAndProfileResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a FindCampaignsForSalesforceOpportunityAndProfileResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse} FindCampaignsForSalesforceOpportunityAndProfileResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindCampaignsForSalesforceOpportunityAndProfileResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            if (!(message.campaigns && message.campaigns.length))
                                message.campaigns = [];
                            message.campaigns.push($root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a FindCampaignsForSalesforceOpportunityAndProfileResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse} FindCampaignsForSalesforceOpportunityAndProfileResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindCampaignsForSalesforceOpportunityAndProfileResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a FindCampaignsForSalesforceOpportunityAndProfileResponse message.
             * @function verify
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FindCampaignsForSalesforceOpportunityAndProfileResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.campaigns != null && message.hasOwnProperty("campaigns")) {
                    if (!Array.isArray(message.campaigns))
                        return "campaigns: array expected";
                    for (var i = 0; i < message.campaigns.length; ++i) {
                        var error = $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo.verify(message.campaigns[i]);
                        if (error)
                            return "campaigns." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a FindCampaignsForSalesforceOpportunityAndProfileResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse} FindCampaignsForSalesforceOpportunityAndProfileResponse
             */
            FindCampaignsForSalesforceOpportunityAndProfileResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse)
                    return object;
                var message = new $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse();
                if (object.campaigns) {
                    if (!Array.isArray(object.campaigns))
                        throw TypeError(".teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.campaigns: array expected");
                    message.campaigns = [];
                    for (var i = 0; i < object.campaigns.length; ++i) {
                        if (typeof object.campaigns[i] !== "object")
                            throw TypeError(".teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.campaigns: object expected");
                        message.campaigns[i] = $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo.fromObject(object.campaigns[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a FindCampaignsForSalesforceOpportunityAndProfileResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse
             * @static
             * @param {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse} message FindCampaignsForSalesforceOpportunityAndProfileResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FindCampaignsForSalesforceOpportunityAndProfileResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.campaigns = [];
                if (message.campaigns && message.campaigns.length) {
                    object.campaigns = [];
                    for (var j = 0; j < message.campaigns.length; ++j)
                        object.campaigns[j] = $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo.toObject(message.campaigns[j], options);
                }
                return object;
            };

            /**
             * Converts this FindCampaignsForSalesforceOpportunityAndProfileResponse to JSON.
             * @function toJSON
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FindCampaignsForSalesforceOpportunityAndProfileResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for FindCampaignsForSalesforceOpportunityAndProfileResponse
             * @function getTypeUrl
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            FindCampaignsForSalesforceOpportunityAndProfileResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse";
            };

            FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo = (function() {

                /**
                 * Properties of a CampaignInfo.
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse
                 * @interface ICampaignInfo
                 * @property {number} campaignId CampaignInfo campaignId
                 * @property {string} campaignName CampaignInfo campaignName
                 * @property {number|null} [seatId] CampaignInfo seatId
                 * @property {string|null} [entityName] CampaignInfo entityName
                 * @property {number} officeId CampaignInfo officeId
                 * @property {string} officeName CampaignInfo officeName
                 * @property {Array.<teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignProfilePermission>|null} [campaignProfilePermissions] CampaignInfo campaignProfilePermissions
                 * @property {number} budget CampaignInfo budget
                 * @property {number|null} [freeBudget] CampaignInfo freeBudget
                 * @property {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.ITimeInterval} timeInterval CampaignInfo timeInterval
                 * @property {Array.<teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.IInsertionOrderLine>|null} [insertionOrderLines] CampaignInfo insertionOrderLines
                 * @property {boolean} isCreatedBySalesforce CampaignInfo isCreatedBySalesforce
                 * @property {boolean|null} [isMoatUnsampled] CampaignInfo isMoatUnsampled
                 */

                /**
                 * Constructs a new CampaignInfo.
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse
                 * @classdesc Represents a CampaignInfo.
                 * @implements ICampaignInfo
                 * @constructor
                 * @param {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.ICampaignInfo=} [properties] Properties to set
                 */
                function CampaignInfo(properties) {
                    this.campaignProfilePermissions = [];
                    this.insertionOrderLines = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * CampaignInfo campaignId.
                 * @member {number} campaignId
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo
                 * @instance
                 */
                CampaignInfo.prototype.campaignId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * CampaignInfo campaignName.
                 * @member {string} campaignName
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo
                 * @instance
                 */
                CampaignInfo.prototype.campaignName = "";

                /**
                 * CampaignInfo seatId.
                 * @member {number} seatId
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo
                 * @instance
                 */
                CampaignInfo.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * CampaignInfo entityName.
                 * @member {string} entityName
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo
                 * @instance
                 */
                CampaignInfo.prototype.entityName = "";

                /**
                 * CampaignInfo officeId.
                 * @member {number} officeId
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo
                 * @instance
                 */
                CampaignInfo.prototype.officeId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * CampaignInfo officeName.
                 * @member {string} officeName
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo
                 * @instance
                 */
                CampaignInfo.prototype.officeName = "";

                /**
                 * CampaignInfo campaignProfilePermissions.
                 * @member {Array.<teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignProfilePermission>} campaignProfilePermissions
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo
                 * @instance
                 */
                CampaignInfo.prototype.campaignProfilePermissions = $util.emptyArray;

                /**
                 * CampaignInfo budget.
                 * @member {number} budget
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo
                 * @instance
                 */
                CampaignInfo.prototype.budget = 0;

                /**
                 * CampaignInfo freeBudget.
                 * @member {number} freeBudget
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo
                 * @instance
                 */
                CampaignInfo.prototype.freeBudget = 0;

                /**
                 * CampaignInfo timeInterval.
                 * @member {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.ITimeInterval} timeInterval
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo
                 * @instance
                 */
                CampaignInfo.prototype.timeInterval = null;

                /**
                 * CampaignInfo insertionOrderLines.
                 * @member {Array.<teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.IInsertionOrderLine>} insertionOrderLines
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo
                 * @instance
                 */
                CampaignInfo.prototype.insertionOrderLines = $util.emptyArray;

                /**
                 * CampaignInfo isCreatedBySalesforce.
                 * @member {boolean} isCreatedBySalesforce
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo
                 * @instance
                 */
                CampaignInfo.prototype.isCreatedBySalesforce = false;

                /**
                 * CampaignInfo isMoatUnsampled.
                 * @member {boolean} isMoatUnsampled
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo
                 * @instance
                 */
                CampaignInfo.prototype.isMoatUnsampled = false;

                /**
                 * Creates a new CampaignInfo instance using the specified properties.
                 * @function create
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo
                 * @static
                 * @param {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.ICampaignInfo=} [properties] Properties to set
                 * @returns {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo} CampaignInfo instance
                 */
                CampaignInfo.create = function create(properties) {
                    return new CampaignInfo(properties);
                };

                /**
                 * Encodes the specified CampaignInfo message. Does not implicitly {@link teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo
                 * @static
                 * @param {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.ICampaignInfo} message CampaignInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CampaignInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.campaignId);
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.campaignName);
                    if (message.seatId != null && Object.hasOwnProperty.call(message, "seatId"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int64(message.seatId);
                    if (message.entityName != null && Object.hasOwnProperty.call(message, "entityName"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.entityName);
                    writer.uint32(/* id 5, wireType 0 =*/40).int64(message.officeId);
                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.officeName);
                    if (message.campaignProfilePermissions != null && message.campaignProfilePermissions.length)
                        for (var i = 0; i < message.campaignProfilePermissions.length; ++i)
                            writer.uint32(/* id 7, wireType 0 =*/56).int32(message.campaignProfilePermissions[i]);
                    writer.uint32(/* id 8, wireType 1 =*/65).double(message.budget);
                    if (message.freeBudget != null && Object.hasOwnProperty.call(message, "freeBudget"))
                        writer.uint32(/* id 9, wireType 1 =*/73).double(message.freeBudget);
                    $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval.encode(message.timeInterval, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                    if (message.insertionOrderLines != null && message.insertionOrderLines.length)
                        for (var i = 0; i < message.insertionOrderLines.length; ++i)
                            $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine.encode(message.insertionOrderLines[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    writer.uint32(/* id 12, wireType 0 =*/96).bool(message.isCreatedBySalesforce);
                    if (message.isMoatUnsampled != null && Object.hasOwnProperty.call(message, "isMoatUnsampled"))
                        writer.uint32(/* id 13, wireType 0 =*/104).bool(message.isMoatUnsampled);
                    return writer;
                };

                /**
                 * Encodes the specified CampaignInfo message, length delimited. Does not implicitly {@link teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo
                 * @static
                 * @param {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.ICampaignInfo} message CampaignInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CampaignInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a CampaignInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo} CampaignInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CampaignInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.campaignId = reader.int64();
                                break;
                            }
                        case 2: {
                                message.campaignName = reader.string();
                                break;
                            }
                        case 3: {
                                message.seatId = reader.int64();
                                break;
                            }
                        case 4: {
                                message.entityName = reader.string();
                                break;
                            }
                        case 5: {
                                message.officeId = reader.int64();
                                break;
                            }
                        case 6: {
                                message.officeName = reader.string();
                                break;
                            }
                        case 7: {
                                if (!(message.campaignProfilePermissions && message.campaignProfilePermissions.length))
                                    message.campaignProfilePermissions = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.campaignProfilePermissions.push(reader.int32());
                                } else
                                    message.campaignProfilePermissions.push(reader.int32());
                                break;
                            }
                        case 8: {
                                message.budget = reader.double();
                                break;
                            }
                        case 9: {
                                message.freeBudget = reader.double();
                                break;
                            }
                        case 10: {
                                message.timeInterval = $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval.decode(reader, reader.uint32());
                                break;
                            }
                        case 11: {
                                if (!(message.insertionOrderLines && message.insertionOrderLines.length))
                                    message.insertionOrderLines = [];
                                message.insertionOrderLines.push($root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine.decode(reader, reader.uint32()));
                                break;
                            }
                        case 12: {
                                message.isCreatedBySalesforce = reader.bool();
                                break;
                            }
                        case 13: {
                                message.isMoatUnsampled = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("campaignId"))
                        throw $util.ProtocolError("missing required 'campaignId'", { instance: message });
                    if (!message.hasOwnProperty("campaignName"))
                        throw $util.ProtocolError("missing required 'campaignName'", { instance: message });
                    if (!message.hasOwnProperty("officeId"))
                        throw $util.ProtocolError("missing required 'officeId'", { instance: message });
                    if (!message.hasOwnProperty("officeName"))
                        throw $util.ProtocolError("missing required 'officeName'", { instance: message });
                    if (!message.hasOwnProperty("budget"))
                        throw $util.ProtocolError("missing required 'budget'", { instance: message });
                    if (!message.hasOwnProperty("timeInterval"))
                        throw $util.ProtocolError("missing required 'timeInterval'", { instance: message });
                    if (!message.hasOwnProperty("isCreatedBySalesforce"))
                        throw $util.ProtocolError("missing required 'isCreatedBySalesforce'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a CampaignInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo} CampaignInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CampaignInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a CampaignInfo message.
                 * @function verify
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CampaignInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.campaignId) && !(message.campaignId && $util.isInteger(message.campaignId.low) && $util.isInteger(message.campaignId.high)))
                        return "campaignId: integer|Long expected";
                    if (!$util.isString(message.campaignName))
                        return "campaignName: string expected";
                    if (message.seatId != null && message.hasOwnProperty("seatId"))
                        if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                            return "seatId: integer|Long expected";
                    if (message.entityName != null && message.hasOwnProperty("entityName"))
                        if (!$util.isString(message.entityName))
                            return "entityName: string expected";
                    if (!$util.isInteger(message.officeId) && !(message.officeId && $util.isInteger(message.officeId.low) && $util.isInteger(message.officeId.high)))
                        return "officeId: integer|Long expected";
                    if (!$util.isString(message.officeName))
                        return "officeName: string expected";
                    if (message.campaignProfilePermissions != null && message.hasOwnProperty("campaignProfilePermissions")) {
                        if (!Array.isArray(message.campaignProfilePermissions))
                            return "campaignProfilePermissions: array expected";
                        for (var i = 0; i < message.campaignProfilePermissions.length; ++i)
                            switch (message.campaignProfilePermissions[i]) {
                            default:
                                return "campaignProfilePermissions: enum value[] expected";
                            case 1:
                            case 2:
                                break;
                            }
                    }
                    if (typeof message.budget !== "number")
                        return "budget: number expected";
                    if (message.freeBudget != null && message.hasOwnProperty("freeBudget"))
                        if (typeof message.freeBudget !== "number")
                            return "freeBudget: number expected";
                    {
                        var error = $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval.verify(message.timeInterval);
                        if (error)
                            return "timeInterval." + error;
                    }
                    if (message.insertionOrderLines != null && message.hasOwnProperty("insertionOrderLines")) {
                        if (!Array.isArray(message.insertionOrderLines))
                            return "insertionOrderLines: array expected";
                        for (var i = 0; i < message.insertionOrderLines.length; ++i) {
                            var error = $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine.verify(message.insertionOrderLines[i]);
                            if (error)
                                return "insertionOrderLines." + error;
                        }
                    }
                    if (typeof message.isCreatedBySalesforce !== "boolean")
                        return "isCreatedBySalesforce: boolean expected";
                    if (message.isMoatUnsampled != null && message.hasOwnProperty("isMoatUnsampled"))
                        if (typeof message.isMoatUnsampled !== "boolean")
                            return "isMoatUnsampled: boolean expected";
                    return null;
                };

                /**
                 * Creates a CampaignInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo} CampaignInfo
                 */
                CampaignInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo)
                        return object;
                    var message = new $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo();
                    if (object.campaignId != null)
                        if ($util.Long)
                            (message.campaignId = $util.Long.fromValue(object.campaignId)).unsigned = false;
                        else if (typeof object.campaignId === "string")
                            message.campaignId = parseInt(object.campaignId, 10);
                        else if (typeof object.campaignId === "number")
                            message.campaignId = object.campaignId;
                        else if (typeof object.campaignId === "object")
                            message.campaignId = new $util.LongBits(object.campaignId.low >>> 0, object.campaignId.high >>> 0).toNumber();
                    if (object.campaignName != null)
                        message.campaignName = String(object.campaignName);
                    if (object.seatId != null)
                        if ($util.Long)
                            (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                        else if (typeof object.seatId === "string")
                            message.seatId = parseInt(object.seatId, 10);
                        else if (typeof object.seatId === "number")
                            message.seatId = object.seatId;
                        else if (typeof object.seatId === "object")
                            message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                    if (object.entityName != null)
                        message.entityName = String(object.entityName);
                    if (object.officeId != null)
                        if ($util.Long)
                            (message.officeId = $util.Long.fromValue(object.officeId)).unsigned = false;
                        else if (typeof object.officeId === "string")
                            message.officeId = parseInt(object.officeId, 10);
                        else if (typeof object.officeId === "number")
                            message.officeId = object.officeId;
                        else if (typeof object.officeId === "object")
                            message.officeId = new $util.LongBits(object.officeId.low >>> 0, object.officeId.high >>> 0).toNumber();
                    if (object.officeName != null)
                        message.officeName = String(object.officeName);
                    if (object.campaignProfilePermissions) {
                        if (!Array.isArray(object.campaignProfilePermissions))
                            throw TypeError(".teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo.campaignProfilePermissions: array expected");
                        message.campaignProfilePermissions = [];
                        for (var i = 0; i < object.campaignProfilePermissions.length; ++i)
                            switch (object.campaignProfilePermissions[i]) {
                            default:
                                if (typeof object.campaignProfilePermissions[i] === "number") {
                                    message.campaignProfilePermissions[i] = object.campaignProfilePermissions[i];
                                    break;
                                }
                            case "CAMPAIGN_PROFILE_PERMISSION_VIEW":
                            case 1:
                                message.campaignProfilePermissions[i] = 1;
                                break;
                            case "CAMPAIGN_PROFILE_PERMISSION_MANAGE":
                            case 2:
                                message.campaignProfilePermissions[i] = 2;
                                break;
                            }
                    }
                    if (object.budget != null)
                        message.budget = Number(object.budget);
                    if (object.freeBudget != null)
                        message.freeBudget = Number(object.freeBudget);
                    if (object.timeInterval != null) {
                        if (typeof object.timeInterval !== "object")
                            throw TypeError(".teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo.timeInterval: object expected");
                        message.timeInterval = $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval.fromObject(object.timeInterval);
                    }
                    if (object.insertionOrderLines) {
                        if (!Array.isArray(object.insertionOrderLines))
                            throw TypeError(".teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo.insertionOrderLines: array expected");
                        message.insertionOrderLines = [];
                        for (var i = 0; i < object.insertionOrderLines.length; ++i) {
                            if (typeof object.insertionOrderLines[i] !== "object")
                                throw TypeError(".teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo.insertionOrderLines: object expected");
                            message.insertionOrderLines[i] = $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine.fromObject(object.insertionOrderLines[i]);
                        }
                    }
                    if (object.isCreatedBySalesforce != null)
                        message.isCreatedBySalesforce = Boolean(object.isCreatedBySalesforce);
                    if (object.isMoatUnsampled != null)
                        message.isMoatUnsampled = Boolean(object.isMoatUnsampled);
                    return message;
                };

                /**
                 * Creates a plain object from a CampaignInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo
                 * @static
                 * @param {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo} message CampaignInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CampaignInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.campaignProfilePermissions = [];
                        object.insertionOrderLines = [];
                    }
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.campaignId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.campaignId = options.longs === String ? "0" : 0;
                        object.campaignName = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seatId = options.longs === String ? "0" : 0;
                        object.entityName = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.officeId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.officeId = options.longs === String ? "0" : 0;
                        object.officeName = "";
                        object.budget = 0;
                        object.freeBudget = 0;
                        object.timeInterval = null;
                        object.isCreatedBySalesforce = false;
                        object.isMoatUnsampled = false;
                    }
                    if (message.campaignId != null && message.hasOwnProperty("campaignId"))
                        if (typeof message.campaignId === "number")
                            object.campaignId = options.longs === String ? String(message.campaignId) : message.campaignId;
                        else
                            object.campaignId = options.longs === String ? $util.Long.prototype.toString.call(message.campaignId) : options.longs === Number ? new $util.LongBits(message.campaignId.low >>> 0, message.campaignId.high >>> 0).toNumber() : message.campaignId;
                    if (message.campaignName != null && message.hasOwnProperty("campaignName"))
                        object.campaignName = message.campaignName;
                    if (message.seatId != null && message.hasOwnProperty("seatId"))
                        if (typeof message.seatId === "number")
                            object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                        else
                            object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                    if (message.entityName != null && message.hasOwnProperty("entityName"))
                        object.entityName = message.entityName;
                    if (message.officeId != null && message.hasOwnProperty("officeId"))
                        if (typeof message.officeId === "number")
                            object.officeId = options.longs === String ? String(message.officeId) : message.officeId;
                        else
                            object.officeId = options.longs === String ? $util.Long.prototype.toString.call(message.officeId) : options.longs === Number ? new $util.LongBits(message.officeId.low >>> 0, message.officeId.high >>> 0).toNumber() : message.officeId;
                    if (message.officeName != null && message.hasOwnProperty("officeName"))
                        object.officeName = message.officeName;
                    if (message.campaignProfilePermissions && message.campaignProfilePermissions.length) {
                        object.campaignProfilePermissions = [];
                        for (var j = 0; j < message.campaignProfilePermissions.length; ++j)
                            object.campaignProfilePermissions[j] = options.enums === String ? $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignProfilePermission[message.campaignProfilePermissions[j]] === undefined ? message.campaignProfilePermissions[j] : $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignProfilePermission[message.campaignProfilePermissions[j]] : message.campaignProfilePermissions[j];
                    }
                    if (message.budget != null && message.hasOwnProperty("budget"))
                        object.budget = options.json && !isFinite(message.budget) ? String(message.budget) : message.budget;
                    if (message.freeBudget != null && message.hasOwnProperty("freeBudget"))
                        object.freeBudget = options.json && !isFinite(message.freeBudget) ? String(message.freeBudget) : message.freeBudget;
                    if (message.timeInterval != null && message.hasOwnProperty("timeInterval"))
                        object.timeInterval = $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval.toObject(message.timeInterval, options);
                    if (message.insertionOrderLines && message.insertionOrderLines.length) {
                        object.insertionOrderLines = [];
                        for (var j = 0; j < message.insertionOrderLines.length; ++j)
                            object.insertionOrderLines[j] = $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine.toObject(message.insertionOrderLines[j], options);
                    }
                    if (message.isCreatedBySalesforce != null && message.hasOwnProperty("isCreatedBySalesforce"))
                        object.isCreatedBySalesforce = message.isCreatedBySalesforce;
                    if (message.isMoatUnsampled != null && message.hasOwnProperty("isMoatUnsampled"))
                        object.isMoatUnsampled = message.isMoatUnsampled;
                    return object;
                };

                /**
                 * Converts this CampaignInfo to JSON.
                 * @function toJSON
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CampaignInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for CampaignInfo
                 * @function getTypeUrl
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CampaignInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignInfo";
                };

                return CampaignInfo;
            })();

            FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine = (function() {

                /**
                 * Properties of an InsertionOrderLine.
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse
                 * @interface IInsertionOrderLine
                 * @property {number} id InsertionOrderLine id
                 * @property {string} name InsertionOrderLine name
                 * @property {string|null} [salesforceOpportunityLineItemId] InsertionOrderLine salesforceOpportunityLineItemId
                 * @property {number|null} [budget] InsertionOrderLine budget
                 * @property {number|null} [freeBudget] InsertionOrderLine freeBudget
                 * @property {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.ITimeInterval} timeInterval InsertionOrderLine timeInterval
                 * @property {teads.api.InsertionOrderLineBillingModel|null} [billingModel] InsertionOrderLine billingModel
                 * @property {number|null} [billingModelRate] InsertionOrderLine billingModelRate
                 * @property {string|null} [billingEvent] InsertionOrderLine billingEvent
                 * @property {teads.api.InsertionOrderLineAuctionType|null} [auctionType] InsertionOrderLine auctionType
                 * @property {teads.api.InsertionOrderLineCreativeTypeFamily|null} [creativeTypeFamily] InsertionOrderLine creativeTypeFamily
                 * @property {boolean|null} [isGuaranteed] InsertionOrderLine isGuaranteed
                 */

                /**
                 * Constructs a new InsertionOrderLine.
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse
                 * @classdesc Represents an InsertionOrderLine.
                 * @implements IInsertionOrderLine
                 * @constructor
                 * @param {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.IInsertionOrderLine=} [properties] Properties to set
                 */
                function InsertionOrderLine(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * InsertionOrderLine id.
                 * @member {number} id
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine
                 * @instance
                 */
                InsertionOrderLine.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * InsertionOrderLine name.
                 * @member {string} name
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine
                 * @instance
                 */
                InsertionOrderLine.prototype.name = "";

                /**
                 * InsertionOrderLine salesforceOpportunityLineItemId.
                 * @member {string} salesforceOpportunityLineItemId
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine
                 * @instance
                 */
                InsertionOrderLine.prototype.salesforceOpportunityLineItemId = "";

                /**
                 * InsertionOrderLine budget.
                 * @member {number} budget
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine
                 * @instance
                 */
                InsertionOrderLine.prototype.budget = 0;

                /**
                 * InsertionOrderLine freeBudget.
                 * @member {number} freeBudget
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine
                 * @instance
                 */
                InsertionOrderLine.prototype.freeBudget = 0;

                /**
                 * InsertionOrderLine timeInterval.
                 * @member {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.ITimeInterval} timeInterval
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine
                 * @instance
                 */
                InsertionOrderLine.prototype.timeInterval = null;

                /**
                 * InsertionOrderLine billingModel.
                 * @member {teads.api.InsertionOrderLineBillingModel} billingModel
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine
                 * @instance
                 */
                InsertionOrderLine.prototype.billingModel = 1;

                /**
                 * InsertionOrderLine billingModelRate.
                 * @member {number} billingModelRate
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine
                 * @instance
                 */
                InsertionOrderLine.prototype.billingModelRate = 0;

                /**
                 * InsertionOrderLine billingEvent.
                 * @member {string} billingEvent
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine
                 * @instance
                 */
                InsertionOrderLine.prototype.billingEvent = "";

                /**
                 * InsertionOrderLine auctionType.
                 * @member {teads.api.InsertionOrderLineAuctionType} auctionType
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine
                 * @instance
                 */
                InsertionOrderLine.prototype.auctionType = 1;

                /**
                 * InsertionOrderLine creativeTypeFamily.
                 * @member {teads.api.InsertionOrderLineCreativeTypeFamily} creativeTypeFamily
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine
                 * @instance
                 */
                InsertionOrderLine.prototype.creativeTypeFamily = 1;

                /**
                 * InsertionOrderLine isGuaranteed.
                 * @member {boolean} isGuaranteed
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine
                 * @instance
                 */
                InsertionOrderLine.prototype.isGuaranteed = false;

                /**
                 * Creates a new InsertionOrderLine instance using the specified properties.
                 * @function create
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine
                 * @static
                 * @param {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.IInsertionOrderLine=} [properties] Properties to set
                 * @returns {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine} InsertionOrderLine instance
                 */
                InsertionOrderLine.create = function create(properties) {
                    return new InsertionOrderLine(properties);
                };

                /**
                 * Encodes the specified InsertionOrderLine message. Does not implicitly {@link teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine
                 * @static
                 * @param {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.IInsertionOrderLine} message InsertionOrderLine message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                InsertionOrderLine.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.id);
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
                    if (message.salesforceOpportunityLineItemId != null && Object.hasOwnProperty.call(message, "salesforceOpportunityLineItemId"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.salesforceOpportunityLineItemId);
                    if (message.budget != null && Object.hasOwnProperty.call(message, "budget"))
                        writer.uint32(/* id 4, wireType 1 =*/33).double(message.budget);
                    if (message.freeBudget != null && Object.hasOwnProperty.call(message, "freeBudget"))
                        writer.uint32(/* id 5, wireType 1 =*/41).double(message.freeBudget);
                    $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval.encode(message.timeInterval, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.billingModel != null && Object.hasOwnProperty.call(message, "billingModel"))
                        writer.uint32(/* id 7, wireType 0 =*/56).int32(message.billingModel);
                    if (message.billingModelRate != null && Object.hasOwnProperty.call(message, "billingModelRate"))
                        writer.uint32(/* id 8, wireType 1 =*/65).double(message.billingModelRate);
                    if (message.billingEvent != null && Object.hasOwnProperty.call(message, "billingEvent"))
                        writer.uint32(/* id 9, wireType 2 =*/74).string(message.billingEvent);
                    if (message.auctionType != null && Object.hasOwnProperty.call(message, "auctionType"))
                        writer.uint32(/* id 10, wireType 0 =*/80).int32(message.auctionType);
                    if (message.creativeTypeFamily != null && Object.hasOwnProperty.call(message, "creativeTypeFamily"))
                        writer.uint32(/* id 11, wireType 0 =*/88).int32(message.creativeTypeFamily);
                    if (message.isGuaranteed != null && Object.hasOwnProperty.call(message, "isGuaranteed"))
                        writer.uint32(/* id 12, wireType 0 =*/96).bool(message.isGuaranteed);
                    return writer;
                };

                /**
                 * Encodes the specified InsertionOrderLine message, length delimited. Does not implicitly {@link teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine
                 * @static
                 * @param {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.IInsertionOrderLine} message InsertionOrderLine message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                InsertionOrderLine.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes an InsertionOrderLine message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine} InsertionOrderLine
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                InsertionOrderLine.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.id = reader.int64();
                                break;
                            }
                        case 2: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.salesforceOpportunityLineItemId = reader.string();
                                break;
                            }
                        case 4: {
                                message.budget = reader.double();
                                break;
                            }
                        case 5: {
                                message.freeBudget = reader.double();
                                break;
                            }
                        case 6: {
                                message.timeInterval = $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval.decode(reader, reader.uint32());
                                break;
                            }
                        case 7: {
                                message.billingModel = reader.int32();
                                break;
                            }
                        case 8: {
                                message.billingModelRate = reader.double();
                                break;
                            }
                        case 9: {
                                message.billingEvent = reader.string();
                                break;
                            }
                        case 10: {
                                message.auctionType = reader.int32();
                                break;
                            }
                        case 11: {
                                message.creativeTypeFamily = reader.int32();
                                break;
                            }
                        case 12: {
                                message.isGuaranteed = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("id"))
                        throw $util.ProtocolError("missing required 'id'", { instance: message });
                    if (!message.hasOwnProperty("name"))
                        throw $util.ProtocolError("missing required 'name'", { instance: message });
                    if (!message.hasOwnProperty("timeInterval"))
                        throw $util.ProtocolError("missing required 'timeInterval'", { instance: message });
                    return message;
                };

                /**
                 * Decodes an InsertionOrderLine message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine} InsertionOrderLine
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                InsertionOrderLine.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies an InsertionOrderLine message.
                 * @function verify
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                InsertionOrderLine.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.id) && !(message.id && $util.isInteger(message.id.low) && $util.isInteger(message.id.high)))
                        return "id: integer|Long expected";
                    if (!$util.isString(message.name))
                        return "name: string expected";
                    if (message.salesforceOpportunityLineItemId != null && message.hasOwnProperty("salesforceOpportunityLineItemId"))
                        if (!$util.isString(message.salesforceOpportunityLineItemId))
                            return "salesforceOpportunityLineItemId: string expected";
                    if (message.budget != null && message.hasOwnProperty("budget"))
                        if (typeof message.budget !== "number")
                            return "budget: number expected";
                    if (message.freeBudget != null && message.hasOwnProperty("freeBudget"))
                        if (typeof message.freeBudget !== "number")
                            return "freeBudget: number expected";
                    {
                        var error = $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval.verify(message.timeInterval);
                        if (error)
                            return "timeInterval." + error;
                    }
                    if (message.billingModel != null && message.hasOwnProperty("billingModel"))
                        switch (message.billingModel) {
                        default:
                            return "billingModel: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            break;
                        }
                    if (message.billingModelRate != null && message.hasOwnProperty("billingModelRate"))
                        if (typeof message.billingModelRate !== "number")
                            return "billingModelRate: number expected";
                    if (message.billingEvent != null && message.hasOwnProperty("billingEvent"))
                        if (!$util.isString(message.billingEvent))
                            return "billingEvent: string expected";
                    if (message.auctionType != null && message.hasOwnProperty("auctionType"))
                        switch (message.auctionType) {
                        default:
                            return "auctionType: enum value expected";
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.creativeTypeFamily != null && message.hasOwnProperty("creativeTypeFamily"))
                        switch (message.creativeTypeFamily) {
                        default:
                            return "creativeTypeFamily: enum value expected";
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.isGuaranteed != null && message.hasOwnProperty("isGuaranteed"))
                        if (typeof message.isGuaranteed !== "boolean")
                            return "isGuaranteed: boolean expected";
                    return null;
                };

                /**
                 * Creates an InsertionOrderLine message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine} InsertionOrderLine
                 */
                InsertionOrderLine.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine)
                        return object;
                    var message = new $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine();
                    if (object.id != null)
                        if ($util.Long)
                            (message.id = $util.Long.fromValue(object.id)).unsigned = false;
                        else if (typeof object.id === "string")
                            message.id = parseInt(object.id, 10);
                        else if (typeof object.id === "number")
                            message.id = object.id;
                        else if (typeof object.id === "object")
                            message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.salesforceOpportunityLineItemId != null)
                        message.salesforceOpportunityLineItemId = String(object.salesforceOpportunityLineItemId);
                    if (object.budget != null)
                        message.budget = Number(object.budget);
                    if (object.freeBudget != null)
                        message.freeBudget = Number(object.freeBudget);
                    if (object.timeInterval != null) {
                        if (typeof object.timeInterval !== "object")
                            throw TypeError(".teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine.timeInterval: object expected");
                        message.timeInterval = $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval.fromObject(object.timeInterval);
                    }
                    switch (object.billingModel) {
                    default:
                        if (typeof object.billingModel === "number") {
                            message.billingModel = object.billingModel;
                            break;
                        }
                        break;
                    case "INSERTION_ORDER_LINE_BILLING_MODEL_CPM":
                    case 1:
                        message.billingModel = 1;
                        break;
                    case "INSERTION_ORDER_LINE_BILLING_MODEL_VCPM":
                    case 2:
                        message.billingModel = 2;
                        break;
                    case "INSERTION_ORDER_LINE_BILLING_MODEL_CPCV":
                    case 3:
                        message.billingModel = 3;
                        break;
                    case "INSERTION_ORDER_LINE_BILLING_MODEL_CPC":
                    case 4:
                        message.billingModel = 4;
                        break;
                    case "INSERTION_ORDER_LINE_BILLING_MODEL_CPV":
                    case 5:
                        message.billingModel = 5;
                        break;
                    }
                    if (object.billingModelRate != null)
                        message.billingModelRate = Number(object.billingModelRate);
                    if (object.billingEvent != null)
                        message.billingEvent = String(object.billingEvent);
                    switch (object.auctionType) {
                    default:
                        if (typeof object.auctionType === "number") {
                            message.auctionType = object.auctionType;
                            break;
                        }
                        break;
                    case "INSERTION_ORDER_LINE_AUCTION_TYPE_FIXED":
                    case 1:
                        message.auctionType = 1;
                        break;
                    case "INSERTION_ORDER_LINE_AUCTION_TYPE_DYNAMIC":
                    case 2:
                        message.auctionType = 2;
                        break;
                    }
                    switch (object.creativeTypeFamily) {
                    default:
                        if (typeof object.creativeTypeFamily === "number") {
                            message.creativeTypeFamily = object.creativeTypeFamily;
                            break;
                        }
                        break;
                    case "INSERTION_ORDER_LINE_CREATIVE_TYPE_FAMILY_VIDEO":
                    case 1:
                        message.creativeTypeFamily = 1;
                        break;
                    case "INSERTION_ORDER_LINE_CREATIVE_TYPE_FAMILY_DISPLAY":
                    case 2:
                        message.creativeTypeFamily = 2;
                        break;
                    }
                    if (object.isGuaranteed != null)
                        message.isGuaranteed = Boolean(object.isGuaranteed);
                    return message;
                };

                /**
                 * Creates a plain object from an InsertionOrderLine message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine
                 * @static
                 * @param {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine} message InsertionOrderLine
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                InsertionOrderLine.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.id = options.longs === String ? "0" : 0;
                        object.name = "";
                        object.salesforceOpportunityLineItemId = "";
                        object.budget = 0;
                        object.freeBudget = 0;
                        object.timeInterval = null;
                        object.billingModel = options.enums === String ? "INSERTION_ORDER_LINE_BILLING_MODEL_CPM" : 1;
                        object.billingModelRate = 0;
                        object.billingEvent = "";
                        object.auctionType = options.enums === String ? "INSERTION_ORDER_LINE_AUCTION_TYPE_FIXED" : 1;
                        object.creativeTypeFamily = options.enums === String ? "INSERTION_ORDER_LINE_CREATIVE_TYPE_FAMILY_VIDEO" : 1;
                        object.isGuaranteed = false;
                    }
                    if (message.id != null && message.hasOwnProperty("id"))
                        if (typeof message.id === "number")
                            object.id = options.longs === String ? String(message.id) : message.id;
                        else
                            object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber() : message.id;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.salesforceOpportunityLineItemId != null && message.hasOwnProperty("salesforceOpportunityLineItemId"))
                        object.salesforceOpportunityLineItemId = message.salesforceOpportunityLineItemId;
                    if (message.budget != null && message.hasOwnProperty("budget"))
                        object.budget = options.json && !isFinite(message.budget) ? String(message.budget) : message.budget;
                    if (message.freeBudget != null && message.hasOwnProperty("freeBudget"))
                        object.freeBudget = options.json && !isFinite(message.freeBudget) ? String(message.freeBudget) : message.freeBudget;
                    if (message.timeInterval != null && message.hasOwnProperty("timeInterval"))
                        object.timeInterval = $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval.toObject(message.timeInterval, options);
                    if (message.billingModel != null && message.hasOwnProperty("billingModel"))
                        object.billingModel = options.enums === String ? $root.teads.api.InsertionOrderLineBillingModel[message.billingModel] === undefined ? message.billingModel : $root.teads.api.InsertionOrderLineBillingModel[message.billingModel] : message.billingModel;
                    if (message.billingModelRate != null && message.hasOwnProperty("billingModelRate"))
                        object.billingModelRate = options.json && !isFinite(message.billingModelRate) ? String(message.billingModelRate) : message.billingModelRate;
                    if (message.billingEvent != null && message.hasOwnProperty("billingEvent"))
                        object.billingEvent = message.billingEvent;
                    if (message.auctionType != null && message.hasOwnProperty("auctionType"))
                        object.auctionType = options.enums === String ? $root.teads.api.InsertionOrderLineAuctionType[message.auctionType] === undefined ? message.auctionType : $root.teads.api.InsertionOrderLineAuctionType[message.auctionType] : message.auctionType;
                    if (message.creativeTypeFamily != null && message.hasOwnProperty("creativeTypeFamily"))
                        object.creativeTypeFamily = options.enums === String ? $root.teads.api.InsertionOrderLineCreativeTypeFamily[message.creativeTypeFamily] === undefined ? message.creativeTypeFamily : $root.teads.api.InsertionOrderLineCreativeTypeFamily[message.creativeTypeFamily] : message.creativeTypeFamily;
                    if (message.isGuaranteed != null && message.hasOwnProperty("isGuaranteed"))
                        object.isGuaranteed = message.isGuaranteed;
                    return object;
                };

                /**
                 * Converts this InsertionOrderLine to JSON.
                 * @function toJSON
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                InsertionOrderLine.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for InsertionOrderLine
                 * @function getTypeUrl
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                InsertionOrderLine.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.InsertionOrderLine";
                };

                return InsertionOrderLine;
            })();

            FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval = (function() {

                /**
                 * Properties of a TimeInterval.
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse
                 * @interface ITimeInterval
                 * @property {google.protobuf.ITimestamp} startDate TimeInterval startDate
                 * @property {google.protobuf.ITimestamp} endDate TimeInterval endDate
                 */

                /**
                 * Constructs a new TimeInterval.
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse
                 * @classdesc Represents a TimeInterval.
                 * @implements ITimeInterval
                 * @constructor
                 * @param {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.ITimeInterval=} [properties] Properties to set
                 */
                function TimeInterval(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * TimeInterval startDate.
                 * @member {google.protobuf.ITimestamp} startDate
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval
                 * @instance
                 */
                TimeInterval.prototype.startDate = null;

                /**
                 * TimeInterval endDate.
                 * @member {google.protobuf.ITimestamp} endDate
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval
                 * @instance
                 */
                TimeInterval.prototype.endDate = null;

                /**
                 * Creates a new TimeInterval instance using the specified properties.
                 * @function create
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval
                 * @static
                 * @param {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.ITimeInterval=} [properties] Properties to set
                 * @returns {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval} TimeInterval instance
                 */
                TimeInterval.create = function create(properties) {
                    return new TimeInterval(properties);
                };

                /**
                 * Encodes the specified TimeInterval message. Does not implicitly {@link teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval
                 * @static
                 * @param {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.ITimeInterval} message TimeInterval message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                TimeInterval.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    $root.google.protobuf.Timestamp.encode(message.startDate, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    $root.google.protobuf.Timestamp.encode(message.endDate, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified TimeInterval message, length delimited. Does not implicitly {@link teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval
                 * @static
                 * @param {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.ITimeInterval} message TimeInterval message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                TimeInterval.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a TimeInterval message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval} TimeInterval
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                TimeInterval.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.startDate = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                break;
                            }
                        case 2: {
                                message.endDate = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("startDate"))
                        throw $util.ProtocolError("missing required 'startDate'", { instance: message });
                    if (!message.hasOwnProperty("endDate"))
                        throw $util.ProtocolError("missing required 'endDate'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a TimeInterval message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval} TimeInterval
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                TimeInterval.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a TimeInterval message.
                 * @function verify
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                TimeInterval.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    {
                        var error = $root.google.protobuf.Timestamp.verify(message.startDate);
                        if (error)
                            return "startDate." + error;
                    }
                    {
                        var error = $root.google.protobuf.Timestamp.verify(message.endDate);
                        if (error)
                            return "endDate." + error;
                    }
                    return null;
                };

                /**
                 * Creates a TimeInterval message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval} TimeInterval
                 */
                TimeInterval.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval)
                        return object;
                    var message = new $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval();
                    if (object.startDate != null) {
                        if (typeof object.startDate !== "object")
                            throw TypeError(".teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval.startDate: object expected");
                        message.startDate = $root.google.protobuf.Timestamp.fromObject(object.startDate);
                    }
                    if (object.endDate != null) {
                        if (typeof object.endDate !== "object")
                            throw TypeError(".teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval.endDate: object expected");
                        message.endDate = $root.google.protobuf.Timestamp.fromObject(object.endDate);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a TimeInterval message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval
                 * @static
                 * @param {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval} message TimeInterval
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                TimeInterval.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.startDate = null;
                        object.endDate = null;
                    }
                    if (message.startDate != null && message.hasOwnProperty("startDate"))
                        object.startDate = $root.google.protobuf.Timestamp.toObject(message.startDate, options);
                    if (message.endDate != null && message.hasOwnProperty("endDate"))
                        object.endDate = $root.google.protobuf.Timestamp.toObject(message.endDate, options);
                    return object;
                };

                /**
                 * Converts this TimeInterval to JSON.
                 * @function toJSON
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                TimeInterval.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for TimeInterval
                 * @function getTypeUrl
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                TimeInterval.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.TimeInterval";
                };

                return TimeInterval;
            })();

            /**
             * CampaignProfilePermission enum.
             * @name teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignProfilePermission
             * @enum {number}
             * @property {number} CAMPAIGN_PROFILE_PERMISSION_VIEW=1 CAMPAIGN_PROFILE_PERMISSION_VIEW value
             * @property {number} CAMPAIGN_PROFILE_PERMISSION_MANAGE=2 CAMPAIGN_PROFILE_PERMISSION_MANAGE value
             */
            FindCampaignsForSalesforceOpportunityAndProfileResponse.CampaignProfilePermission = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[1] = "CAMPAIGN_PROFILE_PERMISSION_VIEW"] = 1;
                values[valuesById[2] = "CAMPAIGN_PROFILE_PERMISSION_MANAGE"] = 2;
                return values;
            })();

            return FindCampaignsForSalesforceOpportunityAndProfileResponse;
        })();

        api.FindCampaignsForSalesforceOpportunityRequest = (function() {

            /**
             * Properties of a FindCampaignsForSalesforceOpportunityRequest.
             * @memberof teads.api
             * @interface IFindCampaignsForSalesforceOpportunityRequest
             * @property {teads.api.ISecurityContext} securityContext FindCampaignsForSalesforceOpportunityRequest securityContext
             * @property {string} opportunityId FindCampaignsForSalesforceOpportunityRequest opportunityId
             * @property {teads.api.CampaignObjective} campaignObjective FindCampaignsForSalesforceOpportunityRequest campaignObjective
             * @property {teads.api.AdvertisingSolutionId|null} [advertisingSolutionId] FindCampaignsForSalesforceOpportunityRequest advertisingSolutionId
             */

            /**
             * Constructs a new FindCampaignsForSalesforceOpportunityRequest.
             * @memberof teads.api
             * @classdesc Represents a FindCampaignsForSalesforceOpportunityRequest.
             * @implements IFindCampaignsForSalesforceOpportunityRequest
             * @constructor
             * @param {teads.api.IFindCampaignsForSalesforceOpportunityRequest=} [properties] Properties to set
             */
            function FindCampaignsForSalesforceOpportunityRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * FindCampaignsForSalesforceOpportunityRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityRequest
             * @instance
             */
            FindCampaignsForSalesforceOpportunityRequest.prototype.securityContext = null;

            /**
             * FindCampaignsForSalesforceOpportunityRequest opportunityId.
             * @member {string} opportunityId
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityRequest
             * @instance
             */
            FindCampaignsForSalesforceOpportunityRequest.prototype.opportunityId = "";

            /**
             * FindCampaignsForSalesforceOpportunityRequest campaignObjective.
             * @member {teads.api.CampaignObjective} campaignObjective
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityRequest
             * @instance
             */
            FindCampaignsForSalesforceOpportunityRequest.prototype.campaignObjective = 0;

            /**
             * FindCampaignsForSalesforceOpportunityRequest advertisingSolutionId.
             * @member {teads.api.AdvertisingSolutionId} advertisingSolutionId
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityRequest
             * @instance
             */
            FindCampaignsForSalesforceOpportunityRequest.prototype.advertisingSolutionId = 1;

            /**
             * Creates a new FindCampaignsForSalesforceOpportunityRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityRequest
             * @static
             * @param {teads.api.IFindCampaignsForSalesforceOpportunityRequest=} [properties] Properties to set
             * @returns {teads.api.FindCampaignsForSalesforceOpportunityRequest} FindCampaignsForSalesforceOpportunityRequest instance
             */
            FindCampaignsForSalesforceOpportunityRequest.create = function create(properties) {
                return new FindCampaignsForSalesforceOpportunityRequest(properties);
            };

            /**
             * Encodes the specified FindCampaignsForSalesforceOpportunityRequest message. Does not implicitly {@link teads.api.FindCampaignsForSalesforceOpportunityRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityRequest
             * @static
             * @param {teads.api.IFindCampaignsForSalesforceOpportunityRequest} message FindCampaignsForSalesforceOpportunityRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindCampaignsForSalesforceOpportunityRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.opportunityId);
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.campaignObjective);
                if (message.advertisingSolutionId != null && Object.hasOwnProperty.call(message, "advertisingSolutionId"))
                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.advertisingSolutionId);
                return writer;
            };

            /**
             * Encodes the specified FindCampaignsForSalesforceOpportunityRequest message, length delimited. Does not implicitly {@link teads.api.FindCampaignsForSalesforceOpportunityRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityRequest
             * @static
             * @param {teads.api.IFindCampaignsForSalesforceOpportunityRequest} message FindCampaignsForSalesforceOpportunityRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindCampaignsForSalesforceOpportunityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a FindCampaignsForSalesforceOpportunityRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.FindCampaignsForSalesforceOpportunityRequest} FindCampaignsForSalesforceOpportunityRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindCampaignsForSalesforceOpportunityRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindCampaignsForSalesforceOpportunityRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.opportunityId = reader.string();
                            break;
                        }
                    case 3: {
                            message.campaignObjective = reader.int32();
                            break;
                        }
                    case 4: {
                            message.advertisingSolutionId = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("opportunityId"))
                    throw $util.ProtocolError("missing required 'opportunityId'", { instance: message });
                if (!message.hasOwnProperty("campaignObjective"))
                    throw $util.ProtocolError("missing required 'campaignObjective'", { instance: message });
                return message;
            };

            /**
             * Decodes a FindCampaignsForSalesforceOpportunityRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.FindCampaignsForSalesforceOpportunityRequest} FindCampaignsForSalesforceOpportunityRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindCampaignsForSalesforceOpportunityRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a FindCampaignsForSalesforceOpportunityRequest message.
             * @function verify
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FindCampaignsForSalesforceOpportunityRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isString(message.opportunityId))
                    return "opportunityId: string expected";
                switch (message.campaignObjective) {
                default:
                    return "campaignObjective: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                    break;
                }
                if (message.advertisingSolutionId != null && message.hasOwnProperty("advertisingSolutionId"))
                    switch (message.advertisingSolutionId) {
                    default:
                        return "advertisingSolutionId: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                        break;
                    }
                return null;
            };

            /**
             * Creates a FindCampaignsForSalesforceOpportunityRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.FindCampaignsForSalesforceOpportunityRequest} FindCampaignsForSalesforceOpportunityRequest
             */
            FindCampaignsForSalesforceOpportunityRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.FindCampaignsForSalesforceOpportunityRequest)
                    return object;
                var message = new $root.teads.api.FindCampaignsForSalesforceOpportunityRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.FindCampaignsForSalesforceOpportunityRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.opportunityId != null)
                    message.opportunityId = String(object.opportunityId);
                switch (object.campaignObjective) {
                default:
                    if (typeof object.campaignObjective === "number") {
                        message.campaignObjective = object.campaignObjective;
                        break;
                    }
                    break;
                case "CAMPAIGN_OBJECTIVE_BRANDING":
                case 0:
                    message.campaignObjective = 0;
                    break;
                case "CAMPAIGN_OBJECTIVE_TRAFFIC_ACQUISITION":
                case 1:
                    message.campaignObjective = 1;
                    break;
                case "CAMPAIGN_OBJECTIVE_SOCIAL":
                case 2:
                    message.campaignObjective = 2;
                    break;
                case "CAMPAIGN_OBJECTIVE_CONVERSIONS":
                case 3:
                    message.campaignObjective = 3;
                    break;
                }
                switch (object.advertisingSolutionId) {
                default:
                    if (typeof object.advertisingSolutionId === "number") {
                        message.advertisingSolutionId = object.advertisingSolutionId;
                        break;
                    }
                    break;
                case "ADVERTISING_SOLUTION_ID_AWARENESS":
                case 1:
                    message.advertisingSolutionId = 1;
                    break;
                case "ADVERTISING_SOLUTION_ID_TA_CLICKS":
                case 2:
                    message.advertisingSolutionId = 2;
                    break;
                case "ADVERTISING_SOLUTION_ID_TA_VISITS":
                case 3:
                    message.advertisingSolutionId = 3;
                    break;
                case "ADVERTISING_SOLUTION_ID_TA_MIXED":
                case 4:
                    message.advertisingSolutionId = 4;
                    break;
                case "ADVERTISING_SOLUTION_ID_WEBSITE_CONVERSIONS":
                case 5:
                    message.advertisingSolutionId = 5;
                    break;
                case "ADVERTISING_SOLUTION_ID_SEAMLESS_COMMERCE":
                case 6:
                    message.advertisingSolutionId = 6;
                    break;
                case "ADVERTISING_SOLUTION_ID_TA_CLICKS_GUARANTEED_CPC":
                case 7:
                    message.advertisingSolutionId = 7;
                    break;
                case "ADVERTISING_SOLUTION_ID_TA_VISITS_GUARANTEED_CPC":
                case 8:
                    message.advertisingSolutionId = 8;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a FindCampaignsForSalesforceOpportunityRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityRequest
             * @static
             * @param {teads.api.FindCampaignsForSalesforceOpportunityRequest} message FindCampaignsForSalesforceOpportunityRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FindCampaignsForSalesforceOpportunityRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    object.opportunityId = "";
                    object.campaignObjective = options.enums === String ? "CAMPAIGN_OBJECTIVE_BRANDING" : 0;
                    object.advertisingSolutionId = options.enums === String ? "ADVERTISING_SOLUTION_ID_AWARENESS" : 1;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.opportunityId != null && message.hasOwnProperty("opportunityId"))
                    object.opportunityId = message.opportunityId;
                if (message.campaignObjective != null && message.hasOwnProperty("campaignObjective"))
                    object.campaignObjective = options.enums === String ? $root.teads.api.CampaignObjective[message.campaignObjective] === undefined ? message.campaignObjective : $root.teads.api.CampaignObjective[message.campaignObjective] : message.campaignObjective;
                if (message.advertisingSolutionId != null && message.hasOwnProperty("advertisingSolutionId"))
                    object.advertisingSolutionId = options.enums === String ? $root.teads.api.AdvertisingSolutionId[message.advertisingSolutionId] === undefined ? message.advertisingSolutionId : $root.teads.api.AdvertisingSolutionId[message.advertisingSolutionId] : message.advertisingSolutionId;
                return object;
            };

            /**
             * Converts this FindCampaignsForSalesforceOpportunityRequest to JSON.
             * @function toJSON
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FindCampaignsForSalesforceOpportunityRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for FindCampaignsForSalesforceOpportunityRequest
             * @function getTypeUrl
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            FindCampaignsForSalesforceOpportunityRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.FindCampaignsForSalesforceOpportunityRequest";
            };

            return FindCampaignsForSalesforceOpportunityRequest;
        })();

        api.FindCampaignsForSalesforceOpportunityResponse = (function() {

            /**
             * Properties of a FindCampaignsForSalesforceOpportunityResponse.
             * @memberof teads.api
             * @interface IFindCampaignsForSalesforceOpportunityResponse
             * @property {Array.<teads.api.FindCampaignsForSalesforceOpportunityResponse.ICampaignInfo>|null} [campaigns] FindCampaignsForSalesforceOpportunityResponse campaigns
             */

            /**
             * Constructs a new FindCampaignsForSalesforceOpportunityResponse.
             * @memberof teads.api
             * @classdesc Represents a FindCampaignsForSalesforceOpportunityResponse.
             * @implements IFindCampaignsForSalesforceOpportunityResponse
             * @constructor
             * @param {teads.api.IFindCampaignsForSalesforceOpportunityResponse=} [properties] Properties to set
             */
            function FindCampaignsForSalesforceOpportunityResponse(properties) {
                this.campaigns = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * FindCampaignsForSalesforceOpportunityResponse campaigns.
             * @member {Array.<teads.api.FindCampaignsForSalesforceOpportunityResponse.ICampaignInfo>} campaigns
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse
             * @instance
             */
            FindCampaignsForSalesforceOpportunityResponse.prototype.campaigns = $util.emptyArray;

            /**
             * Creates a new FindCampaignsForSalesforceOpportunityResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse
             * @static
             * @param {teads.api.IFindCampaignsForSalesforceOpportunityResponse=} [properties] Properties to set
             * @returns {teads.api.FindCampaignsForSalesforceOpportunityResponse} FindCampaignsForSalesforceOpportunityResponse instance
             */
            FindCampaignsForSalesforceOpportunityResponse.create = function create(properties) {
                return new FindCampaignsForSalesforceOpportunityResponse(properties);
            };

            /**
             * Encodes the specified FindCampaignsForSalesforceOpportunityResponse message. Does not implicitly {@link teads.api.FindCampaignsForSalesforceOpportunityResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse
             * @static
             * @param {teads.api.IFindCampaignsForSalesforceOpportunityResponse} message FindCampaignsForSalesforceOpportunityResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindCampaignsForSalesforceOpportunityResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.campaigns != null && message.campaigns.length)
                    for (var i = 0; i < message.campaigns.length; ++i)
                        $root.teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo.encode(message.campaigns[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified FindCampaignsForSalesforceOpportunityResponse message, length delimited. Does not implicitly {@link teads.api.FindCampaignsForSalesforceOpportunityResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse
             * @static
             * @param {teads.api.IFindCampaignsForSalesforceOpportunityResponse} message FindCampaignsForSalesforceOpportunityResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindCampaignsForSalesforceOpportunityResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a FindCampaignsForSalesforceOpportunityResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.FindCampaignsForSalesforceOpportunityResponse} FindCampaignsForSalesforceOpportunityResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindCampaignsForSalesforceOpportunityResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindCampaignsForSalesforceOpportunityResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            if (!(message.campaigns && message.campaigns.length))
                                message.campaigns = [];
                            message.campaigns.push($root.teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a FindCampaignsForSalesforceOpportunityResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.FindCampaignsForSalesforceOpportunityResponse} FindCampaignsForSalesforceOpportunityResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindCampaignsForSalesforceOpportunityResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a FindCampaignsForSalesforceOpportunityResponse message.
             * @function verify
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FindCampaignsForSalesforceOpportunityResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.campaigns != null && message.hasOwnProperty("campaigns")) {
                    if (!Array.isArray(message.campaigns))
                        return "campaigns: array expected";
                    for (var i = 0; i < message.campaigns.length; ++i) {
                        var error = $root.teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo.verify(message.campaigns[i]);
                        if (error)
                            return "campaigns." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a FindCampaignsForSalesforceOpportunityResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.FindCampaignsForSalesforceOpportunityResponse} FindCampaignsForSalesforceOpportunityResponse
             */
            FindCampaignsForSalesforceOpportunityResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.FindCampaignsForSalesforceOpportunityResponse)
                    return object;
                var message = new $root.teads.api.FindCampaignsForSalesforceOpportunityResponse();
                if (object.campaigns) {
                    if (!Array.isArray(object.campaigns))
                        throw TypeError(".teads.api.FindCampaignsForSalesforceOpportunityResponse.campaigns: array expected");
                    message.campaigns = [];
                    for (var i = 0; i < object.campaigns.length; ++i) {
                        if (typeof object.campaigns[i] !== "object")
                            throw TypeError(".teads.api.FindCampaignsForSalesforceOpportunityResponse.campaigns: object expected");
                        message.campaigns[i] = $root.teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo.fromObject(object.campaigns[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a FindCampaignsForSalesforceOpportunityResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse
             * @static
             * @param {teads.api.FindCampaignsForSalesforceOpportunityResponse} message FindCampaignsForSalesforceOpportunityResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FindCampaignsForSalesforceOpportunityResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.campaigns = [];
                if (message.campaigns && message.campaigns.length) {
                    object.campaigns = [];
                    for (var j = 0; j < message.campaigns.length; ++j)
                        object.campaigns[j] = $root.teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo.toObject(message.campaigns[j], options);
                }
                return object;
            };

            /**
             * Converts this FindCampaignsForSalesforceOpportunityResponse to JSON.
             * @function toJSON
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FindCampaignsForSalesforceOpportunityResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for FindCampaignsForSalesforceOpportunityResponse
             * @function getTypeUrl
             * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            FindCampaignsForSalesforceOpportunityResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.FindCampaignsForSalesforceOpportunityResponse";
            };

            FindCampaignsForSalesforceOpportunityResponse.CampaignInfo = (function() {

                /**
                 * Properties of a CampaignInfo.
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse
                 * @interface ICampaignInfo
                 * @property {number} campaignId CampaignInfo campaignId
                 * @property {string} campaignName CampaignInfo campaignName
                 * @property {number|null} [seatId] CampaignInfo seatId
                 * @property {string|null} [entityName] CampaignInfo entityName
                 * @property {number} officeId CampaignInfo officeId
                 * @property {string} officeName CampaignInfo officeName
                 */

                /**
                 * Constructs a new CampaignInfo.
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse
                 * @classdesc Represents a CampaignInfo.
                 * @implements ICampaignInfo
                 * @constructor
                 * @param {teads.api.FindCampaignsForSalesforceOpportunityResponse.ICampaignInfo=} [properties] Properties to set
                 */
                function CampaignInfo(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * CampaignInfo campaignId.
                 * @member {number} campaignId
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo
                 * @instance
                 */
                CampaignInfo.prototype.campaignId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * CampaignInfo campaignName.
                 * @member {string} campaignName
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo
                 * @instance
                 */
                CampaignInfo.prototype.campaignName = "";

                /**
                 * CampaignInfo seatId.
                 * @member {number} seatId
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo
                 * @instance
                 */
                CampaignInfo.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * CampaignInfo entityName.
                 * @member {string} entityName
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo
                 * @instance
                 */
                CampaignInfo.prototype.entityName = "";

                /**
                 * CampaignInfo officeId.
                 * @member {number} officeId
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo
                 * @instance
                 */
                CampaignInfo.prototype.officeId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * CampaignInfo officeName.
                 * @member {string} officeName
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo
                 * @instance
                 */
                CampaignInfo.prototype.officeName = "";

                /**
                 * Creates a new CampaignInfo instance using the specified properties.
                 * @function create
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo
                 * @static
                 * @param {teads.api.FindCampaignsForSalesforceOpportunityResponse.ICampaignInfo=} [properties] Properties to set
                 * @returns {teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo} CampaignInfo instance
                 */
                CampaignInfo.create = function create(properties) {
                    return new CampaignInfo(properties);
                };

                /**
                 * Encodes the specified CampaignInfo message. Does not implicitly {@link teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo
                 * @static
                 * @param {teads.api.FindCampaignsForSalesforceOpportunityResponse.ICampaignInfo} message CampaignInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CampaignInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.campaignId);
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.campaignName);
                    if (message.seatId != null && Object.hasOwnProperty.call(message, "seatId"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int64(message.seatId);
                    if (message.entityName != null && Object.hasOwnProperty.call(message, "entityName"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.entityName);
                    writer.uint32(/* id 5, wireType 0 =*/40).int64(message.officeId);
                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.officeName);
                    return writer;
                };

                /**
                 * Encodes the specified CampaignInfo message, length delimited. Does not implicitly {@link teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo
                 * @static
                 * @param {teads.api.FindCampaignsForSalesforceOpportunityResponse.ICampaignInfo} message CampaignInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CampaignInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a CampaignInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo} CampaignInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CampaignInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.campaignId = reader.int64();
                                break;
                            }
                        case 2: {
                                message.campaignName = reader.string();
                                break;
                            }
                        case 3: {
                                message.seatId = reader.int64();
                                break;
                            }
                        case 4: {
                                message.entityName = reader.string();
                                break;
                            }
                        case 5: {
                                message.officeId = reader.int64();
                                break;
                            }
                        case 6: {
                                message.officeName = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("campaignId"))
                        throw $util.ProtocolError("missing required 'campaignId'", { instance: message });
                    if (!message.hasOwnProperty("campaignName"))
                        throw $util.ProtocolError("missing required 'campaignName'", { instance: message });
                    if (!message.hasOwnProperty("officeId"))
                        throw $util.ProtocolError("missing required 'officeId'", { instance: message });
                    if (!message.hasOwnProperty("officeName"))
                        throw $util.ProtocolError("missing required 'officeName'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a CampaignInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo} CampaignInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CampaignInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a CampaignInfo message.
                 * @function verify
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CampaignInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.campaignId) && !(message.campaignId && $util.isInteger(message.campaignId.low) && $util.isInteger(message.campaignId.high)))
                        return "campaignId: integer|Long expected";
                    if (!$util.isString(message.campaignName))
                        return "campaignName: string expected";
                    if (message.seatId != null && message.hasOwnProperty("seatId"))
                        if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                            return "seatId: integer|Long expected";
                    if (message.entityName != null && message.hasOwnProperty("entityName"))
                        if (!$util.isString(message.entityName))
                            return "entityName: string expected";
                    if (!$util.isInteger(message.officeId) && !(message.officeId && $util.isInteger(message.officeId.low) && $util.isInteger(message.officeId.high)))
                        return "officeId: integer|Long expected";
                    if (!$util.isString(message.officeName))
                        return "officeName: string expected";
                    return null;
                };

                /**
                 * Creates a CampaignInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo} CampaignInfo
                 */
                CampaignInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo)
                        return object;
                    var message = new $root.teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo();
                    if (object.campaignId != null)
                        if ($util.Long)
                            (message.campaignId = $util.Long.fromValue(object.campaignId)).unsigned = false;
                        else if (typeof object.campaignId === "string")
                            message.campaignId = parseInt(object.campaignId, 10);
                        else if (typeof object.campaignId === "number")
                            message.campaignId = object.campaignId;
                        else if (typeof object.campaignId === "object")
                            message.campaignId = new $util.LongBits(object.campaignId.low >>> 0, object.campaignId.high >>> 0).toNumber();
                    if (object.campaignName != null)
                        message.campaignName = String(object.campaignName);
                    if (object.seatId != null)
                        if ($util.Long)
                            (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                        else if (typeof object.seatId === "string")
                            message.seatId = parseInt(object.seatId, 10);
                        else if (typeof object.seatId === "number")
                            message.seatId = object.seatId;
                        else if (typeof object.seatId === "object")
                            message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                    if (object.entityName != null)
                        message.entityName = String(object.entityName);
                    if (object.officeId != null)
                        if ($util.Long)
                            (message.officeId = $util.Long.fromValue(object.officeId)).unsigned = false;
                        else if (typeof object.officeId === "string")
                            message.officeId = parseInt(object.officeId, 10);
                        else if (typeof object.officeId === "number")
                            message.officeId = object.officeId;
                        else if (typeof object.officeId === "object")
                            message.officeId = new $util.LongBits(object.officeId.low >>> 0, object.officeId.high >>> 0).toNumber();
                    if (object.officeName != null)
                        message.officeName = String(object.officeName);
                    return message;
                };

                /**
                 * Creates a plain object from a CampaignInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo
                 * @static
                 * @param {teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo} message CampaignInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CampaignInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.campaignId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.campaignId = options.longs === String ? "0" : 0;
                        object.campaignName = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seatId = options.longs === String ? "0" : 0;
                        object.entityName = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.officeId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.officeId = options.longs === String ? "0" : 0;
                        object.officeName = "";
                    }
                    if (message.campaignId != null && message.hasOwnProperty("campaignId"))
                        if (typeof message.campaignId === "number")
                            object.campaignId = options.longs === String ? String(message.campaignId) : message.campaignId;
                        else
                            object.campaignId = options.longs === String ? $util.Long.prototype.toString.call(message.campaignId) : options.longs === Number ? new $util.LongBits(message.campaignId.low >>> 0, message.campaignId.high >>> 0).toNumber() : message.campaignId;
                    if (message.campaignName != null && message.hasOwnProperty("campaignName"))
                        object.campaignName = message.campaignName;
                    if (message.seatId != null && message.hasOwnProperty("seatId"))
                        if (typeof message.seatId === "number")
                            object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                        else
                            object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                    if (message.entityName != null && message.hasOwnProperty("entityName"))
                        object.entityName = message.entityName;
                    if (message.officeId != null && message.hasOwnProperty("officeId"))
                        if (typeof message.officeId === "number")
                            object.officeId = options.longs === String ? String(message.officeId) : message.officeId;
                        else
                            object.officeId = options.longs === String ? $util.Long.prototype.toString.call(message.officeId) : options.longs === Number ? new $util.LongBits(message.officeId.low >>> 0, message.officeId.high >>> 0).toNumber() : message.officeId;
                    if (message.officeName != null && message.hasOwnProperty("officeName"))
                        object.officeName = message.officeName;
                    return object;
                };

                /**
                 * Converts this CampaignInfo to JSON.
                 * @function toJSON
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CampaignInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for CampaignInfo
                 * @function getTypeUrl
                 * @memberof teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CampaignInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.FindCampaignsForSalesforceOpportunityResponse.CampaignInfo";
                };

                return CampaignInfo;
            })();

            return FindCampaignsForSalesforceOpportunityResponse;
        })();

        api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest = (function() {

            /**
             * Properties of a FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest.
             * @memberof teads.api
             * @interface IFindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest
             * @property {teads.api.ISecurityContext} securityContext FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest securityContext
             * @property {Array.<number>|null} [buyerSeatIds] FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest buyerSeatIds
             */

            /**
             * Constructs a new FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest.
             * @memberof teads.api
             * @classdesc Represents a FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest.
             * @implements IFindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest
             * @constructor
             * @param {teads.api.IFindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest=} [properties] Properties to set
             */
            function FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest(properties) {
                this.buyerSeatIds = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest
             * @instance
             */
            FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest.prototype.securityContext = null;

            /**
             * FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest buyerSeatIds.
             * @member {Array.<number>} buyerSeatIds
             * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest
             * @instance
             */
            FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest.prototype.buyerSeatIds = $util.emptyArray;

            /**
             * Creates a new FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest
             * @static
             * @param {teads.api.IFindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest=} [properties] Properties to set
             * @returns {teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest} FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest instance
             */
            FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest.create = function create(properties) {
                return new FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest(properties);
            };

            /**
             * Encodes the specified FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest message. Does not implicitly {@link teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest
             * @static
             * @param {teads.api.IFindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest} message FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.buyerSeatIds != null && message.buyerSeatIds.length)
                    for (var i = 0; i < message.buyerSeatIds.length; ++i)
                        writer.uint32(/* id 2, wireType 0 =*/16).int64(message.buyerSeatIds[i]);
                return writer;
            };

            /**
             * Encodes the specified FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest message, length delimited. Does not implicitly {@link teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest
             * @static
             * @param {teads.api.IFindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest} message FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest} FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            if (!(message.buyerSeatIds && message.buyerSeatIds.length))
                                message.buyerSeatIds = [];
                            if ((tag & 7) === 2) {
                                var end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.buyerSeatIds.push(reader.int64());
                            } else
                                message.buyerSeatIds.push(reader.int64());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                return message;
            };

            /**
             * Decodes a FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest} FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest message.
             * @function verify
             * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (message.buyerSeatIds != null && message.hasOwnProperty("buyerSeatIds")) {
                    if (!Array.isArray(message.buyerSeatIds))
                        return "buyerSeatIds: array expected";
                    for (var i = 0; i < message.buyerSeatIds.length; ++i)
                        if (!$util.isInteger(message.buyerSeatIds[i]) && !(message.buyerSeatIds[i] && $util.isInteger(message.buyerSeatIds[i].low) && $util.isInteger(message.buyerSeatIds[i].high)))
                            return "buyerSeatIds: integer|Long[] expected";
                }
                return null;
            };

            /**
             * Creates a FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest} FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest
             */
            FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest)
                    return object;
                var message = new $root.teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.buyerSeatIds) {
                    if (!Array.isArray(object.buyerSeatIds))
                        throw TypeError(".teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest.buyerSeatIds: array expected");
                    message.buyerSeatIds = [];
                    for (var i = 0; i < object.buyerSeatIds.length; ++i)
                        if ($util.Long)
                            (message.buyerSeatIds[i] = $util.Long.fromValue(object.buyerSeatIds[i])).unsigned = false;
                        else if (typeof object.buyerSeatIds[i] === "string")
                            message.buyerSeatIds[i] = parseInt(object.buyerSeatIds[i], 10);
                        else if (typeof object.buyerSeatIds[i] === "number")
                            message.buyerSeatIds[i] = object.buyerSeatIds[i];
                        else if (typeof object.buyerSeatIds[i] === "object")
                            message.buyerSeatIds[i] = new $util.LongBits(object.buyerSeatIds[i].low >>> 0, object.buyerSeatIds[i].high >>> 0).toNumber();
                }
                return message;
            };

            /**
             * Creates a plain object from a FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest
             * @static
             * @param {teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest} message FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.buyerSeatIds = [];
                if (options.defaults)
                    object.securityContext = null;
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.buyerSeatIds && message.buyerSeatIds.length) {
                    object.buyerSeatIds = [];
                    for (var j = 0; j < message.buyerSeatIds.length; ++j)
                        if (typeof message.buyerSeatIds[j] === "number")
                            object.buyerSeatIds[j] = options.longs === String ? String(message.buyerSeatIds[j]) : message.buyerSeatIds[j];
                        else
                            object.buyerSeatIds[j] = options.longs === String ? $util.Long.prototype.toString.call(message.buyerSeatIds[j]) : options.longs === Number ? new $util.LongBits(message.buyerSeatIds[j].low >>> 0, message.buyerSeatIds[j].high >>> 0).toNumber() : message.buyerSeatIds[j];
                }
                return object;
            };

            /**
             * Converts this FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest to JSON.
             * @function toJSON
             * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest
             * @function getTypeUrl
             * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest";
            };

            return FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest;
        })();

        api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse = (function() {

            /**
             * Properties of a FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.
             * @memberof teads.api
             * @interface IFindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse
             * @property {Array.<teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.IGrapeshotBrandSuitabilitySegment>|null} [segments] FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse segments
             */

            /**
             * Constructs a new FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.
             * @memberof teads.api
             * @classdesc Represents a FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.
             * @implements IFindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse
             * @constructor
             * @param {teads.api.IFindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse=} [properties] Properties to set
             */
            function FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse(properties) {
                this.segments = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse segments.
             * @member {Array.<teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.IGrapeshotBrandSuitabilitySegment>} segments
             * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse
             * @instance
             */
            FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.prototype.segments = $util.emptyArray;

            /**
             * Creates a new FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse
             * @static
             * @param {teads.api.IFindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse=} [properties] Properties to set
             * @returns {teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse} FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse instance
             */
            FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.create = function create(properties) {
                return new FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse(properties);
            };

            /**
             * Encodes the specified FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse message. Does not implicitly {@link teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse
             * @static
             * @param {teads.api.IFindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse} message FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.segments != null && message.segments.length)
                    for (var i = 0; i < message.segments.length; ++i)
                        $root.teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment.encode(message.segments[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse message, length delimited. Does not implicitly {@link teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse
             * @static
             * @param {teads.api.IFindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse} message FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse} FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            if (!(message.segments && message.segments.length))
                                message.segments = [];
                            message.segments.push($root.teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse} FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse message.
             * @function verify
             * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.segments != null && message.hasOwnProperty("segments")) {
                    if (!Array.isArray(message.segments))
                        return "segments: array expected";
                    for (var i = 0; i < message.segments.length; ++i) {
                        var error = $root.teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment.verify(message.segments[i]);
                        if (error)
                            return "segments." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse} FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse
             */
            FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse)
                    return object;
                var message = new $root.teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse();
                if (object.segments) {
                    if (!Array.isArray(object.segments))
                        throw TypeError(".teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.segments: array expected");
                    message.segments = [];
                    for (var i = 0; i < object.segments.length; ++i) {
                        if (typeof object.segments[i] !== "object")
                            throw TypeError(".teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.segments: object expected");
                        message.segments[i] = $root.teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment.fromObject(object.segments[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse
             * @static
             * @param {teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse} message FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.segments = [];
                if (message.segments && message.segments.length) {
                    object.segments = [];
                    for (var j = 0; j < message.segments.length; ++j)
                        object.segments[j] = $root.teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment.toObject(message.segments[j], options);
                }
                return object;
            };

            /**
             * Converts this FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse to JSON.
             * @function toJSON
             * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse
             * @function getTypeUrl
             * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse";
            };

            FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment = (function() {

                /**
                 * Properties of a GrapeshotBrandSuitabilitySegment.
                 * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse
                 * @interface IGrapeshotBrandSuitabilitySegment
                 * @property {string} segmentCode GrapeshotBrandSuitabilitySegment segmentCode
                 * @property {string|null} [friendlyName] GrapeshotBrandSuitabilitySegment friendlyName
                 * @property {boolean} isAvailableToAllSeats GrapeshotBrandSuitabilitySegment isAvailableToAllSeats
                 */

                /**
                 * Constructs a new GrapeshotBrandSuitabilitySegment.
                 * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse
                 * @classdesc Represents a GrapeshotBrandSuitabilitySegment.
                 * @implements IGrapeshotBrandSuitabilitySegment
                 * @constructor
                 * @param {teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.IGrapeshotBrandSuitabilitySegment=} [properties] Properties to set
                 */
                function GrapeshotBrandSuitabilitySegment(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * GrapeshotBrandSuitabilitySegment segmentCode.
                 * @member {string} segmentCode
                 * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment
                 * @instance
                 */
                GrapeshotBrandSuitabilitySegment.prototype.segmentCode = "";

                /**
                 * GrapeshotBrandSuitabilitySegment friendlyName.
                 * @member {string} friendlyName
                 * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment
                 * @instance
                 */
                GrapeshotBrandSuitabilitySegment.prototype.friendlyName = "";

                /**
                 * GrapeshotBrandSuitabilitySegment isAvailableToAllSeats.
                 * @member {boolean} isAvailableToAllSeats
                 * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment
                 * @instance
                 */
                GrapeshotBrandSuitabilitySegment.prototype.isAvailableToAllSeats = false;

                /**
                 * Creates a new GrapeshotBrandSuitabilitySegment instance using the specified properties.
                 * @function create
                 * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment
                 * @static
                 * @param {teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.IGrapeshotBrandSuitabilitySegment=} [properties] Properties to set
                 * @returns {teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment} GrapeshotBrandSuitabilitySegment instance
                 */
                GrapeshotBrandSuitabilitySegment.create = function create(properties) {
                    return new GrapeshotBrandSuitabilitySegment(properties);
                };

                /**
                 * Encodes the specified GrapeshotBrandSuitabilitySegment message. Does not implicitly {@link teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment
                 * @static
                 * @param {teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.IGrapeshotBrandSuitabilitySegment} message GrapeshotBrandSuitabilitySegment message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GrapeshotBrandSuitabilitySegment.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.segmentCode);
                    if (message.friendlyName != null && Object.hasOwnProperty.call(message, "friendlyName"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.friendlyName);
                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.isAvailableToAllSeats);
                    return writer;
                };

                /**
                 * Encodes the specified GrapeshotBrandSuitabilitySegment message, length delimited. Does not implicitly {@link teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment
                 * @static
                 * @param {teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.IGrapeshotBrandSuitabilitySegment} message GrapeshotBrandSuitabilitySegment message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GrapeshotBrandSuitabilitySegment.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a GrapeshotBrandSuitabilitySegment message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment} GrapeshotBrandSuitabilitySegment
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GrapeshotBrandSuitabilitySegment.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.segmentCode = reader.string();
                                break;
                            }
                        case 2: {
                                message.friendlyName = reader.string();
                                break;
                            }
                        case 3: {
                                message.isAvailableToAllSeats = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("segmentCode"))
                        throw $util.ProtocolError("missing required 'segmentCode'", { instance: message });
                    if (!message.hasOwnProperty("isAvailableToAllSeats"))
                        throw $util.ProtocolError("missing required 'isAvailableToAllSeats'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a GrapeshotBrandSuitabilitySegment message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment} GrapeshotBrandSuitabilitySegment
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GrapeshotBrandSuitabilitySegment.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a GrapeshotBrandSuitabilitySegment message.
                 * @function verify
                 * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GrapeshotBrandSuitabilitySegment.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isString(message.segmentCode))
                        return "segmentCode: string expected";
                    if (message.friendlyName != null && message.hasOwnProperty("friendlyName"))
                        if (!$util.isString(message.friendlyName))
                            return "friendlyName: string expected";
                    if (typeof message.isAvailableToAllSeats !== "boolean")
                        return "isAvailableToAllSeats: boolean expected";
                    return null;
                };

                /**
                 * Creates a GrapeshotBrandSuitabilitySegment message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment} GrapeshotBrandSuitabilitySegment
                 */
                GrapeshotBrandSuitabilitySegment.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment)
                        return object;
                    var message = new $root.teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment();
                    if (object.segmentCode != null)
                        message.segmentCode = String(object.segmentCode);
                    if (object.friendlyName != null)
                        message.friendlyName = String(object.friendlyName);
                    if (object.isAvailableToAllSeats != null)
                        message.isAvailableToAllSeats = Boolean(object.isAvailableToAllSeats);
                    return message;
                };

                /**
                 * Creates a plain object from a GrapeshotBrandSuitabilitySegment message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment
                 * @static
                 * @param {teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment} message GrapeshotBrandSuitabilitySegment
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GrapeshotBrandSuitabilitySegment.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.segmentCode = "";
                        object.friendlyName = "";
                        object.isAvailableToAllSeats = false;
                    }
                    if (message.segmentCode != null && message.hasOwnProperty("segmentCode"))
                        object.segmentCode = message.segmentCode;
                    if (message.friendlyName != null && message.hasOwnProperty("friendlyName"))
                        object.friendlyName = message.friendlyName;
                    if (message.isAvailableToAllSeats != null && message.hasOwnProperty("isAvailableToAllSeats"))
                        object.isAvailableToAllSeats = message.isAvailableToAllSeats;
                    return object;
                };

                /**
                 * Converts this GrapeshotBrandSuitabilitySegment to JSON.
                 * @function toJSON
                 * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GrapeshotBrandSuitabilitySegment.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for GrapeshotBrandSuitabilitySegment
                 * @function getTypeUrl
                 * @memberof teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GrapeshotBrandSuitabilitySegment.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse.GrapeshotBrandSuitabilitySegment";
                };

                return GrapeshotBrandSuitabilitySegment;
            })();

            return FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse;
        })();

        api.FindLineItemsForCampaignRequest = (function() {

            /**
             * Properties of a FindLineItemsForCampaignRequest.
             * @memberof teads.api
             * @interface IFindLineItemsForCampaignRequest
             * @property {teads.api.ISecurityContext} securityContext FindLineItemsForCampaignRequest securityContext
             * @property {number} campaignId FindLineItemsForCampaignRequest campaignId
             */

            /**
             * Constructs a new FindLineItemsForCampaignRequest.
             * @memberof teads.api
             * @classdesc Represents a FindLineItemsForCampaignRequest.
             * @implements IFindLineItemsForCampaignRequest
             * @constructor
             * @param {teads.api.IFindLineItemsForCampaignRequest=} [properties] Properties to set
             */
            function FindLineItemsForCampaignRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * FindLineItemsForCampaignRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.FindLineItemsForCampaignRequest
             * @instance
             */
            FindLineItemsForCampaignRequest.prototype.securityContext = null;

            /**
             * FindLineItemsForCampaignRequest campaignId.
             * @member {number} campaignId
             * @memberof teads.api.FindLineItemsForCampaignRequest
             * @instance
             */
            FindLineItemsForCampaignRequest.prototype.campaignId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new FindLineItemsForCampaignRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.FindLineItemsForCampaignRequest
             * @static
             * @param {teads.api.IFindLineItemsForCampaignRequest=} [properties] Properties to set
             * @returns {teads.api.FindLineItemsForCampaignRequest} FindLineItemsForCampaignRequest instance
             */
            FindLineItemsForCampaignRequest.create = function create(properties) {
                return new FindLineItemsForCampaignRequest(properties);
            };

            /**
             * Encodes the specified FindLineItemsForCampaignRequest message. Does not implicitly {@link teads.api.FindLineItemsForCampaignRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.FindLineItemsForCampaignRequest
             * @static
             * @param {teads.api.IFindLineItemsForCampaignRequest} message FindLineItemsForCampaignRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindLineItemsForCampaignRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.campaignId);
                return writer;
            };

            /**
             * Encodes the specified FindLineItemsForCampaignRequest message, length delimited. Does not implicitly {@link teads.api.FindLineItemsForCampaignRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.FindLineItemsForCampaignRequest
             * @static
             * @param {teads.api.IFindLineItemsForCampaignRequest} message FindLineItemsForCampaignRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindLineItemsForCampaignRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a FindLineItemsForCampaignRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.FindLineItemsForCampaignRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.FindLineItemsForCampaignRequest} FindLineItemsForCampaignRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindLineItemsForCampaignRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindLineItemsForCampaignRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.campaignId = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("campaignId"))
                    throw $util.ProtocolError("missing required 'campaignId'", { instance: message });
                return message;
            };

            /**
             * Decodes a FindLineItemsForCampaignRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.FindLineItemsForCampaignRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.FindLineItemsForCampaignRequest} FindLineItemsForCampaignRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindLineItemsForCampaignRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a FindLineItemsForCampaignRequest message.
             * @function verify
             * @memberof teads.api.FindLineItemsForCampaignRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FindLineItemsForCampaignRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.campaignId) && !(message.campaignId && $util.isInteger(message.campaignId.low) && $util.isInteger(message.campaignId.high)))
                    return "campaignId: integer|Long expected";
                return null;
            };

            /**
             * Creates a FindLineItemsForCampaignRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.FindLineItemsForCampaignRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.FindLineItemsForCampaignRequest} FindLineItemsForCampaignRequest
             */
            FindLineItemsForCampaignRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.FindLineItemsForCampaignRequest)
                    return object;
                var message = new $root.teads.api.FindLineItemsForCampaignRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.FindLineItemsForCampaignRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.campaignId != null)
                    if ($util.Long)
                        (message.campaignId = $util.Long.fromValue(object.campaignId)).unsigned = false;
                    else if (typeof object.campaignId === "string")
                        message.campaignId = parseInt(object.campaignId, 10);
                    else if (typeof object.campaignId === "number")
                        message.campaignId = object.campaignId;
                    else if (typeof object.campaignId === "object")
                        message.campaignId = new $util.LongBits(object.campaignId.low >>> 0, object.campaignId.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from a FindLineItemsForCampaignRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.FindLineItemsForCampaignRequest
             * @static
             * @param {teads.api.FindLineItemsForCampaignRequest} message FindLineItemsForCampaignRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FindLineItemsForCampaignRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.campaignId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.campaignId = options.longs === String ? "0" : 0;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.campaignId != null && message.hasOwnProperty("campaignId"))
                    if (typeof message.campaignId === "number")
                        object.campaignId = options.longs === String ? String(message.campaignId) : message.campaignId;
                    else
                        object.campaignId = options.longs === String ? $util.Long.prototype.toString.call(message.campaignId) : options.longs === Number ? new $util.LongBits(message.campaignId.low >>> 0, message.campaignId.high >>> 0).toNumber() : message.campaignId;
                return object;
            };

            /**
             * Converts this FindLineItemsForCampaignRequest to JSON.
             * @function toJSON
             * @memberof teads.api.FindLineItemsForCampaignRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FindLineItemsForCampaignRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for FindLineItemsForCampaignRequest
             * @function getTypeUrl
             * @memberof teads.api.FindLineItemsForCampaignRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            FindLineItemsForCampaignRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.FindLineItemsForCampaignRequest";
            };

            return FindLineItemsForCampaignRequest;
        })();

        api.FindLineItemsForCampaignResponse = (function() {

            /**
             * Properties of a FindLineItemsForCampaignResponse.
             * @memberof teads.api
             * @interface IFindLineItemsForCampaignResponse
             * @property {Array.<teads.api.FindLineItemsForCampaignResponse.ILineItem>|null} [lineItems] FindLineItemsForCampaignResponse lineItems
             */

            /**
             * Constructs a new FindLineItemsForCampaignResponse.
             * @memberof teads.api
             * @classdesc Represents a FindLineItemsForCampaignResponse.
             * @implements IFindLineItemsForCampaignResponse
             * @constructor
             * @param {teads.api.IFindLineItemsForCampaignResponse=} [properties] Properties to set
             */
            function FindLineItemsForCampaignResponse(properties) {
                this.lineItems = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * FindLineItemsForCampaignResponse lineItems.
             * @member {Array.<teads.api.FindLineItemsForCampaignResponse.ILineItem>} lineItems
             * @memberof teads.api.FindLineItemsForCampaignResponse
             * @instance
             */
            FindLineItemsForCampaignResponse.prototype.lineItems = $util.emptyArray;

            /**
             * Creates a new FindLineItemsForCampaignResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.FindLineItemsForCampaignResponse
             * @static
             * @param {teads.api.IFindLineItemsForCampaignResponse=} [properties] Properties to set
             * @returns {teads.api.FindLineItemsForCampaignResponse} FindLineItemsForCampaignResponse instance
             */
            FindLineItemsForCampaignResponse.create = function create(properties) {
                return new FindLineItemsForCampaignResponse(properties);
            };

            /**
             * Encodes the specified FindLineItemsForCampaignResponse message. Does not implicitly {@link teads.api.FindLineItemsForCampaignResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.FindLineItemsForCampaignResponse
             * @static
             * @param {teads.api.IFindLineItemsForCampaignResponse} message FindLineItemsForCampaignResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindLineItemsForCampaignResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.lineItems != null && message.lineItems.length)
                    for (var i = 0; i < message.lineItems.length; ++i)
                        $root.teads.api.FindLineItemsForCampaignResponse.LineItem.encode(message.lineItems[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified FindLineItemsForCampaignResponse message, length delimited. Does not implicitly {@link teads.api.FindLineItemsForCampaignResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.FindLineItemsForCampaignResponse
             * @static
             * @param {teads.api.IFindLineItemsForCampaignResponse} message FindLineItemsForCampaignResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindLineItemsForCampaignResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a FindLineItemsForCampaignResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.FindLineItemsForCampaignResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.FindLineItemsForCampaignResponse} FindLineItemsForCampaignResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindLineItemsForCampaignResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindLineItemsForCampaignResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            if (!(message.lineItems && message.lineItems.length))
                                message.lineItems = [];
                            message.lineItems.push($root.teads.api.FindLineItemsForCampaignResponse.LineItem.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a FindLineItemsForCampaignResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.FindLineItemsForCampaignResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.FindLineItemsForCampaignResponse} FindLineItemsForCampaignResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindLineItemsForCampaignResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a FindLineItemsForCampaignResponse message.
             * @function verify
             * @memberof teads.api.FindLineItemsForCampaignResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FindLineItemsForCampaignResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.lineItems != null && message.hasOwnProperty("lineItems")) {
                    if (!Array.isArray(message.lineItems))
                        return "lineItems: array expected";
                    for (var i = 0; i < message.lineItems.length; ++i) {
                        var error = $root.teads.api.FindLineItemsForCampaignResponse.LineItem.verify(message.lineItems[i]);
                        if (error)
                            return "lineItems." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a FindLineItemsForCampaignResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.FindLineItemsForCampaignResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.FindLineItemsForCampaignResponse} FindLineItemsForCampaignResponse
             */
            FindLineItemsForCampaignResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.FindLineItemsForCampaignResponse)
                    return object;
                var message = new $root.teads.api.FindLineItemsForCampaignResponse();
                if (object.lineItems) {
                    if (!Array.isArray(object.lineItems))
                        throw TypeError(".teads.api.FindLineItemsForCampaignResponse.lineItems: array expected");
                    message.lineItems = [];
                    for (var i = 0; i < object.lineItems.length; ++i) {
                        if (typeof object.lineItems[i] !== "object")
                            throw TypeError(".teads.api.FindLineItemsForCampaignResponse.lineItems: object expected");
                        message.lineItems[i] = $root.teads.api.FindLineItemsForCampaignResponse.LineItem.fromObject(object.lineItems[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a FindLineItemsForCampaignResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.FindLineItemsForCampaignResponse
             * @static
             * @param {teads.api.FindLineItemsForCampaignResponse} message FindLineItemsForCampaignResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FindLineItemsForCampaignResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.lineItems = [];
                if (message.lineItems && message.lineItems.length) {
                    object.lineItems = [];
                    for (var j = 0; j < message.lineItems.length; ++j)
                        object.lineItems[j] = $root.teads.api.FindLineItemsForCampaignResponse.LineItem.toObject(message.lineItems[j], options);
                }
                return object;
            };

            /**
             * Converts this FindLineItemsForCampaignResponse to JSON.
             * @function toJSON
             * @memberof teads.api.FindLineItemsForCampaignResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FindLineItemsForCampaignResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for FindLineItemsForCampaignResponse
             * @function getTypeUrl
             * @memberof teads.api.FindLineItemsForCampaignResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            FindLineItemsForCampaignResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.FindLineItemsForCampaignResponse";
            };

            FindLineItemsForCampaignResponse.LineItem = (function() {

                /**
                 * Properties of a LineItem.
                 * @memberof teads.api.FindLineItemsForCampaignResponse
                 * @interface ILineItem
                 * @property {number} id LineItem id
                 * @property {string} name LineItem name
                 * @property {number} insertionOrderLineId LineItem insertionOrderLineId
                 */

                /**
                 * Constructs a new LineItem.
                 * @memberof teads.api.FindLineItemsForCampaignResponse
                 * @classdesc Represents a LineItem.
                 * @implements ILineItem
                 * @constructor
                 * @param {teads.api.FindLineItemsForCampaignResponse.ILineItem=} [properties] Properties to set
                 */
                function LineItem(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * LineItem id.
                 * @member {number} id
                 * @memberof teads.api.FindLineItemsForCampaignResponse.LineItem
                 * @instance
                 */
                LineItem.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * LineItem name.
                 * @member {string} name
                 * @memberof teads.api.FindLineItemsForCampaignResponse.LineItem
                 * @instance
                 */
                LineItem.prototype.name = "";

                /**
                 * LineItem insertionOrderLineId.
                 * @member {number} insertionOrderLineId
                 * @memberof teads.api.FindLineItemsForCampaignResponse.LineItem
                 * @instance
                 */
                LineItem.prototype.insertionOrderLineId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * Creates a new LineItem instance using the specified properties.
                 * @function create
                 * @memberof teads.api.FindLineItemsForCampaignResponse.LineItem
                 * @static
                 * @param {teads.api.FindLineItemsForCampaignResponse.ILineItem=} [properties] Properties to set
                 * @returns {teads.api.FindLineItemsForCampaignResponse.LineItem} LineItem instance
                 */
                LineItem.create = function create(properties) {
                    return new LineItem(properties);
                };

                /**
                 * Encodes the specified LineItem message. Does not implicitly {@link teads.api.FindLineItemsForCampaignResponse.LineItem.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.FindLineItemsForCampaignResponse.LineItem
                 * @static
                 * @param {teads.api.FindLineItemsForCampaignResponse.ILineItem} message LineItem message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                LineItem.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.id);
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
                    writer.uint32(/* id 3, wireType 0 =*/24).int64(message.insertionOrderLineId);
                    return writer;
                };

                /**
                 * Encodes the specified LineItem message, length delimited. Does not implicitly {@link teads.api.FindLineItemsForCampaignResponse.LineItem.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.FindLineItemsForCampaignResponse.LineItem
                 * @static
                 * @param {teads.api.FindLineItemsForCampaignResponse.ILineItem} message LineItem message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                LineItem.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a LineItem message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.FindLineItemsForCampaignResponse.LineItem
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.FindLineItemsForCampaignResponse.LineItem} LineItem
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                LineItem.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindLineItemsForCampaignResponse.LineItem();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.id = reader.int64();
                                break;
                            }
                        case 2: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.insertionOrderLineId = reader.int64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("id"))
                        throw $util.ProtocolError("missing required 'id'", { instance: message });
                    if (!message.hasOwnProperty("name"))
                        throw $util.ProtocolError("missing required 'name'", { instance: message });
                    if (!message.hasOwnProperty("insertionOrderLineId"))
                        throw $util.ProtocolError("missing required 'insertionOrderLineId'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a LineItem message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.FindLineItemsForCampaignResponse.LineItem
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.FindLineItemsForCampaignResponse.LineItem} LineItem
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                LineItem.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a LineItem message.
                 * @function verify
                 * @memberof teads.api.FindLineItemsForCampaignResponse.LineItem
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                LineItem.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.id) && !(message.id && $util.isInteger(message.id.low) && $util.isInteger(message.id.high)))
                        return "id: integer|Long expected";
                    if (!$util.isString(message.name))
                        return "name: string expected";
                    if (!$util.isInteger(message.insertionOrderLineId) && !(message.insertionOrderLineId && $util.isInteger(message.insertionOrderLineId.low) && $util.isInteger(message.insertionOrderLineId.high)))
                        return "insertionOrderLineId: integer|Long expected";
                    return null;
                };

                /**
                 * Creates a LineItem message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.FindLineItemsForCampaignResponse.LineItem
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.FindLineItemsForCampaignResponse.LineItem} LineItem
                 */
                LineItem.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.FindLineItemsForCampaignResponse.LineItem)
                        return object;
                    var message = new $root.teads.api.FindLineItemsForCampaignResponse.LineItem();
                    if (object.id != null)
                        if ($util.Long)
                            (message.id = $util.Long.fromValue(object.id)).unsigned = false;
                        else if (typeof object.id === "string")
                            message.id = parseInt(object.id, 10);
                        else if (typeof object.id === "number")
                            message.id = object.id;
                        else if (typeof object.id === "object")
                            message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.insertionOrderLineId != null)
                        if ($util.Long)
                            (message.insertionOrderLineId = $util.Long.fromValue(object.insertionOrderLineId)).unsigned = false;
                        else if (typeof object.insertionOrderLineId === "string")
                            message.insertionOrderLineId = parseInt(object.insertionOrderLineId, 10);
                        else if (typeof object.insertionOrderLineId === "number")
                            message.insertionOrderLineId = object.insertionOrderLineId;
                        else if (typeof object.insertionOrderLineId === "object")
                            message.insertionOrderLineId = new $util.LongBits(object.insertionOrderLineId.low >>> 0, object.insertionOrderLineId.high >>> 0).toNumber();
                    return message;
                };

                /**
                 * Creates a plain object from a LineItem message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.FindLineItemsForCampaignResponse.LineItem
                 * @static
                 * @param {teads.api.FindLineItemsForCampaignResponse.LineItem} message LineItem
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                LineItem.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.id = options.longs === String ? "0" : 0;
                        object.name = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.insertionOrderLineId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.insertionOrderLineId = options.longs === String ? "0" : 0;
                    }
                    if (message.id != null && message.hasOwnProperty("id"))
                        if (typeof message.id === "number")
                            object.id = options.longs === String ? String(message.id) : message.id;
                        else
                            object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber() : message.id;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.insertionOrderLineId != null && message.hasOwnProperty("insertionOrderLineId"))
                        if (typeof message.insertionOrderLineId === "number")
                            object.insertionOrderLineId = options.longs === String ? String(message.insertionOrderLineId) : message.insertionOrderLineId;
                        else
                            object.insertionOrderLineId = options.longs === String ? $util.Long.prototype.toString.call(message.insertionOrderLineId) : options.longs === Number ? new $util.LongBits(message.insertionOrderLineId.low >>> 0, message.insertionOrderLineId.high >>> 0).toNumber() : message.insertionOrderLineId;
                    return object;
                };

                /**
                 * Converts this LineItem to JSON.
                 * @function toJSON
                 * @memberof teads.api.FindLineItemsForCampaignResponse.LineItem
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                LineItem.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for LineItem
                 * @function getTypeUrl
                 * @memberof teads.api.FindLineItemsForCampaignResponse.LineItem
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                LineItem.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.FindLineItemsForCampaignResponse.LineItem";
                };

                return LineItem;
            })();

            return FindLineItemsForCampaignResponse;
        })();

        api.FindProfileForEmailAnonymouslyRequest = (function() {

            /**
             * Properties of a FindProfileForEmailAnonymouslyRequest.
             * @memberof teads.api
             * @interface IFindProfileForEmailAnonymouslyRequest
             * @property {string} email FindProfileForEmailAnonymouslyRequest email
             */

            /**
             * Constructs a new FindProfileForEmailAnonymouslyRequest.
             * @memberof teads.api
             * @classdesc Represents a FindProfileForEmailAnonymouslyRequest.
             * @implements IFindProfileForEmailAnonymouslyRequest
             * @constructor
             * @param {teads.api.IFindProfileForEmailAnonymouslyRequest=} [properties] Properties to set
             */
            function FindProfileForEmailAnonymouslyRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * FindProfileForEmailAnonymouslyRequest email.
             * @member {string} email
             * @memberof teads.api.FindProfileForEmailAnonymouslyRequest
             * @instance
             */
            FindProfileForEmailAnonymouslyRequest.prototype.email = "";

            /**
             * Creates a new FindProfileForEmailAnonymouslyRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.FindProfileForEmailAnonymouslyRequest
             * @static
             * @param {teads.api.IFindProfileForEmailAnonymouslyRequest=} [properties] Properties to set
             * @returns {teads.api.FindProfileForEmailAnonymouslyRequest} FindProfileForEmailAnonymouslyRequest instance
             */
            FindProfileForEmailAnonymouslyRequest.create = function create(properties) {
                return new FindProfileForEmailAnonymouslyRequest(properties);
            };

            /**
             * Encodes the specified FindProfileForEmailAnonymouslyRequest message. Does not implicitly {@link teads.api.FindProfileForEmailAnonymouslyRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.FindProfileForEmailAnonymouslyRequest
             * @static
             * @param {teads.api.IFindProfileForEmailAnonymouslyRequest} message FindProfileForEmailAnonymouslyRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindProfileForEmailAnonymouslyRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.email);
                return writer;
            };

            /**
             * Encodes the specified FindProfileForEmailAnonymouslyRequest message, length delimited. Does not implicitly {@link teads.api.FindProfileForEmailAnonymouslyRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.FindProfileForEmailAnonymouslyRequest
             * @static
             * @param {teads.api.IFindProfileForEmailAnonymouslyRequest} message FindProfileForEmailAnonymouslyRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindProfileForEmailAnonymouslyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a FindProfileForEmailAnonymouslyRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.FindProfileForEmailAnonymouslyRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.FindProfileForEmailAnonymouslyRequest} FindProfileForEmailAnonymouslyRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindProfileForEmailAnonymouslyRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindProfileForEmailAnonymouslyRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.email = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("email"))
                    throw $util.ProtocolError("missing required 'email'", { instance: message });
                return message;
            };

            /**
             * Decodes a FindProfileForEmailAnonymouslyRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.FindProfileForEmailAnonymouslyRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.FindProfileForEmailAnonymouslyRequest} FindProfileForEmailAnonymouslyRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindProfileForEmailAnonymouslyRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a FindProfileForEmailAnonymouslyRequest message.
             * @function verify
             * @memberof teads.api.FindProfileForEmailAnonymouslyRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FindProfileForEmailAnonymouslyRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isString(message.email))
                    return "email: string expected";
                return null;
            };

            /**
             * Creates a FindProfileForEmailAnonymouslyRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.FindProfileForEmailAnonymouslyRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.FindProfileForEmailAnonymouslyRequest} FindProfileForEmailAnonymouslyRequest
             */
            FindProfileForEmailAnonymouslyRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.FindProfileForEmailAnonymouslyRequest)
                    return object;
                var message = new $root.teads.api.FindProfileForEmailAnonymouslyRequest();
                if (object.email != null)
                    message.email = String(object.email);
                return message;
            };

            /**
             * Creates a plain object from a FindProfileForEmailAnonymouslyRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.FindProfileForEmailAnonymouslyRequest
             * @static
             * @param {teads.api.FindProfileForEmailAnonymouslyRequest} message FindProfileForEmailAnonymouslyRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FindProfileForEmailAnonymouslyRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.email = "";
                if (message.email != null && message.hasOwnProperty("email"))
                    object.email = message.email;
                return object;
            };

            /**
             * Converts this FindProfileForEmailAnonymouslyRequest to JSON.
             * @function toJSON
             * @memberof teads.api.FindProfileForEmailAnonymouslyRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FindProfileForEmailAnonymouslyRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for FindProfileForEmailAnonymouslyRequest
             * @function getTypeUrl
             * @memberof teads.api.FindProfileForEmailAnonymouslyRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            FindProfileForEmailAnonymouslyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.FindProfileForEmailAnonymouslyRequest";
            };

            return FindProfileForEmailAnonymouslyRequest;
        })();

        api.FindProfileForEmailAnonymouslyResponse = (function() {

            /**
             * Properties of a FindProfileForEmailAnonymouslyResponse.
             * @memberof teads.api
             * @interface IFindProfileForEmailAnonymouslyResponse
             * @property {number} profileId FindProfileForEmailAnonymouslyResponse profileId
             * @property {string} email FindProfileForEmailAnonymouslyResponse email
             * @property {Array.<teads.api.FindProfileForEmailAnonymouslyResponse.IAccount>|null} [accounts] FindProfileForEmailAnonymouslyResponse accounts
             * @property {teads.api.ProfileStatus} status FindProfileForEmailAnonymouslyResponse status
             * @property {string|null} [firstname] FindProfileForEmailAnonymouslyResponse firstname
             * @property {string|null} [lastname] FindProfileForEmailAnonymouslyResponse lastname
             * @property {string|null} [locale] FindProfileForEmailAnonymouslyResponse locale
             * @property {teads.api.FindProfileForEmailAnonymouslyResponse.ICredentials|null} [deprecatedCredentials] FindProfileForEmailAnonymouslyResponse deprecatedCredentials
             * @property {teads.api.FindProfileForEmailAnonymouslyResponse.ICredentials|null} [cognitoCredentials] FindProfileForEmailAnonymouslyResponse cognitoCredentials
             */

            /**
             * Constructs a new FindProfileForEmailAnonymouslyResponse.
             * @memberof teads.api
             * @classdesc Represents a FindProfileForEmailAnonymouslyResponse.
             * @implements IFindProfileForEmailAnonymouslyResponse
             * @constructor
             * @param {teads.api.IFindProfileForEmailAnonymouslyResponse=} [properties] Properties to set
             */
            function FindProfileForEmailAnonymouslyResponse(properties) {
                this.accounts = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * FindProfileForEmailAnonymouslyResponse profileId.
             * @member {number} profileId
             * @memberof teads.api.FindProfileForEmailAnonymouslyResponse
             * @instance
             */
            FindProfileForEmailAnonymouslyResponse.prototype.profileId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * FindProfileForEmailAnonymouslyResponse email.
             * @member {string} email
             * @memberof teads.api.FindProfileForEmailAnonymouslyResponse
             * @instance
             */
            FindProfileForEmailAnonymouslyResponse.prototype.email = "";

            /**
             * FindProfileForEmailAnonymouslyResponse accounts.
             * @member {Array.<teads.api.FindProfileForEmailAnonymouslyResponse.IAccount>} accounts
             * @memberof teads.api.FindProfileForEmailAnonymouslyResponse
             * @instance
             */
            FindProfileForEmailAnonymouslyResponse.prototype.accounts = $util.emptyArray;

            /**
             * FindProfileForEmailAnonymouslyResponse status.
             * @member {teads.api.ProfileStatus} status
             * @memberof teads.api.FindProfileForEmailAnonymouslyResponse
             * @instance
             */
            FindProfileForEmailAnonymouslyResponse.prototype.status = 1;

            /**
             * FindProfileForEmailAnonymouslyResponse firstname.
             * @member {string} firstname
             * @memberof teads.api.FindProfileForEmailAnonymouslyResponse
             * @instance
             */
            FindProfileForEmailAnonymouslyResponse.prototype.firstname = "";

            /**
             * FindProfileForEmailAnonymouslyResponse lastname.
             * @member {string} lastname
             * @memberof teads.api.FindProfileForEmailAnonymouslyResponse
             * @instance
             */
            FindProfileForEmailAnonymouslyResponse.prototype.lastname = "";

            /**
             * FindProfileForEmailAnonymouslyResponse locale.
             * @member {string} locale
             * @memberof teads.api.FindProfileForEmailAnonymouslyResponse
             * @instance
             */
            FindProfileForEmailAnonymouslyResponse.prototype.locale = "";

            /**
             * FindProfileForEmailAnonymouslyResponse deprecatedCredentials.
             * @member {teads.api.FindProfileForEmailAnonymouslyResponse.ICredentials|null|undefined} deprecatedCredentials
             * @memberof teads.api.FindProfileForEmailAnonymouslyResponse
             * @instance
             */
            FindProfileForEmailAnonymouslyResponse.prototype.deprecatedCredentials = null;

            /**
             * FindProfileForEmailAnonymouslyResponse cognitoCredentials.
             * @member {teads.api.FindProfileForEmailAnonymouslyResponse.ICredentials|null|undefined} cognitoCredentials
             * @memberof teads.api.FindProfileForEmailAnonymouslyResponse
             * @instance
             */
            FindProfileForEmailAnonymouslyResponse.prototype.cognitoCredentials = null;

            // OneOf field names bound to virtual getters and setters
            var $oneOfFields;

            /**
             * FindProfileForEmailAnonymouslyResponse profileCredentials.
             * @member {"deprecatedCredentials"|"cognitoCredentials"|undefined} profileCredentials
             * @memberof teads.api.FindProfileForEmailAnonymouslyResponse
             * @instance
             */
            Object.defineProperty(FindProfileForEmailAnonymouslyResponse.prototype, "profileCredentials", {
                get: $util.oneOfGetter($oneOfFields = ["deprecatedCredentials", "cognitoCredentials"]),
                set: $util.oneOfSetter($oneOfFields)
            });

            /**
             * Creates a new FindProfileForEmailAnonymouslyResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.FindProfileForEmailAnonymouslyResponse
             * @static
             * @param {teads.api.IFindProfileForEmailAnonymouslyResponse=} [properties] Properties to set
             * @returns {teads.api.FindProfileForEmailAnonymouslyResponse} FindProfileForEmailAnonymouslyResponse instance
             */
            FindProfileForEmailAnonymouslyResponse.create = function create(properties) {
                return new FindProfileForEmailAnonymouslyResponse(properties);
            };

            /**
             * Encodes the specified FindProfileForEmailAnonymouslyResponse message. Does not implicitly {@link teads.api.FindProfileForEmailAnonymouslyResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.FindProfileForEmailAnonymouslyResponse
             * @static
             * @param {teads.api.IFindProfileForEmailAnonymouslyResponse} message FindProfileForEmailAnonymouslyResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindProfileForEmailAnonymouslyResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.profileId);
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.email);
                if (message.accounts != null && message.accounts.length)
                    for (var i = 0; i < message.accounts.length; ++i)
                        $root.teads.api.FindProfileForEmailAnonymouslyResponse.Account.encode(message.accounts[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.status);
                if (message.firstname != null && Object.hasOwnProperty.call(message, "firstname"))
                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.firstname);
                if (message.lastname != null && Object.hasOwnProperty.call(message, "lastname"))
                    writer.uint32(/* id 9, wireType 2 =*/74).string(message.lastname);
                if (message.locale != null && Object.hasOwnProperty.call(message, "locale"))
                    writer.uint32(/* id 10, wireType 2 =*/82).string(message.locale);
                if (message.deprecatedCredentials != null && Object.hasOwnProperty.call(message, "deprecatedCredentials"))
                    $root.teads.api.FindProfileForEmailAnonymouslyResponse.Credentials.encode(message.deprecatedCredentials, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                if (message.cognitoCredentials != null && Object.hasOwnProperty.call(message, "cognitoCredentials"))
                    $root.teads.api.FindProfileForEmailAnonymouslyResponse.Credentials.encode(message.cognitoCredentials, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified FindProfileForEmailAnonymouslyResponse message, length delimited. Does not implicitly {@link teads.api.FindProfileForEmailAnonymouslyResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.FindProfileForEmailAnonymouslyResponse
             * @static
             * @param {teads.api.IFindProfileForEmailAnonymouslyResponse} message FindProfileForEmailAnonymouslyResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindProfileForEmailAnonymouslyResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a FindProfileForEmailAnonymouslyResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.FindProfileForEmailAnonymouslyResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.FindProfileForEmailAnonymouslyResponse} FindProfileForEmailAnonymouslyResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindProfileForEmailAnonymouslyResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindProfileForEmailAnonymouslyResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.profileId = reader.int64();
                            break;
                        }
                    case 2: {
                            message.email = reader.string();
                            break;
                        }
                    case 4: {
                            if (!(message.accounts && message.accounts.length))
                                message.accounts = [];
                            message.accounts.push($root.teads.api.FindProfileForEmailAnonymouslyResponse.Account.decode(reader, reader.uint32()));
                            break;
                        }
                    case 5: {
                            message.status = reader.int32();
                            break;
                        }
                    case 8: {
                            message.firstname = reader.string();
                            break;
                        }
                    case 9: {
                            message.lastname = reader.string();
                            break;
                        }
                    case 10: {
                            message.locale = reader.string();
                            break;
                        }
                    case 11: {
                            message.deprecatedCredentials = $root.teads.api.FindProfileForEmailAnonymouslyResponse.Credentials.decode(reader, reader.uint32());
                            break;
                        }
                    case 12: {
                            message.cognitoCredentials = $root.teads.api.FindProfileForEmailAnonymouslyResponse.Credentials.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("profileId"))
                    throw $util.ProtocolError("missing required 'profileId'", { instance: message });
                if (!message.hasOwnProperty("email"))
                    throw $util.ProtocolError("missing required 'email'", { instance: message });
                if (!message.hasOwnProperty("status"))
                    throw $util.ProtocolError("missing required 'status'", { instance: message });
                return message;
            };

            /**
             * Decodes a FindProfileForEmailAnonymouslyResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.FindProfileForEmailAnonymouslyResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.FindProfileForEmailAnonymouslyResponse} FindProfileForEmailAnonymouslyResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindProfileForEmailAnonymouslyResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a FindProfileForEmailAnonymouslyResponse message.
             * @function verify
             * @memberof teads.api.FindProfileForEmailAnonymouslyResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FindProfileForEmailAnonymouslyResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                var properties = {};
                if (!$util.isInteger(message.profileId) && !(message.profileId && $util.isInteger(message.profileId.low) && $util.isInteger(message.profileId.high)))
                    return "profileId: integer|Long expected";
                if (!$util.isString(message.email))
                    return "email: string expected";
                if (message.accounts != null && message.hasOwnProperty("accounts")) {
                    if (!Array.isArray(message.accounts))
                        return "accounts: array expected";
                    for (var i = 0; i < message.accounts.length; ++i) {
                        var error = $root.teads.api.FindProfileForEmailAnonymouslyResponse.Account.verify(message.accounts[i]);
                        if (error)
                            return "accounts." + error;
                    }
                }
                switch (message.status) {
                default:
                    return "status: enum value expected";
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                    break;
                }
                if (message.firstname != null && message.hasOwnProperty("firstname"))
                    if (!$util.isString(message.firstname))
                        return "firstname: string expected";
                if (message.lastname != null && message.hasOwnProperty("lastname"))
                    if (!$util.isString(message.lastname))
                        return "lastname: string expected";
                if (message.locale != null && message.hasOwnProperty("locale"))
                    if (!$util.isString(message.locale))
                        return "locale: string expected";
                if (message.deprecatedCredentials != null && message.hasOwnProperty("deprecatedCredentials")) {
                    properties.profileCredentials = 1;
                    {
                        var error = $root.teads.api.FindProfileForEmailAnonymouslyResponse.Credentials.verify(message.deprecatedCredentials);
                        if (error)
                            return "deprecatedCredentials." + error;
                    }
                }
                if (message.cognitoCredentials != null && message.hasOwnProperty("cognitoCredentials")) {
                    if (properties.profileCredentials === 1)
                        return "profileCredentials: multiple values";
                    properties.profileCredentials = 1;
                    {
                        var error = $root.teads.api.FindProfileForEmailAnonymouslyResponse.Credentials.verify(message.cognitoCredentials);
                        if (error)
                            return "cognitoCredentials." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a FindProfileForEmailAnonymouslyResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.FindProfileForEmailAnonymouslyResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.FindProfileForEmailAnonymouslyResponse} FindProfileForEmailAnonymouslyResponse
             */
            FindProfileForEmailAnonymouslyResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.FindProfileForEmailAnonymouslyResponse)
                    return object;
                var message = new $root.teads.api.FindProfileForEmailAnonymouslyResponse();
                if (object.profileId != null)
                    if ($util.Long)
                        (message.profileId = $util.Long.fromValue(object.profileId)).unsigned = false;
                    else if (typeof object.profileId === "string")
                        message.profileId = parseInt(object.profileId, 10);
                    else if (typeof object.profileId === "number")
                        message.profileId = object.profileId;
                    else if (typeof object.profileId === "object")
                        message.profileId = new $util.LongBits(object.profileId.low >>> 0, object.profileId.high >>> 0).toNumber();
                if (object.email != null)
                    message.email = String(object.email);
                if (object.accounts) {
                    if (!Array.isArray(object.accounts))
                        throw TypeError(".teads.api.FindProfileForEmailAnonymouslyResponse.accounts: array expected");
                    message.accounts = [];
                    for (var i = 0; i < object.accounts.length; ++i) {
                        if (typeof object.accounts[i] !== "object")
                            throw TypeError(".teads.api.FindProfileForEmailAnonymouslyResponse.accounts: object expected");
                        message.accounts[i] = $root.teads.api.FindProfileForEmailAnonymouslyResponse.Account.fromObject(object.accounts[i]);
                    }
                }
                switch (object.status) {
                default:
                    if (typeof object.status === "number") {
                        message.status = object.status;
                        break;
                    }
                    break;
                case "PROFILE_STATUS_ENABLED":
                case 1:
                    message.status = 1;
                    break;
                case "PROFILE_STATUS_DISABLED":
                case 2:
                    message.status = 2;
                    break;
                case "PROFILE_STATUS_DELETED":
                case 3:
                    message.status = 3;
                    break;
                case "PROFILE_STATUS_WAITING_PASSWORD":
                case 4:
                    message.status = 4;
                    break;
                case "PROFILE_STATUS_FIRST_LOGIN":
                case 5:
                    message.status = 5;
                    break;
                }
                if (object.firstname != null)
                    message.firstname = String(object.firstname);
                if (object.lastname != null)
                    message.lastname = String(object.lastname);
                if (object.locale != null)
                    message.locale = String(object.locale);
                if (object.deprecatedCredentials != null) {
                    if (typeof object.deprecatedCredentials !== "object")
                        throw TypeError(".teads.api.FindProfileForEmailAnonymouslyResponse.deprecatedCredentials: object expected");
                    message.deprecatedCredentials = $root.teads.api.FindProfileForEmailAnonymouslyResponse.Credentials.fromObject(object.deprecatedCredentials);
                }
                if (object.cognitoCredentials != null) {
                    if (typeof object.cognitoCredentials !== "object")
                        throw TypeError(".teads.api.FindProfileForEmailAnonymouslyResponse.cognitoCredentials: object expected");
                    message.cognitoCredentials = $root.teads.api.FindProfileForEmailAnonymouslyResponse.Credentials.fromObject(object.cognitoCredentials);
                }
                return message;
            };

            /**
             * Creates a plain object from a FindProfileForEmailAnonymouslyResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.FindProfileForEmailAnonymouslyResponse
             * @static
             * @param {teads.api.FindProfileForEmailAnonymouslyResponse} message FindProfileForEmailAnonymouslyResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FindProfileForEmailAnonymouslyResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.accounts = [];
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.profileId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.profileId = options.longs === String ? "0" : 0;
                    object.email = "";
                    object.status = options.enums === String ? "PROFILE_STATUS_ENABLED" : 1;
                    object.firstname = "";
                    object.lastname = "";
                    object.locale = "";
                }
                if (message.profileId != null && message.hasOwnProperty("profileId"))
                    if (typeof message.profileId === "number")
                        object.profileId = options.longs === String ? String(message.profileId) : message.profileId;
                    else
                        object.profileId = options.longs === String ? $util.Long.prototype.toString.call(message.profileId) : options.longs === Number ? new $util.LongBits(message.profileId.low >>> 0, message.profileId.high >>> 0).toNumber() : message.profileId;
                if (message.email != null && message.hasOwnProperty("email"))
                    object.email = message.email;
                if (message.accounts && message.accounts.length) {
                    object.accounts = [];
                    for (var j = 0; j < message.accounts.length; ++j)
                        object.accounts[j] = $root.teads.api.FindProfileForEmailAnonymouslyResponse.Account.toObject(message.accounts[j], options);
                }
                if (message.status != null && message.hasOwnProperty("status"))
                    object.status = options.enums === String ? $root.teads.api.ProfileStatus[message.status] === undefined ? message.status : $root.teads.api.ProfileStatus[message.status] : message.status;
                if (message.firstname != null && message.hasOwnProperty("firstname"))
                    object.firstname = message.firstname;
                if (message.lastname != null && message.hasOwnProperty("lastname"))
                    object.lastname = message.lastname;
                if (message.locale != null && message.hasOwnProperty("locale"))
                    object.locale = message.locale;
                if (message.deprecatedCredentials != null && message.hasOwnProperty("deprecatedCredentials")) {
                    object.deprecatedCredentials = $root.teads.api.FindProfileForEmailAnonymouslyResponse.Credentials.toObject(message.deprecatedCredentials, options);
                    if (options.oneofs)
                        object.profileCredentials = "deprecatedCredentials";
                }
                if (message.cognitoCredentials != null && message.hasOwnProperty("cognitoCredentials")) {
                    object.cognitoCredentials = $root.teads.api.FindProfileForEmailAnonymouslyResponse.Credentials.toObject(message.cognitoCredentials, options);
                    if (options.oneofs)
                        object.profileCredentials = "cognitoCredentials";
                }
                return object;
            };

            /**
             * Converts this FindProfileForEmailAnonymouslyResponse to JSON.
             * @function toJSON
             * @memberof teads.api.FindProfileForEmailAnonymouslyResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FindProfileForEmailAnonymouslyResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for FindProfileForEmailAnonymouslyResponse
             * @function getTypeUrl
             * @memberof teads.api.FindProfileForEmailAnonymouslyResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            FindProfileForEmailAnonymouslyResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.FindProfileForEmailAnonymouslyResponse";
            };

            FindProfileForEmailAnonymouslyResponse.Account = (function() {

                /**
                 * Properties of an Account.
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse
                 * @interface IAccount
                 * @property {number} entityId Account entityId
                 * @property {Array.<string>|null} [roles] Account roles
                 * @property {teads.api.EntityType} entityType Account entityType
                 */

                /**
                 * Constructs a new Account.
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse
                 * @classdesc Represents an Account.
                 * @implements IAccount
                 * @constructor
                 * @param {teads.api.FindProfileForEmailAnonymouslyResponse.IAccount=} [properties] Properties to set
                 */
                function Account(properties) {
                    this.roles = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Account entityId.
                 * @member {number} entityId
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.Account
                 * @instance
                 */
                Account.prototype.entityId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * Account roles.
                 * @member {Array.<string>} roles
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.Account
                 * @instance
                 */
                Account.prototype.roles = $util.emptyArray;

                /**
                 * Account entityType.
                 * @member {teads.api.EntityType} entityType
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.Account
                 * @instance
                 */
                Account.prototype.entityType = 1;

                /**
                 * Creates a new Account instance using the specified properties.
                 * @function create
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.Account
                 * @static
                 * @param {teads.api.FindProfileForEmailAnonymouslyResponse.IAccount=} [properties] Properties to set
                 * @returns {teads.api.FindProfileForEmailAnonymouslyResponse.Account} Account instance
                 */
                Account.create = function create(properties) {
                    return new Account(properties);
                };

                /**
                 * Encodes the specified Account message. Does not implicitly {@link teads.api.FindProfileForEmailAnonymouslyResponse.Account.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.Account
                 * @static
                 * @param {teads.api.FindProfileForEmailAnonymouslyResponse.IAccount} message Account message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Account.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.entityId);
                    if (message.roles != null && message.roles.length)
                        for (var i = 0; i < message.roles.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.roles[i]);
                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.entityType);
                    return writer;
                };

                /**
                 * Encodes the specified Account message, length delimited. Does not implicitly {@link teads.api.FindProfileForEmailAnonymouslyResponse.Account.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.Account
                 * @static
                 * @param {teads.api.FindProfileForEmailAnonymouslyResponse.IAccount} message Account message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Account.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes an Account message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.Account
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.FindProfileForEmailAnonymouslyResponse.Account} Account
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Account.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindProfileForEmailAnonymouslyResponse.Account();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.entityId = reader.int64();
                                break;
                            }
                        case 2: {
                                if (!(message.roles && message.roles.length))
                                    message.roles = [];
                                message.roles.push(reader.string());
                                break;
                            }
                        case 3: {
                                message.entityType = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("entityId"))
                        throw $util.ProtocolError("missing required 'entityId'", { instance: message });
                    if (!message.hasOwnProperty("entityType"))
                        throw $util.ProtocolError("missing required 'entityType'", { instance: message });
                    return message;
                };

                /**
                 * Decodes an Account message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.Account
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.FindProfileForEmailAnonymouslyResponse.Account} Account
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Account.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies an Account message.
                 * @function verify
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.Account
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Account.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.entityId) && !(message.entityId && $util.isInteger(message.entityId.low) && $util.isInteger(message.entityId.high)))
                        return "entityId: integer|Long expected";
                    if (message.roles != null && message.hasOwnProperty("roles")) {
                        if (!Array.isArray(message.roles))
                            return "roles: array expected";
                        for (var i = 0; i < message.roles.length; ++i)
                            if (!$util.isString(message.roles[i]))
                                return "roles: string[] expected";
                    }
                    switch (message.entityType) {
                    default:
                        return "entityType: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                        break;
                    }
                    return null;
                };

                /**
                 * Creates an Account message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.Account
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.FindProfileForEmailAnonymouslyResponse.Account} Account
                 */
                Account.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.FindProfileForEmailAnonymouslyResponse.Account)
                        return object;
                    var message = new $root.teads.api.FindProfileForEmailAnonymouslyResponse.Account();
                    if (object.entityId != null)
                        if ($util.Long)
                            (message.entityId = $util.Long.fromValue(object.entityId)).unsigned = false;
                        else if (typeof object.entityId === "string")
                            message.entityId = parseInt(object.entityId, 10);
                        else if (typeof object.entityId === "number")
                            message.entityId = object.entityId;
                        else if (typeof object.entityId === "object")
                            message.entityId = new $util.LongBits(object.entityId.low >>> 0, object.entityId.high >>> 0).toNumber();
                    if (object.roles) {
                        if (!Array.isArray(object.roles))
                            throw TypeError(".teads.api.FindProfileForEmailAnonymouslyResponse.Account.roles: array expected");
                        message.roles = [];
                        for (var i = 0; i < object.roles.length; ++i)
                            message.roles[i] = String(object.roles[i]);
                    }
                    switch (object.entityType) {
                    default:
                        if (typeof object.entityType === "number") {
                            message.entityType = object.entityType;
                            break;
                        }
                        break;
                    case "ENTITY_TYPE_OFFICE":
                    case 1:
                        message.entityType = 1;
                        break;
                    case "ENTITY_TYPE_PLATFORM":
                    case 2:
                        message.entityType = 2;
                        break;
                    case "ENTITY_TYPE_SELF_SERVED":
                    case 3:
                        message.entityType = 3;
                        break;
                    case "ENTITY_TYPE_MANAGED_SERVICES":
                    case 4:
                        message.entityType = 4;
                        break;
                    case "ENTITY_TYPE_AGENCY":
                    case 5:
                        message.entityType = 5;
                        break;
                    case "ENTITY_TYPE_ADVERTISER":
                    case 6:
                        message.entityType = 6;
                        break;
                    case "ENTITY_TYPE_ADNETWORK":
                    case 7:
                        message.entityType = 7;
                        break;
                    case "ENTITY_TYPE_UNKNOWN":
                    case 8:
                        message.entityType = 8;
                        break;
                    }
                    return message;
                };

                /**
                 * Creates a plain object from an Account message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.Account
                 * @static
                 * @param {teads.api.FindProfileForEmailAnonymouslyResponse.Account} message Account
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Account.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.roles = [];
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.entityId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.entityId = options.longs === String ? "0" : 0;
                        object.entityType = options.enums === String ? "ENTITY_TYPE_OFFICE" : 1;
                    }
                    if (message.entityId != null && message.hasOwnProperty("entityId"))
                        if (typeof message.entityId === "number")
                            object.entityId = options.longs === String ? String(message.entityId) : message.entityId;
                        else
                            object.entityId = options.longs === String ? $util.Long.prototype.toString.call(message.entityId) : options.longs === Number ? new $util.LongBits(message.entityId.low >>> 0, message.entityId.high >>> 0).toNumber() : message.entityId;
                    if (message.roles && message.roles.length) {
                        object.roles = [];
                        for (var j = 0; j < message.roles.length; ++j)
                            object.roles[j] = message.roles[j];
                    }
                    if (message.entityType != null && message.hasOwnProperty("entityType"))
                        object.entityType = options.enums === String ? $root.teads.api.EntityType[message.entityType] === undefined ? message.entityType : $root.teads.api.EntityType[message.entityType] : message.entityType;
                    return object;
                };

                /**
                 * Converts this Account to JSON.
                 * @function toJSON
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.Account
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Account.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for Account
                 * @function getTypeUrl
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.Account
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Account.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.FindProfileForEmailAnonymouslyResponse.Account";
                };

                return Account;
            })();

            FindProfileForEmailAnonymouslyResponse.Credentials = (function() {

                /**
                 * Properties of a Credentials.
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse
                 * @interface ICredentials
                 * @property {teads.api.FindProfileForEmailAnonymouslyResponse.ISAMLCredentials|null} [samlCredentials] Credentials samlCredentials
                 * @property {teads.api.FindProfileForEmailAnonymouslyResponse.IPasswordCredentials|null} [passwordCredentials] Credentials passwordCredentials
                 */

                /**
                 * Constructs a new Credentials.
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse
                 * @classdesc Represents a Credentials.
                 * @implements ICredentials
                 * @constructor
                 * @param {teads.api.FindProfileForEmailAnonymouslyResponse.ICredentials=} [properties] Properties to set
                 */
                function Credentials(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Credentials samlCredentials.
                 * @member {teads.api.FindProfileForEmailAnonymouslyResponse.ISAMLCredentials|null|undefined} samlCredentials
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.Credentials
                 * @instance
                 */
                Credentials.prototype.samlCredentials = null;

                /**
                 * Credentials passwordCredentials.
                 * @member {teads.api.FindProfileForEmailAnonymouslyResponse.IPasswordCredentials|null|undefined} passwordCredentials
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.Credentials
                 * @instance
                 */
                Credentials.prototype.passwordCredentials = null;

                /**
                 * Creates a new Credentials instance using the specified properties.
                 * @function create
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.Credentials
                 * @static
                 * @param {teads.api.FindProfileForEmailAnonymouslyResponse.ICredentials=} [properties] Properties to set
                 * @returns {teads.api.FindProfileForEmailAnonymouslyResponse.Credentials} Credentials instance
                 */
                Credentials.create = function create(properties) {
                    return new Credentials(properties);
                };

                /**
                 * Encodes the specified Credentials message. Does not implicitly {@link teads.api.FindProfileForEmailAnonymouslyResponse.Credentials.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.Credentials
                 * @static
                 * @param {teads.api.FindProfileForEmailAnonymouslyResponse.ICredentials} message Credentials message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Credentials.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.samlCredentials != null && Object.hasOwnProperty.call(message, "samlCredentials"))
                        $root.teads.api.FindProfileForEmailAnonymouslyResponse.SAMLCredentials.encode(message.samlCredentials, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.passwordCredentials != null && Object.hasOwnProperty.call(message, "passwordCredentials"))
                        $root.teads.api.FindProfileForEmailAnonymouslyResponse.PasswordCredentials.encode(message.passwordCredentials, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified Credentials message, length delimited. Does not implicitly {@link teads.api.FindProfileForEmailAnonymouslyResponse.Credentials.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.Credentials
                 * @static
                 * @param {teads.api.FindProfileForEmailAnonymouslyResponse.ICredentials} message Credentials message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Credentials.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a Credentials message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.Credentials
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.FindProfileForEmailAnonymouslyResponse.Credentials} Credentials
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Credentials.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindProfileForEmailAnonymouslyResponse.Credentials();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 6: {
                                message.samlCredentials = $root.teads.api.FindProfileForEmailAnonymouslyResponse.SAMLCredentials.decode(reader, reader.uint32());
                                break;
                            }
                        case 7: {
                                message.passwordCredentials = $root.teads.api.FindProfileForEmailAnonymouslyResponse.PasswordCredentials.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a Credentials message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.Credentials
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.FindProfileForEmailAnonymouslyResponse.Credentials} Credentials
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Credentials.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a Credentials message.
                 * @function verify
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.Credentials
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Credentials.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.samlCredentials != null && message.hasOwnProperty("samlCredentials")) {
                        var error = $root.teads.api.FindProfileForEmailAnonymouslyResponse.SAMLCredentials.verify(message.samlCredentials);
                        if (error)
                            return "samlCredentials." + error;
                    }
                    if (message.passwordCredentials != null && message.hasOwnProperty("passwordCredentials")) {
                        var error = $root.teads.api.FindProfileForEmailAnonymouslyResponse.PasswordCredentials.verify(message.passwordCredentials);
                        if (error)
                            return "passwordCredentials." + error;
                    }
                    return null;
                };

                /**
                 * Creates a Credentials message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.Credentials
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.FindProfileForEmailAnonymouslyResponse.Credentials} Credentials
                 */
                Credentials.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.FindProfileForEmailAnonymouslyResponse.Credentials)
                        return object;
                    var message = new $root.teads.api.FindProfileForEmailAnonymouslyResponse.Credentials();
                    if (object.samlCredentials != null) {
                        if (typeof object.samlCredentials !== "object")
                            throw TypeError(".teads.api.FindProfileForEmailAnonymouslyResponse.Credentials.samlCredentials: object expected");
                        message.samlCredentials = $root.teads.api.FindProfileForEmailAnonymouslyResponse.SAMLCredentials.fromObject(object.samlCredentials);
                    }
                    if (object.passwordCredentials != null) {
                        if (typeof object.passwordCredentials !== "object")
                            throw TypeError(".teads.api.FindProfileForEmailAnonymouslyResponse.Credentials.passwordCredentials: object expected");
                        message.passwordCredentials = $root.teads.api.FindProfileForEmailAnonymouslyResponse.PasswordCredentials.fromObject(object.passwordCredentials);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a Credentials message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.Credentials
                 * @static
                 * @param {teads.api.FindProfileForEmailAnonymouslyResponse.Credentials} message Credentials
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Credentials.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.samlCredentials = null;
                        object.passwordCredentials = null;
                    }
                    if (message.samlCredentials != null && message.hasOwnProperty("samlCredentials"))
                        object.samlCredentials = $root.teads.api.FindProfileForEmailAnonymouslyResponse.SAMLCredentials.toObject(message.samlCredentials, options);
                    if (message.passwordCredentials != null && message.hasOwnProperty("passwordCredentials"))
                        object.passwordCredentials = $root.teads.api.FindProfileForEmailAnonymouslyResponse.PasswordCredentials.toObject(message.passwordCredentials, options);
                    return object;
                };

                /**
                 * Converts this Credentials to JSON.
                 * @function toJSON
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.Credentials
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Credentials.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for Credentials
                 * @function getTypeUrl
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.Credentials
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Credentials.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.FindProfileForEmailAnonymouslyResponse.Credentials";
                };

                return Credentials;
            })();

            FindProfileForEmailAnonymouslyResponse.PasswordCredentials = (function() {

                /**
                 * Properties of a PasswordCredentials.
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse
                 * @interface IPasswordCredentials
                 * @property {boolean} mfaValidationRequired PasswordCredentials mfaValidationRequired
                 */

                /**
                 * Constructs a new PasswordCredentials.
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse
                 * @classdesc Represents a PasswordCredentials.
                 * @implements IPasswordCredentials
                 * @constructor
                 * @param {teads.api.FindProfileForEmailAnonymouslyResponse.IPasswordCredentials=} [properties] Properties to set
                 */
                function PasswordCredentials(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * PasswordCredentials mfaValidationRequired.
                 * @member {boolean} mfaValidationRequired
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.PasswordCredentials
                 * @instance
                 */
                PasswordCredentials.prototype.mfaValidationRequired = false;

                /**
                 * Creates a new PasswordCredentials instance using the specified properties.
                 * @function create
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.PasswordCredentials
                 * @static
                 * @param {teads.api.FindProfileForEmailAnonymouslyResponse.IPasswordCredentials=} [properties] Properties to set
                 * @returns {teads.api.FindProfileForEmailAnonymouslyResponse.PasswordCredentials} PasswordCredentials instance
                 */
                PasswordCredentials.create = function create(properties) {
                    return new PasswordCredentials(properties);
                };

                /**
                 * Encodes the specified PasswordCredentials message. Does not implicitly {@link teads.api.FindProfileForEmailAnonymouslyResponse.PasswordCredentials.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.PasswordCredentials
                 * @static
                 * @param {teads.api.FindProfileForEmailAnonymouslyResponse.IPasswordCredentials} message PasswordCredentials message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PasswordCredentials.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.mfaValidationRequired);
                    return writer;
                };

                /**
                 * Encodes the specified PasswordCredentials message, length delimited. Does not implicitly {@link teads.api.FindProfileForEmailAnonymouslyResponse.PasswordCredentials.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.PasswordCredentials
                 * @static
                 * @param {teads.api.FindProfileForEmailAnonymouslyResponse.IPasswordCredentials} message PasswordCredentials message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PasswordCredentials.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a PasswordCredentials message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.PasswordCredentials
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.FindProfileForEmailAnonymouslyResponse.PasswordCredentials} PasswordCredentials
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PasswordCredentials.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindProfileForEmailAnonymouslyResponse.PasswordCredentials();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.mfaValidationRequired = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("mfaValidationRequired"))
                        throw $util.ProtocolError("missing required 'mfaValidationRequired'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a PasswordCredentials message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.PasswordCredentials
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.FindProfileForEmailAnonymouslyResponse.PasswordCredentials} PasswordCredentials
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PasswordCredentials.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a PasswordCredentials message.
                 * @function verify
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.PasswordCredentials
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                PasswordCredentials.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (typeof message.mfaValidationRequired !== "boolean")
                        return "mfaValidationRequired: boolean expected";
                    return null;
                };

                /**
                 * Creates a PasswordCredentials message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.PasswordCredentials
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.FindProfileForEmailAnonymouslyResponse.PasswordCredentials} PasswordCredentials
                 */
                PasswordCredentials.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.FindProfileForEmailAnonymouslyResponse.PasswordCredentials)
                        return object;
                    var message = new $root.teads.api.FindProfileForEmailAnonymouslyResponse.PasswordCredentials();
                    if (object.mfaValidationRequired != null)
                        message.mfaValidationRequired = Boolean(object.mfaValidationRequired);
                    return message;
                };

                /**
                 * Creates a plain object from a PasswordCredentials message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.PasswordCredentials
                 * @static
                 * @param {teads.api.FindProfileForEmailAnonymouslyResponse.PasswordCredentials} message PasswordCredentials
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                PasswordCredentials.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.mfaValidationRequired = false;
                    if (message.mfaValidationRequired != null && message.hasOwnProperty("mfaValidationRequired"))
                        object.mfaValidationRequired = message.mfaValidationRequired;
                    return object;
                };

                /**
                 * Converts this PasswordCredentials to JSON.
                 * @function toJSON
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.PasswordCredentials
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                PasswordCredentials.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for PasswordCredentials
                 * @function getTypeUrl
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.PasswordCredentials
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                PasswordCredentials.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.FindProfileForEmailAnonymouslyResponse.PasswordCredentials";
                };

                return PasswordCredentials;
            })();

            FindProfileForEmailAnonymouslyResponse.SAMLCredentials = (function() {

                /**
                 * Properties of a SAMLCredentials.
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse
                 * @interface ISAMLCredentials
                 * @property {string} identityProviderName SAMLCredentials identityProviderName
                 */

                /**
                 * Constructs a new SAMLCredentials.
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse
                 * @classdesc Represents a SAMLCredentials.
                 * @implements ISAMLCredentials
                 * @constructor
                 * @param {teads.api.FindProfileForEmailAnonymouslyResponse.ISAMLCredentials=} [properties] Properties to set
                 */
                function SAMLCredentials(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * SAMLCredentials identityProviderName.
                 * @member {string} identityProviderName
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.SAMLCredentials
                 * @instance
                 */
                SAMLCredentials.prototype.identityProviderName = "";

                /**
                 * Creates a new SAMLCredentials instance using the specified properties.
                 * @function create
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.SAMLCredentials
                 * @static
                 * @param {teads.api.FindProfileForEmailAnonymouslyResponse.ISAMLCredentials=} [properties] Properties to set
                 * @returns {teads.api.FindProfileForEmailAnonymouslyResponse.SAMLCredentials} SAMLCredentials instance
                 */
                SAMLCredentials.create = function create(properties) {
                    return new SAMLCredentials(properties);
                };

                /**
                 * Encodes the specified SAMLCredentials message. Does not implicitly {@link teads.api.FindProfileForEmailAnonymouslyResponse.SAMLCredentials.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.SAMLCredentials
                 * @static
                 * @param {teads.api.FindProfileForEmailAnonymouslyResponse.ISAMLCredentials} message SAMLCredentials message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SAMLCredentials.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.identityProviderName);
                    return writer;
                };

                /**
                 * Encodes the specified SAMLCredentials message, length delimited. Does not implicitly {@link teads.api.FindProfileForEmailAnonymouslyResponse.SAMLCredentials.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.SAMLCredentials
                 * @static
                 * @param {teads.api.FindProfileForEmailAnonymouslyResponse.ISAMLCredentials} message SAMLCredentials message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SAMLCredentials.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a SAMLCredentials message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.SAMLCredentials
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.FindProfileForEmailAnonymouslyResponse.SAMLCredentials} SAMLCredentials
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SAMLCredentials.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindProfileForEmailAnonymouslyResponse.SAMLCredentials();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.identityProviderName = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("identityProviderName"))
                        throw $util.ProtocolError("missing required 'identityProviderName'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a SAMLCredentials message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.SAMLCredentials
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.FindProfileForEmailAnonymouslyResponse.SAMLCredentials} SAMLCredentials
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SAMLCredentials.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a SAMLCredentials message.
                 * @function verify
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.SAMLCredentials
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SAMLCredentials.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isString(message.identityProviderName))
                        return "identityProviderName: string expected";
                    return null;
                };

                /**
                 * Creates a SAMLCredentials message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.SAMLCredentials
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.FindProfileForEmailAnonymouslyResponse.SAMLCredentials} SAMLCredentials
                 */
                SAMLCredentials.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.FindProfileForEmailAnonymouslyResponse.SAMLCredentials)
                        return object;
                    var message = new $root.teads.api.FindProfileForEmailAnonymouslyResponse.SAMLCredentials();
                    if (object.identityProviderName != null)
                        message.identityProviderName = String(object.identityProviderName);
                    return message;
                };

                /**
                 * Creates a plain object from a SAMLCredentials message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.SAMLCredentials
                 * @static
                 * @param {teads.api.FindProfileForEmailAnonymouslyResponse.SAMLCredentials} message SAMLCredentials
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SAMLCredentials.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.identityProviderName = "";
                    if (message.identityProviderName != null && message.hasOwnProperty("identityProviderName"))
                        object.identityProviderName = message.identityProviderName;
                    return object;
                };

                /**
                 * Converts this SAMLCredentials to JSON.
                 * @function toJSON
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.SAMLCredentials
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SAMLCredentials.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for SAMLCredentials
                 * @function getTypeUrl
                 * @memberof teads.api.FindProfileForEmailAnonymouslyResponse.SAMLCredentials
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SAMLCredentials.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.FindProfileForEmailAnonymouslyResponse.SAMLCredentials";
                };

                return SAMLCredentials;
            })();

            return FindProfileForEmailAnonymouslyResponse;
        })();

        api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest = (function() {

            /**
             * Properties of a FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest.
             * @memberof teads.api
             * @interface IFindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest
             * @property {teads.api.ISecurityContext} securityContext FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest securityContext
             * @property {number} entityId FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest entityId
             */

            /**
             * Constructs a new FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest.
             * @memberof teads.api
             * @classdesc Represents a FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest.
             * @implements IFindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest
             * @constructor
             * @param {teads.api.IFindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest=} [properties] Properties to set
             */
            function FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest
             * @instance
             */
            FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest.prototype.securityContext = null;

            /**
             * FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest entityId.
             * @member {number} entityId
             * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest
             * @instance
             */
            FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest.prototype.entityId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest
             * @static
             * @param {teads.api.IFindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest=} [properties] Properties to set
             * @returns {teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest} FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest instance
             */
            FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest.create = function create(properties) {
                return new FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest(properties);
            };

            /**
             * Encodes the specified FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest message. Does not implicitly {@link teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest
             * @static
             * @param {teads.api.IFindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest} message FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.entityId);
                return writer;
            };

            /**
             * Encodes the specified FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest message, length delimited. Does not implicitly {@link teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest
             * @static
             * @param {teads.api.IFindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest} message FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest} FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.entityId = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("entityId"))
                    throw $util.ProtocolError("missing required 'entityId'", { instance: message });
                return message;
            };

            /**
             * Decodes a FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest} FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest message.
             * @function verify
             * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.entityId) && !(message.entityId && $util.isInteger(message.entityId.low) && $util.isInteger(message.entityId.high)))
                    return "entityId: integer|Long expected";
                return null;
            };

            /**
             * Creates a FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest} FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest
             */
            FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest)
                    return object;
                var message = new $root.teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.entityId != null)
                    if ($util.Long)
                        (message.entityId = $util.Long.fromValue(object.entityId)).unsigned = false;
                    else if (typeof object.entityId === "string")
                        message.entityId = parseInt(object.entityId, 10);
                    else if (typeof object.entityId === "number")
                        message.entityId = object.entityId;
                    else if (typeof object.entityId === "object")
                        message.entityId = new $util.LongBits(object.entityId.low >>> 0, object.entityId.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from a FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest
             * @static
             * @param {teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest} message FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.entityId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.entityId = options.longs === String ? "0" : 0;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.entityId != null && message.hasOwnProperty("entityId"))
                    if (typeof message.entityId === "number")
                        object.entityId = options.longs === String ? String(message.entityId) : message.entityId;
                    else
                        object.entityId = options.longs === String ? $util.Long.prototype.toString.call(message.entityId) : options.longs === Number ? new $util.LongBits(message.entityId.low >>> 0, message.entityId.high >>> 0).toNumber() : message.entityId;
                return object;
            };

            /**
             * Converts this FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest to JSON.
             * @function toJSON
             * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest
             * @function getTypeUrl
             * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest";
            };

            return FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest;
        })();

        api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse = (function() {

            /**
             * Properties of a FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.
             * @memberof teads.api
             * @interface IFindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse
             * @property {Array.<teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.IAdvertiserFirstPartySegment>|null} [segments] FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse segments
             */

            /**
             * Constructs a new FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.
             * @memberof teads.api
             * @classdesc Represents a FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.
             * @implements IFindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse
             * @constructor
             * @param {teads.api.IFindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse=} [properties] Properties to set
             */
            function FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse(properties) {
                this.segments = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse segments.
             * @member {Array.<teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.IAdvertiserFirstPartySegment>} segments
             * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse
             * @instance
             */
            FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.prototype.segments = $util.emptyArray;

            /**
             * Creates a new FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse
             * @static
             * @param {teads.api.IFindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse=} [properties] Properties to set
             * @returns {teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse} FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse instance
             */
            FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.create = function create(properties) {
                return new FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse(properties);
            };

            /**
             * Encodes the specified FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse message. Does not implicitly {@link teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse
             * @static
             * @param {teads.api.IFindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse} message FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.segments != null && message.segments.length)
                    for (var i = 0; i < message.segments.length; ++i)
                        $root.teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment.encode(message.segments[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse message, length delimited. Does not implicitly {@link teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse
             * @static
             * @param {teads.api.IFindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse} message FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse} FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            if (!(message.segments && message.segments.length))
                                message.segments = [];
                            message.segments.push($root.teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse} FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse message.
             * @function verify
             * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.segments != null && message.hasOwnProperty("segments")) {
                    if (!Array.isArray(message.segments))
                        return "segments: array expected";
                    for (var i = 0; i < message.segments.length; ++i) {
                        var error = $root.teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment.verify(message.segments[i]);
                        if (error)
                            return "segments." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse} FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse
             */
            FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse)
                    return object;
                var message = new $root.teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse();
                if (object.segments) {
                    if (!Array.isArray(object.segments))
                        throw TypeError(".teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.segments: array expected");
                    message.segments = [];
                    for (var i = 0; i < object.segments.length; ++i) {
                        if (typeof object.segments[i] !== "object")
                            throw TypeError(".teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.segments: object expected");
                        message.segments[i] = $root.teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment.fromObject(object.segments[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse
             * @static
             * @param {teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse} message FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.segments = [];
                if (message.segments && message.segments.length) {
                    object.segments = [];
                    for (var j = 0; j < message.segments.length; ++j)
                        object.segments[j] = $root.teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment.toObject(message.segments[j], options);
                }
                return object;
            };

            /**
             * Converts this FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse to JSON.
             * @function toJSON
             * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse
             * @function getTypeUrl
             * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse";
            };

            FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment = (function() {

                /**
                 * Properties of an AdvertiserFirstPartySegment.
                 * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse
                 * @interface IAdvertiserFirstPartySegment
                 * @property {number} segmentId AdvertiserFirstPartySegment segmentId
                 * @property {teads.api.AdvertiserFirstPartySegmentProvider} segmentProvider AdvertiserFirstPartySegment segmentProvider
                 */

                /**
                 * Constructs a new AdvertiserFirstPartySegment.
                 * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse
                 * @classdesc Represents an AdvertiserFirstPartySegment.
                 * @implements IAdvertiserFirstPartySegment
                 * @constructor
                 * @param {teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.IAdvertiserFirstPartySegment=} [properties] Properties to set
                 */
                function AdvertiserFirstPartySegment(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * AdvertiserFirstPartySegment segmentId.
                 * @member {number} segmentId
                 * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment
                 * @instance
                 */
                AdvertiserFirstPartySegment.prototype.segmentId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * AdvertiserFirstPartySegment segmentProvider.
                 * @member {teads.api.AdvertiserFirstPartySegmentProvider} segmentProvider
                 * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment
                 * @instance
                 */
                AdvertiserFirstPartySegment.prototype.segmentProvider = 1;

                /**
                 * Creates a new AdvertiserFirstPartySegment instance using the specified properties.
                 * @function create
                 * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment
                 * @static
                 * @param {teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.IAdvertiserFirstPartySegment=} [properties] Properties to set
                 * @returns {teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment} AdvertiserFirstPartySegment instance
                 */
                AdvertiserFirstPartySegment.create = function create(properties) {
                    return new AdvertiserFirstPartySegment(properties);
                };

                /**
                 * Encodes the specified AdvertiserFirstPartySegment message. Does not implicitly {@link teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment
                 * @static
                 * @param {teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.IAdvertiserFirstPartySegment} message AdvertiserFirstPartySegment message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                AdvertiserFirstPartySegment.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.segmentId);
                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.segmentProvider);
                    return writer;
                };

                /**
                 * Encodes the specified AdvertiserFirstPartySegment message, length delimited. Does not implicitly {@link teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment
                 * @static
                 * @param {teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.IAdvertiserFirstPartySegment} message AdvertiserFirstPartySegment message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                AdvertiserFirstPartySegment.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes an AdvertiserFirstPartySegment message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment} AdvertiserFirstPartySegment
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                AdvertiserFirstPartySegment.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.segmentId = reader.int64();
                                break;
                            }
                        case 2: {
                                message.segmentProvider = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("segmentId"))
                        throw $util.ProtocolError("missing required 'segmentId'", { instance: message });
                    if (!message.hasOwnProperty("segmentProvider"))
                        throw $util.ProtocolError("missing required 'segmentProvider'", { instance: message });
                    return message;
                };

                /**
                 * Decodes an AdvertiserFirstPartySegment message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment} AdvertiserFirstPartySegment
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                AdvertiserFirstPartySegment.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies an AdvertiserFirstPartySegment message.
                 * @function verify
                 * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                AdvertiserFirstPartySegment.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.segmentId) && !(message.segmentId && $util.isInteger(message.segmentId.low) && $util.isInteger(message.segmentId.high)))
                        return "segmentId: integer|Long expected";
                    switch (message.segmentProvider) {
                    default:
                        return "segmentProvider: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 7:
                        break;
                    }
                    return null;
                };

                /**
                 * Creates an AdvertiserFirstPartySegment message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment} AdvertiserFirstPartySegment
                 */
                AdvertiserFirstPartySegment.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment)
                        return object;
                    var message = new $root.teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment();
                    if (object.segmentId != null)
                        if ($util.Long)
                            (message.segmentId = $util.Long.fromValue(object.segmentId)).unsigned = false;
                        else if (typeof object.segmentId === "string")
                            message.segmentId = parseInt(object.segmentId, 10);
                        else if (typeof object.segmentId === "number")
                            message.segmentId = object.segmentId;
                        else if (typeof object.segmentId === "object")
                            message.segmentId = new $util.LongBits(object.segmentId.low >>> 0, object.segmentId.high >>> 0).toNumber();
                    switch (object.segmentProvider) {
                    default:
                        if (typeof object.segmentProvider === "number") {
                            message.segmentProvider = object.segmentProvider;
                            break;
                        }
                        break;
                    case "ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_NIELSEN":
                    case 1:
                        message.segmentProvider = 1;
                        break;
                    case "ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_LIVERAMP":
                    case 2:
                        message.segmentProvider = 2;
                        break;
                    case "ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_BLUEKAI":
                    case 3:
                        message.segmentProvider = 3;
                        break;
                    case "ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_NEUSTAR":
                    case 4:
                        message.segmentProvider = 4;
                        break;
                    case "ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_SALESFORCE":
                    case 5:
                        message.segmentProvider = 5;
                        break;
                    case "ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_RETARGETLY":
                    case 7:
                        message.segmentProvider = 7;
                        break;
                    }
                    return message;
                };

                /**
                 * Creates a plain object from an AdvertiserFirstPartySegment message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment
                 * @static
                 * @param {teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment} message AdvertiserFirstPartySegment
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                AdvertiserFirstPartySegment.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.segmentId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.segmentId = options.longs === String ? "0" : 0;
                        object.segmentProvider = options.enums === String ? "ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_NIELSEN" : 1;
                    }
                    if (message.segmentId != null && message.hasOwnProperty("segmentId"))
                        if (typeof message.segmentId === "number")
                            object.segmentId = options.longs === String ? String(message.segmentId) : message.segmentId;
                        else
                            object.segmentId = options.longs === String ? $util.Long.prototype.toString.call(message.segmentId) : options.longs === Number ? new $util.LongBits(message.segmentId.low >>> 0, message.segmentId.high >>> 0).toNumber() : message.segmentId;
                    if (message.segmentProvider != null && message.hasOwnProperty("segmentProvider"))
                        object.segmentProvider = options.enums === String ? $root.teads.api.AdvertiserFirstPartySegmentProvider[message.segmentProvider] === undefined ? message.segmentProvider : $root.teads.api.AdvertiserFirstPartySegmentProvider[message.segmentProvider] : message.segmentProvider;
                    return object;
                };

                /**
                 * Converts this AdvertiserFirstPartySegment to JSON.
                 * @function toJSON
                 * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                AdvertiserFirstPartySegment.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for AdvertiserFirstPartySegment
                 * @function getTypeUrl
                 * @memberof teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                AdvertiserFirstPartySegment.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse.AdvertiserFirstPartySegment";
                };

                return AdvertiserFirstPartySegment;
            })();

            return FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse;
        })();

        api.GetAccountRequest = (function() {

            /**
             * Properties of a GetAccountRequest.
             * @memberof teads.api
             * @interface IGetAccountRequest
             * @property {teads.api.ISecurityContext} securityContext GetAccountRequest securityContext
             * @property {teads.api.GetAccountRequest.IAccountId} accountId GetAccountRequest accountId
             */

            /**
             * Constructs a new GetAccountRequest.
             * @memberof teads.api
             * @classdesc Represents a GetAccountRequest.
             * @implements IGetAccountRequest
             * @constructor
             * @param {teads.api.IGetAccountRequest=} [properties] Properties to set
             */
            function GetAccountRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GetAccountRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.GetAccountRequest
             * @instance
             */
            GetAccountRequest.prototype.securityContext = null;

            /**
             * GetAccountRequest accountId.
             * @member {teads.api.GetAccountRequest.IAccountId} accountId
             * @memberof teads.api.GetAccountRequest
             * @instance
             */
            GetAccountRequest.prototype.accountId = null;

            /**
             * Creates a new GetAccountRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.GetAccountRequest
             * @static
             * @param {teads.api.IGetAccountRequest=} [properties] Properties to set
             * @returns {teads.api.GetAccountRequest} GetAccountRequest instance
             */
            GetAccountRequest.create = function create(properties) {
                return new GetAccountRequest(properties);
            };

            /**
             * Encodes the specified GetAccountRequest message. Does not implicitly {@link teads.api.GetAccountRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.GetAccountRequest
             * @static
             * @param {teads.api.IGetAccountRequest} message GetAccountRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetAccountRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                $root.teads.api.GetAccountRequest.AccountId.encode(message.accountId, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified GetAccountRequest message, length delimited. Does not implicitly {@link teads.api.GetAccountRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.GetAccountRequest
             * @static
             * @param {teads.api.IGetAccountRequest} message GetAccountRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetAccountRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GetAccountRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.GetAccountRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.GetAccountRequest} GetAccountRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetAccountRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.GetAccountRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.accountId = $root.teads.api.GetAccountRequest.AccountId.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("accountId"))
                    throw $util.ProtocolError("missing required 'accountId'", { instance: message });
                return message;
            };

            /**
             * Decodes a GetAccountRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.GetAccountRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.GetAccountRequest} GetAccountRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetAccountRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GetAccountRequest message.
             * @function verify
             * @memberof teads.api.GetAccountRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GetAccountRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                {
                    var error = $root.teads.api.GetAccountRequest.AccountId.verify(message.accountId);
                    if (error)
                        return "accountId." + error;
                }
                return null;
            };

            /**
             * Creates a GetAccountRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.GetAccountRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.GetAccountRequest} GetAccountRequest
             */
            GetAccountRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.GetAccountRequest)
                    return object;
                var message = new $root.teads.api.GetAccountRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.GetAccountRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.accountId != null) {
                    if (typeof object.accountId !== "object")
                        throw TypeError(".teads.api.GetAccountRequest.accountId: object expected");
                    message.accountId = $root.teads.api.GetAccountRequest.AccountId.fromObject(object.accountId);
                }
                return message;
            };

            /**
             * Creates a plain object from a GetAccountRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.GetAccountRequest
             * @static
             * @param {teads.api.GetAccountRequest} message GetAccountRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GetAccountRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    object.accountId = null;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.accountId != null && message.hasOwnProperty("accountId"))
                    object.accountId = $root.teads.api.GetAccountRequest.AccountId.toObject(message.accountId, options);
                return object;
            };

            /**
             * Converts this GetAccountRequest to JSON.
             * @function toJSON
             * @memberof teads.api.GetAccountRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GetAccountRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GetAccountRequest
             * @function getTypeUrl
             * @memberof teads.api.GetAccountRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GetAccountRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.GetAccountRequest";
            };

            GetAccountRequest.AccountId = (function() {

                /**
                 * Properties of an AccountId.
                 * @memberof teads.api.GetAccountRequest
                 * @interface IAccountId
                 * @property {number} entityId AccountId entityId
                 * @property {number} profileId AccountId profileId
                 */

                /**
                 * Constructs a new AccountId.
                 * @memberof teads.api.GetAccountRequest
                 * @classdesc Represents an AccountId.
                 * @implements IAccountId
                 * @constructor
                 * @param {teads.api.GetAccountRequest.IAccountId=} [properties] Properties to set
                 */
                function AccountId(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * AccountId entityId.
                 * @member {number} entityId
                 * @memberof teads.api.GetAccountRequest.AccountId
                 * @instance
                 */
                AccountId.prototype.entityId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * AccountId profileId.
                 * @member {number} profileId
                 * @memberof teads.api.GetAccountRequest.AccountId
                 * @instance
                 */
                AccountId.prototype.profileId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * Creates a new AccountId instance using the specified properties.
                 * @function create
                 * @memberof teads.api.GetAccountRequest.AccountId
                 * @static
                 * @param {teads.api.GetAccountRequest.IAccountId=} [properties] Properties to set
                 * @returns {teads.api.GetAccountRequest.AccountId} AccountId instance
                 */
                AccountId.create = function create(properties) {
                    return new AccountId(properties);
                };

                /**
                 * Encodes the specified AccountId message. Does not implicitly {@link teads.api.GetAccountRequest.AccountId.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.GetAccountRequest.AccountId
                 * @static
                 * @param {teads.api.GetAccountRequest.IAccountId} message AccountId message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                AccountId.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.entityId);
                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.profileId);
                    return writer;
                };

                /**
                 * Encodes the specified AccountId message, length delimited. Does not implicitly {@link teads.api.GetAccountRequest.AccountId.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.GetAccountRequest.AccountId
                 * @static
                 * @param {teads.api.GetAccountRequest.IAccountId} message AccountId message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                AccountId.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes an AccountId message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.GetAccountRequest.AccountId
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.GetAccountRequest.AccountId} AccountId
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                AccountId.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.GetAccountRequest.AccountId();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.entityId = reader.int64();
                                break;
                            }
                        case 2: {
                                message.profileId = reader.int64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("entityId"))
                        throw $util.ProtocolError("missing required 'entityId'", { instance: message });
                    if (!message.hasOwnProperty("profileId"))
                        throw $util.ProtocolError("missing required 'profileId'", { instance: message });
                    return message;
                };

                /**
                 * Decodes an AccountId message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.GetAccountRequest.AccountId
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.GetAccountRequest.AccountId} AccountId
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                AccountId.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies an AccountId message.
                 * @function verify
                 * @memberof teads.api.GetAccountRequest.AccountId
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                AccountId.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.entityId) && !(message.entityId && $util.isInteger(message.entityId.low) && $util.isInteger(message.entityId.high)))
                        return "entityId: integer|Long expected";
                    if (!$util.isInteger(message.profileId) && !(message.profileId && $util.isInteger(message.profileId.low) && $util.isInteger(message.profileId.high)))
                        return "profileId: integer|Long expected";
                    return null;
                };

                /**
                 * Creates an AccountId message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.GetAccountRequest.AccountId
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.GetAccountRequest.AccountId} AccountId
                 */
                AccountId.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.GetAccountRequest.AccountId)
                        return object;
                    var message = new $root.teads.api.GetAccountRequest.AccountId();
                    if (object.entityId != null)
                        if ($util.Long)
                            (message.entityId = $util.Long.fromValue(object.entityId)).unsigned = false;
                        else if (typeof object.entityId === "string")
                            message.entityId = parseInt(object.entityId, 10);
                        else if (typeof object.entityId === "number")
                            message.entityId = object.entityId;
                        else if (typeof object.entityId === "object")
                            message.entityId = new $util.LongBits(object.entityId.low >>> 0, object.entityId.high >>> 0).toNumber();
                    if (object.profileId != null)
                        if ($util.Long)
                            (message.profileId = $util.Long.fromValue(object.profileId)).unsigned = false;
                        else if (typeof object.profileId === "string")
                            message.profileId = parseInt(object.profileId, 10);
                        else if (typeof object.profileId === "number")
                            message.profileId = object.profileId;
                        else if (typeof object.profileId === "object")
                            message.profileId = new $util.LongBits(object.profileId.low >>> 0, object.profileId.high >>> 0).toNumber();
                    return message;
                };

                /**
                 * Creates a plain object from an AccountId message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.GetAccountRequest.AccountId
                 * @static
                 * @param {teads.api.GetAccountRequest.AccountId} message AccountId
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                AccountId.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.entityId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.entityId = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.profileId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.profileId = options.longs === String ? "0" : 0;
                    }
                    if (message.entityId != null && message.hasOwnProperty("entityId"))
                        if (typeof message.entityId === "number")
                            object.entityId = options.longs === String ? String(message.entityId) : message.entityId;
                        else
                            object.entityId = options.longs === String ? $util.Long.prototype.toString.call(message.entityId) : options.longs === Number ? new $util.LongBits(message.entityId.low >>> 0, message.entityId.high >>> 0).toNumber() : message.entityId;
                    if (message.profileId != null && message.hasOwnProperty("profileId"))
                        if (typeof message.profileId === "number")
                            object.profileId = options.longs === String ? String(message.profileId) : message.profileId;
                        else
                            object.profileId = options.longs === String ? $util.Long.prototype.toString.call(message.profileId) : options.longs === Number ? new $util.LongBits(message.profileId.low >>> 0, message.profileId.high >>> 0).toNumber() : message.profileId;
                    return object;
                };

                /**
                 * Converts this AccountId to JSON.
                 * @function toJSON
                 * @memberof teads.api.GetAccountRequest.AccountId
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                AccountId.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for AccountId
                 * @function getTypeUrl
                 * @memberof teads.api.GetAccountRequest.AccountId
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                AccountId.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.GetAccountRequest.AccountId";
                };

                return AccountId;
            })();

            return GetAccountRequest;
        })();

        api.GetAccountResponse = (function() {

            /**
             * Properties of a GetAccountResponse.
             * @memberof teads.api
             * @interface IGetAccountResponse
             * @property {string} entityName GetAccountResponse entityName
             * @property {teads.api.AccountType} accountType GetAccountResponse accountType
             * @property {teads.api.GetAccountResponse.IProfile} profile GetAccountResponse profile
             * @property {Array.<string>|null} [roles] GetAccountResponse roles
             * @property {Object.<string,teads.api.GetAccountResponse.IResourceTypes>|null} [resourceTypesByPermission] GetAccountResponse resourceTypesByPermission
             * @property {teads.api.EntityType} entityType GetAccountResponse entityType
             * @property {string} entityCurrency GetAccountResponse entityCurrency
             */

            /**
             * Constructs a new GetAccountResponse.
             * @memberof teads.api
             * @classdesc Represents a GetAccountResponse.
             * @implements IGetAccountResponse
             * @constructor
             * @param {teads.api.IGetAccountResponse=} [properties] Properties to set
             */
            function GetAccountResponse(properties) {
                this.roles = [];
                this.resourceTypesByPermission = {};
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GetAccountResponse entityName.
             * @member {string} entityName
             * @memberof teads.api.GetAccountResponse
             * @instance
             */
            GetAccountResponse.prototype.entityName = "";

            /**
             * GetAccountResponse accountType.
             * @member {teads.api.AccountType} accountType
             * @memberof teads.api.GetAccountResponse
             * @instance
             */
            GetAccountResponse.prototype.accountType = 1;

            /**
             * GetAccountResponse profile.
             * @member {teads.api.GetAccountResponse.IProfile} profile
             * @memberof teads.api.GetAccountResponse
             * @instance
             */
            GetAccountResponse.prototype.profile = null;

            /**
             * GetAccountResponse roles.
             * @member {Array.<string>} roles
             * @memberof teads.api.GetAccountResponse
             * @instance
             */
            GetAccountResponse.prototype.roles = $util.emptyArray;

            /**
             * GetAccountResponse resourceTypesByPermission.
             * @member {Object.<string,teads.api.GetAccountResponse.IResourceTypes>} resourceTypesByPermission
             * @memberof teads.api.GetAccountResponse
             * @instance
             */
            GetAccountResponse.prototype.resourceTypesByPermission = $util.emptyObject;

            /**
             * GetAccountResponse entityType.
             * @member {teads.api.EntityType} entityType
             * @memberof teads.api.GetAccountResponse
             * @instance
             */
            GetAccountResponse.prototype.entityType = 1;

            /**
             * GetAccountResponse entityCurrency.
             * @member {string} entityCurrency
             * @memberof teads.api.GetAccountResponse
             * @instance
             */
            GetAccountResponse.prototype.entityCurrency = "";

            /**
             * Creates a new GetAccountResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.GetAccountResponse
             * @static
             * @param {teads.api.IGetAccountResponse=} [properties] Properties to set
             * @returns {teads.api.GetAccountResponse} GetAccountResponse instance
             */
            GetAccountResponse.create = function create(properties) {
                return new GetAccountResponse(properties);
            };

            /**
             * Encodes the specified GetAccountResponse message. Does not implicitly {@link teads.api.GetAccountResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.GetAccountResponse
             * @static
             * @param {teads.api.IGetAccountResponse} message GetAccountResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetAccountResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.entityName);
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.accountType);
                $root.teads.api.GetAccountResponse.Profile.encode(message.profile, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                if (message.roles != null && message.roles.length)
                    for (var i = 0; i < message.roles.length; ++i)
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.roles[i]);
                if (message.resourceTypesByPermission != null && Object.hasOwnProperty.call(message, "resourceTypesByPermission"))
                    for (var keys = Object.keys(message.resourceTypesByPermission), i = 0; i < keys.length; ++i) {
                        writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                        $root.teads.api.GetAccountResponse.ResourceTypes.encode(message.resourceTypesByPermission[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                    }
                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.entityType);
                writer.uint32(/* id 7, wireType 2 =*/58).string(message.entityCurrency);
                return writer;
            };

            /**
             * Encodes the specified GetAccountResponse message, length delimited. Does not implicitly {@link teads.api.GetAccountResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.GetAccountResponse
             * @static
             * @param {teads.api.IGetAccountResponse} message GetAccountResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetAccountResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GetAccountResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.GetAccountResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.GetAccountResponse} GetAccountResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetAccountResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.GetAccountResponse(), key, value;
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.entityName = reader.string();
                            break;
                        }
                    case 2: {
                            message.accountType = reader.int32();
                            break;
                        }
                    case 3: {
                            message.profile = $root.teads.api.GetAccountResponse.Profile.decode(reader, reader.uint32());
                            break;
                        }
                    case 4: {
                            if (!(message.roles && message.roles.length))
                                message.roles = [];
                            message.roles.push(reader.string());
                            break;
                        }
                    case 5: {
                            if (message.resourceTypesByPermission === $util.emptyObject)
                                message.resourceTypesByPermission = {};
                            var end2 = reader.uint32() + reader.pos;
                            key = "";
                            value = null;
                            while (reader.pos < end2) {
                                var tag2 = reader.uint32();
                                switch (tag2 >>> 3) {
                                case 1:
                                    key = reader.string();
                                    break;
                                case 2:
                                    value = $root.teads.api.GetAccountResponse.ResourceTypes.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag2 & 7);
                                    break;
                                }
                            }
                            message.resourceTypesByPermission[key] = value;
                            break;
                        }
                    case 6: {
                            message.entityType = reader.int32();
                            break;
                        }
                    case 7: {
                            message.entityCurrency = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("entityName"))
                    throw $util.ProtocolError("missing required 'entityName'", { instance: message });
                if (!message.hasOwnProperty("accountType"))
                    throw $util.ProtocolError("missing required 'accountType'", { instance: message });
                if (!message.hasOwnProperty("profile"))
                    throw $util.ProtocolError("missing required 'profile'", { instance: message });
                if (!message.hasOwnProperty("entityType"))
                    throw $util.ProtocolError("missing required 'entityType'", { instance: message });
                if (!message.hasOwnProperty("entityCurrency"))
                    throw $util.ProtocolError("missing required 'entityCurrency'", { instance: message });
                return message;
            };

            /**
             * Decodes a GetAccountResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.GetAccountResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.GetAccountResponse} GetAccountResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetAccountResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GetAccountResponse message.
             * @function verify
             * @memberof teads.api.GetAccountResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GetAccountResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isString(message.entityName))
                    return "entityName: string expected";
                switch (message.accountType) {
                default:
                    return "accountType: enum value expected";
                case 1:
                case 2:
                case 3:
                case 4:
                    break;
                }
                {
                    var error = $root.teads.api.GetAccountResponse.Profile.verify(message.profile);
                    if (error)
                        return "profile." + error;
                }
                if (message.roles != null && message.hasOwnProperty("roles")) {
                    if (!Array.isArray(message.roles))
                        return "roles: array expected";
                    for (var i = 0; i < message.roles.length; ++i)
                        if (!$util.isString(message.roles[i]))
                            return "roles: string[] expected";
                }
                if (message.resourceTypesByPermission != null && message.hasOwnProperty("resourceTypesByPermission")) {
                    if (!$util.isObject(message.resourceTypesByPermission))
                        return "resourceTypesByPermission: object expected";
                    var key = Object.keys(message.resourceTypesByPermission);
                    for (var i = 0; i < key.length; ++i) {
                        var error = $root.teads.api.GetAccountResponse.ResourceTypes.verify(message.resourceTypesByPermission[key[i]]);
                        if (error)
                            return "resourceTypesByPermission." + error;
                    }
                }
                switch (message.entityType) {
                default:
                    return "entityType: enum value expected";
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                    break;
                }
                if (!$util.isString(message.entityCurrency))
                    return "entityCurrency: string expected";
                return null;
            };

            /**
             * Creates a GetAccountResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.GetAccountResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.GetAccountResponse} GetAccountResponse
             */
            GetAccountResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.GetAccountResponse)
                    return object;
                var message = new $root.teads.api.GetAccountResponse();
                if (object.entityName != null)
                    message.entityName = String(object.entityName);
                switch (object.accountType) {
                default:
                    if (typeof object.accountType === "number") {
                        message.accountType = object.accountType;
                        break;
                    }
                    break;
                case "ACCOUNT_TYPE_INTERNAL_EMPLOYEE":
                case 1:
                    message.accountType = 1;
                    break;
                case "ACCOUNT_TYPE_PUBLISHER":
                case 2:
                    message.accountType = 2;
                    break;
                case "ACCOUNT_TYPE_ADVERTISER":
                case 3:
                    message.accountType = 3;
                    break;
                case "ACCOUNT_TYPE_AGENCY":
                case 4:
                    message.accountType = 4;
                    break;
                }
                if (object.profile != null) {
                    if (typeof object.profile !== "object")
                        throw TypeError(".teads.api.GetAccountResponse.profile: object expected");
                    message.profile = $root.teads.api.GetAccountResponse.Profile.fromObject(object.profile);
                }
                if (object.roles) {
                    if (!Array.isArray(object.roles))
                        throw TypeError(".teads.api.GetAccountResponse.roles: array expected");
                    message.roles = [];
                    for (var i = 0; i < object.roles.length; ++i)
                        message.roles[i] = String(object.roles[i]);
                }
                if (object.resourceTypesByPermission) {
                    if (typeof object.resourceTypesByPermission !== "object")
                        throw TypeError(".teads.api.GetAccountResponse.resourceTypesByPermission: object expected");
                    message.resourceTypesByPermission = {};
                    for (var keys = Object.keys(object.resourceTypesByPermission), i = 0; i < keys.length; ++i) {
                        if (typeof object.resourceTypesByPermission[keys[i]] !== "object")
                            throw TypeError(".teads.api.GetAccountResponse.resourceTypesByPermission: object expected");
                        message.resourceTypesByPermission[keys[i]] = $root.teads.api.GetAccountResponse.ResourceTypes.fromObject(object.resourceTypesByPermission[keys[i]]);
                    }
                }
                switch (object.entityType) {
                default:
                    if (typeof object.entityType === "number") {
                        message.entityType = object.entityType;
                        break;
                    }
                    break;
                case "ENTITY_TYPE_OFFICE":
                case 1:
                    message.entityType = 1;
                    break;
                case "ENTITY_TYPE_PLATFORM":
                case 2:
                    message.entityType = 2;
                    break;
                case "ENTITY_TYPE_SELF_SERVED":
                case 3:
                    message.entityType = 3;
                    break;
                case "ENTITY_TYPE_MANAGED_SERVICES":
                case 4:
                    message.entityType = 4;
                    break;
                case "ENTITY_TYPE_AGENCY":
                case 5:
                    message.entityType = 5;
                    break;
                case "ENTITY_TYPE_ADVERTISER":
                case 6:
                    message.entityType = 6;
                    break;
                case "ENTITY_TYPE_ADNETWORK":
                case 7:
                    message.entityType = 7;
                    break;
                case "ENTITY_TYPE_UNKNOWN":
                case 8:
                    message.entityType = 8;
                    break;
                }
                if (object.entityCurrency != null)
                    message.entityCurrency = String(object.entityCurrency);
                return message;
            };

            /**
             * Creates a plain object from a GetAccountResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.GetAccountResponse
             * @static
             * @param {teads.api.GetAccountResponse} message GetAccountResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GetAccountResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.roles = [];
                if (options.objects || options.defaults)
                    object.resourceTypesByPermission = {};
                if (options.defaults) {
                    object.entityName = "";
                    object.accountType = options.enums === String ? "ACCOUNT_TYPE_INTERNAL_EMPLOYEE" : 1;
                    object.profile = null;
                    object.entityType = options.enums === String ? "ENTITY_TYPE_OFFICE" : 1;
                    object.entityCurrency = "";
                }
                if (message.entityName != null && message.hasOwnProperty("entityName"))
                    object.entityName = message.entityName;
                if (message.accountType != null && message.hasOwnProperty("accountType"))
                    object.accountType = options.enums === String ? $root.teads.api.AccountType[message.accountType] === undefined ? message.accountType : $root.teads.api.AccountType[message.accountType] : message.accountType;
                if (message.profile != null && message.hasOwnProperty("profile"))
                    object.profile = $root.teads.api.GetAccountResponse.Profile.toObject(message.profile, options);
                if (message.roles && message.roles.length) {
                    object.roles = [];
                    for (var j = 0; j < message.roles.length; ++j)
                        object.roles[j] = message.roles[j];
                }
                var keys2;
                if (message.resourceTypesByPermission && (keys2 = Object.keys(message.resourceTypesByPermission)).length) {
                    object.resourceTypesByPermission = {};
                    for (var j = 0; j < keys2.length; ++j)
                        object.resourceTypesByPermission[keys2[j]] = $root.teads.api.GetAccountResponse.ResourceTypes.toObject(message.resourceTypesByPermission[keys2[j]], options);
                }
                if (message.entityType != null && message.hasOwnProperty("entityType"))
                    object.entityType = options.enums === String ? $root.teads.api.EntityType[message.entityType] === undefined ? message.entityType : $root.teads.api.EntityType[message.entityType] : message.entityType;
                if (message.entityCurrency != null && message.hasOwnProperty("entityCurrency"))
                    object.entityCurrency = message.entityCurrency;
                return object;
            };

            /**
             * Converts this GetAccountResponse to JSON.
             * @function toJSON
             * @memberof teads.api.GetAccountResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GetAccountResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GetAccountResponse
             * @function getTypeUrl
             * @memberof teads.api.GetAccountResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GetAccountResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.GetAccountResponse";
            };

            GetAccountResponse.Profile = (function() {

                /**
                 * Properties of a Profile.
                 * @memberof teads.api.GetAccountResponse
                 * @interface IProfile
                 * @property {string} email Profile email
                 * @property {string|null} [firstname] Profile firstname
                 * @property {string|null} [lastname] Profile lastname
                 * @property {string} locale Profile locale
                 * @property {string|null} [timezone] Profile timezone
                 * @property {teads.api.ProfileStatus} status Profile status
                 * @property {google.protobuf.ITimestamp|null} [createdAt] Profile createdAt
                 */

                /**
                 * Constructs a new Profile.
                 * @memberof teads.api.GetAccountResponse
                 * @classdesc Represents a Profile.
                 * @implements IProfile
                 * @constructor
                 * @param {teads.api.GetAccountResponse.IProfile=} [properties] Properties to set
                 */
                function Profile(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Profile email.
                 * @member {string} email
                 * @memberof teads.api.GetAccountResponse.Profile
                 * @instance
                 */
                Profile.prototype.email = "";

                /**
                 * Profile firstname.
                 * @member {string} firstname
                 * @memberof teads.api.GetAccountResponse.Profile
                 * @instance
                 */
                Profile.prototype.firstname = "";

                /**
                 * Profile lastname.
                 * @member {string} lastname
                 * @memberof teads.api.GetAccountResponse.Profile
                 * @instance
                 */
                Profile.prototype.lastname = "";

                /**
                 * Profile locale.
                 * @member {string} locale
                 * @memberof teads.api.GetAccountResponse.Profile
                 * @instance
                 */
                Profile.prototype.locale = "";

                /**
                 * Profile timezone.
                 * @member {string} timezone
                 * @memberof teads.api.GetAccountResponse.Profile
                 * @instance
                 */
                Profile.prototype.timezone = "";

                /**
                 * Profile status.
                 * @member {teads.api.ProfileStatus} status
                 * @memberof teads.api.GetAccountResponse.Profile
                 * @instance
                 */
                Profile.prototype.status = 1;

                /**
                 * Profile createdAt.
                 * @member {google.protobuf.ITimestamp|null|undefined} createdAt
                 * @memberof teads.api.GetAccountResponse.Profile
                 * @instance
                 */
                Profile.prototype.createdAt = null;

                /**
                 * Creates a new Profile instance using the specified properties.
                 * @function create
                 * @memberof teads.api.GetAccountResponse.Profile
                 * @static
                 * @param {teads.api.GetAccountResponse.IProfile=} [properties] Properties to set
                 * @returns {teads.api.GetAccountResponse.Profile} Profile instance
                 */
                Profile.create = function create(properties) {
                    return new Profile(properties);
                };

                /**
                 * Encodes the specified Profile message. Does not implicitly {@link teads.api.GetAccountResponse.Profile.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.GetAccountResponse.Profile
                 * @static
                 * @param {teads.api.GetAccountResponse.IProfile} message Profile message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Profile.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.email);
                    if (message.firstname != null && Object.hasOwnProperty.call(message, "firstname"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.firstname);
                    if (message.lastname != null && Object.hasOwnProperty.call(message, "lastname"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.lastname);
                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.locale);
                    if (message.timezone != null && Object.hasOwnProperty.call(message, "timezone"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.timezone);
                    writer.uint32(/* id 6, wireType 0 =*/48).int32(message.status);
                    if (message.createdAt != null && Object.hasOwnProperty.call(message, "createdAt"))
                        $root.google.protobuf.Timestamp.encode(message.createdAt, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified Profile message, length delimited. Does not implicitly {@link teads.api.GetAccountResponse.Profile.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.GetAccountResponse.Profile
                 * @static
                 * @param {teads.api.GetAccountResponse.IProfile} message Profile message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Profile.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a Profile message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.GetAccountResponse.Profile
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.GetAccountResponse.Profile} Profile
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Profile.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.GetAccountResponse.Profile();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.email = reader.string();
                                break;
                            }
                        case 2: {
                                message.firstname = reader.string();
                                break;
                            }
                        case 3: {
                                message.lastname = reader.string();
                                break;
                            }
                        case 4: {
                                message.locale = reader.string();
                                break;
                            }
                        case 5: {
                                message.timezone = reader.string();
                                break;
                            }
                        case 6: {
                                message.status = reader.int32();
                                break;
                            }
                        case 7: {
                                message.createdAt = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("email"))
                        throw $util.ProtocolError("missing required 'email'", { instance: message });
                    if (!message.hasOwnProperty("locale"))
                        throw $util.ProtocolError("missing required 'locale'", { instance: message });
                    if (!message.hasOwnProperty("status"))
                        throw $util.ProtocolError("missing required 'status'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a Profile message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.GetAccountResponse.Profile
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.GetAccountResponse.Profile} Profile
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Profile.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a Profile message.
                 * @function verify
                 * @memberof teads.api.GetAccountResponse.Profile
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Profile.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isString(message.email))
                        return "email: string expected";
                    if (message.firstname != null && message.hasOwnProperty("firstname"))
                        if (!$util.isString(message.firstname))
                            return "firstname: string expected";
                    if (message.lastname != null && message.hasOwnProperty("lastname"))
                        if (!$util.isString(message.lastname))
                            return "lastname: string expected";
                    if (!$util.isString(message.locale))
                        return "locale: string expected";
                    if (message.timezone != null && message.hasOwnProperty("timezone"))
                        if (!$util.isString(message.timezone))
                            return "timezone: string expected";
                    switch (message.status) {
                    default:
                        return "status: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                        break;
                    }
                    if (message.createdAt != null && message.hasOwnProperty("createdAt")) {
                        var error = $root.google.protobuf.Timestamp.verify(message.createdAt);
                        if (error)
                            return "createdAt." + error;
                    }
                    return null;
                };

                /**
                 * Creates a Profile message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.GetAccountResponse.Profile
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.GetAccountResponse.Profile} Profile
                 */
                Profile.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.GetAccountResponse.Profile)
                        return object;
                    var message = new $root.teads.api.GetAccountResponse.Profile();
                    if (object.email != null)
                        message.email = String(object.email);
                    if (object.firstname != null)
                        message.firstname = String(object.firstname);
                    if (object.lastname != null)
                        message.lastname = String(object.lastname);
                    if (object.locale != null)
                        message.locale = String(object.locale);
                    if (object.timezone != null)
                        message.timezone = String(object.timezone);
                    switch (object.status) {
                    default:
                        if (typeof object.status === "number") {
                            message.status = object.status;
                            break;
                        }
                        break;
                    case "PROFILE_STATUS_ENABLED":
                    case 1:
                        message.status = 1;
                        break;
                    case "PROFILE_STATUS_DISABLED":
                    case 2:
                        message.status = 2;
                        break;
                    case "PROFILE_STATUS_DELETED":
                    case 3:
                        message.status = 3;
                        break;
                    case "PROFILE_STATUS_WAITING_PASSWORD":
                    case 4:
                        message.status = 4;
                        break;
                    case "PROFILE_STATUS_FIRST_LOGIN":
                    case 5:
                        message.status = 5;
                        break;
                    }
                    if (object.createdAt != null) {
                        if (typeof object.createdAt !== "object")
                            throw TypeError(".teads.api.GetAccountResponse.Profile.createdAt: object expected");
                        message.createdAt = $root.google.protobuf.Timestamp.fromObject(object.createdAt);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a Profile message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.GetAccountResponse.Profile
                 * @static
                 * @param {teads.api.GetAccountResponse.Profile} message Profile
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Profile.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.email = "";
                        object.firstname = "";
                        object.lastname = "";
                        object.locale = "";
                        object.timezone = "";
                        object.status = options.enums === String ? "PROFILE_STATUS_ENABLED" : 1;
                        object.createdAt = null;
                    }
                    if (message.email != null && message.hasOwnProperty("email"))
                        object.email = message.email;
                    if (message.firstname != null && message.hasOwnProperty("firstname"))
                        object.firstname = message.firstname;
                    if (message.lastname != null && message.hasOwnProperty("lastname"))
                        object.lastname = message.lastname;
                    if (message.locale != null && message.hasOwnProperty("locale"))
                        object.locale = message.locale;
                    if (message.timezone != null && message.hasOwnProperty("timezone"))
                        object.timezone = message.timezone;
                    if (message.status != null && message.hasOwnProperty("status"))
                        object.status = options.enums === String ? $root.teads.api.ProfileStatus[message.status] === undefined ? message.status : $root.teads.api.ProfileStatus[message.status] : message.status;
                    if (message.createdAt != null && message.hasOwnProperty("createdAt"))
                        object.createdAt = $root.google.protobuf.Timestamp.toObject(message.createdAt, options);
                    return object;
                };

                /**
                 * Converts this Profile to JSON.
                 * @function toJSON
                 * @memberof teads.api.GetAccountResponse.Profile
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Profile.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for Profile
                 * @function getTypeUrl
                 * @memberof teads.api.GetAccountResponse.Profile
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Profile.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.GetAccountResponse.Profile";
                };

                return Profile;
            })();

            GetAccountResponse.ResourceTypes = (function() {

                /**
                 * Properties of a ResourceTypes.
                 * @memberof teads.api.GetAccountResponse
                 * @interface IResourceTypes
                 * @property {Array.<string>|null} [values] ResourceTypes values
                 */

                /**
                 * Constructs a new ResourceTypes.
                 * @memberof teads.api.GetAccountResponse
                 * @classdesc Represents a ResourceTypes.
                 * @implements IResourceTypes
                 * @constructor
                 * @param {teads.api.GetAccountResponse.IResourceTypes=} [properties] Properties to set
                 */
                function ResourceTypes(properties) {
                    this.values = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * ResourceTypes values.
                 * @member {Array.<string>} values
                 * @memberof teads.api.GetAccountResponse.ResourceTypes
                 * @instance
                 */
                ResourceTypes.prototype.values = $util.emptyArray;

                /**
                 * Creates a new ResourceTypes instance using the specified properties.
                 * @function create
                 * @memberof teads.api.GetAccountResponse.ResourceTypes
                 * @static
                 * @param {teads.api.GetAccountResponse.IResourceTypes=} [properties] Properties to set
                 * @returns {teads.api.GetAccountResponse.ResourceTypes} ResourceTypes instance
                 */
                ResourceTypes.create = function create(properties) {
                    return new ResourceTypes(properties);
                };

                /**
                 * Encodes the specified ResourceTypes message. Does not implicitly {@link teads.api.GetAccountResponse.ResourceTypes.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.GetAccountResponse.ResourceTypes
                 * @static
                 * @param {teads.api.GetAccountResponse.IResourceTypes} message ResourceTypes message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceTypes.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.values != null && message.values.length)
                        for (var i = 0; i < message.values.length; ++i)
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.values[i]);
                    return writer;
                };

                /**
                 * Encodes the specified ResourceTypes message, length delimited. Does not implicitly {@link teads.api.GetAccountResponse.ResourceTypes.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.GetAccountResponse.ResourceTypes
                 * @static
                 * @param {teads.api.GetAccountResponse.IResourceTypes} message ResourceTypes message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceTypes.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a ResourceTypes message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.GetAccountResponse.ResourceTypes
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.GetAccountResponse.ResourceTypes} ResourceTypes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceTypes.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.GetAccountResponse.ResourceTypes();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.values && message.values.length))
                                    message.values = [];
                                message.values.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a ResourceTypes message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.GetAccountResponse.ResourceTypes
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.GetAccountResponse.ResourceTypes} ResourceTypes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceTypes.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a ResourceTypes message.
                 * @function verify
                 * @memberof teads.api.GetAccountResponse.ResourceTypes
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceTypes.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.values != null && message.hasOwnProperty("values")) {
                        if (!Array.isArray(message.values))
                            return "values: array expected";
                        for (var i = 0; i < message.values.length; ++i)
                            if (!$util.isString(message.values[i]))
                                return "values: string[] expected";
                    }
                    return null;
                };

                /**
                 * Creates a ResourceTypes message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.GetAccountResponse.ResourceTypes
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.GetAccountResponse.ResourceTypes} ResourceTypes
                 */
                ResourceTypes.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.GetAccountResponse.ResourceTypes)
                        return object;
                    var message = new $root.teads.api.GetAccountResponse.ResourceTypes();
                    if (object.values) {
                        if (!Array.isArray(object.values))
                            throw TypeError(".teads.api.GetAccountResponse.ResourceTypes.values: array expected");
                        message.values = [];
                        for (var i = 0; i < object.values.length; ++i)
                            message.values[i] = String(object.values[i]);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a ResourceTypes message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.GetAccountResponse.ResourceTypes
                 * @static
                 * @param {teads.api.GetAccountResponse.ResourceTypes} message ResourceTypes
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceTypes.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.values = [];
                    if (message.values && message.values.length) {
                        object.values = [];
                        for (var j = 0; j < message.values.length; ++j)
                            object.values[j] = message.values[j];
                    }
                    return object;
                };

                /**
                 * Converts this ResourceTypes to JSON.
                 * @function toJSON
                 * @memberof teads.api.GetAccountResponse.ResourceTypes
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceTypes.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for ResourceTypes
                 * @function getTypeUrl
                 * @memberof teads.api.GetAccountResponse.ResourceTypes
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceTypes.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.GetAccountResponse.ResourceTypes";
                };

                return ResourceTypes;
            })();

            return GetAccountResponse;
        })();

        api.GetAdvertiserFirstPartySegmentsRequest = (function() {

            /**
             * Properties of a GetAdvertiserFirstPartySegmentsRequest.
             * @memberof teads.api
             * @interface IGetAdvertiserFirstPartySegmentsRequest
             * @property {teads.api.ISecurityContext} securityContext GetAdvertiserFirstPartySegmentsRequest securityContext
             * @property {Array.<teads.api.GetAdvertiserFirstPartySegmentsRequest.IMapping>|null} [mappings] GetAdvertiserFirstPartySegmentsRequest mappings
             */

            /**
             * Constructs a new GetAdvertiserFirstPartySegmentsRequest.
             * @memberof teads.api
             * @classdesc Represents a GetAdvertiserFirstPartySegmentsRequest.
             * @implements IGetAdvertiserFirstPartySegmentsRequest
             * @constructor
             * @param {teads.api.IGetAdvertiserFirstPartySegmentsRequest=} [properties] Properties to set
             */
            function GetAdvertiserFirstPartySegmentsRequest(properties) {
                this.mappings = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GetAdvertiserFirstPartySegmentsRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.GetAdvertiserFirstPartySegmentsRequest
             * @instance
             */
            GetAdvertiserFirstPartySegmentsRequest.prototype.securityContext = null;

            /**
             * GetAdvertiserFirstPartySegmentsRequest mappings.
             * @member {Array.<teads.api.GetAdvertiserFirstPartySegmentsRequest.IMapping>} mappings
             * @memberof teads.api.GetAdvertiserFirstPartySegmentsRequest
             * @instance
             */
            GetAdvertiserFirstPartySegmentsRequest.prototype.mappings = $util.emptyArray;

            /**
             * Creates a new GetAdvertiserFirstPartySegmentsRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.GetAdvertiserFirstPartySegmentsRequest
             * @static
             * @param {teads.api.IGetAdvertiserFirstPartySegmentsRequest=} [properties] Properties to set
             * @returns {teads.api.GetAdvertiserFirstPartySegmentsRequest} GetAdvertiserFirstPartySegmentsRequest instance
             */
            GetAdvertiserFirstPartySegmentsRequest.create = function create(properties) {
                return new GetAdvertiserFirstPartySegmentsRequest(properties);
            };

            /**
             * Encodes the specified GetAdvertiserFirstPartySegmentsRequest message. Does not implicitly {@link teads.api.GetAdvertiserFirstPartySegmentsRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.GetAdvertiserFirstPartySegmentsRequest
             * @static
             * @param {teads.api.IGetAdvertiserFirstPartySegmentsRequest} message GetAdvertiserFirstPartySegmentsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetAdvertiserFirstPartySegmentsRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.mappings != null && message.mappings.length)
                    for (var i = 0; i < message.mappings.length; ++i)
                        $root.teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping.encode(message.mappings[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified GetAdvertiserFirstPartySegmentsRequest message, length delimited. Does not implicitly {@link teads.api.GetAdvertiserFirstPartySegmentsRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.GetAdvertiserFirstPartySegmentsRequest
             * @static
             * @param {teads.api.IGetAdvertiserFirstPartySegmentsRequest} message GetAdvertiserFirstPartySegmentsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetAdvertiserFirstPartySegmentsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GetAdvertiserFirstPartySegmentsRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.GetAdvertiserFirstPartySegmentsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.GetAdvertiserFirstPartySegmentsRequest} GetAdvertiserFirstPartySegmentsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetAdvertiserFirstPartySegmentsRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.GetAdvertiserFirstPartySegmentsRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            if (!(message.mappings && message.mappings.length))
                                message.mappings = [];
                            message.mappings.push($root.teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                return message;
            };

            /**
             * Decodes a GetAdvertiserFirstPartySegmentsRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.GetAdvertiserFirstPartySegmentsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.GetAdvertiserFirstPartySegmentsRequest} GetAdvertiserFirstPartySegmentsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetAdvertiserFirstPartySegmentsRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GetAdvertiserFirstPartySegmentsRequest message.
             * @function verify
             * @memberof teads.api.GetAdvertiserFirstPartySegmentsRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GetAdvertiserFirstPartySegmentsRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (message.mappings != null && message.hasOwnProperty("mappings")) {
                    if (!Array.isArray(message.mappings))
                        return "mappings: array expected";
                    for (var i = 0; i < message.mappings.length; ++i) {
                        var error = $root.teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping.verify(message.mappings[i]);
                        if (error)
                            return "mappings." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a GetAdvertiserFirstPartySegmentsRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.GetAdvertiserFirstPartySegmentsRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.GetAdvertiserFirstPartySegmentsRequest} GetAdvertiserFirstPartySegmentsRequest
             */
            GetAdvertiserFirstPartySegmentsRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.GetAdvertiserFirstPartySegmentsRequest)
                    return object;
                var message = new $root.teads.api.GetAdvertiserFirstPartySegmentsRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.GetAdvertiserFirstPartySegmentsRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.mappings) {
                    if (!Array.isArray(object.mappings))
                        throw TypeError(".teads.api.GetAdvertiserFirstPartySegmentsRequest.mappings: array expected");
                    message.mappings = [];
                    for (var i = 0; i < object.mappings.length; ++i) {
                        if (typeof object.mappings[i] !== "object")
                            throw TypeError(".teads.api.GetAdvertiserFirstPartySegmentsRequest.mappings: object expected");
                        message.mappings[i] = $root.teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping.fromObject(object.mappings[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a GetAdvertiserFirstPartySegmentsRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.GetAdvertiserFirstPartySegmentsRequest
             * @static
             * @param {teads.api.GetAdvertiserFirstPartySegmentsRequest} message GetAdvertiserFirstPartySegmentsRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GetAdvertiserFirstPartySegmentsRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.mappings = [];
                if (options.defaults)
                    object.securityContext = null;
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.mappings && message.mappings.length) {
                    object.mappings = [];
                    for (var j = 0; j < message.mappings.length; ++j)
                        object.mappings[j] = $root.teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping.toObject(message.mappings[j], options);
                }
                return object;
            };

            /**
             * Converts this GetAdvertiserFirstPartySegmentsRequest to JSON.
             * @function toJSON
             * @memberof teads.api.GetAdvertiserFirstPartySegmentsRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GetAdvertiserFirstPartySegmentsRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GetAdvertiserFirstPartySegmentsRequest
             * @function getTypeUrl
             * @memberof teads.api.GetAdvertiserFirstPartySegmentsRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GetAdvertiserFirstPartySegmentsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.GetAdvertiserFirstPartySegmentsRequest";
            };

            GetAdvertiserFirstPartySegmentsRequest.Mapping = (function() {

                /**
                 * Properties of a Mapping.
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsRequest
                 * @interface IMapping
                 * @property {string} segmentProvider Mapping segmentProvider
                 * @property {Array.<string>|null} [providerSegmentIds] Mapping providerSegmentIds
                 */

                /**
                 * Constructs a new Mapping.
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsRequest
                 * @classdesc Represents a Mapping.
                 * @implements IMapping
                 * @constructor
                 * @param {teads.api.GetAdvertiserFirstPartySegmentsRequest.IMapping=} [properties] Properties to set
                 */
                function Mapping(properties) {
                    this.providerSegmentIds = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Mapping segmentProvider.
                 * @member {string} segmentProvider
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping
                 * @instance
                 */
                Mapping.prototype.segmentProvider = "";

                /**
                 * Mapping providerSegmentIds.
                 * @member {Array.<string>} providerSegmentIds
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping
                 * @instance
                 */
                Mapping.prototype.providerSegmentIds = $util.emptyArray;

                /**
                 * Creates a new Mapping instance using the specified properties.
                 * @function create
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping
                 * @static
                 * @param {teads.api.GetAdvertiserFirstPartySegmentsRequest.IMapping=} [properties] Properties to set
                 * @returns {teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping} Mapping instance
                 */
                Mapping.create = function create(properties) {
                    return new Mapping(properties);
                };

                /**
                 * Encodes the specified Mapping message. Does not implicitly {@link teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping
                 * @static
                 * @param {teads.api.GetAdvertiserFirstPartySegmentsRequest.IMapping} message Mapping message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Mapping.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.segmentProvider);
                    if (message.providerSegmentIds != null && message.providerSegmentIds.length)
                        for (var i = 0; i < message.providerSegmentIds.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.providerSegmentIds[i]);
                    return writer;
                };

                /**
                 * Encodes the specified Mapping message, length delimited. Does not implicitly {@link teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping
                 * @static
                 * @param {teads.api.GetAdvertiserFirstPartySegmentsRequest.IMapping} message Mapping message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Mapping.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a Mapping message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping} Mapping
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Mapping.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.segmentProvider = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.providerSegmentIds && message.providerSegmentIds.length))
                                    message.providerSegmentIds = [];
                                message.providerSegmentIds.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("segmentProvider"))
                        throw $util.ProtocolError("missing required 'segmentProvider'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a Mapping message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping} Mapping
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Mapping.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a Mapping message.
                 * @function verify
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Mapping.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isString(message.segmentProvider))
                        return "segmentProvider: string expected";
                    if (message.providerSegmentIds != null && message.hasOwnProperty("providerSegmentIds")) {
                        if (!Array.isArray(message.providerSegmentIds))
                            return "providerSegmentIds: array expected";
                        for (var i = 0; i < message.providerSegmentIds.length; ++i)
                            if (!$util.isString(message.providerSegmentIds[i]))
                                return "providerSegmentIds: string[] expected";
                    }
                    return null;
                };

                /**
                 * Creates a Mapping message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping} Mapping
                 */
                Mapping.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping)
                        return object;
                    var message = new $root.teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping();
                    if (object.segmentProvider != null)
                        message.segmentProvider = String(object.segmentProvider);
                    if (object.providerSegmentIds) {
                        if (!Array.isArray(object.providerSegmentIds))
                            throw TypeError(".teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping.providerSegmentIds: array expected");
                        message.providerSegmentIds = [];
                        for (var i = 0; i < object.providerSegmentIds.length; ++i)
                            message.providerSegmentIds[i] = String(object.providerSegmentIds[i]);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a Mapping message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping
                 * @static
                 * @param {teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping} message Mapping
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Mapping.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.providerSegmentIds = [];
                    if (options.defaults)
                        object.segmentProvider = "";
                    if (message.segmentProvider != null && message.hasOwnProperty("segmentProvider"))
                        object.segmentProvider = message.segmentProvider;
                    if (message.providerSegmentIds && message.providerSegmentIds.length) {
                        object.providerSegmentIds = [];
                        for (var j = 0; j < message.providerSegmentIds.length; ++j)
                            object.providerSegmentIds[j] = message.providerSegmentIds[j];
                    }
                    return object;
                };

                /**
                 * Converts this Mapping to JSON.
                 * @function toJSON
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Mapping.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for Mapping
                 * @function getTypeUrl
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Mapping.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.GetAdvertiserFirstPartySegmentsRequest.Mapping";
                };

                return Mapping;
            })();

            return GetAdvertiserFirstPartySegmentsRequest;
        })();

        api.GetAdvertiserFirstPartySegmentsResponse = (function() {

            /**
             * Properties of a GetAdvertiserFirstPartySegmentsResponse.
             * @memberof teads.api
             * @interface IGetAdvertiserFirstPartySegmentsResponse
             * @property {Array.<teads.api.GetAdvertiserFirstPartySegmentsResponse.IAdvertiserFirstPartySegment>|null} [segments] GetAdvertiserFirstPartySegmentsResponse segments
             */

            /**
             * Constructs a new GetAdvertiserFirstPartySegmentsResponse.
             * @memberof teads.api
             * @classdesc Represents a GetAdvertiserFirstPartySegmentsResponse.
             * @implements IGetAdvertiserFirstPartySegmentsResponse
             * @constructor
             * @param {teads.api.IGetAdvertiserFirstPartySegmentsResponse=} [properties] Properties to set
             */
            function GetAdvertiserFirstPartySegmentsResponse(properties) {
                this.segments = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GetAdvertiserFirstPartySegmentsResponse segments.
             * @member {Array.<teads.api.GetAdvertiserFirstPartySegmentsResponse.IAdvertiserFirstPartySegment>} segments
             * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse
             * @instance
             */
            GetAdvertiserFirstPartySegmentsResponse.prototype.segments = $util.emptyArray;

            /**
             * Creates a new GetAdvertiserFirstPartySegmentsResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse
             * @static
             * @param {teads.api.IGetAdvertiserFirstPartySegmentsResponse=} [properties] Properties to set
             * @returns {teads.api.GetAdvertiserFirstPartySegmentsResponse} GetAdvertiserFirstPartySegmentsResponse instance
             */
            GetAdvertiserFirstPartySegmentsResponse.create = function create(properties) {
                return new GetAdvertiserFirstPartySegmentsResponse(properties);
            };

            /**
             * Encodes the specified GetAdvertiserFirstPartySegmentsResponse message. Does not implicitly {@link teads.api.GetAdvertiserFirstPartySegmentsResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse
             * @static
             * @param {teads.api.IGetAdvertiserFirstPartySegmentsResponse} message GetAdvertiserFirstPartySegmentsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetAdvertiserFirstPartySegmentsResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.segments != null && message.segments.length)
                    for (var i = 0; i < message.segments.length; ++i)
                        $root.teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment.encode(message.segments[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified GetAdvertiserFirstPartySegmentsResponse message, length delimited. Does not implicitly {@link teads.api.GetAdvertiserFirstPartySegmentsResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse
             * @static
             * @param {teads.api.IGetAdvertiserFirstPartySegmentsResponse} message GetAdvertiserFirstPartySegmentsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetAdvertiserFirstPartySegmentsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GetAdvertiserFirstPartySegmentsResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.GetAdvertiserFirstPartySegmentsResponse} GetAdvertiserFirstPartySegmentsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetAdvertiserFirstPartySegmentsResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.GetAdvertiserFirstPartySegmentsResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            if (!(message.segments && message.segments.length))
                                message.segments = [];
                            message.segments.push($root.teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a GetAdvertiserFirstPartySegmentsResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.GetAdvertiserFirstPartySegmentsResponse} GetAdvertiserFirstPartySegmentsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetAdvertiserFirstPartySegmentsResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GetAdvertiserFirstPartySegmentsResponse message.
             * @function verify
             * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GetAdvertiserFirstPartySegmentsResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.segments != null && message.hasOwnProperty("segments")) {
                    if (!Array.isArray(message.segments))
                        return "segments: array expected";
                    for (var i = 0; i < message.segments.length; ++i) {
                        var error = $root.teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment.verify(message.segments[i]);
                        if (error)
                            return "segments." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a GetAdvertiserFirstPartySegmentsResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.GetAdvertiserFirstPartySegmentsResponse} GetAdvertiserFirstPartySegmentsResponse
             */
            GetAdvertiserFirstPartySegmentsResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.GetAdvertiserFirstPartySegmentsResponse)
                    return object;
                var message = new $root.teads.api.GetAdvertiserFirstPartySegmentsResponse();
                if (object.segments) {
                    if (!Array.isArray(object.segments))
                        throw TypeError(".teads.api.GetAdvertiserFirstPartySegmentsResponse.segments: array expected");
                    message.segments = [];
                    for (var i = 0; i < object.segments.length; ++i) {
                        if (typeof object.segments[i] !== "object")
                            throw TypeError(".teads.api.GetAdvertiserFirstPartySegmentsResponse.segments: object expected");
                        message.segments[i] = $root.teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment.fromObject(object.segments[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a GetAdvertiserFirstPartySegmentsResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse
             * @static
             * @param {teads.api.GetAdvertiserFirstPartySegmentsResponse} message GetAdvertiserFirstPartySegmentsResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GetAdvertiserFirstPartySegmentsResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.segments = [];
                if (message.segments && message.segments.length) {
                    object.segments = [];
                    for (var j = 0; j < message.segments.length; ++j)
                        object.segments[j] = $root.teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment.toObject(message.segments[j], options);
                }
                return object;
            };

            /**
             * Converts this GetAdvertiserFirstPartySegmentsResponse to JSON.
             * @function toJSON
             * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GetAdvertiserFirstPartySegmentsResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GetAdvertiserFirstPartySegmentsResponse
             * @function getTypeUrl
             * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GetAdvertiserFirstPartySegmentsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.GetAdvertiserFirstPartySegmentsResponse";
            };

            GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment = (function() {

                /**
                 * Properties of an AdvertiserFirstPartySegment.
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse
                 * @interface IAdvertiserFirstPartySegment
                 * @property {number} providerSegmentId AdvertiserFirstPartySegment providerSegmentId
                 * @property {string} segmentLabel AdvertiserFirstPartySegment segmentLabel
                 * @property {string} segmentProvider AdvertiserFirstPartySegment segmentProvider
                 * @property {number|null} [advertiserId] AdvertiserFirstPartySegment advertiserId
                 * @property {string|null} [advertiserName] AdvertiserFirstPartySegment advertiserName
                 * @property {boolean|null} [isCtvUsable] AdvertiserFirstPartySegment isCtvUsable
                 */

                /**
                 * Constructs a new AdvertiserFirstPartySegment.
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse
                 * @classdesc Represents an AdvertiserFirstPartySegment.
                 * @implements IAdvertiserFirstPartySegment
                 * @constructor
                 * @param {teads.api.GetAdvertiserFirstPartySegmentsResponse.IAdvertiserFirstPartySegment=} [properties] Properties to set
                 */
                function AdvertiserFirstPartySegment(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * AdvertiserFirstPartySegment providerSegmentId.
                 * @member {number} providerSegmentId
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @instance
                 */
                AdvertiserFirstPartySegment.prototype.providerSegmentId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * AdvertiserFirstPartySegment segmentLabel.
                 * @member {string} segmentLabel
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @instance
                 */
                AdvertiserFirstPartySegment.prototype.segmentLabel = "";

                /**
                 * AdvertiserFirstPartySegment segmentProvider.
                 * @member {string} segmentProvider
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @instance
                 */
                AdvertiserFirstPartySegment.prototype.segmentProvider = "";

                /**
                 * AdvertiserFirstPartySegment advertiserId.
                 * @member {number} advertiserId
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @instance
                 */
                AdvertiserFirstPartySegment.prototype.advertiserId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * AdvertiserFirstPartySegment advertiserName.
                 * @member {string} advertiserName
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @instance
                 */
                AdvertiserFirstPartySegment.prototype.advertiserName = "";

                /**
                 * AdvertiserFirstPartySegment isCtvUsable.
                 * @member {boolean} isCtvUsable
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @instance
                 */
                AdvertiserFirstPartySegment.prototype.isCtvUsable = false;

                /**
                 * Creates a new AdvertiserFirstPartySegment instance using the specified properties.
                 * @function create
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @static
                 * @param {teads.api.GetAdvertiserFirstPartySegmentsResponse.IAdvertiserFirstPartySegment=} [properties] Properties to set
                 * @returns {teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment} AdvertiserFirstPartySegment instance
                 */
                AdvertiserFirstPartySegment.create = function create(properties) {
                    return new AdvertiserFirstPartySegment(properties);
                };

                /**
                 * Encodes the specified AdvertiserFirstPartySegment message. Does not implicitly {@link teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @static
                 * @param {teads.api.GetAdvertiserFirstPartySegmentsResponse.IAdvertiserFirstPartySegment} message AdvertiserFirstPartySegment message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                AdvertiserFirstPartySegment.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.providerSegmentId);
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.segmentLabel);
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.segmentProvider);
                    if (message.advertiserId != null && Object.hasOwnProperty.call(message, "advertiserId"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int64(message.advertiserId);
                    if (message.advertiserName != null && Object.hasOwnProperty.call(message, "advertiserName"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.advertiserName);
                    if (message.isCtvUsable != null && Object.hasOwnProperty.call(message, "isCtvUsable"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.isCtvUsable);
                    return writer;
                };

                /**
                 * Encodes the specified AdvertiserFirstPartySegment message, length delimited. Does not implicitly {@link teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @static
                 * @param {teads.api.GetAdvertiserFirstPartySegmentsResponse.IAdvertiserFirstPartySegment} message AdvertiserFirstPartySegment message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                AdvertiserFirstPartySegment.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes an AdvertiserFirstPartySegment message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment} AdvertiserFirstPartySegment
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                AdvertiserFirstPartySegment.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.providerSegmentId = reader.int64();
                                break;
                            }
                        case 2: {
                                message.segmentLabel = reader.string();
                                break;
                            }
                        case 3: {
                                message.segmentProvider = reader.string();
                                break;
                            }
                        case 4: {
                                message.advertiserId = reader.int64();
                                break;
                            }
                        case 5: {
                                message.advertiserName = reader.string();
                                break;
                            }
                        case 6: {
                                message.isCtvUsable = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("providerSegmentId"))
                        throw $util.ProtocolError("missing required 'providerSegmentId'", { instance: message });
                    if (!message.hasOwnProperty("segmentLabel"))
                        throw $util.ProtocolError("missing required 'segmentLabel'", { instance: message });
                    if (!message.hasOwnProperty("segmentProvider"))
                        throw $util.ProtocolError("missing required 'segmentProvider'", { instance: message });
                    return message;
                };

                /**
                 * Decodes an AdvertiserFirstPartySegment message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment} AdvertiserFirstPartySegment
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                AdvertiserFirstPartySegment.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies an AdvertiserFirstPartySegment message.
                 * @function verify
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                AdvertiserFirstPartySegment.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.providerSegmentId) && !(message.providerSegmentId && $util.isInteger(message.providerSegmentId.low) && $util.isInteger(message.providerSegmentId.high)))
                        return "providerSegmentId: integer|Long expected";
                    if (!$util.isString(message.segmentLabel))
                        return "segmentLabel: string expected";
                    if (!$util.isString(message.segmentProvider))
                        return "segmentProvider: string expected";
                    if (message.advertiserId != null && message.hasOwnProperty("advertiserId"))
                        if (!$util.isInteger(message.advertiserId) && !(message.advertiserId && $util.isInteger(message.advertiserId.low) && $util.isInteger(message.advertiserId.high)))
                            return "advertiserId: integer|Long expected";
                    if (message.advertiserName != null && message.hasOwnProperty("advertiserName"))
                        if (!$util.isString(message.advertiserName))
                            return "advertiserName: string expected";
                    if (message.isCtvUsable != null && message.hasOwnProperty("isCtvUsable"))
                        if (typeof message.isCtvUsable !== "boolean")
                            return "isCtvUsable: boolean expected";
                    return null;
                };

                /**
                 * Creates an AdvertiserFirstPartySegment message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment} AdvertiserFirstPartySegment
                 */
                AdvertiserFirstPartySegment.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment)
                        return object;
                    var message = new $root.teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment();
                    if (object.providerSegmentId != null)
                        if ($util.Long)
                            (message.providerSegmentId = $util.Long.fromValue(object.providerSegmentId)).unsigned = false;
                        else if (typeof object.providerSegmentId === "string")
                            message.providerSegmentId = parseInt(object.providerSegmentId, 10);
                        else if (typeof object.providerSegmentId === "number")
                            message.providerSegmentId = object.providerSegmentId;
                        else if (typeof object.providerSegmentId === "object")
                            message.providerSegmentId = new $util.LongBits(object.providerSegmentId.low >>> 0, object.providerSegmentId.high >>> 0).toNumber();
                    if (object.segmentLabel != null)
                        message.segmentLabel = String(object.segmentLabel);
                    if (object.segmentProvider != null)
                        message.segmentProvider = String(object.segmentProvider);
                    if (object.advertiserId != null)
                        if ($util.Long)
                            (message.advertiserId = $util.Long.fromValue(object.advertiserId)).unsigned = false;
                        else if (typeof object.advertiserId === "string")
                            message.advertiserId = parseInt(object.advertiserId, 10);
                        else if (typeof object.advertiserId === "number")
                            message.advertiserId = object.advertiserId;
                        else if (typeof object.advertiserId === "object")
                            message.advertiserId = new $util.LongBits(object.advertiserId.low >>> 0, object.advertiserId.high >>> 0).toNumber();
                    if (object.advertiserName != null)
                        message.advertiserName = String(object.advertiserName);
                    if (object.isCtvUsable != null)
                        message.isCtvUsable = Boolean(object.isCtvUsable);
                    return message;
                };

                /**
                 * Creates a plain object from an AdvertiserFirstPartySegment message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @static
                 * @param {teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment} message AdvertiserFirstPartySegment
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                AdvertiserFirstPartySegment.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.providerSegmentId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.providerSegmentId = options.longs === String ? "0" : 0;
                        object.segmentLabel = "";
                        object.segmentProvider = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.advertiserId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.advertiserId = options.longs === String ? "0" : 0;
                        object.advertiserName = "";
                        object.isCtvUsable = false;
                    }
                    if (message.providerSegmentId != null && message.hasOwnProperty("providerSegmentId"))
                        if (typeof message.providerSegmentId === "number")
                            object.providerSegmentId = options.longs === String ? String(message.providerSegmentId) : message.providerSegmentId;
                        else
                            object.providerSegmentId = options.longs === String ? $util.Long.prototype.toString.call(message.providerSegmentId) : options.longs === Number ? new $util.LongBits(message.providerSegmentId.low >>> 0, message.providerSegmentId.high >>> 0).toNumber() : message.providerSegmentId;
                    if (message.segmentLabel != null && message.hasOwnProperty("segmentLabel"))
                        object.segmentLabel = message.segmentLabel;
                    if (message.segmentProvider != null && message.hasOwnProperty("segmentProvider"))
                        object.segmentProvider = message.segmentProvider;
                    if (message.advertiserId != null && message.hasOwnProperty("advertiserId"))
                        if (typeof message.advertiserId === "number")
                            object.advertiserId = options.longs === String ? String(message.advertiserId) : message.advertiserId;
                        else
                            object.advertiserId = options.longs === String ? $util.Long.prototype.toString.call(message.advertiserId) : options.longs === Number ? new $util.LongBits(message.advertiserId.low >>> 0, message.advertiserId.high >>> 0).toNumber() : message.advertiserId;
                    if (message.advertiserName != null && message.hasOwnProperty("advertiserName"))
                        object.advertiserName = message.advertiserName;
                    if (message.isCtvUsable != null && message.hasOwnProperty("isCtvUsable"))
                        object.isCtvUsable = message.isCtvUsable;
                    return object;
                };

                /**
                 * Converts this AdvertiserFirstPartySegment to JSON.
                 * @function toJSON
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                AdvertiserFirstPartySegment.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for AdvertiserFirstPartySegment
                 * @function getTypeUrl
                 * @memberof teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                AdvertiserFirstPartySegment.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.GetAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment";
                };

                return AdvertiserFirstPartySegment;
            })();

            return GetAdvertiserFirstPartySegmentsResponse;
        })();

        api.GetAllCustomTargetingReasonsRequest = (function() {

            /**
             * Properties of a GetAllCustomTargetingReasonsRequest.
             * @memberof teads.api
             * @interface IGetAllCustomTargetingReasonsRequest
             * @property {teads.api.ISecurityContext} securityContext GetAllCustomTargetingReasonsRequest securityContext
             * @property {boolean|null} [activeOnly] GetAllCustomTargetingReasonsRequest activeOnly
             */

            /**
             * Constructs a new GetAllCustomTargetingReasonsRequest.
             * @memberof teads.api
             * @classdesc Represents a GetAllCustomTargetingReasonsRequest.
             * @implements IGetAllCustomTargetingReasonsRequest
             * @constructor
             * @param {teads.api.IGetAllCustomTargetingReasonsRequest=} [properties] Properties to set
             */
            function GetAllCustomTargetingReasonsRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GetAllCustomTargetingReasonsRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.GetAllCustomTargetingReasonsRequest
             * @instance
             */
            GetAllCustomTargetingReasonsRequest.prototype.securityContext = null;

            /**
             * GetAllCustomTargetingReasonsRequest activeOnly.
             * @member {boolean} activeOnly
             * @memberof teads.api.GetAllCustomTargetingReasonsRequest
             * @instance
             */
            GetAllCustomTargetingReasonsRequest.prototype.activeOnly = true;

            /**
             * Creates a new GetAllCustomTargetingReasonsRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.GetAllCustomTargetingReasonsRequest
             * @static
             * @param {teads.api.IGetAllCustomTargetingReasonsRequest=} [properties] Properties to set
             * @returns {teads.api.GetAllCustomTargetingReasonsRequest} GetAllCustomTargetingReasonsRequest instance
             */
            GetAllCustomTargetingReasonsRequest.create = function create(properties) {
                return new GetAllCustomTargetingReasonsRequest(properties);
            };

            /**
             * Encodes the specified GetAllCustomTargetingReasonsRequest message. Does not implicitly {@link teads.api.GetAllCustomTargetingReasonsRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.GetAllCustomTargetingReasonsRequest
             * @static
             * @param {teads.api.IGetAllCustomTargetingReasonsRequest} message GetAllCustomTargetingReasonsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetAllCustomTargetingReasonsRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.activeOnly != null && Object.hasOwnProperty.call(message, "activeOnly"))
                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.activeOnly);
                return writer;
            };

            /**
             * Encodes the specified GetAllCustomTargetingReasonsRequest message, length delimited. Does not implicitly {@link teads.api.GetAllCustomTargetingReasonsRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.GetAllCustomTargetingReasonsRequest
             * @static
             * @param {teads.api.IGetAllCustomTargetingReasonsRequest} message GetAllCustomTargetingReasonsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetAllCustomTargetingReasonsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GetAllCustomTargetingReasonsRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.GetAllCustomTargetingReasonsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.GetAllCustomTargetingReasonsRequest} GetAllCustomTargetingReasonsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetAllCustomTargetingReasonsRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.GetAllCustomTargetingReasonsRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.activeOnly = reader.bool();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                return message;
            };

            /**
             * Decodes a GetAllCustomTargetingReasonsRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.GetAllCustomTargetingReasonsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.GetAllCustomTargetingReasonsRequest} GetAllCustomTargetingReasonsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetAllCustomTargetingReasonsRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GetAllCustomTargetingReasonsRequest message.
             * @function verify
             * @memberof teads.api.GetAllCustomTargetingReasonsRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GetAllCustomTargetingReasonsRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (message.activeOnly != null && message.hasOwnProperty("activeOnly"))
                    if (typeof message.activeOnly !== "boolean")
                        return "activeOnly: boolean expected";
                return null;
            };

            /**
             * Creates a GetAllCustomTargetingReasonsRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.GetAllCustomTargetingReasonsRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.GetAllCustomTargetingReasonsRequest} GetAllCustomTargetingReasonsRequest
             */
            GetAllCustomTargetingReasonsRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.GetAllCustomTargetingReasonsRequest)
                    return object;
                var message = new $root.teads.api.GetAllCustomTargetingReasonsRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.GetAllCustomTargetingReasonsRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.activeOnly != null)
                    message.activeOnly = Boolean(object.activeOnly);
                return message;
            };

            /**
             * Creates a plain object from a GetAllCustomTargetingReasonsRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.GetAllCustomTargetingReasonsRequest
             * @static
             * @param {teads.api.GetAllCustomTargetingReasonsRequest} message GetAllCustomTargetingReasonsRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GetAllCustomTargetingReasonsRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    object.activeOnly = true;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.activeOnly != null && message.hasOwnProperty("activeOnly"))
                    object.activeOnly = message.activeOnly;
                return object;
            };

            /**
             * Converts this GetAllCustomTargetingReasonsRequest to JSON.
             * @function toJSON
             * @memberof teads.api.GetAllCustomTargetingReasonsRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GetAllCustomTargetingReasonsRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GetAllCustomTargetingReasonsRequest
             * @function getTypeUrl
             * @memberof teads.api.GetAllCustomTargetingReasonsRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GetAllCustomTargetingReasonsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.GetAllCustomTargetingReasonsRequest";
            };

            return GetAllCustomTargetingReasonsRequest;
        })();

        api.GetAllCustomTargetingReasonsResponse = (function() {

            /**
             * Properties of a GetAllCustomTargetingReasonsResponse.
             * @memberof teads.api
             * @interface IGetAllCustomTargetingReasonsResponse
             * @property {Array.<teads.api.GetAllCustomTargetingReasonsResponse.IReason>|null} [reasons] GetAllCustomTargetingReasonsResponse reasons
             */

            /**
             * Constructs a new GetAllCustomTargetingReasonsResponse.
             * @memberof teads.api
             * @classdesc Represents a GetAllCustomTargetingReasonsResponse.
             * @implements IGetAllCustomTargetingReasonsResponse
             * @constructor
             * @param {teads.api.IGetAllCustomTargetingReasonsResponse=} [properties] Properties to set
             */
            function GetAllCustomTargetingReasonsResponse(properties) {
                this.reasons = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GetAllCustomTargetingReasonsResponse reasons.
             * @member {Array.<teads.api.GetAllCustomTargetingReasonsResponse.IReason>} reasons
             * @memberof teads.api.GetAllCustomTargetingReasonsResponse
             * @instance
             */
            GetAllCustomTargetingReasonsResponse.prototype.reasons = $util.emptyArray;

            /**
             * Creates a new GetAllCustomTargetingReasonsResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.GetAllCustomTargetingReasonsResponse
             * @static
             * @param {teads.api.IGetAllCustomTargetingReasonsResponse=} [properties] Properties to set
             * @returns {teads.api.GetAllCustomTargetingReasonsResponse} GetAllCustomTargetingReasonsResponse instance
             */
            GetAllCustomTargetingReasonsResponse.create = function create(properties) {
                return new GetAllCustomTargetingReasonsResponse(properties);
            };

            /**
             * Encodes the specified GetAllCustomTargetingReasonsResponse message. Does not implicitly {@link teads.api.GetAllCustomTargetingReasonsResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.GetAllCustomTargetingReasonsResponse
             * @static
             * @param {teads.api.IGetAllCustomTargetingReasonsResponse} message GetAllCustomTargetingReasonsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetAllCustomTargetingReasonsResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.reasons != null && message.reasons.length)
                    for (var i = 0; i < message.reasons.length; ++i)
                        $root.teads.api.GetAllCustomTargetingReasonsResponse.Reason.encode(message.reasons[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified GetAllCustomTargetingReasonsResponse message, length delimited. Does not implicitly {@link teads.api.GetAllCustomTargetingReasonsResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.GetAllCustomTargetingReasonsResponse
             * @static
             * @param {teads.api.IGetAllCustomTargetingReasonsResponse} message GetAllCustomTargetingReasonsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetAllCustomTargetingReasonsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GetAllCustomTargetingReasonsResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.GetAllCustomTargetingReasonsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.GetAllCustomTargetingReasonsResponse} GetAllCustomTargetingReasonsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetAllCustomTargetingReasonsResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.GetAllCustomTargetingReasonsResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            if (!(message.reasons && message.reasons.length))
                                message.reasons = [];
                            message.reasons.push($root.teads.api.GetAllCustomTargetingReasonsResponse.Reason.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a GetAllCustomTargetingReasonsResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.GetAllCustomTargetingReasonsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.GetAllCustomTargetingReasonsResponse} GetAllCustomTargetingReasonsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetAllCustomTargetingReasonsResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GetAllCustomTargetingReasonsResponse message.
             * @function verify
             * @memberof teads.api.GetAllCustomTargetingReasonsResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GetAllCustomTargetingReasonsResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.reasons != null && message.hasOwnProperty("reasons")) {
                    if (!Array.isArray(message.reasons))
                        return "reasons: array expected";
                    for (var i = 0; i < message.reasons.length; ++i) {
                        var error = $root.teads.api.GetAllCustomTargetingReasonsResponse.Reason.verify(message.reasons[i]);
                        if (error)
                            return "reasons." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a GetAllCustomTargetingReasonsResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.GetAllCustomTargetingReasonsResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.GetAllCustomTargetingReasonsResponse} GetAllCustomTargetingReasonsResponse
             */
            GetAllCustomTargetingReasonsResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.GetAllCustomTargetingReasonsResponse)
                    return object;
                var message = new $root.teads.api.GetAllCustomTargetingReasonsResponse();
                if (object.reasons) {
                    if (!Array.isArray(object.reasons))
                        throw TypeError(".teads.api.GetAllCustomTargetingReasonsResponse.reasons: array expected");
                    message.reasons = [];
                    for (var i = 0; i < object.reasons.length; ++i) {
                        if (typeof object.reasons[i] !== "object")
                            throw TypeError(".teads.api.GetAllCustomTargetingReasonsResponse.reasons: object expected");
                        message.reasons[i] = $root.teads.api.GetAllCustomTargetingReasonsResponse.Reason.fromObject(object.reasons[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a GetAllCustomTargetingReasonsResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.GetAllCustomTargetingReasonsResponse
             * @static
             * @param {teads.api.GetAllCustomTargetingReasonsResponse} message GetAllCustomTargetingReasonsResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GetAllCustomTargetingReasonsResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.reasons = [];
                if (message.reasons && message.reasons.length) {
                    object.reasons = [];
                    for (var j = 0; j < message.reasons.length; ++j)
                        object.reasons[j] = $root.teads.api.GetAllCustomTargetingReasonsResponse.Reason.toObject(message.reasons[j], options);
                }
                return object;
            };

            /**
             * Converts this GetAllCustomTargetingReasonsResponse to JSON.
             * @function toJSON
             * @memberof teads.api.GetAllCustomTargetingReasonsResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GetAllCustomTargetingReasonsResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GetAllCustomTargetingReasonsResponse
             * @function getTypeUrl
             * @memberof teads.api.GetAllCustomTargetingReasonsResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GetAllCustomTargetingReasonsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.GetAllCustomTargetingReasonsResponse";
            };

            GetAllCustomTargetingReasonsResponse.Reason = (function() {

                /**
                 * Properties of a Reason.
                 * @memberof teads.api.GetAllCustomTargetingReasonsResponse
                 * @interface IReason
                 * @property {number} id Reason id
                 * @property {string} label Reason label
                 */

                /**
                 * Constructs a new Reason.
                 * @memberof teads.api.GetAllCustomTargetingReasonsResponse
                 * @classdesc Represents a Reason.
                 * @implements IReason
                 * @constructor
                 * @param {teads.api.GetAllCustomTargetingReasonsResponse.IReason=} [properties] Properties to set
                 */
                function Reason(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Reason id.
                 * @member {number} id
                 * @memberof teads.api.GetAllCustomTargetingReasonsResponse.Reason
                 * @instance
                 */
                Reason.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * Reason label.
                 * @member {string} label
                 * @memberof teads.api.GetAllCustomTargetingReasonsResponse.Reason
                 * @instance
                 */
                Reason.prototype.label = "";

                /**
                 * Creates a new Reason instance using the specified properties.
                 * @function create
                 * @memberof teads.api.GetAllCustomTargetingReasonsResponse.Reason
                 * @static
                 * @param {teads.api.GetAllCustomTargetingReasonsResponse.IReason=} [properties] Properties to set
                 * @returns {teads.api.GetAllCustomTargetingReasonsResponse.Reason} Reason instance
                 */
                Reason.create = function create(properties) {
                    return new Reason(properties);
                };

                /**
                 * Encodes the specified Reason message. Does not implicitly {@link teads.api.GetAllCustomTargetingReasonsResponse.Reason.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.GetAllCustomTargetingReasonsResponse.Reason
                 * @static
                 * @param {teads.api.GetAllCustomTargetingReasonsResponse.IReason} message Reason message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Reason.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.id);
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.label);
                    return writer;
                };

                /**
                 * Encodes the specified Reason message, length delimited. Does not implicitly {@link teads.api.GetAllCustomTargetingReasonsResponse.Reason.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.GetAllCustomTargetingReasonsResponse.Reason
                 * @static
                 * @param {teads.api.GetAllCustomTargetingReasonsResponse.IReason} message Reason message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Reason.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a Reason message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.GetAllCustomTargetingReasonsResponse.Reason
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.GetAllCustomTargetingReasonsResponse.Reason} Reason
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Reason.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.GetAllCustomTargetingReasonsResponse.Reason();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.id = reader.int64();
                                break;
                            }
                        case 2: {
                                message.label = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("id"))
                        throw $util.ProtocolError("missing required 'id'", { instance: message });
                    if (!message.hasOwnProperty("label"))
                        throw $util.ProtocolError("missing required 'label'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a Reason message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.GetAllCustomTargetingReasonsResponse.Reason
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.GetAllCustomTargetingReasonsResponse.Reason} Reason
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Reason.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a Reason message.
                 * @function verify
                 * @memberof teads.api.GetAllCustomTargetingReasonsResponse.Reason
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Reason.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.id) && !(message.id && $util.isInteger(message.id.low) && $util.isInteger(message.id.high)))
                        return "id: integer|Long expected";
                    if (!$util.isString(message.label))
                        return "label: string expected";
                    return null;
                };

                /**
                 * Creates a Reason message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.GetAllCustomTargetingReasonsResponse.Reason
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.GetAllCustomTargetingReasonsResponse.Reason} Reason
                 */
                Reason.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.GetAllCustomTargetingReasonsResponse.Reason)
                        return object;
                    var message = new $root.teads.api.GetAllCustomTargetingReasonsResponse.Reason();
                    if (object.id != null)
                        if ($util.Long)
                            (message.id = $util.Long.fromValue(object.id)).unsigned = false;
                        else if (typeof object.id === "string")
                            message.id = parseInt(object.id, 10);
                        else if (typeof object.id === "number")
                            message.id = object.id;
                        else if (typeof object.id === "object")
                            message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber();
                    if (object.label != null)
                        message.label = String(object.label);
                    return message;
                };

                /**
                 * Creates a plain object from a Reason message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.GetAllCustomTargetingReasonsResponse.Reason
                 * @static
                 * @param {teads.api.GetAllCustomTargetingReasonsResponse.Reason} message Reason
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Reason.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.id = options.longs === String ? "0" : 0;
                        object.label = "";
                    }
                    if (message.id != null && message.hasOwnProperty("id"))
                        if (typeof message.id === "number")
                            object.id = options.longs === String ? String(message.id) : message.id;
                        else
                            object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber() : message.id;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = message.label;
                    return object;
                };

                /**
                 * Converts this Reason to JSON.
                 * @function toJSON
                 * @memberof teads.api.GetAllCustomTargetingReasonsResponse.Reason
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Reason.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for Reason
                 * @function getTypeUrl
                 * @memberof teads.api.GetAllCustomTargetingReasonsResponse.Reason
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Reason.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.GetAllCustomTargetingReasonsResponse.Reason";
                };

                return Reason;
            })();

            return GetAllCustomTargetingReasonsResponse;
        })();

        api.GetBuyerSeatRequest = (function() {

            /**
             * Properties of a GetBuyerSeatRequest.
             * @memberof teads.api
             * @interface IGetBuyerSeatRequest
             * @property {teads.api.ISecurityContext} securityContext GetBuyerSeatRequest securityContext
             * @property {number} seatId GetBuyerSeatRequest seatId
             */

            /**
             * Constructs a new GetBuyerSeatRequest.
             * @memberof teads.api
             * @classdesc Represents a GetBuyerSeatRequest.
             * @implements IGetBuyerSeatRequest
             * @constructor
             * @param {teads.api.IGetBuyerSeatRequest=} [properties] Properties to set
             */
            function GetBuyerSeatRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GetBuyerSeatRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.GetBuyerSeatRequest
             * @instance
             */
            GetBuyerSeatRequest.prototype.securityContext = null;

            /**
             * GetBuyerSeatRequest seatId.
             * @member {number} seatId
             * @memberof teads.api.GetBuyerSeatRequest
             * @instance
             */
            GetBuyerSeatRequest.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new GetBuyerSeatRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.GetBuyerSeatRequest
             * @static
             * @param {teads.api.IGetBuyerSeatRequest=} [properties] Properties to set
             * @returns {teads.api.GetBuyerSeatRequest} GetBuyerSeatRequest instance
             */
            GetBuyerSeatRequest.create = function create(properties) {
                return new GetBuyerSeatRequest(properties);
            };

            /**
             * Encodes the specified GetBuyerSeatRequest message. Does not implicitly {@link teads.api.GetBuyerSeatRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.GetBuyerSeatRequest
             * @static
             * @param {teads.api.IGetBuyerSeatRequest} message GetBuyerSeatRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetBuyerSeatRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.seatId);
                return writer;
            };

            /**
             * Encodes the specified GetBuyerSeatRequest message, length delimited. Does not implicitly {@link teads.api.GetBuyerSeatRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.GetBuyerSeatRequest
             * @static
             * @param {teads.api.IGetBuyerSeatRequest} message GetBuyerSeatRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetBuyerSeatRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GetBuyerSeatRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.GetBuyerSeatRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.GetBuyerSeatRequest} GetBuyerSeatRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetBuyerSeatRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.GetBuyerSeatRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.seatId = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("seatId"))
                    throw $util.ProtocolError("missing required 'seatId'", { instance: message });
                return message;
            };

            /**
             * Decodes a GetBuyerSeatRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.GetBuyerSeatRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.GetBuyerSeatRequest} GetBuyerSeatRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetBuyerSeatRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GetBuyerSeatRequest message.
             * @function verify
             * @memberof teads.api.GetBuyerSeatRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GetBuyerSeatRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                    return "seatId: integer|Long expected";
                return null;
            };

            /**
             * Creates a GetBuyerSeatRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.GetBuyerSeatRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.GetBuyerSeatRequest} GetBuyerSeatRequest
             */
            GetBuyerSeatRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.GetBuyerSeatRequest)
                    return object;
                var message = new $root.teads.api.GetBuyerSeatRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.GetBuyerSeatRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.seatId != null)
                    if ($util.Long)
                        (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                    else if (typeof object.seatId === "string")
                        message.seatId = parseInt(object.seatId, 10);
                    else if (typeof object.seatId === "number")
                        message.seatId = object.seatId;
                    else if (typeof object.seatId === "object")
                        message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from a GetBuyerSeatRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.GetBuyerSeatRequest
             * @static
             * @param {teads.api.GetBuyerSeatRequest} message GetBuyerSeatRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GetBuyerSeatRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seatId = options.longs === String ? "0" : 0;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.seatId != null && message.hasOwnProperty("seatId"))
                    if (typeof message.seatId === "number")
                        object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                    else
                        object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                return object;
            };

            /**
             * Converts this GetBuyerSeatRequest to JSON.
             * @function toJSON
             * @memberof teads.api.GetBuyerSeatRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GetBuyerSeatRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GetBuyerSeatRequest
             * @function getTypeUrl
             * @memberof teads.api.GetBuyerSeatRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GetBuyerSeatRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.GetBuyerSeatRequest";
            };

            return GetBuyerSeatRequest;
        })();

        api.GetBuyerSeatResponse = (function() {

            /**
             * Properties of a GetBuyerSeatResponse.
             * @memberof teads.api
             * @interface IGetBuyerSeatResponse
             * @property {number} seatId GetBuyerSeatResponse seatId
             * @property {teads.api.GetBuyerSeatResponse.IOfficeInfo} office GetBuyerSeatResponse office
             * @property {string} name GetBuyerSeatResponse name
             * @property {teads.api.BuyerServiceLevel} serviceLevel GetBuyerSeatResponse serviceLevel
             * @property {teads.api.BuyerSeatStatus} status GetBuyerSeatResponse status
             * @property {teads.api.MsaType|null} [msaType] GetBuyerSeatResponse msaType
             * @property {teads.api.BuyerSeatType} type GetBuyerSeatResponse type
             * @property {number} fee GetBuyerSeatResponse fee
             * @property {Array.<teads.api.GetBuyerSeatResponse.ISeatHistoryItemInfo>|null} [historyItems] GetBuyerSeatResponse historyItems
             * @property {google.protobuf.ITimestamp} createdAt GetBuyerSeatResponse createdAt
             * @property {number} entityId GetBuyerSeatResponse entityId
             * @property {teads.api.BuyerSeatStatusFlag} clientMsa GetBuyerSeatResponse clientMsa
             * @property {teads.api.BuyerSeatStatusFlag} clientBillingDetails GetBuyerSeatResponse clientBillingDetails
             * @property {teads.api.BuyerSeatStatusFlag} teadsFinanceApproval GetBuyerSeatResponse teadsFinanceApproval
             * @property {string|null} [salesforceId] GetBuyerSeatResponse salesforceId
             * @property {string|null} [contractId] GetBuyerSeatResponse contractId
             * @property {number|null} [agencyId] GetBuyerSeatResponse agencyId
             * @property {number|null} [advertiserId] GetBuyerSeatResponse advertiserId
             * @property {string|null} [salesforceSeatId] GetBuyerSeatResponse salesforceSeatId
             */

            /**
             * Constructs a new GetBuyerSeatResponse.
             * @memberof teads.api
             * @classdesc Represents a GetBuyerSeatResponse.
             * @implements IGetBuyerSeatResponse
             * @constructor
             * @param {teads.api.IGetBuyerSeatResponse=} [properties] Properties to set
             */
            function GetBuyerSeatResponse(properties) {
                this.historyItems = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GetBuyerSeatResponse seatId.
             * @member {number} seatId
             * @memberof teads.api.GetBuyerSeatResponse
             * @instance
             */
            GetBuyerSeatResponse.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * GetBuyerSeatResponse office.
             * @member {teads.api.GetBuyerSeatResponse.IOfficeInfo} office
             * @memberof teads.api.GetBuyerSeatResponse
             * @instance
             */
            GetBuyerSeatResponse.prototype.office = null;

            /**
             * GetBuyerSeatResponse name.
             * @member {string} name
             * @memberof teads.api.GetBuyerSeatResponse
             * @instance
             */
            GetBuyerSeatResponse.prototype.name = "";

            /**
             * GetBuyerSeatResponse serviceLevel.
             * @member {teads.api.BuyerServiceLevel} serviceLevel
             * @memberof teads.api.GetBuyerSeatResponse
             * @instance
             */
            GetBuyerSeatResponse.prototype.serviceLevel = 1;

            /**
             * GetBuyerSeatResponse status.
             * @member {teads.api.BuyerSeatStatus} status
             * @memberof teads.api.GetBuyerSeatResponse
             * @instance
             */
            GetBuyerSeatResponse.prototype.status = 1;

            /**
             * GetBuyerSeatResponse msaType.
             * @member {teads.api.MsaType} msaType
             * @memberof teads.api.GetBuyerSeatResponse
             * @instance
             */
            GetBuyerSeatResponse.prototype.msaType = 1;

            /**
             * GetBuyerSeatResponse type.
             * @member {teads.api.BuyerSeatType} type
             * @memberof teads.api.GetBuyerSeatResponse
             * @instance
             */
            GetBuyerSeatResponse.prototype.type = 1;

            /**
             * GetBuyerSeatResponse fee.
             * @member {number} fee
             * @memberof teads.api.GetBuyerSeatResponse
             * @instance
             */
            GetBuyerSeatResponse.prototype.fee = 0;

            /**
             * GetBuyerSeatResponse historyItems.
             * @member {Array.<teads.api.GetBuyerSeatResponse.ISeatHistoryItemInfo>} historyItems
             * @memberof teads.api.GetBuyerSeatResponse
             * @instance
             */
            GetBuyerSeatResponse.prototype.historyItems = $util.emptyArray;

            /**
             * GetBuyerSeatResponse createdAt.
             * @member {google.protobuf.ITimestamp} createdAt
             * @memberof teads.api.GetBuyerSeatResponse
             * @instance
             */
            GetBuyerSeatResponse.prototype.createdAt = null;

            /**
             * GetBuyerSeatResponse entityId.
             * @member {number} entityId
             * @memberof teads.api.GetBuyerSeatResponse
             * @instance
             */
            GetBuyerSeatResponse.prototype.entityId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * GetBuyerSeatResponse clientMsa.
             * @member {teads.api.BuyerSeatStatusFlag} clientMsa
             * @memberof teads.api.GetBuyerSeatResponse
             * @instance
             */
            GetBuyerSeatResponse.prototype.clientMsa = 0;

            /**
             * GetBuyerSeatResponse clientBillingDetails.
             * @member {teads.api.BuyerSeatStatusFlag} clientBillingDetails
             * @memberof teads.api.GetBuyerSeatResponse
             * @instance
             */
            GetBuyerSeatResponse.prototype.clientBillingDetails = 0;

            /**
             * GetBuyerSeatResponse teadsFinanceApproval.
             * @member {teads.api.BuyerSeatStatusFlag} teadsFinanceApproval
             * @memberof teads.api.GetBuyerSeatResponse
             * @instance
             */
            GetBuyerSeatResponse.prototype.teadsFinanceApproval = 0;

            /**
             * GetBuyerSeatResponse salesforceId.
             * @member {string} salesforceId
             * @memberof teads.api.GetBuyerSeatResponse
             * @instance
             */
            GetBuyerSeatResponse.prototype.salesforceId = "";

            /**
             * GetBuyerSeatResponse contractId.
             * @member {string} contractId
             * @memberof teads.api.GetBuyerSeatResponse
             * @instance
             */
            GetBuyerSeatResponse.prototype.contractId = "";

            /**
             * GetBuyerSeatResponse agencyId.
             * @member {number|null|undefined} agencyId
             * @memberof teads.api.GetBuyerSeatResponse
             * @instance
             */
            GetBuyerSeatResponse.prototype.agencyId = null;

            /**
             * GetBuyerSeatResponse advertiserId.
             * @member {number|null|undefined} advertiserId
             * @memberof teads.api.GetBuyerSeatResponse
             * @instance
             */
            GetBuyerSeatResponse.prototype.advertiserId = null;

            /**
             * GetBuyerSeatResponse salesforceSeatId.
             * @member {string} salesforceSeatId
             * @memberof teads.api.GetBuyerSeatResponse
             * @instance
             */
            GetBuyerSeatResponse.prototype.salesforceSeatId = "";

            // OneOf field names bound to virtual getters and setters
            var $oneOfFields;

            /**
             * GetBuyerSeatResponse buyerId.
             * @member {"agencyId"|"advertiserId"|undefined} buyerId
             * @memberof teads.api.GetBuyerSeatResponse
             * @instance
             */
            Object.defineProperty(GetBuyerSeatResponse.prototype, "buyerId", {
                get: $util.oneOfGetter($oneOfFields = ["agencyId", "advertiserId"]),
                set: $util.oneOfSetter($oneOfFields)
            });

            /**
             * Creates a new GetBuyerSeatResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.GetBuyerSeatResponse
             * @static
             * @param {teads.api.IGetBuyerSeatResponse=} [properties] Properties to set
             * @returns {teads.api.GetBuyerSeatResponse} GetBuyerSeatResponse instance
             */
            GetBuyerSeatResponse.create = function create(properties) {
                return new GetBuyerSeatResponse(properties);
            };

            /**
             * Encodes the specified GetBuyerSeatResponse message. Does not implicitly {@link teads.api.GetBuyerSeatResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.GetBuyerSeatResponse
             * @static
             * @param {teads.api.IGetBuyerSeatResponse} message GetBuyerSeatResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetBuyerSeatResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seatId);
                $root.teads.api.GetBuyerSeatResponse.OfficeInfo.encode(message.office, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.serviceLevel);
                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.status);
                if (message.msaType != null && Object.hasOwnProperty.call(message, "msaType"))
                    writer.uint32(/* id 6, wireType 0 =*/48).int32(message.msaType);
                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.type);
                writer.uint32(/* id 8, wireType 1 =*/65).double(message.fee);
                if (message.historyItems != null && message.historyItems.length)
                    for (var i = 0; i < message.historyItems.length; ++i)
                        $root.teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo.encode(message.historyItems[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                $root.google.protobuf.Timestamp.encode(message.createdAt, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                writer.uint32(/* id 11, wireType 0 =*/88).int64(message.entityId);
                writer.uint32(/* id 12, wireType 0 =*/96).int32(message.clientMsa);
                writer.uint32(/* id 13, wireType 0 =*/104).int32(message.clientBillingDetails);
                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.teadsFinanceApproval);
                if (message.salesforceId != null && Object.hasOwnProperty.call(message, "salesforceId"))
                    writer.uint32(/* id 15, wireType 2 =*/122).string(message.salesforceId);
                if (message.contractId != null && Object.hasOwnProperty.call(message, "contractId"))
                    writer.uint32(/* id 16, wireType 2 =*/130).string(message.contractId);
                if (message.agencyId != null && Object.hasOwnProperty.call(message, "agencyId"))
                    writer.uint32(/* id 17, wireType 0 =*/136).int64(message.agencyId);
                if (message.advertiserId != null && Object.hasOwnProperty.call(message, "advertiserId"))
                    writer.uint32(/* id 18, wireType 0 =*/144).int64(message.advertiserId);
                if (message.salesforceSeatId != null && Object.hasOwnProperty.call(message, "salesforceSeatId"))
                    writer.uint32(/* id 19, wireType 2 =*/154).string(message.salesforceSeatId);
                return writer;
            };

            /**
             * Encodes the specified GetBuyerSeatResponse message, length delimited. Does not implicitly {@link teads.api.GetBuyerSeatResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.GetBuyerSeatResponse
             * @static
             * @param {teads.api.IGetBuyerSeatResponse} message GetBuyerSeatResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetBuyerSeatResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GetBuyerSeatResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.GetBuyerSeatResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.GetBuyerSeatResponse} GetBuyerSeatResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetBuyerSeatResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.GetBuyerSeatResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.seatId = reader.int64();
                            break;
                        }
                    case 2: {
                            message.office = $root.teads.api.GetBuyerSeatResponse.OfficeInfo.decode(reader, reader.uint32());
                            break;
                        }
                    case 3: {
                            message.name = reader.string();
                            break;
                        }
                    case 4: {
                            message.serviceLevel = reader.int32();
                            break;
                        }
                    case 5: {
                            message.status = reader.int32();
                            break;
                        }
                    case 6: {
                            message.msaType = reader.int32();
                            break;
                        }
                    case 7: {
                            message.type = reader.int32();
                            break;
                        }
                    case 8: {
                            message.fee = reader.double();
                            break;
                        }
                    case 9: {
                            if (!(message.historyItems && message.historyItems.length))
                                message.historyItems = [];
                            message.historyItems.push($root.teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo.decode(reader, reader.uint32()));
                            break;
                        }
                    case 10: {
                            message.createdAt = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                            break;
                        }
                    case 11: {
                            message.entityId = reader.int64();
                            break;
                        }
                    case 12: {
                            message.clientMsa = reader.int32();
                            break;
                        }
                    case 13: {
                            message.clientBillingDetails = reader.int32();
                            break;
                        }
                    case 14: {
                            message.teadsFinanceApproval = reader.int32();
                            break;
                        }
                    case 15: {
                            message.salesforceId = reader.string();
                            break;
                        }
                    case 16: {
                            message.contractId = reader.string();
                            break;
                        }
                    case 17: {
                            message.agencyId = reader.int64();
                            break;
                        }
                    case 18: {
                            message.advertiserId = reader.int64();
                            break;
                        }
                    case 19: {
                            message.salesforceSeatId = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("seatId"))
                    throw $util.ProtocolError("missing required 'seatId'", { instance: message });
                if (!message.hasOwnProperty("office"))
                    throw $util.ProtocolError("missing required 'office'", { instance: message });
                if (!message.hasOwnProperty("name"))
                    throw $util.ProtocolError("missing required 'name'", { instance: message });
                if (!message.hasOwnProperty("serviceLevel"))
                    throw $util.ProtocolError("missing required 'serviceLevel'", { instance: message });
                if (!message.hasOwnProperty("status"))
                    throw $util.ProtocolError("missing required 'status'", { instance: message });
                if (!message.hasOwnProperty("type"))
                    throw $util.ProtocolError("missing required 'type'", { instance: message });
                if (!message.hasOwnProperty("fee"))
                    throw $util.ProtocolError("missing required 'fee'", { instance: message });
                if (!message.hasOwnProperty("createdAt"))
                    throw $util.ProtocolError("missing required 'createdAt'", { instance: message });
                if (!message.hasOwnProperty("entityId"))
                    throw $util.ProtocolError("missing required 'entityId'", { instance: message });
                if (!message.hasOwnProperty("clientMsa"))
                    throw $util.ProtocolError("missing required 'clientMsa'", { instance: message });
                if (!message.hasOwnProperty("clientBillingDetails"))
                    throw $util.ProtocolError("missing required 'clientBillingDetails'", { instance: message });
                if (!message.hasOwnProperty("teadsFinanceApproval"))
                    throw $util.ProtocolError("missing required 'teadsFinanceApproval'", { instance: message });
                return message;
            };

            /**
             * Decodes a GetBuyerSeatResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.GetBuyerSeatResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.GetBuyerSeatResponse} GetBuyerSeatResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetBuyerSeatResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GetBuyerSeatResponse message.
             * @function verify
             * @memberof teads.api.GetBuyerSeatResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GetBuyerSeatResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                var properties = {};
                if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                    return "seatId: integer|Long expected";
                {
                    var error = $root.teads.api.GetBuyerSeatResponse.OfficeInfo.verify(message.office);
                    if (error)
                        return "office." + error;
                }
                if (!$util.isString(message.name))
                    return "name: string expected";
                switch (message.serviceLevel) {
                default:
                    return "serviceLevel: enum value expected";
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                    break;
                }
                switch (message.status) {
                default:
                    return "status: enum value expected";
                case 1:
                case 2:
                case 3:
                case 4:
                    break;
                }
                if (message.msaType != null && message.hasOwnProperty("msaType"))
                    switch (message.msaType) {
                    default:
                        return "msaType: enum value expected";
                    case 1:
                    case 2:
                        break;
                    }
                switch (message.type) {
                default:
                    return "type: enum value expected";
                case 1:
                case 2:
                    break;
                }
                if (typeof message.fee !== "number")
                    return "fee: number expected";
                if (message.historyItems != null && message.hasOwnProperty("historyItems")) {
                    if (!Array.isArray(message.historyItems))
                        return "historyItems: array expected";
                    for (var i = 0; i < message.historyItems.length; ++i) {
                        var error = $root.teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo.verify(message.historyItems[i]);
                        if (error)
                            return "historyItems." + error;
                    }
                }
                {
                    var error = $root.google.protobuf.Timestamp.verify(message.createdAt);
                    if (error)
                        return "createdAt." + error;
                }
                if (!$util.isInteger(message.entityId) && !(message.entityId && $util.isInteger(message.entityId.low) && $util.isInteger(message.entityId.high)))
                    return "entityId: integer|Long expected";
                switch (message.clientMsa) {
                default:
                    return "clientMsa: enum value expected";
                case 0:
                case 1:
                case 2:
                    break;
                }
                switch (message.clientBillingDetails) {
                default:
                    return "clientBillingDetails: enum value expected";
                case 0:
                case 1:
                case 2:
                    break;
                }
                switch (message.teadsFinanceApproval) {
                default:
                    return "teadsFinanceApproval: enum value expected";
                case 0:
                case 1:
                case 2:
                    break;
                }
                if (message.salesforceId != null && message.hasOwnProperty("salesforceId"))
                    if (!$util.isString(message.salesforceId))
                        return "salesforceId: string expected";
                if (message.contractId != null && message.hasOwnProperty("contractId"))
                    if (!$util.isString(message.contractId))
                        return "contractId: string expected";
                if (message.agencyId != null && message.hasOwnProperty("agencyId")) {
                    properties.buyerId = 1;
                    if (!$util.isInteger(message.agencyId) && !(message.agencyId && $util.isInteger(message.agencyId.low) && $util.isInteger(message.agencyId.high)))
                        return "agencyId: integer|Long expected";
                }
                if (message.advertiserId != null && message.hasOwnProperty("advertiserId")) {
                    if (properties.buyerId === 1)
                        return "buyerId: multiple values";
                    properties.buyerId = 1;
                    if (!$util.isInteger(message.advertiserId) && !(message.advertiserId && $util.isInteger(message.advertiserId.low) && $util.isInteger(message.advertiserId.high)))
                        return "advertiserId: integer|Long expected";
                }
                if (message.salesforceSeatId != null && message.hasOwnProperty("salesforceSeatId"))
                    if (!$util.isString(message.salesforceSeatId))
                        return "salesforceSeatId: string expected";
                return null;
            };

            /**
             * Creates a GetBuyerSeatResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.GetBuyerSeatResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.GetBuyerSeatResponse} GetBuyerSeatResponse
             */
            GetBuyerSeatResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.GetBuyerSeatResponse)
                    return object;
                var message = new $root.teads.api.GetBuyerSeatResponse();
                if (object.seatId != null)
                    if ($util.Long)
                        (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                    else if (typeof object.seatId === "string")
                        message.seatId = parseInt(object.seatId, 10);
                    else if (typeof object.seatId === "number")
                        message.seatId = object.seatId;
                    else if (typeof object.seatId === "object")
                        message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                if (object.office != null) {
                    if (typeof object.office !== "object")
                        throw TypeError(".teads.api.GetBuyerSeatResponse.office: object expected");
                    message.office = $root.teads.api.GetBuyerSeatResponse.OfficeInfo.fromObject(object.office);
                }
                if (object.name != null)
                    message.name = String(object.name);
                switch (object.serviceLevel) {
                default:
                    if (typeof object.serviceLevel === "number") {
                        message.serviceLevel = object.serviceLevel;
                        break;
                    }
                    break;
                case "BUYER_SERVICE_LEVEL_MANAGED":
                case 1:
                    message.serviceLevel = 1;
                    break;
                case "BUYER_SERVICE_LEVEL_SELF_SERVED":
                case 2:
                    message.serviceLevel = 2;
                    break;
                case "BUYER_SERVICE_LEVEL_IO":
                case 3:
                    message.serviceLevel = 3;
                    break;
                case "BUYER_SERVICE_LEVEL_INTERNAL":
                case 4:
                    message.serviceLevel = 4;
                    break;
                case "BUYER_SERVICE_LEVEL_CLIENT":
                case 5:
                    message.serviceLevel = 5;
                    break;
                }
                switch (object.status) {
                default:
                    if (typeof object.status === "number") {
                        message.status = object.status;
                        break;
                    }
                    break;
                case "BUYER_SEAT_STATUS_ENABLED":
                case 1:
                    message.status = 1;
                    break;
                case "BUYER_SEAT_STATUS_DISABLED":
                case 2:
                    message.status = 2;
                    break;
                case "BUYER_SEAT_STATUS_PENDING_CLIENT_INPUT":
                case 3:
                    message.status = 3;
                    break;
                case "BUYER_SEAT_STATUS_PENDING_TEADS_INPUT":
                case 4:
                    message.status = 4;
                    break;
                }
                switch (object.msaType) {
                default:
                    if (typeof object.msaType === "number") {
                        message.msaType = object.msaType;
                        break;
                    }
                    break;
                case "MSA_TYPE_DIGITAL":
                case 1:
                    message.msaType = 1;
                    break;
                case "MSA_TYPE_PAPER":
                case 2:
                    message.msaType = 2;
                    break;
                }
                switch (object.type) {
                default:
                    if (typeof object.type === "number") {
                        message.type = object.type;
                        break;
                    }
                    break;
                case "BUYER_SEAT_TYPE_ADVERTISER":
                case 1:
                    message.type = 1;
                    break;
                case "BUYER_SEAT_TYPE_AGENCY":
                case 2:
                    message.type = 2;
                    break;
                }
                if (object.fee != null)
                    message.fee = Number(object.fee);
                if (object.historyItems) {
                    if (!Array.isArray(object.historyItems))
                        throw TypeError(".teads.api.GetBuyerSeatResponse.historyItems: array expected");
                    message.historyItems = [];
                    for (var i = 0; i < object.historyItems.length; ++i) {
                        if (typeof object.historyItems[i] !== "object")
                            throw TypeError(".teads.api.GetBuyerSeatResponse.historyItems: object expected");
                        message.historyItems[i] = $root.teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo.fromObject(object.historyItems[i]);
                    }
                }
                if (object.createdAt != null) {
                    if (typeof object.createdAt !== "object")
                        throw TypeError(".teads.api.GetBuyerSeatResponse.createdAt: object expected");
                    message.createdAt = $root.google.protobuf.Timestamp.fromObject(object.createdAt);
                }
                if (object.entityId != null)
                    if ($util.Long)
                        (message.entityId = $util.Long.fromValue(object.entityId)).unsigned = false;
                    else if (typeof object.entityId === "string")
                        message.entityId = parseInt(object.entityId, 10);
                    else if (typeof object.entityId === "number")
                        message.entityId = object.entityId;
                    else if (typeof object.entityId === "object")
                        message.entityId = new $util.LongBits(object.entityId.low >>> 0, object.entityId.high >>> 0).toNumber();
                switch (object.clientMsa) {
                default:
                    if (typeof object.clientMsa === "number") {
                        message.clientMsa = object.clientMsa;
                        break;
                    }
                    break;
                case "BUYER_SEAT_STATUS_FLAG_NOT_REQUIRED":
                case 0:
                    message.clientMsa = 0;
                    break;
                case "BUYER_SEAT_STATUS_FLAG_REQUIRED":
                case 1:
                    message.clientMsa = 1;
                    break;
                case "BUYER_SEAT_STATUS_FLAG_COMPLETED":
                case 2:
                    message.clientMsa = 2;
                    break;
                }
                switch (object.clientBillingDetails) {
                default:
                    if (typeof object.clientBillingDetails === "number") {
                        message.clientBillingDetails = object.clientBillingDetails;
                        break;
                    }
                    break;
                case "BUYER_SEAT_STATUS_FLAG_NOT_REQUIRED":
                case 0:
                    message.clientBillingDetails = 0;
                    break;
                case "BUYER_SEAT_STATUS_FLAG_REQUIRED":
                case 1:
                    message.clientBillingDetails = 1;
                    break;
                case "BUYER_SEAT_STATUS_FLAG_COMPLETED":
                case 2:
                    message.clientBillingDetails = 2;
                    break;
                }
                switch (object.teadsFinanceApproval) {
                default:
                    if (typeof object.teadsFinanceApproval === "number") {
                        message.teadsFinanceApproval = object.teadsFinanceApproval;
                        break;
                    }
                    break;
                case "BUYER_SEAT_STATUS_FLAG_NOT_REQUIRED":
                case 0:
                    message.teadsFinanceApproval = 0;
                    break;
                case "BUYER_SEAT_STATUS_FLAG_REQUIRED":
                case 1:
                    message.teadsFinanceApproval = 1;
                    break;
                case "BUYER_SEAT_STATUS_FLAG_COMPLETED":
                case 2:
                    message.teadsFinanceApproval = 2;
                    break;
                }
                if (object.salesforceId != null)
                    message.salesforceId = String(object.salesforceId);
                if (object.contractId != null)
                    message.contractId = String(object.contractId);
                if (object.agencyId != null)
                    if ($util.Long)
                        (message.agencyId = $util.Long.fromValue(object.agencyId)).unsigned = false;
                    else if (typeof object.agencyId === "string")
                        message.agencyId = parseInt(object.agencyId, 10);
                    else if (typeof object.agencyId === "number")
                        message.agencyId = object.agencyId;
                    else if (typeof object.agencyId === "object")
                        message.agencyId = new $util.LongBits(object.agencyId.low >>> 0, object.agencyId.high >>> 0).toNumber();
                if (object.advertiserId != null)
                    if ($util.Long)
                        (message.advertiserId = $util.Long.fromValue(object.advertiserId)).unsigned = false;
                    else if (typeof object.advertiserId === "string")
                        message.advertiserId = parseInt(object.advertiserId, 10);
                    else if (typeof object.advertiserId === "number")
                        message.advertiserId = object.advertiserId;
                    else if (typeof object.advertiserId === "object")
                        message.advertiserId = new $util.LongBits(object.advertiserId.low >>> 0, object.advertiserId.high >>> 0).toNumber();
                if (object.salesforceSeatId != null)
                    message.salesforceSeatId = String(object.salesforceSeatId);
                return message;
            };

            /**
             * Creates a plain object from a GetBuyerSeatResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.GetBuyerSeatResponse
             * @static
             * @param {teads.api.GetBuyerSeatResponse} message GetBuyerSeatResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GetBuyerSeatResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.historyItems = [];
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seatId = options.longs === String ? "0" : 0;
                    object.office = null;
                    object.name = "";
                    object.serviceLevel = options.enums === String ? "BUYER_SERVICE_LEVEL_MANAGED" : 1;
                    object.status = options.enums === String ? "BUYER_SEAT_STATUS_ENABLED" : 1;
                    object.msaType = options.enums === String ? "MSA_TYPE_DIGITAL" : 1;
                    object.type = options.enums === String ? "BUYER_SEAT_TYPE_ADVERTISER" : 1;
                    object.fee = 0;
                    object.createdAt = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.entityId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.entityId = options.longs === String ? "0" : 0;
                    object.clientMsa = options.enums === String ? "BUYER_SEAT_STATUS_FLAG_NOT_REQUIRED" : 0;
                    object.clientBillingDetails = options.enums === String ? "BUYER_SEAT_STATUS_FLAG_NOT_REQUIRED" : 0;
                    object.teadsFinanceApproval = options.enums === String ? "BUYER_SEAT_STATUS_FLAG_NOT_REQUIRED" : 0;
                    object.salesforceId = "";
                    object.contractId = "";
                    object.salesforceSeatId = "";
                }
                if (message.seatId != null && message.hasOwnProperty("seatId"))
                    if (typeof message.seatId === "number")
                        object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                    else
                        object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                if (message.office != null && message.hasOwnProperty("office"))
                    object.office = $root.teads.api.GetBuyerSeatResponse.OfficeInfo.toObject(message.office, options);
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.serviceLevel != null && message.hasOwnProperty("serviceLevel"))
                    object.serviceLevel = options.enums === String ? $root.teads.api.BuyerServiceLevel[message.serviceLevel] === undefined ? message.serviceLevel : $root.teads.api.BuyerServiceLevel[message.serviceLevel] : message.serviceLevel;
                if (message.status != null && message.hasOwnProperty("status"))
                    object.status = options.enums === String ? $root.teads.api.BuyerSeatStatus[message.status] === undefined ? message.status : $root.teads.api.BuyerSeatStatus[message.status] : message.status;
                if (message.msaType != null && message.hasOwnProperty("msaType"))
                    object.msaType = options.enums === String ? $root.teads.api.MsaType[message.msaType] === undefined ? message.msaType : $root.teads.api.MsaType[message.msaType] : message.msaType;
                if (message.type != null && message.hasOwnProperty("type"))
                    object.type = options.enums === String ? $root.teads.api.BuyerSeatType[message.type] === undefined ? message.type : $root.teads.api.BuyerSeatType[message.type] : message.type;
                if (message.fee != null && message.hasOwnProperty("fee"))
                    object.fee = options.json && !isFinite(message.fee) ? String(message.fee) : message.fee;
                if (message.historyItems && message.historyItems.length) {
                    object.historyItems = [];
                    for (var j = 0; j < message.historyItems.length; ++j)
                        object.historyItems[j] = $root.teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo.toObject(message.historyItems[j], options);
                }
                if (message.createdAt != null && message.hasOwnProperty("createdAt"))
                    object.createdAt = $root.google.protobuf.Timestamp.toObject(message.createdAt, options);
                if (message.entityId != null && message.hasOwnProperty("entityId"))
                    if (typeof message.entityId === "number")
                        object.entityId = options.longs === String ? String(message.entityId) : message.entityId;
                    else
                        object.entityId = options.longs === String ? $util.Long.prototype.toString.call(message.entityId) : options.longs === Number ? new $util.LongBits(message.entityId.low >>> 0, message.entityId.high >>> 0).toNumber() : message.entityId;
                if (message.clientMsa != null && message.hasOwnProperty("clientMsa"))
                    object.clientMsa = options.enums === String ? $root.teads.api.BuyerSeatStatusFlag[message.clientMsa] === undefined ? message.clientMsa : $root.teads.api.BuyerSeatStatusFlag[message.clientMsa] : message.clientMsa;
                if (message.clientBillingDetails != null && message.hasOwnProperty("clientBillingDetails"))
                    object.clientBillingDetails = options.enums === String ? $root.teads.api.BuyerSeatStatusFlag[message.clientBillingDetails] === undefined ? message.clientBillingDetails : $root.teads.api.BuyerSeatStatusFlag[message.clientBillingDetails] : message.clientBillingDetails;
                if (message.teadsFinanceApproval != null && message.hasOwnProperty("teadsFinanceApproval"))
                    object.teadsFinanceApproval = options.enums === String ? $root.teads.api.BuyerSeatStatusFlag[message.teadsFinanceApproval] === undefined ? message.teadsFinanceApproval : $root.teads.api.BuyerSeatStatusFlag[message.teadsFinanceApproval] : message.teadsFinanceApproval;
                if (message.salesforceId != null && message.hasOwnProperty("salesforceId"))
                    object.salesforceId = message.salesforceId;
                if (message.contractId != null && message.hasOwnProperty("contractId"))
                    object.contractId = message.contractId;
                if (message.agencyId != null && message.hasOwnProperty("agencyId")) {
                    if (typeof message.agencyId === "number")
                        object.agencyId = options.longs === String ? String(message.agencyId) : message.agencyId;
                    else
                        object.agencyId = options.longs === String ? $util.Long.prototype.toString.call(message.agencyId) : options.longs === Number ? new $util.LongBits(message.agencyId.low >>> 0, message.agencyId.high >>> 0).toNumber() : message.agencyId;
                    if (options.oneofs)
                        object.buyerId = "agencyId";
                }
                if (message.advertiserId != null && message.hasOwnProperty("advertiserId")) {
                    if (typeof message.advertiserId === "number")
                        object.advertiserId = options.longs === String ? String(message.advertiserId) : message.advertiserId;
                    else
                        object.advertiserId = options.longs === String ? $util.Long.prototype.toString.call(message.advertiserId) : options.longs === Number ? new $util.LongBits(message.advertiserId.low >>> 0, message.advertiserId.high >>> 0).toNumber() : message.advertiserId;
                    if (options.oneofs)
                        object.buyerId = "advertiserId";
                }
                if (message.salesforceSeatId != null && message.hasOwnProperty("salesforceSeatId"))
                    object.salesforceSeatId = message.salesforceSeatId;
                return object;
            };

            /**
             * Converts this GetBuyerSeatResponse to JSON.
             * @function toJSON
             * @memberof teads.api.GetBuyerSeatResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GetBuyerSeatResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GetBuyerSeatResponse
             * @function getTypeUrl
             * @memberof teads.api.GetBuyerSeatResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GetBuyerSeatResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.GetBuyerSeatResponse";
            };

            GetBuyerSeatResponse.OfficeInfo = (function() {

                /**
                 * Properties of an OfficeInfo.
                 * @memberof teads.api.GetBuyerSeatResponse
                 * @interface IOfficeInfo
                 * @property {number} officeId OfficeInfo officeId
                 * @property {string} officeName OfficeInfo officeName
                 */

                /**
                 * Constructs a new OfficeInfo.
                 * @memberof teads.api.GetBuyerSeatResponse
                 * @classdesc Represents an OfficeInfo.
                 * @implements IOfficeInfo
                 * @constructor
                 * @param {teads.api.GetBuyerSeatResponse.IOfficeInfo=} [properties] Properties to set
                 */
                function OfficeInfo(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * OfficeInfo officeId.
                 * @member {number} officeId
                 * @memberof teads.api.GetBuyerSeatResponse.OfficeInfo
                 * @instance
                 */
                OfficeInfo.prototype.officeId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * OfficeInfo officeName.
                 * @member {string} officeName
                 * @memberof teads.api.GetBuyerSeatResponse.OfficeInfo
                 * @instance
                 */
                OfficeInfo.prototype.officeName = "";

                /**
                 * Creates a new OfficeInfo instance using the specified properties.
                 * @function create
                 * @memberof teads.api.GetBuyerSeatResponse.OfficeInfo
                 * @static
                 * @param {teads.api.GetBuyerSeatResponse.IOfficeInfo=} [properties] Properties to set
                 * @returns {teads.api.GetBuyerSeatResponse.OfficeInfo} OfficeInfo instance
                 */
                OfficeInfo.create = function create(properties) {
                    return new OfficeInfo(properties);
                };

                /**
                 * Encodes the specified OfficeInfo message. Does not implicitly {@link teads.api.GetBuyerSeatResponse.OfficeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.GetBuyerSeatResponse.OfficeInfo
                 * @static
                 * @param {teads.api.GetBuyerSeatResponse.IOfficeInfo} message OfficeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OfficeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.officeId);
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.officeName);
                    return writer;
                };

                /**
                 * Encodes the specified OfficeInfo message, length delimited. Does not implicitly {@link teads.api.GetBuyerSeatResponse.OfficeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.GetBuyerSeatResponse.OfficeInfo
                 * @static
                 * @param {teads.api.GetBuyerSeatResponse.IOfficeInfo} message OfficeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OfficeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes an OfficeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.GetBuyerSeatResponse.OfficeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.GetBuyerSeatResponse.OfficeInfo} OfficeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OfficeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.GetBuyerSeatResponse.OfficeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.officeId = reader.int64();
                                break;
                            }
                        case 2: {
                                message.officeName = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("officeId"))
                        throw $util.ProtocolError("missing required 'officeId'", { instance: message });
                    if (!message.hasOwnProperty("officeName"))
                        throw $util.ProtocolError("missing required 'officeName'", { instance: message });
                    return message;
                };

                /**
                 * Decodes an OfficeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.GetBuyerSeatResponse.OfficeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.GetBuyerSeatResponse.OfficeInfo} OfficeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OfficeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies an OfficeInfo message.
                 * @function verify
                 * @memberof teads.api.GetBuyerSeatResponse.OfficeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OfficeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.officeId) && !(message.officeId && $util.isInteger(message.officeId.low) && $util.isInteger(message.officeId.high)))
                        return "officeId: integer|Long expected";
                    if (!$util.isString(message.officeName))
                        return "officeName: string expected";
                    return null;
                };

                /**
                 * Creates an OfficeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.GetBuyerSeatResponse.OfficeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.GetBuyerSeatResponse.OfficeInfo} OfficeInfo
                 */
                OfficeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.GetBuyerSeatResponse.OfficeInfo)
                        return object;
                    var message = new $root.teads.api.GetBuyerSeatResponse.OfficeInfo();
                    if (object.officeId != null)
                        if ($util.Long)
                            (message.officeId = $util.Long.fromValue(object.officeId)).unsigned = false;
                        else if (typeof object.officeId === "string")
                            message.officeId = parseInt(object.officeId, 10);
                        else if (typeof object.officeId === "number")
                            message.officeId = object.officeId;
                        else if (typeof object.officeId === "object")
                            message.officeId = new $util.LongBits(object.officeId.low >>> 0, object.officeId.high >>> 0).toNumber();
                    if (object.officeName != null)
                        message.officeName = String(object.officeName);
                    return message;
                };

                /**
                 * Creates a plain object from an OfficeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.GetBuyerSeatResponse.OfficeInfo
                 * @static
                 * @param {teads.api.GetBuyerSeatResponse.OfficeInfo} message OfficeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OfficeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.officeId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.officeId = options.longs === String ? "0" : 0;
                        object.officeName = "";
                    }
                    if (message.officeId != null && message.hasOwnProperty("officeId"))
                        if (typeof message.officeId === "number")
                            object.officeId = options.longs === String ? String(message.officeId) : message.officeId;
                        else
                            object.officeId = options.longs === String ? $util.Long.prototype.toString.call(message.officeId) : options.longs === Number ? new $util.LongBits(message.officeId.low >>> 0, message.officeId.high >>> 0).toNumber() : message.officeId;
                    if (message.officeName != null && message.hasOwnProperty("officeName"))
                        object.officeName = message.officeName;
                    return object;
                };

                /**
                 * Converts this OfficeInfo to JSON.
                 * @function toJSON
                 * @memberof teads.api.GetBuyerSeatResponse.OfficeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OfficeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for OfficeInfo
                 * @function getTypeUrl
                 * @memberof teads.api.GetBuyerSeatResponse.OfficeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OfficeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.GetBuyerSeatResponse.OfficeInfo";
                };

                return OfficeInfo;
            })();

            GetBuyerSeatResponse.Profile = (function() {

                /**
                 * Properties of a Profile.
                 * @memberof teads.api.GetBuyerSeatResponse
                 * @interface IProfile
                 * @property {number} profileId Profile profileId
                 * @property {string} email Profile email
                 */

                /**
                 * Constructs a new Profile.
                 * @memberof teads.api.GetBuyerSeatResponse
                 * @classdesc Represents a Profile.
                 * @implements IProfile
                 * @constructor
                 * @param {teads.api.GetBuyerSeatResponse.IProfile=} [properties] Properties to set
                 */
                function Profile(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Profile profileId.
                 * @member {number} profileId
                 * @memberof teads.api.GetBuyerSeatResponse.Profile
                 * @instance
                 */
                Profile.prototype.profileId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * Profile email.
                 * @member {string} email
                 * @memberof teads.api.GetBuyerSeatResponse.Profile
                 * @instance
                 */
                Profile.prototype.email = "";

                /**
                 * Creates a new Profile instance using the specified properties.
                 * @function create
                 * @memberof teads.api.GetBuyerSeatResponse.Profile
                 * @static
                 * @param {teads.api.GetBuyerSeatResponse.IProfile=} [properties] Properties to set
                 * @returns {teads.api.GetBuyerSeatResponse.Profile} Profile instance
                 */
                Profile.create = function create(properties) {
                    return new Profile(properties);
                };

                /**
                 * Encodes the specified Profile message. Does not implicitly {@link teads.api.GetBuyerSeatResponse.Profile.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.GetBuyerSeatResponse.Profile
                 * @static
                 * @param {teads.api.GetBuyerSeatResponse.IProfile} message Profile message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Profile.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.profileId);
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.email);
                    return writer;
                };

                /**
                 * Encodes the specified Profile message, length delimited. Does not implicitly {@link teads.api.GetBuyerSeatResponse.Profile.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.GetBuyerSeatResponse.Profile
                 * @static
                 * @param {teads.api.GetBuyerSeatResponse.IProfile} message Profile message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Profile.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a Profile message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.GetBuyerSeatResponse.Profile
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.GetBuyerSeatResponse.Profile} Profile
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Profile.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.GetBuyerSeatResponse.Profile();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.profileId = reader.int64();
                                break;
                            }
                        case 2: {
                                message.email = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("profileId"))
                        throw $util.ProtocolError("missing required 'profileId'", { instance: message });
                    if (!message.hasOwnProperty("email"))
                        throw $util.ProtocolError("missing required 'email'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a Profile message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.GetBuyerSeatResponse.Profile
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.GetBuyerSeatResponse.Profile} Profile
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Profile.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a Profile message.
                 * @function verify
                 * @memberof teads.api.GetBuyerSeatResponse.Profile
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Profile.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.profileId) && !(message.profileId && $util.isInteger(message.profileId.low) && $util.isInteger(message.profileId.high)))
                        return "profileId: integer|Long expected";
                    if (!$util.isString(message.email))
                        return "email: string expected";
                    return null;
                };

                /**
                 * Creates a Profile message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.GetBuyerSeatResponse.Profile
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.GetBuyerSeatResponse.Profile} Profile
                 */
                Profile.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.GetBuyerSeatResponse.Profile)
                        return object;
                    var message = new $root.teads.api.GetBuyerSeatResponse.Profile();
                    if (object.profileId != null)
                        if ($util.Long)
                            (message.profileId = $util.Long.fromValue(object.profileId)).unsigned = false;
                        else if (typeof object.profileId === "string")
                            message.profileId = parseInt(object.profileId, 10);
                        else if (typeof object.profileId === "number")
                            message.profileId = object.profileId;
                        else if (typeof object.profileId === "object")
                            message.profileId = new $util.LongBits(object.profileId.low >>> 0, object.profileId.high >>> 0).toNumber();
                    if (object.email != null)
                        message.email = String(object.email);
                    return message;
                };

                /**
                 * Creates a plain object from a Profile message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.GetBuyerSeatResponse.Profile
                 * @static
                 * @param {teads.api.GetBuyerSeatResponse.Profile} message Profile
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Profile.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.profileId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.profileId = options.longs === String ? "0" : 0;
                        object.email = "";
                    }
                    if (message.profileId != null && message.hasOwnProperty("profileId"))
                        if (typeof message.profileId === "number")
                            object.profileId = options.longs === String ? String(message.profileId) : message.profileId;
                        else
                            object.profileId = options.longs === String ? $util.Long.prototype.toString.call(message.profileId) : options.longs === Number ? new $util.LongBits(message.profileId.low >>> 0, message.profileId.high >>> 0).toNumber() : message.profileId;
                    if (message.email != null && message.hasOwnProperty("email"))
                        object.email = message.email;
                    return object;
                };

                /**
                 * Converts this Profile to JSON.
                 * @function toJSON
                 * @memberof teads.api.GetBuyerSeatResponse.Profile
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Profile.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for Profile
                 * @function getTypeUrl
                 * @memberof teads.api.GetBuyerSeatResponse.Profile
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Profile.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.GetBuyerSeatResponse.Profile";
                };

                return Profile;
            })();

            GetBuyerSeatResponse.SeatHistoryItemInfo = (function() {

                /**
                 * Properties of a SeatHistoryItemInfo.
                 * @memberof teads.api.GetBuyerSeatResponse
                 * @interface ISeatHistoryItemInfo
                 * @property {number} id SeatHistoryItemInfo id
                 * @property {number} seatId SeatHistoryItemInfo seatId
                 * @property {teads.api.GetBuyerSeatResponse.IProfile} profile SeatHistoryItemInfo profile
                 * @property {string} resourceName SeatHistoryItemInfo resourceName
                 * @property {string|null} [oldValue] SeatHistoryItemInfo oldValue
                 * @property {string} newValue SeatHistoryItemInfo newValue
                 * @property {google.protobuf.ITimestamp} createdAt SeatHistoryItemInfo createdAt
                 */

                /**
                 * Constructs a new SeatHistoryItemInfo.
                 * @memberof teads.api.GetBuyerSeatResponse
                 * @classdesc Represents a SeatHistoryItemInfo.
                 * @implements ISeatHistoryItemInfo
                 * @constructor
                 * @param {teads.api.GetBuyerSeatResponse.ISeatHistoryItemInfo=} [properties] Properties to set
                 */
                function SeatHistoryItemInfo(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * SeatHistoryItemInfo id.
                 * @member {number} id
                 * @memberof teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo
                 * @instance
                 */
                SeatHistoryItemInfo.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * SeatHistoryItemInfo seatId.
                 * @member {number} seatId
                 * @memberof teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo
                 * @instance
                 */
                SeatHistoryItemInfo.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * SeatHistoryItemInfo profile.
                 * @member {teads.api.GetBuyerSeatResponse.IProfile} profile
                 * @memberof teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo
                 * @instance
                 */
                SeatHistoryItemInfo.prototype.profile = null;

                /**
                 * SeatHistoryItemInfo resourceName.
                 * @member {string} resourceName
                 * @memberof teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo
                 * @instance
                 */
                SeatHistoryItemInfo.prototype.resourceName = "";

                /**
                 * SeatHistoryItemInfo oldValue.
                 * @member {string} oldValue
                 * @memberof teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo
                 * @instance
                 */
                SeatHistoryItemInfo.prototype.oldValue = "";

                /**
                 * SeatHistoryItemInfo newValue.
                 * @member {string} newValue
                 * @memberof teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo
                 * @instance
                 */
                SeatHistoryItemInfo.prototype.newValue = "";

                /**
                 * SeatHistoryItemInfo createdAt.
                 * @member {google.protobuf.ITimestamp} createdAt
                 * @memberof teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo
                 * @instance
                 */
                SeatHistoryItemInfo.prototype.createdAt = null;

                /**
                 * Creates a new SeatHistoryItemInfo instance using the specified properties.
                 * @function create
                 * @memberof teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo
                 * @static
                 * @param {teads.api.GetBuyerSeatResponse.ISeatHistoryItemInfo=} [properties] Properties to set
                 * @returns {teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo} SeatHistoryItemInfo instance
                 */
                SeatHistoryItemInfo.create = function create(properties) {
                    return new SeatHistoryItemInfo(properties);
                };

                /**
                 * Encodes the specified SeatHistoryItemInfo message. Does not implicitly {@link teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo
                 * @static
                 * @param {teads.api.GetBuyerSeatResponse.ISeatHistoryItemInfo} message SeatHistoryItemInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SeatHistoryItemInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.id);
                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.seatId);
                    $root.teads.api.GetBuyerSeatResponse.Profile.encode(message.profile, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.resourceName);
                    if (message.oldValue != null && Object.hasOwnProperty.call(message, "oldValue"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.oldValue);
                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.newValue);
                    $root.google.protobuf.Timestamp.encode(message.createdAt, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified SeatHistoryItemInfo message, length delimited. Does not implicitly {@link teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo
                 * @static
                 * @param {teads.api.GetBuyerSeatResponse.ISeatHistoryItemInfo} message SeatHistoryItemInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SeatHistoryItemInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a SeatHistoryItemInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo} SeatHistoryItemInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SeatHistoryItemInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.id = reader.int64();
                                break;
                            }
                        case 2: {
                                message.seatId = reader.int64();
                                break;
                            }
                        case 3: {
                                message.profile = $root.teads.api.GetBuyerSeatResponse.Profile.decode(reader, reader.uint32());
                                break;
                            }
                        case 4: {
                                message.resourceName = reader.string();
                                break;
                            }
                        case 5: {
                                message.oldValue = reader.string();
                                break;
                            }
                        case 6: {
                                message.newValue = reader.string();
                                break;
                            }
                        case 7: {
                                message.createdAt = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("id"))
                        throw $util.ProtocolError("missing required 'id'", { instance: message });
                    if (!message.hasOwnProperty("seatId"))
                        throw $util.ProtocolError("missing required 'seatId'", { instance: message });
                    if (!message.hasOwnProperty("profile"))
                        throw $util.ProtocolError("missing required 'profile'", { instance: message });
                    if (!message.hasOwnProperty("resourceName"))
                        throw $util.ProtocolError("missing required 'resourceName'", { instance: message });
                    if (!message.hasOwnProperty("newValue"))
                        throw $util.ProtocolError("missing required 'newValue'", { instance: message });
                    if (!message.hasOwnProperty("createdAt"))
                        throw $util.ProtocolError("missing required 'createdAt'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a SeatHistoryItemInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo} SeatHistoryItemInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SeatHistoryItemInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a SeatHistoryItemInfo message.
                 * @function verify
                 * @memberof teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SeatHistoryItemInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.id) && !(message.id && $util.isInteger(message.id.low) && $util.isInteger(message.id.high)))
                        return "id: integer|Long expected";
                    if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                        return "seatId: integer|Long expected";
                    {
                        var error = $root.teads.api.GetBuyerSeatResponse.Profile.verify(message.profile);
                        if (error)
                            return "profile." + error;
                    }
                    if (!$util.isString(message.resourceName))
                        return "resourceName: string expected";
                    if (message.oldValue != null && message.hasOwnProperty("oldValue"))
                        if (!$util.isString(message.oldValue))
                            return "oldValue: string expected";
                    if (!$util.isString(message.newValue))
                        return "newValue: string expected";
                    {
                        var error = $root.google.protobuf.Timestamp.verify(message.createdAt);
                        if (error)
                            return "createdAt." + error;
                    }
                    return null;
                };

                /**
                 * Creates a SeatHistoryItemInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo} SeatHistoryItemInfo
                 */
                SeatHistoryItemInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo)
                        return object;
                    var message = new $root.teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo();
                    if (object.id != null)
                        if ($util.Long)
                            (message.id = $util.Long.fromValue(object.id)).unsigned = false;
                        else if (typeof object.id === "string")
                            message.id = parseInt(object.id, 10);
                        else if (typeof object.id === "number")
                            message.id = object.id;
                        else if (typeof object.id === "object")
                            message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber();
                    if (object.seatId != null)
                        if ($util.Long)
                            (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                        else if (typeof object.seatId === "string")
                            message.seatId = parseInt(object.seatId, 10);
                        else if (typeof object.seatId === "number")
                            message.seatId = object.seatId;
                        else if (typeof object.seatId === "object")
                            message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                    if (object.profile != null) {
                        if (typeof object.profile !== "object")
                            throw TypeError(".teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo.profile: object expected");
                        message.profile = $root.teads.api.GetBuyerSeatResponse.Profile.fromObject(object.profile);
                    }
                    if (object.resourceName != null)
                        message.resourceName = String(object.resourceName);
                    if (object.oldValue != null)
                        message.oldValue = String(object.oldValue);
                    if (object.newValue != null)
                        message.newValue = String(object.newValue);
                    if (object.createdAt != null) {
                        if (typeof object.createdAt !== "object")
                            throw TypeError(".teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo.createdAt: object expected");
                        message.createdAt = $root.google.protobuf.Timestamp.fromObject(object.createdAt);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a SeatHistoryItemInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo
                 * @static
                 * @param {teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo} message SeatHistoryItemInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SeatHistoryItemInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.id = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seatId = options.longs === String ? "0" : 0;
                        object.profile = null;
                        object.resourceName = "";
                        object.oldValue = "";
                        object.newValue = "";
                        object.createdAt = null;
                    }
                    if (message.id != null && message.hasOwnProperty("id"))
                        if (typeof message.id === "number")
                            object.id = options.longs === String ? String(message.id) : message.id;
                        else
                            object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber() : message.id;
                    if (message.seatId != null && message.hasOwnProperty("seatId"))
                        if (typeof message.seatId === "number")
                            object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                        else
                            object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                    if (message.profile != null && message.hasOwnProperty("profile"))
                        object.profile = $root.teads.api.GetBuyerSeatResponse.Profile.toObject(message.profile, options);
                    if (message.resourceName != null && message.hasOwnProperty("resourceName"))
                        object.resourceName = message.resourceName;
                    if (message.oldValue != null && message.hasOwnProperty("oldValue"))
                        object.oldValue = message.oldValue;
                    if (message.newValue != null && message.hasOwnProperty("newValue"))
                        object.newValue = message.newValue;
                    if (message.createdAt != null && message.hasOwnProperty("createdAt"))
                        object.createdAt = $root.google.protobuf.Timestamp.toObject(message.createdAt, options);
                    return object;
                };

                /**
                 * Converts this SeatHistoryItemInfo to JSON.
                 * @function toJSON
                 * @memberof teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SeatHistoryItemInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for SeatHistoryItemInfo
                 * @function getTypeUrl
                 * @memberof teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SeatHistoryItemInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.GetBuyerSeatResponse.SeatHistoryItemInfo";
                };

                return SeatHistoryItemInfo;
            })();

            return GetBuyerSeatResponse;
        })();

        api.GetOfficeRequest = (function() {

            /**
             * Properties of a GetOfficeRequest.
             * @memberof teads.api
             * @interface IGetOfficeRequest
             * @property {teads.api.ISecurityContext} securityContext GetOfficeRequest securityContext
             * @property {number} officeId GetOfficeRequest officeId
             */

            /**
             * Constructs a new GetOfficeRequest.
             * @memberof teads.api
             * @classdesc Represents a GetOfficeRequest.
             * @implements IGetOfficeRequest
             * @constructor
             * @param {teads.api.IGetOfficeRequest=} [properties] Properties to set
             */
            function GetOfficeRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GetOfficeRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.GetOfficeRequest
             * @instance
             */
            GetOfficeRequest.prototype.securityContext = null;

            /**
             * GetOfficeRequest officeId.
             * @member {number} officeId
             * @memberof teads.api.GetOfficeRequest
             * @instance
             */
            GetOfficeRequest.prototype.officeId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new GetOfficeRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.GetOfficeRequest
             * @static
             * @param {teads.api.IGetOfficeRequest=} [properties] Properties to set
             * @returns {teads.api.GetOfficeRequest} GetOfficeRequest instance
             */
            GetOfficeRequest.create = function create(properties) {
                return new GetOfficeRequest(properties);
            };

            /**
             * Encodes the specified GetOfficeRequest message. Does not implicitly {@link teads.api.GetOfficeRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.GetOfficeRequest
             * @static
             * @param {teads.api.IGetOfficeRequest} message GetOfficeRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetOfficeRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.officeId);
                return writer;
            };

            /**
             * Encodes the specified GetOfficeRequest message, length delimited. Does not implicitly {@link teads.api.GetOfficeRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.GetOfficeRequest
             * @static
             * @param {teads.api.IGetOfficeRequest} message GetOfficeRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetOfficeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GetOfficeRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.GetOfficeRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.GetOfficeRequest} GetOfficeRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetOfficeRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.GetOfficeRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.officeId = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("officeId"))
                    throw $util.ProtocolError("missing required 'officeId'", { instance: message });
                return message;
            };

            /**
             * Decodes a GetOfficeRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.GetOfficeRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.GetOfficeRequest} GetOfficeRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetOfficeRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GetOfficeRequest message.
             * @function verify
             * @memberof teads.api.GetOfficeRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GetOfficeRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.officeId) && !(message.officeId && $util.isInteger(message.officeId.low) && $util.isInteger(message.officeId.high)))
                    return "officeId: integer|Long expected";
                return null;
            };

            /**
             * Creates a GetOfficeRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.GetOfficeRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.GetOfficeRequest} GetOfficeRequest
             */
            GetOfficeRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.GetOfficeRequest)
                    return object;
                var message = new $root.teads.api.GetOfficeRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.GetOfficeRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.officeId != null)
                    if ($util.Long)
                        (message.officeId = $util.Long.fromValue(object.officeId)).unsigned = false;
                    else if (typeof object.officeId === "string")
                        message.officeId = parseInt(object.officeId, 10);
                    else if (typeof object.officeId === "number")
                        message.officeId = object.officeId;
                    else if (typeof object.officeId === "object")
                        message.officeId = new $util.LongBits(object.officeId.low >>> 0, object.officeId.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from a GetOfficeRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.GetOfficeRequest
             * @static
             * @param {teads.api.GetOfficeRequest} message GetOfficeRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GetOfficeRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.officeId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.officeId = options.longs === String ? "0" : 0;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.officeId != null && message.hasOwnProperty("officeId"))
                    if (typeof message.officeId === "number")
                        object.officeId = options.longs === String ? String(message.officeId) : message.officeId;
                    else
                        object.officeId = options.longs === String ? $util.Long.prototype.toString.call(message.officeId) : options.longs === Number ? new $util.LongBits(message.officeId.low >>> 0, message.officeId.high >>> 0).toNumber() : message.officeId;
                return object;
            };

            /**
             * Converts this GetOfficeRequest to JSON.
             * @function toJSON
             * @memberof teads.api.GetOfficeRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GetOfficeRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GetOfficeRequest
             * @function getTypeUrl
             * @memberof teads.api.GetOfficeRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GetOfficeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.GetOfficeRequest";
            };

            return GetOfficeRequest;
        })();

        api.GetOfficeResponse = (function() {

            /**
             * Properties of a GetOfficeResponse.
             * @memberof teads.api
             * @interface IGetOfficeResponse
             * @property {number} officeId GetOfficeResponse officeId
             * @property {string} officeName GetOfficeResponse officeName
             * @property {string|null} [officeAddress] GetOfficeResponse officeAddress
             */

            /**
             * Constructs a new GetOfficeResponse.
             * @memberof teads.api
             * @classdesc Represents a GetOfficeResponse.
             * @implements IGetOfficeResponse
             * @constructor
             * @param {teads.api.IGetOfficeResponse=} [properties] Properties to set
             */
            function GetOfficeResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GetOfficeResponse officeId.
             * @member {number} officeId
             * @memberof teads.api.GetOfficeResponse
             * @instance
             */
            GetOfficeResponse.prototype.officeId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * GetOfficeResponse officeName.
             * @member {string} officeName
             * @memberof teads.api.GetOfficeResponse
             * @instance
             */
            GetOfficeResponse.prototype.officeName = "";

            /**
             * GetOfficeResponse officeAddress.
             * @member {string} officeAddress
             * @memberof teads.api.GetOfficeResponse
             * @instance
             */
            GetOfficeResponse.prototype.officeAddress = "";

            /**
             * Creates a new GetOfficeResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.GetOfficeResponse
             * @static
             * @param {teads.api.IGetOfficeResponse=} [properties] Properties to set
             * @returns {teads.api.GetOfficeResponse} GetOfficeResponse instance
             */
            GetOfficeResponse.create = function create(properties) {
                return new GetOfficeResponse(properties);
            };

            /**
             * Encodes the specified GetOfficeResponse message. Does not implicitly {@link teads.api.GetOfficeResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.GetOfficeResponse
             * @static
             * @param {teads.api.IGetOfficeResponse} message GetOfficeResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetOfficeResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.officeId);
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.officeName);
                if (message.officeAddress != null && Object.hasOwnProperty.call(message, "officeAddress"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.officeAddress);
                return writer;
            };

            /**
             * Encodes the specified GetOfficeResponse message, length delimited. Does not implicitly {@link teads.api.GetOfficeResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.GetOfficeResponse
             * @static
             * @param {teads.api.IGetOfficeResponse} message GetOfficeResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetOfficeResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GetOfficeResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.GetOfficeResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.GetOfficeResponse} GetOfficeResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetOfficeResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.GetOfficeResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.officeId = reader.int64();
                            break;
                        }
                    case 2: {
                            message.officeName = reader.string();
                            break;
                        }
                    case 3: {
                            message.officeAddress = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("officeId"))
                    throw $util.ProtocolError("missing required 'officeId'", { instance: message });
                if (!message.hasOwnProperty("officeName"))
                    throw $util.ProtocolError("missing required 'officeName'", { instance: message });
                return message;
            };

            /**
             * Decodes a GetOfficeResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.GetOfficeResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.GetOfficeResponse} GetOfficeResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetOfficeResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GetOfficeResponse message.
             * @function verify
             * @memberof teads.api.GetOfficeResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GetOfficeResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.officeId) && !(message.officeId && $util.isInteger(message.officeId.low) && $util.isInteger(message.officeId.high)))
                    return "officeId: integer|Long expected";
                if (!$util.isString(message.officeName))
                    return "officeName: string expected";
                if (message.officeAddress != null && message.hasOwnProperty("officeAddress"))
                    if (!$util.isString(message.officeAddress))
                        return "officeAddress: string expected";
                return null;
            };

            /**
             * Creates a GetOfficeResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.GetOfficeResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.GetOfficeResponse} GetOfficeResponse
             */
            GetOfficeResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.GetOfficeResponse)
                    return object;
                var message = new $root.teads.api.GetOfficeResponse();
                if (object.officeId != null)
                    if ($util.Long)
                        (message.officeId = $util.Long.fromValue(object.officeId)).unsigned = false;
                    else if (typeof object.officeId === "string")
                        message.officeId = parseInt(object.officeId, 10);
                    else if (typeof object.officeId === "number")
                        message.officeId = object.officeId;
                    else if (typeof object.officeId === "object")
                        message.officeId = new $util.LongBits(object.officeId.low >>> 0, object.officeId.high >>> 0).toNumber();
                if (object.officeName != null)
                    message.officeName = String(object.officeName);
                if (object.officeAddress != null)
                    message.officeAddress = String(object.officeAddress);
                return message;
            };

            /**
             * Creates a plain object from a GetOfficeResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.GetOfficeResponse
             * @static
             * @param {teads.api.GetOfficeResponse} message GetOfficeResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GetOfficeResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.officeId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.officeId = options.longs === String ? "0" : 0;
                    object.officeName = "";
                    object.officeAddress = "";
                }
                if (message.officeId != null && message.hasOwnProperty("officeId"))
                    if (typeof message.officeId === "number")
                        object.officeId = options.longs === String ? String(message.officeId) : message.officeId;
                    else
                        object.officeId = options.longs === String ? $util.Long.prototype.toString.call(message.officeId) : options.longs === Number ? new $util.LongBits(message.officeId.low >>> 0, message.officeId.high >>> 0).toNumber() : message.officeId;
                if (message.officeName != null && message.hasOwnProperty("officeName"))
                    object.officeName = message.officeName;
                if (message.officeAddress != null && message.hasOwnProperty("officeAddress"))
                    object.officeAddress = message.officeAddress;
                return object;
            };

            /**
             * Converts this GetOfficeResponse to JSON.
             * @function toJSON
             * @memberof teads.api.GetOfficeResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GetOfficeResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GetOfficeResponse
             * @function getTypeUrl
             * @memberof teads.api.GetOfficeResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GetOfficeResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.GetOfficeResponse";
            };

            return GetOfficeResponse;
        })();

        api.GetSalesforceOpportunityRequest = (function() {

            /**
             * Properties of a GetSalesforceOpportunityRequest.
             * @memberof teads.api
             * @interface IGetSalesforceOpportunityRequest
             * @property {teads.api.ISecurityContext} securityContext GetSalesforceOpportunityRequest securityContext
             * @property {string} opportunityId GetSalesforceOpportunityRequest opportunityId
             */

            /**
             * Constructs a new GetSalesforceOpportunityRequest.
             * @memberof teads.api
             * @classdesc Represents a GetSalesforceOpportunityRequest.
             * @implements IGetSalesforceOpportunityRequest
             * @constructor
             * @param {teads.api.IGetSalesforceOpportunityRequest=} [properties] Properties to set
             */
            function GetSalesforceOpportunityRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GetSalesforceOpportunityRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.GetSalesforceOpportunityRequest
             * @instance
             */
            GetSalesforceOpportunityRequest.prototype.securityContext = null;

            /**
             * GetSalesforceOpportunityRequest opportunityId.
             * @member {string} opportunityId
             * @memberof teads.api.GetSalesforceOpportunityRequest
             * @instance
             */
            GetSalesforceOpportunityRequest.prototype.opportunityId = "";

            /**
             * Creates a new GetSalesforceOpportunityRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.GetSalesforceOpportunityRequest
             * @static
             * @param {teads.api.IGetSalesforceOpportunityRequest=} [properties] Properties to set
             * @returns {teads.api.GetSalesforceOpportunityRequest} GetSalesforceOpportunityRequest instance
             */
            GetSalesforceOpportunityRequest.create = function create(properties) {
                return new GetSalesforceOpportunityRequest(properties);
            };

            /**
             * Encodes the specified GetSalesforceOpportunityRequest message. Does not implicitly {@link teads.api.GetSalesforceOpportunityRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.GetSalesforceOpportunityRequest
             * @static
             * @param {teads.api.IGetSalesforceOpportunityRequest} message GetSalesforceOpportunityRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetSalesforceOpportunityRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.opportunityId);
                return writer;
            };

            /**
             * Encodes the specified GetSalesforceOpportunityRequest message, length delimited. Does not implicitly {@link teads.api.GetSalesforceOpportunityRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.GetSalesforceOpportunityRequest
             * @static
             * @param {teads.api.IGetSalesforceOpportunityRequest} message GetSalesforceOpportunityRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetSalesforceOpportunityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GetSalesforceOpportunityRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.GetSalesforceOpportunityRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.GetSalesforceOpportunityRequest} GetSalesforceOpportunityRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetSalesforceOpportunityRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.GetSalesforceOpportunityRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.opportunityId = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("opportunityId"))
                    throw $util.ProtocolError("missing required 'opportunityId'", { instance: message });
                return message;
            };

            /**
             * Decodes a GetSalesforceOpportunityRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.GetSalesforceOpportunityRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.GetSalesforceOpportunityRequest} GetSalesforceOpportunityRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetSalesforceOpportunityRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GetSalesforceOpportunityRequest message.
             * @function verify
             * @memberof teads.api.GetSalesforceOpportunityRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GetSalesforceOpportunityRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isString(message.opportunityId))
                    return "opportunityId: string expected";
                return null;
            };

            /**
             * Creates a GetSalesforceOpportunityRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.GetSalesforceOpportunityRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.GetSalesforceOpportunityRequest} GetSalesforceOpportunityRequest
             */
            GetSalesforceOpportunityRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.GetSalesforceOpportunityRequest)
                    return object;
                var message = new $root.teads.api.GetSalesforceOpportunityRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.GetSalesforceOpportunityRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.opportunityId != null)
                    message.opportunityId = String(object.opportunityId);
                return message;
            };

            /**
             * Creates a plain object from a GetSalesforceOpportunityRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.GetSalesforceOpportunityRequest
             * @static
             * @param {teads.api.GetSalesforceOpportunityRequest} message GetSalesforceOpportunityRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GetSalesforceOpportunityRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    object.opportunityId = "";
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.opportunityId != null && message.hasOwnProperty("opportunityId"))
                    object.opportunityId = message.opportunityId;
                return object;
            };

            /**
             * Converts this GetSalesforceOpportunityRequest to JSON.
             * @function toJSON
             * @memberof teads.api.GetSalesforceOpportunityRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GetSalesforceOpportunityRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GetSalesforceOpportunityRequest
             * @function getTypeUrl
             * @memberof teads.api.GetSalesforceOpportunityRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GetSalesforceOpportunityRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.GetSalesforceOpportunityRequest";
            };

            return GetSalesforceOpportunityRequest;
        })();

        api.GetSalesforceOpportunityResponse = (function() {

            /**
             * Properties of a GetSalesforceOpportunityResponse.
             * @memberof teads.api
             * @interface IGetSalesforceOpportunityResponse
             * @property {string} opportunityId GetSalesforceOpportunityResponse opportunityId
             * @property {string} name GetSalesforceOpportunityResponse name
             * @property {number} agencyId GetSalesforceOpportunityResponse agencyId
             * @property {number} advertiserId GetSalesforceOpportunityResponse advertiserId
             * @property {number} officeId GetSalesforceOpportunityResponse officeId
             * @property {string} opportunityCurrency GetSalesforceOpportunityResponse opportunityCurrency
             * @property {string} opportunityTimezone GetSalesforceOpportunityResponse opportunityTimezone
             * @property {string} invoiceReferenceNumber GetSalesforceOpportunityResponse invoiceReferenceNumber
             * @property {number} iabCategoryId GetSalesforceOpportunityResponse iabCategoryId
             * @property {Array.<teads.api.GetSalesforceOpportunityResponse.ISalesforceOpportunityLineItem>|null} [opportunityLineItems] GetSalesforceOpportunityResponse opportunityLineItems
             * @property {boolean} canBeSynchronized GetSalesforceOpportunityResponse canBeSynchronized
             * @property {string|null} [advertiserName] GetSalesforceOpportunityResponse advertiserName
             * @property {string|null} [agencyName] GetSalesforceOpportunityResponse agencyName
             * @property {string} sellerEmail GetSalesforceOpportunityResponse sellerEmail
             * @property {boolean|null} [isMoatUnsampled] GetSalesforceOpportunityResponse isMoatUnsampled
             * @property {teads.api.GetSalesforceOpportunityResponse.Version|null} [version] GetSalesforceOpportunityResponse version
             */

            /**
             * Constructs a new GetSalesforceOpportunityResponse.
             * @memberof teads.api
             * @classdesc Represents a GetSalesforceOpportunityResponse.
             * @implements IGetSalesforceOpportunityResponse
             * @constructor
             * @param {teads.api.IGetSalesforceOpportunityResponse=} [properties] Properties to set
             */
            function GetSalesforceOpportunityResponse(properties) {
                this.opportunityLineItems = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GetSalesforceOpportunityResponse opportunityId.
             * @member {string} opportunityId
             * @memberof teads.api.GetSalesforceOpportunityResponse
             * @instance
             */
            GetSalesforceOpportunityResponse.prototype.opportunityId = "";

            /**
             * GetSalesforceOpportunityResponse name.
             * @member {string} name
             * @memberof teads.api.GetSalesforceOpportunityResponse
             * @instance
             */
            GetSalesforceOpportunityResponse.prototype.name = "";

            /**
             * GetSalesforceOpportunityResponse agencyId.
             * @member {number} agencyId
             * @memberof teads.api.GetSalesforceOpportunityResponse
             * @instance
             */
            GetSalesforceOpportunityResponse.prototype.agencyId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * GetSalesforceOpportunityResponse advertiserId.
             * @member {number} advertiserId
             * @memberof teads.api.GetSalesforceOpportunityResponse
             * @instance
             */
            GetSalesforceOpportunityResponse.prototype.advertiserId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * GetSalesforceOpportunityResponse officeId.
             * @member {number} officeId
             * @memberof teads.api.GetSalesforceOpportunityResponse
             * @instance
             */
            GetSalesforceOpportunityResponse.prototype.officeId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * GetSalesforceOpportunityResponse opportunityCurrency.
             * @member {string} opportunityCurrency
             * @memberof teads.api.GetSalesforceOpportunityResponse
             * @instance
             */
            GetSalesforceOpportunityResponse.prototype.opportunityCurrency = "";

            /**
             * GetSalesforceOpportunityResponse opportunityTimezone.
             * @member {string} opportunityTimezone
             * @memberof teads.api.GetSalesforceOpportunityResponse
             * @instance
             */
            GetSalesforceOpportunityResponse.prototype.opportunityTimezone = "";

            /**
             * GetSalesforceOpportunityResponse invoiceReferenceNumber.
             * @member {string} invoiceReferenceNumber
             * @memberof teads.api.GetSalesforceOpportunityResponse
             * @instance
             */
            GetSalesforceOpportunityResponse.prototype.invoiceReferenceNumber = "";

            /**
             * GetSalesforceOpportunityResponse iabCategoryId.
             * @member {number} iabCategoryId
             * @memberof teads.api.GetSalesforceOpportunityResponse
             * @instance
             */
            GetSalesforceOpportunityResponse.prototype.iabCategoryId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * GetSalesforceOpportunityResponse opportunityLineItems.
             * @member {Array.<teads.api.GetSalesforceOpportunityResponse.ISalesforceOpportunityLineItem>} opportunityLineItems
             * @memberof teads.api.GetSalesforceOpportunityResponse
             * @instance
             */
            GetSalesforceOpportunityResponse.prototype.opportunityLineItems = $util.emptyArray;

            /**
             * GetSalesforceOpportunityResponse canBeSynchronized.
             * @member {boolean} canBeSynchronized
             * @memberof teads.api.GetSalesforceOpportunityResponse
             * @instance
             */
            GetSalesforceOpportunityResponse.prototype.canBeSynchronized = false;

            /**
             * GetSalesforceOpportunityResponse advertiserName.
             * @member {string} advertiserName
             * @memberof teads.api.GetSalesforceOpportunityResponse
             * @instance
             */
            GetSalesforceOpportunityResponse.prototype.advertiserName = "";

            /**
             * GetSalesforceOpportunityResponse agencyName.
             * @member {string} agencyName
             * @memberof teads.api.GetSalesforceOpportunityResponse
             * @instance
             */
            GetSalesforceOpportunityResponse.prototype.agencyName = "";

            /**
             * GetSalesforceOpportunityResponse sellerEmail.
             * @member {string} sellerEmail
             * @memberof teads.api.GetSalesforceOpportunityResponse
             * @instance
             */
            GetSalesforceOpportunityResponse.prototype.sellerEmail = "";

            /**
             * GetSalesforceOpportunityResponse isMoatUnsampled.
             * @member {boolean} isMoatUnsampled
             * @memberof teads.api.GetSalesforceOpportunityResponse
             * @instance
             */
            GetSalesforceOpportunityResponse.prototype.isMoatUnsampled = false;

            /**
             * GetSalesforceOpportunityResponse version.
             * @member {teads.api.GetSalesforceOpportunityResponse.Version} version
             * @memberof teads.api.GetSalesforceOpportunityResponse
             * @instance
             */
            GetSalesforceOpportunityResponse.prototype.version = 1;

            /**
             * Creates a new GetSalesforceOpportunityResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.GetSalesforceOpportunityResponse
             * @static
             * @param {teads.api.IGetSalesforceOpportunityResponse=} [properties] Properties to set
             * @returns {teads.api.GetSalesforceOpportunityResponse} GetSalesforceOpportunityResponse instance
             */
            GetSalesforceOpportunityResponse.create = function create(properties) {
                return new GetSalesforceOpportunityResponse(properties);
            };

            /**
             * Encodes the specified GetSalesforceOpportunityResponse message. Does not implicitly {@link teads.api.GetSalesforceOpportunityResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.GetSalesforceOpportunityResponse
             * @static
             * @param {teads.api.IGetSalesforceOpportunityResponse} message GetSalesforceOpportunityResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetSalesforceOpportunityResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.opportunityId);
                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.agencyId);
                writer.uint32(/* id 4, wireType 0 =*/32).int64(message.advertiserId);
                writer.uint32(/* id 6, wireType 0 =*/48).int64(message.officeId);
                writer.uint32(/* id 7, wireType 2 =*/58).string(message.opportunityCurrency);
                writer.uint32(/* id 8, wireType 2 =*/66).string(message.opportunityTimezone);
                writer.uint32(/* id 15, wireType 2 =*/122).string(message.invoiceReferenceNumber);
                writer.uint32(/* id 16, wireType 0 =*/128).int64(message.iabCategoryId);
                if (message.opportunityLineItems != null && message.opportunityLineItems.length)
                    for (var i = 0; i < message.opportunityLineItems.length; ++i)
                        $root.teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem.encode(message.opportunityLineItems[i], writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                writer.uint32(/* id 19, wireType 0 =*/152).bool(message.canBeSynchronized);
                if (message.advertiserName != null && Object.hasOwnProperty.call(message, "advertiserName"))
                    writer.uint32(/* id 20, wireType 2 =*/162).string(message.advertiserName);
                if (message.agencyName != null && Object.hasOwnProperty.call(message, "agencyName"))
                    writer.uint32(/* id 21, wireType 2 =*/170).string(message.agencyName);
                writer.uint32(/* id 22, wireType 2 =*/178).string(message.sellerEmail);
                if (message.isMoatUnsampled != null && Object.hasOwnProperty.call(message, "isMoatUnsampled"))
                    writer.uint32(/* id 23, wireType 0 =*/184).bool(message.isMoatUnsampled);
                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                    writer.uint32(/* id 24, wireType 0 =*/192).int32(message.version);
                return writer;
            };

            /**
             * Encodes the specified GetSalesforceOpportunityResponse message, length delimited. Does not implicitly {@link teads.api.GetSalesforceOpportunityResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.GetSalesforceOpportunityResponse
             * @static
             * @param {teads.api.IGetSalesforceOpportunityResponse} message GetSalesforceOpportunityResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GetSalesforceOpportunityResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GetSalesforceOpportunityResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.GetSalesforceOpportunityResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.GetSalesforceOpportunityResponse} GetSalesforceOpportunityResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetSalesforceOpportunityResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.GetSalesforceOpportunityResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.opportunityId = reader.string();
                            break;
                        }
                    case 2: {
                            message.name = reader.string();
                            break;
                        }
                    case 3: {
                            message.agencyId = reader.int64();
                            break;
                        }
                    case 4: {
                            message.advertiserId = reader.int64();
                            break;
                        }
                    case 6: {
                            message.officeId = reader.int64();
                            break;
                        }
                    case 7: {
                            message.opportunityCurrency = reader.string();
                            break;
                        }
                    case 8: {
                            message.opportunityTimezone = reader.string();
                            break;
                        }
                    case 15: {
                            message.invoiceReferenceNumber = reader.string();
                            break;
                        }
                    case 16: {
                            message.iabCategoryId = reader.int64();
                            break;
                        }
                    case 17: {
                            if (!(message.opportunityLineItems && message.opportunityLineItems.length))
                                message.opportunityLineItems = [];
                            message.opportunityLineItems.push($root.teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem.decode(reader, reader.uint32()));
                            break;
                        }
                    case 19: {
                            message.canBeSynchronized = reader.bool();
                            break;
                        }
                    case 20: {
                            message.advertiserName = reader.string();
                            break;
                        }
                    case 21: {
                            message.agencyName = reader.string();
                            break;
                        }
                    case 22: {
                            message.sellerEmail = reader.string();
                            break;
                        }
                    case 23: {
                            message.isMoatUnsampled = reader.bool();
                            break;
                        }
                    case 24: {
                            message.version = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("opportunityId"))
                    throw $util.ProtocolError("missing required 'opportunityId'", { instance: message });
                if (!message.hasOwnProperty("name"))
                    throw $util.ProtocolError("missing required 'name'", { instance: message });
                if (!message.hasOwnProperty("agencyId"))
                    throw $util.ProtocolError("missing required 'agencyId'", { instance: message });
                if (!message.hasOwnProperty("advertiserId"))
                    throw $util.ProtocolError("missing required 'advertiserId'", { instance: message });
                if (!message.hasOwnProperty("officeId"))
                    throw $util.ProtocolError("missing required 'officeId'", { instance: message });
                if (!message.hasOwnProperty("opportunityCurrency"))
                    throw $util.ProtocolError("missing required 'opportunityCurrency'", { instance: message });
                if (!message.hasOwnProperty("opportunityTimezone"))
                    throw $util.ProtocolError("missing required 'opportunityTimezone'", { instance: message });
                if (!message.hasOwnProperty("invoiceReferenceNumber"))
                    throw $util.ProtocolError("missing required 'invoiceReferenceNumber'", { instance: message });
                if (!message.hasOwnProperty("iabCategoryId"))
                    throw $util.ProtocolError("missing required 'iabCategoryId'", { instance: message });
                if (!message.hasOwnProperty("canBeSynchronized"))
                    throw $util.ProtocolError("missing required 'canBeSynchronized'", { instance: message });
                if (!message.hasOwnProperty("sellerEmail"))
                    throw $util.ProtocolError("missing required 'sellerEmail'", { instance: message });
                return message;
            };

            /**
             * Decodes a GetSalesforceOpportunityResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.GetSalesforceOpportunityResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.GetSalesforceOpportunityResponse} GetSalesforceOpportunityResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GetSalesforceOpportunityResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GetSalesforceOpportunityResponse message.
             * @function verify
             * @memberof teads.api.GetSalesforceOpportunityResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GetSalesforceOpportunityResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isString(message.opportunityId))
                    return "opportunityId: string expected";
                if (!$util.isString(message.name))
                    return "name: string expected";
                if (!$util.isInteger(message.agencyId) && !(message.agencyId && $util.isInteger(message.agencyId.low) && $util.isInteger(message.agencyId.high)))
                    return "agencyId: integer|Long expected";
                if (!$util.isInteger(message.advertiserId) && !(message.advertiserId && $util.isInteger(message.advertiserId.low) && $util.isInteger(message.advertiserId.high)))
                    return "advertiserId: integer|Long expected";
                if (!$util.isInteger(message.officeId) && !(message.officeId && $util.isInteger(message.officeId.low) && $util.isInteger(message.officeId.high)))
                    return "officeId: integer|Long expected";
                if (!$util.isString(message.opportunityCurrency))
                    return "opportunityCurrency: string expected";
                if (!$util.isString(message.opportunityTimezone))
                    return "opportunityTimezone: string expected";
                if (!$util.isString(message.invoiceReferenceNumber))
                    return "invoiceReferenceNumber: string expected";
                if (!$util.isInteger(message.iabCategoryId) && !(message.iabCategoryId && $util.isInteger(message.iabCategoryId.low) && $util.isInteger(message.iabCategoryId.high)))
                    return "iabCategoryId: integer|Long expected";
                if (message.opportunityLineItems != null && message.hasOwnProperty("opportunityLineItems")) {
                    if (!Array.isArray(message.opportunityLineItems))
                        return "opportunityLineItems: array expected";
                    for (var i = 0; i < message.opportunityLineItems.length; ++i) {
                        var error = $root.teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem.verify(message.opportunityLineItems[i]);
                        if (error)
                            return "opportunityLineItems." + error;
                    }
                }
                if (typeof message.canBeSynchronized !== "boolean")
                    return "canBeSynchronized: boolean expected";
                if (message.advertiserName != null && message.hasOwnProperty("advertiserName"))
                    if (!$util.isString(message.advertiserName))
                        return "advertiserName: string expected";
                if (message.agencyName != null && message.hasOwnProperty("agencyName"))
                    if (!$util.isString(message.agencyName))
                        return "agencyName: string expected";
                if (!$util.isString(message.sellerEmail))
                    return "sellerEmail: string expected";
                if (message.isMoatUnsampled != null && message.hasOwnProperty("isMoatUnsampled"))
                    if (typeof message.isMoatUnsampled !== "boolean")
                        return "isMoatUnsampled: boolean expected";
                if (message.version != null && message.hasOwnProperty("version"))
                    switch (message.version) {
                    default:
                        return "version: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                        break;
                    }
                return null;
            };

            /**
             * Creates a GetSalesforceOpportunityResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.GetSalesforceOpportunityResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.GetSalesforceOpportunityResponse} GetSalesforceOpportunityResponse
             */
            GetSalesforceOpportunityResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.GetSalesforceOpportunityResponse)
                    return object;
                var message = new $root.teads.api.GetSalesforceOpportunityResponse();
                if (object.opportunityId != null)
                    message.opportunityId = String(object.opportunityId);
                if (object.name != null)
                    message.name = String(object.name);
                if (object.agencyId != null)
                    if ($util.Long)
                        (message.agencyId = $util.Long.fromValue(object.agencyId)).unsigned = false;
                    else if (typeof object.agencyId === "string")
                        message.agencyId = parseInt(object.agencyId, 10);
                    else if (typeof object.agencyId === "number")
                        message.agencyId = object.agencyId;
                    else if (typeof object.agencyId === "object")
                        message.agencyId = new $util.LongBits(object.agencyId.low >>> 0, object.agencyId.high >>> 0).toNumber();
                if (object.advertiserId != null)
                    if ($util.Long)
                        (message.advertiserId = $util.Long.fromValue(object.advertiserId)).unsigned = false;
                    else if (typeof object.advertiserId === "string")
                        message.advertiserId = parseInt(object.advertiserId, 10);
                    else if (typeof object.advertiserId === "number")
                        message.advertiserId = object.advertiserId;
                    else if (typeof object.advertiserId === "object")
                        message.advertiserId = new $util.LongBits(object.advertiserId.low >>> 0, object.advertiserId.high >>> 0).toNumber();
                if (object.officeId != null)
                    if ($util.Long)
                        (message.officeId = $util.Long.fromValue(object.officeId)).unsigned = false;
                    else if (typeof object.officeId === "string")
                        message.officeId = parseInt(object.officeId, 10);
                    else if (typeof object.officeId === "number")
                        message.officeId = object.officeId;
                    else if (typeof object.officeId === "object")
                        message.officeId = new $util.LongBits(object.officeId.low >>> 0, object.officeId.high >>> 0).toNumber();
                if (object.opportunityCurrency != null)
                    message.opportunityCurrency = String(object.opportunityCurrency);
                if (object.opportunityTimezone != null)
                    message.opportunityTimezone = String(object.opportunityTimezone);
                if (object.invoiceReferenceNumber != null)
                    message.invoiceReferenceNumber = String(object.invoiceReferenceNumber);
                if (object.iabCategoryId != null)
                    if ($util.Long)
                        (message.iabCategoryId = $util.Long.fromValue(object.iabCategoryId)).unsigned = false;
                    else if (typeof object.iabCategoryId === "string")
                        message.iabCategoryId = parseInt(object.iabCategoryId, 10);
                    else if (typeof object.iabCategoryId === "number")
                        message.iabCategoryId = object.iabCategoryId;
                    else if (typeof object.iabCategoryId === "object")
                        message.iabCategoryId = new $util.LongBits(object.iabCategoryId.low >>> 0, object.iabCategoryId.high >>> 0).toNumber();
                if (object.opportunityLineItems) {
                    if (!Array.isArray(object.opportunityLineItems))
                        throw TypeError(".teads.api.GetSalesforceOpportunityResponse.opportunityLineItems: array expected");
                    message.opportunityLineItems = [];
                    for (var i = 0; i < object.opportunityLineItems.length; ++i) {
                        if (typeof object.opportunityLineItems[i] !== "object")
                            throw TypeError(".teads.api.GetSalesforceOpportunityResponse.opportunityLineItems: object expected");
                        message.opportunityLineItems[i] = $root.teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem.fromObject(object.opportunityLineItems[i]);
                    }
                }
                if (object.canBeSynchronized != null)
                    message.canBeSynchronized = Boolean(object.canBeSynchronized);
                if (object.advertiserName != null)
                    message.advertiserName = String(object.advertiserName);
                if (object.agencyName != null)
                    message.agencyName = String(object.agencyName);
                if (object.sellerEmail != null)
                    message.sellerEmail = String(object.sellerEmail);
                if (object.isMoatUnsampled != null)
                    message.isMoatUnsampled = Boolean(object.isMoatUnsampled);
                switch (object.version) {
                default:
                    if (typeof object.version === "number") {
                        message.version = object.version;
                        break;
                    }
                    break;
                case "VERSION_LEGACY_MANAGED":
                case 1:
                    message.version = 1;
                    break;
                case "VERSION_TAM_V1":
                case 2:
                    message.version = 2;
                    break;
                case "VERSION_TAM_V2":
                case 3:
                    message.version = 3;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a GetSalesforceOpportunityResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.GetSalesforceOpportunityResponse
             * @static
             * @param {teads.api.GetSalesforceOpportunityResponse} message GetSalesforceOpportunityResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GetSalesforceOpportunityResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.opportunityLineItems = [];
                if (options.defaults) {
                    object.opportunityId = "";
                    object.name = "";
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.agencyId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.agencyId = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.advertiserId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.advertiserId = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.officeId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.officeId = options.longs === String ? "0" : 0;
                    object.opportunityCurrency = "";
                    object.opportunityTimezone = "";
                    object.invoiceReferenceNumber = "";
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.iabCategoryId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.iabCategoryId = options.longs === String ? "0" : 0;
                    object.canBeSynchronized = false;
                    object.advertiserName = "";
                    object.agencyName = "";
                    object.sellerEmail = "";
                    object.isMoatUnsampled = false;
                    object.version = options.enums === String ? "VERSION_LEGACY_MANAGED" : 1;
                }
                if (message.opportunityId != null && message.hasOwnProperty("opportunityId"))
                    object.opportunityId = message.opportunityId;
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                if (message.agencyId != null && message.hasOwnProperty("agencyId"))
                    if (typeof message.agencyId === "number")
                        object.agencyId = options.longs === String ? String(message.agencyId) : message.agencyId;
                    else
                        object.agencyId = options.longs === String ? $util.Long.prototype.toString.call(message.agencyId) : options.longs === Number ? new $util.LongBits(message.agencyId.low >>> 0, message.agencyId.high >>> 0).toNumber() : message.agencyId;
                if (message.advertiserId != null && message.hasOwnProperty("advertiserId"))
                    if (typeof message.advertiserId === "number")
                        object.advertiserId = options.longs === String ? String(message.advertiserId) : message.advertiserId;
                    else
                        object.advertiserId = options.longs === String ? $util.Long.prototype.toString.call(message.advertiserId) : options.longs === Number ? new $util.LongBits(message.advertiserId.low >>> 0, message.advertiserId.high >>> 0).toNumber() : message.advertiserId;
                if (message.officeId != null && message.hasOwnProperty("officeId"))
                    if (typeof message.officeId === "number")
                        object.officeId = options.longs === String ? String(message.officeId) : message.officeId;
                    else
                        object.officeId = options.longs === String ? $util.Long.prototype.toString.call(message.officeId) : options.longs === Number ? new $util.LongBits(message.officeId.low >>> 0, message.officeId.high >>> 0).toNumber() : message.officeId;
                if (message.opportunityCurrency != null && message.hasOwnProperty("opportunityCurrency"))
                    object.opportunityCurrency = message.opportunityCurrency;
                if (message.opportunityTimezone != null && message.hasOwnProperty("opportunityTimezone"))
                    object.opportunityTimezone = message.opportunityTimezone;
                if (message.invoiceReferenceNumber != null && message.hasOwnProperty("invoiceReferenceNumber"))
                    object.invoiceReferenceNumber = message.invoiceReferenceNumber;
                if (message.iabCategoryId != null && message.hasOwnProperty("iabCategoryId"))
                    if (typeof message.iabCategoryId === "number")
                        object.iabCategoryId = options.longs === String ? String(message.iabCategoryId) : message.iabCategoryId;
                    else
                        object.iabCategoryId = options.longs === String ? $util.Long.prototype.toString.call(message.iabCategoryId) : options.longs === Number ? new $util.LongBits(message.iabCategoryId.low >>> 0, message.iabCategoryId.high >>> 0).toNumber() : message.iabCategoryId;
                if (message.opportunityLineItems && message.opportunityLineItems.length) {
                    object.opportunityLineItems = [];
                    for (var j = 0; j < message.opportunityLineItems.length; ++j)
                        object.opportunityLineItems[j] = $root.teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem.toObject(message.opportunityLineItems[j], options);
                }
                if (message.canBeSynchronized != null && message.hasOwnProperty("canBeSynchronized"))
                    object.canBeSynchronized = message.canBeSynchronized;
                if (message.advertiserName != null && message.hasOwnProperty("advertiserName"))
                    object.advertiserName = message.advertiserName;
                if (message.agencyName != null && message.hasOwnProperty("agencyName"))
                    object.agencyName = message.agencyName;
                if (message.sellerEmail != null && message.hasOwnProperty("sellerEmail"))
                    object.sellerEmail = message.sellerEmail;
                if (message.isMoatUnsampled != null && message.hasOwnProperty("isMoatUnsampled"))
                    object.isMoatUnsampled = message.isMoatUnsampled;
                if (message.version != null && message.hasOwnProperty("version"))
                    object.version = options.enums === String ? $root.teads.api.GetSalesforceOpportunityResponse.Version[message.version] === undefined ? message.version : $root.teads.api.GetSalesforceOpportunityResponse.Version[message.version] : message.version;
                return object;
            };

            /**
             * Converts this GetSalesforceOpportunityResponse to JSON.
             * @function toJSON
             * @memberof teads.api.GetSalesforceOpportunityResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GetSalesforceOpportunityResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GetSalesforceOpportunityResponse
             * @function getTypeUrl
             * @memberof teads.api.GetSalesforceOpportunityResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GetSalesforceOpportunityResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.GetSalesforceOpportunityResponse";
            };

            GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem = (function() {

                /**
                 * Properties of a SalesforceOpportunityLineItem.
                 * @memberof teads.api.GetSalesforceOpportunityResponse
                 * @interface ISalesforceOpportunityLineItem
                 * @property {string} id SalesforceOpportunityLineItem id
                 * @property {string} name SalesforceOpportunityLineItem name
                 * @property {teads.api.GetSalesforceOpportunityResponse.Objective} objective SalesforceOpportunityLineItem objective
                 * @property {google.protobuf.ITimestamp} startDate SalesforceOpportunityLineItem startDate
                 * @property {google.protobuf.ITimestamp} endDate SalesforceOpportunityLineItem endDate
                 * @property {number} budget SalesforceOpportunityLineItem budget
                 * @property {number} billableVolume SalesforceOpportunityLineItem billableVolume
                 * @property {number} freeBudget SalesforceOpportunityLineItem freeBudget
                 * @property {number} freeBillableVolume SalesforceOpportunityLineItem freeBillableVolume
                 * @property {string} salesforceGeo SalesforceOpportunityLineItem salesforceGeo
                 * @property {string|null} [salesforceCreatives] SalesforceOpportunityLineItem salesforceCreatives
                 * @property {teads.api.GetSalesforceOpportunityResponse.BillingModel|null} [billingModel] SalesforceOpportunityLineItem billingModel
                 * @property {number|null} [billingModelRate] SalesforceOpportunityLineItem billingModelRate
                 * @property {string|null} [billingEvent] SalesforceOpportunityLineItem billingEvent
                 * @property {teads.api.GetSalesforceOpportunityResponse.AuctionType|null} [auctionType] SalesforceOpportunityLineItem auctionType
                 * @property {teads.api.GetSalesforceOpportunityResponse.CreativeTypeFamily|null} [creativeTypeFamily] SalesforceOpportunityLineItem creativeTypeFamily
                 * @property {boolean|null} [isGuaranteed] SalesforceOpportunityLineItem isGuaranteed
                 * @property {teads.api.GetSalesforceOpportunityResponse.AdvertisingSolutionId} advertisingSolutionId SalesforceOpportunityLineItem advertisingSolutionId
                 */

                /**
                 * Constructs a new SalesforceOpportunityLineItem.
                 * @memberof teads.api.GetSalesforceOpportunityResponse
                 * @classdesc Represents a SalesforceOpportunityLineItem.
                 * @implements ISalesforceOpportunityLineItem
                 * @constructor
                 * @param {teads.api.GetSalesforceOpportunityResponse.ISalesforceOpportunityLineItem=} [properties] Properties to set
                 */
                function SalesforceOpportunityLineItem(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * SalesforceOpportunityLineItem id.
                 * @member {string} id
                 * @memberof teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem
                 * @instance
                 */
                SalesforceOpportunityLineItem.prototype.id = "";

                /**
                 * SalesforceOpportunityLineItem name.
                 * @member {string} name
                 * @memberof teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem
                 * @instance
                 */
                SalesforceOpportunityLineItem.prototype.name = "";

                /**
                 * SalesforceOpportunityLineItem objective.
                 * @member {teads.api.GetSalesforceOpportunityResponse.Objective} objective
                 * @memberof teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem
                 * @instance
                 */
                SalesforceOpportunityLineItem.prototype.objective = 1;

                /**
                 * SalesforceOpportunityLineItem startDate.
                 * @member {google.protobuf.ITimestamp} startDate
                 * @memberof teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem
                 * @instance
                 */
                SalesforceOpportunityLineItem.prototype.startDate = null;

                /**
                 * SalesforceOpportunityLineItem endDate.
                 * @member {google.protobuf.ITimestamp} endDate
                 * @memberof teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem
                 * @instance
                 */
                SalesforceOpportunityLineItem.prototype.endDate = null;

                /**
                 * SalesforceOpportunityLineItem budget.
                 * @member {number} budget
                 * @memberof teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem
                 * @instance
                 */
                SalesforceOpportunityLineItem.prototype.budget = 0;

                /**
                 * SalesforceOpportunityLineItem billableVolume.
                 * @member {number} billableVolume
                 * @memberof teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem
                 * @instance
                 */
                SalesforceOpportunityLineItem.prototype.billableVolume = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * SalesforceOpportunityLineItem freeBudget.
                 * @member {number} freeBudget
                 * @memberof teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem
                 * @instance
                 */
                SalesforceOpportunityLineItem.prototype.freeBudget = 0;

                /**
                 * SalesforceOpportunityLineItem freeBillableVolume.
                 * @member {number} freeBillableVolume
                 * @memberof teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem
                 * @instance
                 */
                SalesforceOpportunityLineItem.prototype.freeBillableVolume = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * SalesforceOpportunityLineItem salesforceGeo.
                 * @member {string} salesforceGeo
                 * @memberof teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem
                 * @instance
                 */
                SalesforceOpportunityLineItem.prototype.salesforceGeo = "";

                /**
                 * SalesforceOpportunityLineItem salesforceCreatives.
                 * @member {string} salesforceCreatives
                 * @memberof teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem
                 * @instance
                 */
                SalesforceOpportunityLineItem.prototype.salesforceCreatives = "";

                /**
                 * SalesforceOpportunityLineItem billingModel.
                 * @member {teads.api.GetSalesforceOpportunityResponse.BillingModel} billingModel
                 * @memberof teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem
                 * @instance
                 */
                SalesforceOpportunityLineItem.prototype.billingModel = 1;

                /**
                 * SalesforceOpportunityLineItem billingModelRate.
                 * @member {number} billingModelRate
                 * @memberof teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem
                 * @instance
                 */
                SalesforceOpportunityLineItem.prototype.billingModelRate = 0;

                /**
                 * SalesforceOpportunityLineItem billingEvent.
                 * @member {string} billingEvent
                 * @memberof teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem
                 * @instance
                 */
                SalesforceOpportunityLineItem.prototype.billingEvent = "";

                /**
                 * SalesforceOpportunityLineItem auctionType.
                 * @member {teads.api.GetSalesforceOpportunityResponse.AuctionType} auctionType
                 * @memberof teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem
                 * @instance
                 */
                SalesforceOpportunityLineItem.prototype.auctionType = 1;

                /**
                 * SalesforceOpportunityLineItem creativeTypeFamily.
                 * @member {teads.api.GetSalesforceOpportunityResponse.CreativeTypeFamily} creativeTypeFamily
                 * @memberof teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem
                 * @instance
                 */
                SalesforceOpportunityLineItem.prototype.creativeTypeFamily = 1;

                /**
                 * SalesforceOpportunityLineItem isGuaranteed.
                 * @member {boolean} isGuaranteed
                 * @memberof teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem
                 * @instance
                 */
                SalesforceOpportunityLineItem.prototype.isGuaranteed = false;

                /**
                 * SalesforceOpportunityLineItem advertisingSolutionId.
                 * @member {teads.api.GetSalesforceOpportunityResponse.AdvertisingSolutionId} advertisingSolutionId
                 * @memberof teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem
                 * @instance
                 */
                SalesforceOpportunityLineItem.prototype.advertisingSolutionId = 1;

                /**
                 * Creates a new SalesforceOpportunityLineItem instance using the specified properties.
                 * @function create
                 * @memberof teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem
                 * @static
                 * @param {teads.api.GetSalesforceOpportunityResponse.ISalesforceOpportunityLineItem=} [properties] Properties to set
                 * @returns {teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem} SalesforceOpportunityLineItem instance
                 */
                SalesforceOpportunityLineItem.create = function create(properties) {
                    return new SalesforceOpportunityLineItem(properties);
                };

                /**
                 * Encodes the specified SalesforceOpportunityLineItem message. Does not implicitly {@link teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem
                 * @static
                 * @param {teads.api.GetSalesforceOpportunityResponse.ISalesforceOpportunityLineItem} message SalesforceOpportunityLineItem message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SalesforceOpportunityLineItem.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.objective);
                    $root.google.protobuf.Timestamp.encode(message.startDate, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    $root.google.protobuf.Timestamp.encode(message.endDate, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    writer.uint32(/* id 6, wireType 1 =*/49).double(message.budget);
                    writer.uint32(/* id 7, wireType 0 =*/56).int64(message.billableVolume);
                    writer.uint32(/* id 8, wireType 1 =*/65).double(message.freeBudget);
                    writer.uint32(/* id 9, wireType 0 =*/72).int64(message.freeBillableVolume);
                    writer.uint32(/* id 10, wireType 2 =*/82).string(message.salesforceGeo);
                    if (message.salesforceCreatives != null && Object.hasOwnProperty.call(message, "salesforceCreatives"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.salesforceCreatives);
                    if (message.billingModel != null && Object.hasOwnProperty.call(message, "billingModel"))
                        writer.uint32(/* id 12, wireType 0 =*/96).int32(message.billingModel);
                    if (message.billingModelRate != null && Object.hasOwnProperty.call(message, "billingModelRate"))
                        writer.uint32(/* id 13, wireType 1 =*/105).double(message.billingModelRate);
                    if (message.billingEvent != null && Object.hasOwnProperty.call(message, "billingEvent"))
                        writer.uint32(/* id 14, wireType 2 =*/114).string(message.billingEvent);
                    if (message.auctionType != null && Object.hasOwnProperty.call(message, "auctionType"))
                        writer.uint32(/* id 15, wireType 0 =*/120).int32(message.auctionType);
                    if (message.creativeTypeFamily != null && Object.hasOwnProperty.call(message, "creativeTypeFamily"))
                        writer.uint32(/* id 16, wireType 0 =*/128).int32(message.creativeTypeFamily);
                    if (message.isGuaranteed != null && Object.hasOwnProperty.call(message, "isGuaranteed"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.isGuaranteed);
                    writer.uint32(/* id 18, wireType 0 =*/144).int32(message.advertisingSolutionId);
                    return writer;
                };

                /**
                 * Encodes the specified SalesforceOpportunityLineItem message, length delimited. Does not implicitly {@link teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem
                 * @static
                 * @param {teads.api.GetSalesforceOpportunityResponse.ISalesforceOpportunityLineItem} message SalesforceOpportunityLineItem message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SalesforceOpportunityLineItem.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a SalesforceOpportunityLineItem message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem} SalesforceOpportunityLineItem
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SalesforceOpportunityLineItem.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.id = reader.string();
                                break;
                            }
                        case 2: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.objective = reader.int32();
                                break;
                            }
                        case 4: {
                                message.startDate = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.endDate = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                break;
                            }
                        case 6: {
                                message.budget = reader.double();
                                break;
                            }
                        case 7: {
                                message.billableVolume = reader.int64();
                                break;
                            }
                        case 8: {
                                message.freeBudget = reader.double();
                                break;
                            }
                        case 9: {
                                message.freeBillableVolume = reader.int64();
                                break;
                            }
                        case 10: {
                                message.salesforceGeo = reader.string();
                                break;
                            }
                        case 11: {
                                message.salesforceCreatives = reader.string();
                                break;
                            }
                        case 12: {
                                message.billingModel = reader.int32();
                                break;
                            }
                        case 13: {
                                message.billingModelRate = reader.double();
                                break;
                            }
                        case 14: {
                                message.billingEvent = reader.string();
                                break;
                            }
                        case 15: {
                                message.auctionType = reader.int32();
                                break;
                            }
                        case 16: {
                                message.creativeTypeFamily = reader.int32();
                                break;
                            }
                        case 17: {
                                message.isGuaranteed = reader.bool();
                                break;
                            }
                        case 18: {
                                message.advertisingSolutionId = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("id"))
                        throw $util.ProtocolError("missing required 'id'", { instance: message });
                    if (!message.hasOwnProperty("name"))
                        throw $util.ProtocolError("missing required 'name'", { instance: message });
                    if (!message.hasOwnProperty("objective"))
                        throw $util.ProtocolError("missing required 'objective'", { instance: message });
                    if (!message.hasOwnProperty("startDate"))
                        throw $util.ProtocolError("missing required 'startDate'", { instance: message });
                    if (!message.hasOwnProperty("endDate"))
                        throw $util.ProtocolError("missing required 'endDate'", { instance: message });
                    if (!message.hasOwnProperty("budget"))
                        throw $util.ProtocolError("missing required 'budget'", { instance: message });
                    if (!message.hasOwnProperty("billableVolume"))
                        throw $util.ProtocolError("missing required 'billableVolume'", { instance: message });
                    if (!message.hasOwnProperty("freeBudget"))
                        throw $util.ProtocolError("missing required 'freeBudget'", { instance: message });
                    if (!message.hasOwnProperty("freeBillableVolume"))
                        throw $util.ProtocolError("missing required 'freeBillableVolume'", { instance: message });
                    if (!message.hasOwnProperty("salesforceGeo"))
                        throw $util.ProtocolError("missing required 'salesforceGeo'", { instance: message });
                    if (!message.hasOwnProperty("advertisingSolutionId"))
                        throw $util.ProtocolError("missing required 'advertisingSolutionId'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a SalesforceOpportunityLineItem message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem} SalesforceOpportunityLineItem
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SalesforceOpportunityLineItem.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a SalesforceOpportunityLineItem message.
                 * @function verify
                 * @memberof teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SalesforceOpportunityLineItem.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isString(message.id))
                        return "id: string expected";
                    if (!$util.isString(message.name))
                        return "name: string expected";
                    switch (message.objective) {
                    default:
                        return "objective: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                        break;
                    }
                    {
                        var error = $root.google.protobuf.Timestamp.verify(message.startDate);
                        if (error)
                            return "startDate." + error;
                    }
                    {
                        var error = $root.google.protobuf.Timestamp.verify(message.endDate);
                        if (error)
                            return "endDate." + error;
                    }
                    if (typeof message.budget !== "number")
                        return "budget: number expected";
                    if (!$util.isInteger(message.billableVolume) && !(message.billableVolume && $util.isInteger(message.billableVolume.low) && $util.isInteger(message.billableVolume.high)))
                        return "billableVolume: integer|Long expected";
                    if (typeof message.freeBudget !== "number")
                        return "freeBudget: number expected";
                    if (!$util.isInteger(message.freeBillableVolume) && !(message.freeBillableVolume && $util.isInteger(message.freeBillableVolume.low) && $util.isInteger(message.freeBillableVolume.high)))
                        return "freeBillableVolume: integer|Long expected";
                    if (!$util.isString(message.salesforceGeo))
                        return "salesforceGeo: string expected";
                    if (message.salesforceCreatives != null && message.hasOwnProperty("salesforceCreatives"))
                        if (!$util.isString(message.salesforceCreatives))
                            return "salesforceCreatives: string expected";
                    if (message.billingModel != null && message.hasOwnProperty("billingModel"))
                        switch (message.billingModel) {
                        default:
                            return "billingModel: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            break;
                        }
                    if (message.billingModelRate != null && message.hasOwnProperty("billingModelRate"))
                        if (typeof message.billingModelRate !== "number")
                            return "billingModelRate: number expected";
                    if (message.billingEvent != null && message.hasOwnProperty("billingEvent"))
                        if (!$util.isString(message.billingEvent))
                            return "billingEvent: string expected";
                    if (message.auctionType != null && message.hasOwnProperty("auctionType"))
                        switch (message.auctionType) {
                        default:
                            return "auctionType: enum value expected";
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.creativeTypeFamily != null && message.hasOwnProperty("creativeTypeFamily"))
                        switch (message.creativeTypeFamily) {
                        default:
                            return "creativeTypeFamily: enum value expected";
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.isGuaranteed != null && message.hasOwnProperty("isGuaranteed"))
                        if (typeof message.isGuaranteed !== "boolean")
                            return "isGuaranteed: boolean expected";
                    switch (message.advertisingSolutionId) {
                    default:
                        return "advertisingSolutionId: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                        break;
                    }
                    return null;
                };

                /**
                 * Creates a SalesforceOpportunityLineItem message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem} SalesforceOpportunityLineItem
                 */
                SalesforceOpportunityLineItem.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem)
                        return object;
                    var message = new $root.teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem();
                    if (object.id != null)
                        message.id = String(object.id);
                    if (object.name != null)
                        message.name = String(object.name);
                    switch (object.objective) {
                    default:
                        if (typeof object.objective === "number") {
                            message.objective = object.objective;
                            break;
                        }
                        break;
                    case "OBJECTIVE_TRAFFIC_ACQUISITION":
                    case 1:
                        message.objective = 1;
                        break;
                    case "OBJECTIVE_BRANDING":
                    case 2:
                        message.objective = 2;
                        break;
                    case "OBJECTIVE_CONVERSIONS":
                    case 3:
                        message.objective = 3;
                        break;
                    }
                    if (object.startDate != null) {
                        if (typeof object.startDate !== "object")
                            throw TypeError(".teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem.startDate: object expected");
                        message.startDate = $root.google.protobuf.Timestamp.fromObject(object.startDate);
                    }
                    if (object.endDate != null) {
                        if (typeof object.endDate !== "object")
                            throw TypeError(".teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem.endDate: object expected");
                        message.endDate = $root.google.protobuf.Timestamp.fromObject(object.endDate);
                    }
                    if (object.budget != null)
                        message.budget = Number(object.budget);
                    if (object.billableVolume != null)
                        if ($util.Long)
                            (message.billableVolume = $util.Long.fromValue(object.billableVolume)).unsigned = false;
                        else if (typeof object.billableVolume === "string")
                            message.billableVolume = parseInt(object.billableVolume, 10);
                        else if (typeof object.billableVolume === "number")
                            message.billableVolume = object.billableVolume;
                        else if (typeof object.billableVolume === "object")
                            message.billableVolume = new $util.LongBits(object.billableVolume.low >>> 0, object.billableVolume.high >>> 0).toNumber();
                    if (object.freeBudget != null)
                        message.freeBudget = Number(object.freeBudget);
                    if (object.freeBillableVolume != null)
                        if ($util.Long)
                            (message.freeBillableVolume = $util.Long.fromValue(object.freeBillableVolume)).unsigned = false;
                        else if (typeof object.freeBillableVolume === "string")
                            message.freeBillableVolume = parseInt(object.freeBillableVolume, 10);
                        else if (typeof object.freeBillableVolume === "number")
                            message.freeBillableVolume = object.freeBillableVolume;
                        else if (typeof object.freeBillableVolume === "object")
                            message.freeBillableVolume = new $util.LongBits(object.freeBillableVolume.low >>> 0, object.freeBillableVolume.high >>> 0).toNumber();
                    if (object.salesforceGeo != null)
                        message.salesforceGeo = String(object.salesforceGeo);
                    if (object.salesforceCreatives != null)
                        message.salesforceCreatives = String(object.salesforceCreatives);
                    switch (object.billingModel) {
                    default:
                        if (typeof object.billingModel === "number") {
                            message.billingModel = object.billingModel;
                            break;
                        }
                        break;
                    case "BILLING_MODEL_CPM":
                    case 1:
                        message.billingModel = 1;
                        break;
                    case "BILLING_MODEL_VCPM":
                    case 2:
                        message.billingModel = 2;
                        break;
                    case "BILLING_MODEL_CPCV":
                    case 3:
                        message.billingModel = 3;
                        break;
                    case "BILLING_MODEL_CPC":
                    case 4:
                        message.billingModel = 4;
                        break;
                    case "BILLING_MODEL_CPV":
                    case 5:
                        message.billingModel = 5;
                        break;
                    }
                    if (object.billingModelRate != null)
                        message.billingModelRate = Number(object.billingModelRate);
                    if (object.billingEvent != null)
                        message.billingEvent = String(object.billingEvent);
                    switch (object.auctionType) {
                    default:
                        if (typeof object.auctionType === "number") {
                            message.auctionType = object.auctionType;
                            break;
                        }
                        break;
                    case "AUCTION_TYPE_FIXED":
                    case 1:
                        message.auctionType = 1;
                        break;
                    case "AUCTION_TYPE_DYNAMIC":
                    case 2:
                        message.auctionType = 2;
                        break;
                    }
                    switch (object.creativeTypeFamily) {
                    default:
                        if (typeof object.creativeTypeFamily === "number") {
                            message.creativeTypeFamily = object.creativeTypeFamily;
                            break;
                        }
                        break;
                    case "CREATIVE_TYPE_FAMILY_VIDEO":
                    case 1:
                        message.creativeTypeFamily = 1;
                        break;
                    case "CREATIVE_TYPE_FAMILY_DISPLAY":
                    case 2:
                        message.creativeTypeFamily = 2;
                        break;
                    }
                    if (object.isGuaranteed != null)
                        message.isGuaranteed = Boolean(object.isGuaranteed);
                    switch (object.advertisingSolutionId) {
                    default:
                        if (typeof object.advertisingSolutionId === "number") {
                            message.advertisingSolutionId = object.advertisingSolutionId;
                            break;
                        }
                        break;
                    case "ADVERTISING_SOLUTION_ID_AWARENESS":
                    case 1:
                        message.advertisingSolutionId = 1;
                        break;
                    case "ADVERTISING_SOLUTION_ID_TA_CLICKS":
                    case 2:
                        message.advertisingSolutionId = 2;
                        break;
                    case "ADVERTISING_SOLUTION_ID_TA_VISITS":
                    case 3:
                        message.advertisingSolutionId = 3;
                        break;
                    case "ADVERTISING_SOLUTION_ID_TA_MIXED":
                    case 4:
                        message.advertisingSolutionId = 4;
                        break;
                    case "ADVERTISING_SOLUTION_ID_WEBSITE_CONVERSIONS":
                    case 5:
                        message.advertisingSolutionId = 5;
                        break;
                    case "ADVERTISING_SOLUTION_ID_SEAMLESS_COMMERCE":
                    case 6:
                        message.advertisingSolutionId = 6;
                        break;
                    case "ADVERTISING_SOLUTION_ID_TA_CLICKS_GUARANTEED_CPC":
                    case 7:
                        message.advertisingSolutionId = 7;
                        break;
                    case "ADVERTISING_SOLUTION_ID_TA_VISITS_GUARANTEED_CPC":
                    case 8:
                        message.advertisingSolutionId = 8;
                        break;
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a SalesforceOpportunityLineItem message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem
                 * @static
                 * @param {teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem} message SalesforceOpportunityLineItem
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SalesforceOpportunityLineItem.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.id = "";
                        object.name = "";
                        object.objective = options.enums === String ? "OBJECTIVE_TRAFFIC_ACQUISITION" : 1;
                        object.startDate = null;
                        object.endDate = null;
                        object.budget = 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.billableVolume = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.billableVolume = options.longs === String ? "0" : 0;
                        object.freeBudget = 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.freeBillableVolume = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.freeBillableVolume = options.longs === String ? "0" : 0;
                        object.salesforceGeo = "";
                        object.salesforceCreatives = "";
                        object.billingModel = options.enums === String ? "BILLING_MODEL_CPM" : 1;
                        object.billingModelRate = 0;
                        object.billingEvent = "";
                        object.auctionType = options.enums === String ? "AUCTION_TYPE_FIXED" : 1;
                        object.creativeTypeFamily = options.enums === String ? "CREATIVE_TYPE_FAMILY_VIDEO" : 1;
                        object.isGuaranteed = false;
                        object.advertisingSolutionId = options.enums === String ? "ADVERTISING_SOLUTION_ID_AWARENESS" : 1;
                    }
                    if (message.id != null && message.hasOwnProperty("id"))
                        object.id = message.id;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.objective != null && message.hasOwnProperty("objective"))
                        object.objective = options.enums === String ? $root.teads.api.GetSalesforceOpportunityResponse.Objective[message.objective] === undefined ? message.objective : $root.teads.api.GetSalesforceOpportunityResponse.Objective[message.objective] : message.objective;
                    if (message.startDate != null && message.hasOwnProperty("startDate"))
                        object.startDate = $root.google.protobuf.Timestamp.toObject(message.startDate, options);
                    if (message.endDate != null && message.hasOwnProperty("endDate"))
                        object.endDate = $root.google.protobuf.Timestamp.toObject(message.endDate, options);
                    if (message.budget != null && message.hasOwnProperty("budget"))
                        object.budget = options.json && !isFinite(message.budget) ? String(message.budget) : message.budget;
                    if (message.billableVolume != null && message.hasOwnProperty("billableVolume"))
                        if (typeof message.billableVolume === "number")
                            object.billableVolume = options.longs === String ? String(message.billableVolume) : message.billableVolume;
                        else
                            object.billableVolume = options.longs === String ? $util.Long.prototype.toString.call(message.billableVolume) : options.longs === Number ? new $util.LongBits(message.billableVolume.low >>> 0, message.billableVolume.high >>> 0).toNumber() : message.billableVolume;
                    if (message.freeBudget != null && message.hasOwnProperty("freeBudget"))
                        object.freeBudget = options.json && !isFinite(message.freeBudget) ? String(message.freeBudget) : message.freeBudget;
                    if (message.freeBillableVolume != null && message.hasOwnProperty("freeBillableVolume"))
                        if (typeof message.freeBillableVolume === "number")
                            object.freeBillableVolume = options.longs === String ? String(message.freeBillableVolume) : message.freeBillableVolume;
                        else
                            object.freeBillableVolume = options.longs === String ? $util.Long.prototype.toString.call(message.freeBillableVolume) : options.longs === Number ? new $util.LongBits(message.freeBillableVolume.low >>> 0, message.freeBillableVolume.high >>> 0).toNumber() : message.freeBillableVolume;
                    if (message.salesforceGeo != null && message.hasOwnProperty("salesforceGeo"))
                        object.salesforceGeo = message.salesforceGeo;
                    if (message.salesforceCreatives != null && message.hasOwnProperty("salesforceCreatives"))
                        object.salesforceCreatives = message.salesforceCreatives;
                    if (message.billingModel != null && message.hasOwnProperty("billingModel"))
                        object.billingModel = options.enums === String ? $root.teads.api.GetSalesforceOpportunityResponse.BillingModel[message.billingModel] === undefined ? message.billingModel : $root.teads.api.GetSalesforceOpportunityResponse.BillingModel[message.billingModel] : message.billingModel;
                    if (message.billingModelRate != null && message.hasOwnProperty("billingModelRate"))
                        object.billingModelRate = options.json && !isFinite(message.billingModelRate) ? String(message.billingModelRate) : message.billingModelRate;
                    if (message.billingEvent != null && message.hasOwnProperty("billingEvent"))
                        object.billingEvent = message.billingEvent;
                    if (message.auctionType != null && message.hasOwnProperty("auctionType"))
                        object.auctionType = options.enums === String ? $root.teads.api.GetSalesforceOpportunityResponse.AuctionType[message.auctionType] === undefined ? message.auctionType : $root.teads.api.GetSalesforceOpportunityResponse.AuctionType[message.auctionType] : message.auctionType;
                    if (message.creativeTypeFamily != null && message.hasOwnProperty("creativeTypeFamily"))
                        object.creativeTypeFamily = options.enums === String ? $root.teads.api.GetSalesforceOpportunityResponse.CreativeTypeFamily[message.creativeTypeFamily] === undefined ? message.creativeTypeFamily : $root.teads.api.GetSalesforceOpportunityResponse.CreativeTypeFamily[message.creativeTypeFamily] : message.creativeTypeFamily;
                    if (message.isGuaranteed != null && message.hasOwnProperty("isGuaranteed"))
                        object.isGuaranteed = message.isGuaranteed;
                    if (message.advertisingSolutionId != null && message.hasOwnProperty("advertisingSolutionId"))
                        object.advertisingSolutionId = options.enums === String ? $root.teads.api.GetSalesforceOpportunityResponse.AdvertisingSolutionId[message.advertisingSolutionId] === undefined ? message.advertisingSolutionId : $root.teads.api.GetSalesforceOpportunityResponse.AdvertisingSolutionId[message.advertisingSolutionId] : message.advertisingSolutionId;
                    return object;
                };

                /**
                 * Converts this SalesforceOpportunityLineItem to JSON.
                 * @function toJSON
                 * @memberof teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SalesforceOpportunityLineItem.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for SalesforceOpportunityLineItem
                 * @function getTypeUrl
                 * @memberof teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SalesforceOpportunityLineItem.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.GetSalesforceOpportunityResponse.SalesforceOpportunityLineItem";
                };

                return SalesforceOpportunityLineItem;
            })();

            /**
             * AdvertisingSolutionId enum.
             * @name teads.api.GetSalesforceOpportunityResponse.AdvertisingSolutionId
             * @enum {number}
             * @property {number} ADVERTISING_SOLUTION_ID_AWARENESS=1 ADVERTISING_SOLUTION_ID_AWARENESS value
             * @property {number} ADVERTISING_SOLUTION_ID_TA_CLICKS=2 ADVERTISING_SOLUTION_ID_TA_CLICKS value
             * @property {number} ADVERTISING_SOLUTION_ID_TA_VISITS=3 ADVERTISING_SOLUTION_ID_TA_VISITS value
             * @property {number} ADVERTISING_SOLUTION_ID_TA_MIXED=4 ADVERTISING_SOLUTION_ID_TA_MIXED value
             * @property {number} ADVERTISING_SOLUTION_ID_WEBSITE_CONVERSIONS=5 ADVERTISING_SOLUTION_ID_WEBSITE_CONVERSIONS value
             * @property {number} ADVERTISING_SOLUTION_ID_SEAMLESS_COMMERCE=6 ADVERTISING_SOLUTION_ID_SEAMLESS_COMMERCE value
             * @property {number} ADVERTISING_SOLUTION_ID_TA_CLICKS_GUARANTEED_CPC=7 ADVERTISING_SOLUTION_ID_TA_CLICKS_GUARANTEED_CPC value
             * @property {number} ADVERTISING_SOLUTION_ID_TA_VISITS_GUARANTEED_CPC=8 ADVERTISING_SOLUTION_ID_TA_VISITS_GUARANTEED_CPC value
             */
            GetSalesforceOpportunityResponse.AdvertisingSolutionId = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[1] = "ADVERTISING_SOLUTION_ID_AWARENESS"] = 1;
                values[valuesById[2] = "ADVERTISING_SOLUTION_ID_TA_CLICKS"] = 2;
                values[valuesById[3] = "ADVERTISING_SOLUTION_ID_TA_VISITS"] = 3;
                values[valuesById[4] = "ADVERTISING_SOLUTION_ID_TA_MIXED"] = 4;
                values[valuesById[5] = "ADVERTISING_SOLUTION_ID_WEBSITE_CONVERSIONS"] = 5;
                values[valuesById[6] = "ADVERTISING_SOLUTION_ID_SEAMLESS_COMMERCE"] = 6;
                values[valuesById[7] = "ADVERTISING_SOLUTION_ID_TA_CLICKS_GUARANTEED_CPC"] = 7;
                values[valuesById[8] = "ADVERTISING_SOLUTION_ID_TA_VISITS_GUARANTEED_CPC"] = 8;
                return values;
            })();

            /**
             * AuctionType enum.
             * @name teads.api.GetSalesforceOpportunityResponse.AuctionType
             * @enum {number}
             * @property {number} AUCTION_TYPE_FIXED=1 AUCTION_TYPE_FIXED value
             * @property {number} AUCTION_TYPE_DYNAMIC=2 AUCTION_TYPE_DYNAMIC value
             */
            GetSalesforceOpportunityResponse.AuctionType = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[1] = "AUCTION_TYPE_FIXED"] = 1;
                values[valuesById[2] = "AUCTION_TYPE_DYNAMIC"] = 2;
                return values;
            })();

            /**
             * BillingModel enum.
             * @name teads.api.GetSalesforceOpportunityResponse.BillingModel
             * @enum {number}
             * @property {number} BILLING_MODEL_CPM=1 BILLING_MODEL_CPM value
             * @property {number} BILLING_MODEL_VCPM=2 BILLING_MODEL_VCPM value
             * @property {number} BILLING_MODEL_CPCV=3 BILLING_MODEL_CPCV value
             * @property {number} BILLING_MODEL_CPC=4 BILLING_MODEL_CPC value
             * @property {number} BILLING_MODEL_CPV=5 BILLING_MODEL_CPV value
             */
            GetSalesforceOpportunityResponse.BillingModel = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[1] = "BILLING_MODEL_CPM"] = 1;
                values[valuesById[2] = "BILLING_MODEL_VCPM"] = 2;
                values[valuesById[3] = "BILLING_MODEL_CPCV"] = 3;
                values[valuesById[4] = "BILLING_MODEL_CPC"] = 4;
                values[valuesById[5] = "BILLING_MODEL_CPV"] = 5;
                return values;
            })();

            /**
             * CreativeTypeFamily enum.
             * @name teads.api.GetSalesforceOpportunityResponse.CreativeTypeFamily
             * @enum {number}
             * @property {number} CREATIVE_TYPE_FAMILY_VIDEO=1 CREATIVE_TYPE_FAMILY_VIDEO value
             * @property {number} CREATIVE_TYPE_FAMILY_DISPLAY=2 CREATIVE_TYPE_FAMILY_DISPLAY value
             */
            GetSalesforceOpportunityResponse.CreativeTypeFamily = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[1] = "CREATIVE_TYPE_FAMILY_VIDEO"] = 1;
                values[valuesById[2] = "CREATIVE_TYPE_FAMILY_DISPLAY"] = 2;
                return values;
            })();

            /**
             * Objective enum.
             * @name teads.api.GetSalesforceOpportunityResponse.Objective
             * @enum {number}
             * @property {number} OBJECTIVE_TRAFFIC_ACQUISITION=1 OBJECTIVE_TRAFFIC_ACQUISITION value
             * @property {number} OBJECTIVE_BRANDING=2 OBJECTIVE_BRANDING value
             * @property {number} OBJECTIVE_CONVERSIONS=3 OBJECTIVE_CONVERSIONS value
             */
            GetSalesforceOpportunityResponse.Objective = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[1] = "OBJECTIVE_TRAFFIC_ACQUISITION"] = 1;
                values[valuesById[2] = "OBJECTIVE_BRANDING"] = 2;
                values[valuesById[3] = "OBJECTIVE_CONVERSIONS"] = 3;
                return values;
            })();

            /**
             * Version enum.
             * @name teads.api.GetSalesforceOpportunityResponse.Version
             * @enum {number}
             * @property {number} VERSION_LEGACY_MANAGED=1 VERSION_LEGACY_MANAGED value
             * @property {number} VERSION_TAM_V1=2 VERSION_TAM_V1 value
             * @property {number} VERSION_TAM_V2=3 VERSION_TAM_V2 value
             */
            GetSalesforceOpportunityResponse.Version = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[1] = "VERSION_LEGACY_MANAGED"] = 1;
                values[valuesById[2] = "VERSION_TAM_V1"] = 2;
                values[valuesById[3] = "VERSION_TAM_V2"] = 3;
                return values;
            })();

            return GetSalesforceOpportunityResponse;
        })();

        api.GrantAdminRoleForBuyerRequest = (function() {

            /**
             * Properties of a GrantAdminRoleForBuyerRequest.
             * @memberof teads.api
             * @interface IGrantAdminRoleForBuyerRequest
             * @property {teads.api.ISecurityContext} securityContext GrantAdminRoleForBuyerRequest securityContext
             * @property {number} profileId GrantAdminRoleForBuyerRequest profileId
             * @property {number} entityId GrantAdminRoleForBuyerRequest entityId
             */

            /**
             * Constructs a new GrantAdminRoleForBuyerRequest.
             * @memberof teads.api
             * @classdesc Represents a GrantAdminRoleForBuyerRequest.
             * @implements IGrantAdminRoleForBuyerRequest
             * @constructor
             * @param {teads.api.IGrantAdminRoleForBuyerRequest=} [properties] Properties to set
             */
            function GrantAdminRoleForBuyerRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * GrantAdminRoleForBuyerRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.GrantAdminRoleForBuyerRequest
             * @instance
             */
            GrantAdminRoleForBuyerRequest.prototype.securityContext = null;

            /**
             * GrantAdminRoleForBuyerRequest profileId.
             * @member {number} profileId
             * @memberof teads.api.GrantAdminRoleForBuyerRequest
             * @instance
             */
            GrantAdminRoleForBuyerRequest.prototype.profileId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * GrantAdminRoleForBuyerRequest entityId.
             * @member {number} entityId
             * @memberof teads.api.GrantAdminRoleForBuyerRequest
             * @instance
             */
            GrantAdminRoleForBuyerRequest.prototype.entityId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new GrantAdminRoleForBuyerRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.GrantAdminRoleForBuyerRequest
             * @static
             * @param {teads.api.IGrantAdminRoleForBuyerRequest=} [properties] Properties to set
             * @returns {teads.api.GrantAdminRoleForBuyerRequest} GrantAdminRoleForBuyerRequest instance
             */
            GrantAdminRoleForBuyerRequest.create = function create(properties) {
                return new GrantAdminRoleForBuyerRequest(properties);
            };

            /**
             * Encodes the specified GrantAdminRoleForBuyerRequest message. Does not implicitly {@link teads.api.GrantAdminRoleForBuyerRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.GrantAdminRoleForBuyerRequest
             * @static
             * @param {teads.api.IGrantAdminRoleForBuyerRequest} message GrantAdminRoleForBuyerRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GrantAdminRoleForBuyerRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.profileId);
                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.entityId);
                return writer;
            };

            /**
             * Encodes the specified GrantAdminRoleForBuyerRequest message, length delimited. Does not implicitly {@link teads.api.GrantAdminRoleForBuyerRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.GrantAdminRoleForBuyerRequest
             * @static
             * @param {teads.api.IGrantAdminRoleForBuyerRequest} message GrantAdminRoleForBuyerRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GrantAdminRoleForBuyerRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GrantAdminRoleForBuyerRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.GrantAdminRoleForBuyerRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.GrantAdminRoleForBuyerRequest} GrantAdminRoleForBuyerRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GrantAdminRoleForBuyerRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.GrantAdminRoleForBuyerRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.profileId = reader.int64();
                            break;
                        }
                    case 3: {
                            message.entityId = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("profileId"))
                    throw $util.ProtocolError("missing required 'profileId'", { instance: message });
                if (!message.hasOwnProperty("entityId"))
                    throw $util.ProtocolError("missing required 'entityId'", { instance: message });
                return message;
            };

            /**
             * Decodes a GrantAdminRoleForBuyerRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.GrantAdminRoleForBuyerRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.GrantAdminRoleForBuyerRequest} GrantAdminRoleForBuyerRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GrantAdminRoleForBuyerRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GrantAdminRoleForBuyerRequest message.
             * @function verify
             * @memberof teads.api.GrantAdminRoleForBuyerRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GrantAdminRoleForBuyerRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.profileId) && !(message.profileId && $util.isInteger(message.profileId.low) && $util.isInteger(message.profileId.high)))
                    return "profileId: integer|Long expected";
                if (!$util.isInteger(message.entityId) && !(message.entityId && $util.isInteger(message.entityId.low) && $util.isInteger(message.entityId.high)))
                    return "entityId: integer|Long expected";
                return null;
            };

            /**
             * Creates a GrantAdminRoleForBuyerRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.GrantAdminRoleForBuyerRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.GrantAdminRoleForBuyerRequest} GrantAdminRoleForBuyerRequest
             */
            GrantAdminRoleForBuyerRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.GrantAdminRoleForBuyerRequest)
                    return object;
                var message = new $root.teads.api.GrantAdminRoleForBuyerRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.GrantAdminRoleForBuyerRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.profileId != null)
                    if ($util.Long)
                        (message.profileId = $util.Long.fromValue(object.profileId)).unsigned = false;
                    else if (typeof object.profileId === "string")
                        message.profileId = parseInt(object.profileId, 10);
                    else if (typeof object.profileId === "number")
                        message.profileId = object.profileId;
                    else if (typeof object.profileId === "object")
                        message.profileId = new $util.LongBits(object.profileId.low >>> 0, object.profileId.high >>> 0).toNumber();
                if (object.entityId != null)
                    if ($util.Long)
                        (message.entityId = $util.Long.fromValue(object.entityId)).unsigned = false;
                    else if (typeof object.entityId === "string")
                        message.entityId = parseInt(object.entityId, 10);
                    else if (typeof object.entityId === "number")
                        message.entityId = object.entityId;
                    else if (typeof object.entityId === "object")
                        message.entityId = new $util.LongBits(object.entityId.low >>> 0, object.entityId.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from a GrantAdminRoleForBuyerRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.GrantAdminRoleForBuyerRequest
             * @static
             * @param {teads.api.GrantAdminRoleForBuyerRequest} message GrantAdminRoleForBuyerRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GrantAdminRoleForBuyerRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.profileId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.profileId = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.entityId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.entityId = options.longs === String ? "0" : 0;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.profileId != null && message.hasOwnProperty("profileId"))
                    if (typeof message.profileId === "number")
                        object.profileId = options.longs === String ? String(message.profileId) : message.profileId;
                    else
                        object.profileId = options.longs === String ? $util.Long.prototype.toString.call(message.profileId) : options.longs === Number ? new $util.LongBits(message.profileId.low >>> 0, message.profileId.high >>> 0).toNumber() : message.profileId;
                if (message.entityId != null && message.hasOwnProperty("entityId"))
                    if (typeof message.entityId === "number")
                        object.entityId = options.longs === String ? String(message.entityId) : message.entityId;
                    else
                        object.entityId = options.longs === String ? $util.Long.prototype.toString.call(message.entityId) : options.longs === Number ? new $util.LongBits(message.entityId.low >>> 0, message.entityId.high >>> 0).toNumber() : message.entityId;
                return object;
            };

            /**
             * Converts this GrantAdminRoleForBuyerRequest to JSON.
             * @function toJSON
             * @memberof teads.api.GrantAdminRoleForBuyerRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GrantAdminRoleForBuyerRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GrantAdminRoleForBuyerRequest
             * @function getTypeUrl
             * @memberof teads.api.GrantAdminRoleForBuyerRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GrantAdminRoleForBuyerRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.GrantAdminRoleForBuyerRequest";
            };

            return GrantAdminRoleForBuyerRequest;
        })();

        api.GrantAdminRoleForBuyerResponse = (function() {

            /**
             * Properties of a GrantAdminRoleForBuyerResponse.
             * @memberof teads.api
             * @interface IGrantAdminRoleForBuyerResponse
             */

            /**
             * Constructs a new GrantAdminRoleForBuyerResponse.
             * @memberof teads.api
             * @classdesc Represents a GrantAdminRoleForBuyerResponse.
             * @implements IGrantAdminRoleForBuyerResponse
             * @constructor
             * @param {teads.api.IGrantAdminRoleForBuyerResponse=} [properties] Properties to set
             */
            function GrantAdminRoleForBuyerResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Creates a new GrantAdminRoleForBuyerResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.GrantAdminRoleForBuyerResponse
             * @static
             * @param {teads.api.IGrantAdminRoleForBuyerResponse=} [properties] Properties to set
             * @returns {teads.api.GrantAdminRoleForBuyerResponse} GrantAdminRoleForBuyerResponse instance
             */
            GrantAdminRoleForBuyerResponse.create = function create(properties) {
                return new GrantAdminRoleForBuyerResponse(properties);
            };

            /**
             * Encodes the specified GrantAdminRoleForBuyerResponse message. Does not implicitly {@link teads.api.GrantAdminRoleForBuyerResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.GrantAdminRoleForBuyerResponse
             * @static
             * @param {teads.api.IGrantAdminRoleForBuyerResponse} message GrantAdminRoleForBuyerResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GrantAdminRoleForBuyerResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified GrantAdminRoleForBuyerResponse message, length delimited. Does not implicitly {@link teads.api.GrantAdminRoleForBuyerResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.GrantAdminRoleForBuyerResponse
             * @static
             * @param {teads.api.IGrantAdminRoleForBuyerResponse} message GrantAdminRoleForBuyerResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            GrantAdminRoleForBuyerResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a GrantAdminRoleForBuyerResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.GrantAdminRoleForBuyerResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.GrantAdminRoleForBuyerResponse} GrantAdminRoleForBuyerResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GrantAdminRoleForBuyerResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.GrantAdminRoleForBuyerResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a GrantAdminRoleForBuyerResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.GrantAdminRoleForBuyerResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.GrantAdminRoleForBuyerResponse} GrantAdminRoleForBuyerResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            GrantAdminRoleForBuyerResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a GrantAdminRoleForBuyerResponse message.
             * @function verify
             * @memberof teads.api.GrantAdminRoleForBuyerResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            GrantAdminRoleForBuyerResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates a GrantAdminRoleForBuyerResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.GrantAdminRoleForBuyerResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.GrantAdminRoleForBuyerResponse} GrantAdminRoleForBuyerResponse
             */
            GrantAdminRoleForBuyerResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.GrantAdminRoleForBuyerResponse)
                    return object;
                return new $root.teads.api.GrantAdminRoleForBuyerResponse();
            };

            /**
             * Creates a plain object from a GrantAdminRoleForBuyerResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.GrantAdminRoleForBuyerResponse
             * @static
             * @param {teads.api.GrantAdminRoleForBuyerResponse} message GrantAdminRoleForBuyerResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            GrantAdminRoleForBuyerResponse.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this GrantAdminRoleForBuyerResponse to JSON.
             * @function toJSON
             * @memberof teads.api.GrantAdminRoleForBuyerResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            GrantAdminRoleForBuyerResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for GrantAdminRoleForBuyerResponse
             * @function getTypeUrl
             * @memberof teads.api.GrantAdminRoleForBuyerResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            GrantAdminRoleForBuyerResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.GrantAdminRoleForBuyerResponse";
            };

            return GrantAdminRoleForBuyerResponse;
        })();

        api.ListCustomTargetingRulesForCampaignRequest = (function() {

            /**
             * Properties of a ListCustomTargetingRulesForCampaignRequest.
             * @memberof teads.api
             * @interface IListCustomTargetingRulesForCampaignRequest
             * @property {teads.api.ISecurityContext} securityContext ListCustomTargetingRulesForCampaignRequest securityContext
             * @property {number} campaignId ListCustomTargetingRulesForCampaignRequest campaignId
             */

            /**
             * Constructs a new ListCustomTargetingRulesForCampaignRequest.
             * @memberof teads.api
             * @classdesc Represents a ListCustomTargetingRulesForCampaignRequest.
             * @implements IListCustomTargetingRulesForCampaignRequest
             * @constructor
             * @param {teads.api.IListCustomTargetingRulesForCampaignRequest=} [properties] Properties to set
             */
            function ListCustomTargetingRulesForCampaignRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * ListCustomTargetingRulesForCampaignRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.ListCustomTargetingRulesForCampaignRequest
             * @instance
             */
            ListCustomTargetingRulesForCampaignRequest.prototype.securityContext = null;

            /**
             * ListCustomTargetingRulesForCampaignRequest campaignId.
             * @member {number} campaignId
             * @memberof teads.api.ListCustomTargetingRulesForCampaignRequest
             * @instance
             */
            ListCustomTargetingRulesForCampaignRequest.prototype.campaignId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new ListCustomTargetingRulesForCampaignRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.ListCustomTargetingRulesForCampaignRequest
             * @static
             * @param {teads.api.IListCustomTargetingRulesForCampaignRequest=} [properties] Properties to set
             * @returns {teads.api.ListCustomTargetingRulesForCampaignRequest} ListCustomTargetingRulesForCampaignRequest instance
             */
            ListCustomTargetingRulesForCampaignRequest.create = function create(properties) {
                return new ListCustomTargetingRulesForCampaignRequest(properties);
            };

            /**
             * Encodes the specified ListCustomTargetingRulesForCampaignRequest message. Does not implicitly {@link teads.api.ListCustomTargetingRulesForCampaignRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.ListCustomTargetingRulesForCampaignRequest
             * @static
             * @param {teads.api.IListCustomTargetingRulesForCampaignRequest} message ListCustomTargetingRulesForCampaignRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ListCustomTargetingRulesForCampaignRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.campaignId);
                return writer;
            };

            /**
             * Encodes the specified ListCustomTargetingRulesForCampaignRequest message, length delimited. Does not implicitly {@link teads.api.ListCustomTargetingRulesForCampaignRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.ListCustomTargetingRulesForCampaignRequest
             * @static
             * @param {teads.api.IListCustomTargetingRulesForCampaignRequest} message ListCustomTargetingRulesForCampaignRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ListCustomTargetingRulesForCampaignRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a ListCustomTargetingRulesForCampaignRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.ListCustomTargetingRulesForCampaignRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.ListCustomTargetingRulesForCampaignRequest} ListCustomTargetingRulesForCampaignRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ListCustomTargetingRulesForCampaignRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.ListCustomTargetingRulesForCampaignRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.campaignId = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("campaignId"))
                    throw $util.ProtocolError("missing required 'campaignId'", { instance: message });
                return message;
            };

            /**
             * Decodes a ListCustomTargetingRulesForCampaignRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.ListCustomTargetingRulesForCampaignRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.ListCustomTargetingRulesForCampaignRequest} ListCustomTargetingRulesForCampaignRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ListCustomTargetingRulesForCampaignRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a ListCustomTargetingRulesForCampaignRequest message.
             * @function verify
             * @memberof teads.api.ListCustomTargetingRulesForCampaignRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ListCustomTargetingRulesForCampaignRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.campaignId) && !(message.campaignId && $util.isInteger(message.campaignId.low) && $util.isInteger(message.campaignId.high)))
                    return "campaignId: integer|Long expected";
                return null;
            };

            /**
             * Creates a ListCustomTargetingRulesForCampaignRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.ListCustomTargetingRulesForCampaignRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.ListCustomTargetingRulesForCampaignRequest} ListCustomTargetingRulesForCampaignRequest
             */
            ListCustomTargetingRulesForCampaignRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.ListCustomTargetingRulesForCampaignRequest)
                    return object;
                var message = new $root.teads.api.ListCustomTargetingRulesForCampaignRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.ListCustomTargetingRulesForCampaignRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.campaignId != null)
                    if ($util.Long)
                        (message.campaignId = $util.Long.fromValue(object.campaignId)).unsigned = false;
                    else if (typeof object.campaignId === "string")
                        message.campaignId = parseInt(object.campaignId, 10);
                    else if (typeof object.campaignId === "number")
                        message.campaignId = object.campaignId;
                    else if (typeof object.campaignId === "object")
                        message.campaignId = new $util.LongBits(object.campaignId.low >>> 0, object.campaignId.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from a ListCustomTargetingRulesForCampaignRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.ListCustomTargetingRulesForCampaignRequest
             * @static
             * @param {teads.api.ListCustomTargetingRulesForCampaignRequest} message ListCustomTargetingRulesForCampaignRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ListCustomTargetingRulesForCampaignRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.campaignId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.campaignId = options.longs === String ? "0" : 0;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.campaignId != null && message.hasOwnProperty("campaignId"))
                    if (typeof message.campaignId === "number")
                        object.campaignId = options.longs === String ? String(message.campaignId) : message.campaignId;
                    else
                        object.campaignId = options.longs === String ? $util.Long.prototype.toString.call(message.campaignId) : options.longs === Number ? new $util.LongBits(message.campaignId.low >>> 0, message.campaignId.high >>> 0).toNumber() : message.campaignId;
                return object;
            };

            /**
             * Converts this ListCustomTargetingRulesForCampaignRequest to JSON.
             * @function toJSON
             * @memberof teads.api.ListCustomTargetingRulesForCampaignRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ListCustomTargetingRulesForCampaignRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for ListCustomTargetingRulesForCampaignRequest
             * @function getTypeUrl
             * @memberof teads.api.ListCustomTargetingRulesForCampaignRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ListCustomTargetingRulesForCampaignRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.ListCustomTargetingRulesForCampaignRequest";
            };

            return ListCustomTargetingRulesForCampaignRequest;
        })();

        api.ListCustomTargetingRulesForCampaignResponse = (function() {

            /**
             * Properties of a ListCustomTargetingRulesForCampaignResponse.
             * @memberof teads.api
             * @interface IListCustomTargetingRulesForCampaignResponse
             * @property {Array.<teads.api.ListCustomTargetingRulesForCampaignResponse.IRule>|null} [rules] ListCustomTargetingRulesForCampaignResponse rules
             */

            /**
             * Constructs a new ListCustomTargetingRulesForCampaignResponse.
             * @memberof teads.api
             * @classdesc Represents a ListCustomTargetingRulesForCampaignResponse.
             * @implements IListCustomTargetingRulesForCampaignResponse
             * @constructor
             * @param {teads.api.IListCustomTargetingRulesForCampaignResponse=} [properties] Properties to set
             */
            function ListCustomTargetingRulesForCampaignResponse(properties) {
                this.rules = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * ListCustomTargetingRulesForCampaignResponse rules.
             * @member {Array.<teads.api.ListCustomTargetingRulesForCampaignResponse.IRule>} rules
             * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse
             * @instance
             */
            ListCustomTargetingRulesForCampaignResponse.prototype.rules = $util.emptyArray;

            /**
             * Creates a new ListCustomTargetingRulesForCampaignResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse
             * @static
             * @param {teads.api.IListCustomTargetingRulesForCampaignResponse=} [properties] Properties to set
             * @returns {teads.api.ListCustomTargetingRulesForCampaignResponse} ListCustomTargetingRulesForCampaignResponse instance
             */
            ListCustomTargetingRulesForCampaignResponse.create = function create(properties) {
                return new ListCustomTargetingRulesForCampaignResponse(properties);
            };

            /**
             * Encodes the specified ListCustomTargetingRulesForCampaignResponse message. Does not implicitly {@link teads.api.ListCustomTargetingRulesForCampaignResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse
             * @static
             * @param {teads.api.IListCustomTargetingRulesForCampaignResponse} message ListCustomTargetingRulesForCampaignResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ListCustomTargetingRulesForCampaignResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.rules != null && message.rules.length)
                    for (var i = 0; i < message.rules.length; ++i)
                        $root.teads.api.ListCustomTargetingRulesForCampaignResponse.Rule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified ListCustomTargetingRulesForCampaignResponse message, length delimited. Does not implicitly {@link teads.api.ListCustomTargetingRulesForCampaignResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse
             * @static
             * @param {teads.api.IListCustomTargetingRulesForCampaignResponse} message ListCustomTargetingRulesForCampaignResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ListCustomTargetingRulesForCampaignResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a ListCustomTargetingRulesForCampaignResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.ListCustomTargetingRulesForCampaignResponse} ListCustomTargetingRulesForCampaignResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ListCustomTargetingRulesForCampaignResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.ListCustomTargetingRulesForCampaignResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            if (!(message.rules && message.rules.length))
                                message.rules = [];
                            message.rules.push($root.teads.api.ListCustomTargetingRulesForCampaignResponse.Rule.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a ListCustomTargetingRulesForCampaignResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.ListCustomTargetingRulesForCampaignResponse} ListCustomTargetingRulesForCampaignResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ListCustomTargetingRulesForCampaignResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a ListCustomTargetingRulesForCampaignResponse message.
             * @function verify
             * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ListCustomTargetingRulesForCampaignResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.rules != null && message.hasOwnProperty("rules")) {
                    if (!Array.isArray(message.rules))
                        return "rules: array expected";
                    for (var i = 0; i < message.rules.length; ++i) {
                        var error = $root.teads.api.ListCustomTargetingRulesForCampaignResponse.Rule.verify(message.rules[i]);
                        if (error)
                            return "rules." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a ListCustomTargetingRulesForCampaignResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.ListCustomTargetingRulesForCampaignResponse} ListCustomTargetingRulesForCampaignResponse
             */
            ListCustomTargetingRulesForCampaignResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.ListCustomTargetingRulesForCampaignResponse)
                    return object;
                var message = new $root.teads.api.ListCustomTargetingRulesForCampaignResponse();
                if (object.rules) {
                    if (!Array.isArray(object.rules))
                        throw TypeError(".teads.api.ListCustomTargetingRulesForCampaignResponse.rules: array expected");
                    message.rules = [];
                    for (var i = 0; i < object.rules.length; ++i) {
                        if (typeof object.rules[i] !== "object")
                            throw TypeError(".teads.api.ListCustomTargetingRulesForCampaignResponse.rules: object expected");
                        message.rules[i] = $root.teads.api.ListCustomTargetingRulesForCampaignResponse.Rule.fromObject(object.rules[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a ListCustomTargetingRulesForCampaignResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse
             * @static
             * @param {teads.api.ListCustomTargetingRulesForCampaignResponse} message ListCustomTargetingRulesForCampaignResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ListCustomTargetingRulesForCampaignResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.rules = [];
                if (message.rules && message.rules.length) {
                    object.rules = [];
                    for (var j = 0; j < message.rules.length; ++j)
                        object.rules[j] = $root.teads.api.ListCustomTargetingRulesForCampaignResponse.Rule.toObject(message.rules[j], options);
                }
                return object;
            };

            /**
             * Converts this ListCustomTargetingRulesForCampaignResponse to JSON.
             * @function toJSON
             * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ListCustomTargetingRulesForCampaignResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for ListCustomTargetingRulesForCampaignResponse
             * @function getTypeUrl
             * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ListCustomTargetingRulesForCampaignResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.ListCustomTargetingRulesForCampaignResponse";
            };

            ListCustomTargetingRulesForCampaignResponse.Reason = (function() {

                /**
                 * Properties of a Reason.
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse
                 * @interface IReason
                 * @property {number} id Reason id
                 * @property {string} label Reason label
                 */

                /**
                 * Constructs a new Reason.
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse
                 * @classdesc Represents a Reason.
                 * @implements IReason
                 * @constructor
                 * @param {teads.api.ListCustomTargetingRulesForCampaignResponse.IReason=} [properties] Properties to set
                 */
                function Reason(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Reason id.
                 * @member {number} id
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Reason
                 * @instance
                 */
                Reason.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * Reason label.
                 * @member {string} label
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Reason
                 * @instance
                 */
                Reason.prototype.label = "";

                /**
                 * Creates a new Reason instance using the specified properties.
                 * @function create
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Reason
                 * @static
                 * @param {teads.api.ListCustomTargetingRulesForCampaignResponse.IReason=} [properties] Properties to set
                 * @returns {teads.api.ListCustomTargetingRulesForCampaignResponse.Reason} Reason instance
                 */
                Reason.create = function create(properties) {
                    return new Reason(properties);
                };

                /**
                 * Encodes the specified Reason message. Does not implicitly {@link teads.api.ListCustomTargetingRulesForCampaignResponse.Reason.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Reason
                 * @static
                 * @param {teads.api.ListCustomTargetingRulesForCampaignResponse.IReason} message Reason message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Reason.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.id);
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.label);
                    return writer;
                };

                /**
                 * Encodes the specified Reason message, length delimited. Does not implicitly {@link teads.api.ListCustomTargetingRulesForCampaignResponse.Reason.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Reason
                 * @static
                 * @param {teads.api.ListCustomTargetingRulesForCampaignResponse.IReason} message Reason message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Reason.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a Reason message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Reason
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.ListCustomTargetingRulesForCampaignResponse.Reason} Reason
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Reason.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.ListCustomTargetingRulesForCampaignResponse.Reason();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.id = reader.int64();
                                break;
                            }
                        case 2: {
                                message.label = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("id"))
                        throw $util.ProtocolError("missing required 'id'", { instance: message });
                    if (!message.hasOwnProperty("label"))
                        throw $util.ProtocolError("missing required 'label'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a Reason message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Reason
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.ListCustomTargetingRulesForCampaignResponse.Reason} Reason
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Reason.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a Reason message.
                 * @function verify
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Reason
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Reason.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.id) && !(message.id && $util.isInteger(message.id.low) && $util.isInteger(message.id.high)))
                        return "id: integer|Long expected";
                    if (!$util.isString(message.label))
                        return "label: string expected";
                    return null;
                };

                /**
                 * Creates a Reason message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Reason
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.ListCustomTargetingRulesForCampaignResponse.Reason} Reason
                 */
                Reason.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.ListCustomTargetingRulesForCampaignResponse.Reason)
                        return object;
                    var message = new $root.teads.api.ListCustomTargetingRulesForCampaignResponse.Reason();
                    if (object.id != null)
                        if ($util.Long)
                            (message.id = $util.Long.fromValue(object.id)).unsigned = false;
                        else if (typeof object.id === "string")
                            message.id = parseInt(object.id, 10);
                        else if (typeof object.id === "number")
                            message.id = object.id;
                        else if (typeof object.id === "object")
                            message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber();
                    if (object.label != null)
                        message.label = String(object.label);
                    return message;
                };

                /**
                 * Creates a plain object from a Reason message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Reason
                 * @static
                 * @param {teads.api.ListCustomTargetingRulesForCampaignResponse.Reason} message Reason
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Reason.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.id = options.longs === String ? "0" : 0;
                        object.label = "";
                    }
                    if (message.id != null && message.hasOwnProperty("id"))
                        if (typeof message.id === "number")
                            object.id = options.longs === String ? String(message.id) : message.id;
                        else
                            object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber() : message.id;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = message.label;
                    return object;
                };

                /**
                 * Converts this Reason to JSON.
                 * @function toJSON
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Reason
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Reason.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for Reason
                 * @function getTypeUrl
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Reason
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Reason.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.ListCustomTargetingRulesForCampaignResponse.Reason";
                };

                return Reason;
            })();

            ListCustomTargetingRulesForCampaignResponse.Rule = (function() {

                /**
                 * Properties of a Rule.
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse
                 * @interface IRule
                 * @property {number} id Rule id
                 * @property {string} name Rule name
                 * @property {string} tblString Rule tblString
                 * @property {teads.api.CustomTargetingRuleAudiencesDeliveryType} demographicAudiencesDeliveryType Rule demographicAudiencesDeliveryType
                 * @property {teads.api.CustomTargetingRuleAudiencesAccuracyLevel} otherAudiencesAccuracyLevel Rule otherAudiencesAccuracyLevel
                 * @property {boolean} cookielessCriteriaOnly Rule cookielessCriteriaOnly
                 * @property {string} description Rule description
                 * @property {teads.api.ListCustomTargetingRulesForCampaignResponse.IReason} reason Rule reason
                 * @property {teads.api.CustomTargetingEnvironmentChannel|null} [channel] Rule channel
                 */

                /**
                 * Constructs a new Rule.
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse
                 * @classdesc Represents a Rule.
                 * @implements IRule
                 * @constructor
                 * @param {teads.api.ListCustomTargetingRulesForCampaignResponse.IRule=} [properties] Properties to set
                 */
                function Rule(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Rule id.
                 * @member {number} id
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Rule
                 * @instance
                 */
                Rule.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * Rule name.
                 * @member {string} name
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Rule
                 * @instance
                 */
                Rule.prototype.name = "";

                /**
                 * Rule tblString.
                 * @member {string} tblString
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Rule
                 * @instance
                 */
                Rule.prototype.tblString = "";

                /**
                 * Rule demographicAudiencesDeliveryType.
                 * @member {teads.api.CustomTargetingRuleAudiencesDeliveryType} demographicAudiencesDeliveryType
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Rule
                 * @instance
                 */
                Rule.prototype.demographicAudiencesDeliveryType = 2;

                /**
                 * Rule otherAudiencesAccuracyLevel.
                 * @member {teads.api.CustomTargetingRuleAudiencesAccuracyLevel} otherAudiencesAccuracyLevel
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Rule
                 * @instance
                 */
                Rule.prototype.otherAudiencesAccuracyLevel = 1;

                /**
                 * Rule cookielessCriteriaOnly.
                 * @member {boolean} cookielessCriteriaOnly
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Rule
                 * @instance
                 */
                Rule.prototype.cookielessCriteriaOnly = false;

                /**
                 * Rule description.
                 * @member {string} description
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Rule
                 * @instance
                 */
                Rule.prototype.description = "";

                /**
                 * Rule reason.
                 * @member {teads.api.ListCustomTargetingRulesForCampaignResponse.IReason} reason
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Rule
                 * @instance
                 */
                Rule.prototype.reason = null;

                /**
                 * Rule channel.
                 * @member {teads.api.CustomTargetingEnvironmentChannel} channel
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Rule
                 * @instance
                 */
                Rule.prototype.channel = 1;

                /**
                 * Creates a new Rule instance using the specified properties.
                 * @function create
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Rule
                 * @static
                 * @param {teads.api.ListCustomTargetingRulesForCampaignResponse.IRule=} [properties] Properties to set
                 * @returns {teads.api.ListCustomTargetingRulesForCampaignResponse.Rule} Rule instance
                 */
                Rule.create = function create(properties) {
                    return new Rule(properties);
                };

                /**
                 * Encodes the specified Rule message. Does not implicitly {@link teads.api.ListCustomTargetingRulesForCampaignResponse.Rule.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Rule
                 * @static
                 * @param {teads.api.ListCustomTargetingRulesForCampaignResponse.IRule} message Rule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Rule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.id);
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.tblString);
                    writer.uint32(/* id 5, wireType 0 =*/40).int32(message.demographicAudiencesDeliveryType);
                    writer.uint32(/* id 6, wireType 0 =*/48).int32(message.otherAudiencesAccuracyLevel);
                    writer.uint32(/* id 7, wireType 0 =*/56).bool(message.cookielessCriteriaOnly);
                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.description);
                    $root.teads.api.ListCustomTargetingRulesForCampaignResponse.Reason.encode(message.reason, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.channel != null && Object.hasOwnProperty.call(message, "channel"))
                        writer.uint32(/* id 10, wireType 0 =*/80).int32(message.channel);
                    return writer;
                };

                /**
                 * Encodes the specified Rule message, length delimited. Does not implicitly {@link teads.api.ListCustomTargetingRulesForCampaignResponse.Rule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Rule
                 * @static
                 * @param {teads.api.ListCustomTargetingRulesForCampaignResponse.IRule} message Rule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Rule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a Rule message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Rule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.ListCustomTargetingRulesForCampaignResponse.Rule} Rule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Rule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.ListCustomTargetingRulesForCampaignResponse.Rule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.id = reader.int64();
                                break;
                            }
                        case 3: {
                                message.name = reader.string();
                                break;
                            }
                        case 4: {
                                message.tblString = reader.string();
                                break;
                            }
                        case 5: {
                                message.demographicAudiencesDeliveryType = reader.int32();
                                break;
                            }
                        case 6: {
                                message.otherAudiencesAccuracyLevel = reader.int32();
                                break;
                            }
                        case 7: {
                                message.cookielessCriteriaOnly = reader.bool();
                                break;
                            }
                        case 8: {
                                message.description = reader.string();
                                break;
                            }
                        case 9: {
                                message.reason = $root.teads.api.ListCustomTargetingRulesForCampaignResponse.Reason.decode(reader, reader.uint32());
                                break;
                            }
                        case 10: {
                                message.channel = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("id"))
                        throw $util.ProtocolError("missing required 'id'", { instance: message });
                    if (!message.hasOwnProperty("name"))
                        throw $util.ProtocolError("missing required 'name'", { instance: message });
                    if (!message.hasOwnProperty("tblString"))
                        throw $util.ProtocolError("missing required 'tblString'", { instance: message });
                    if (!message.hasOwnProperty("demographicAudiencesDeliveryType"))
                        throw $util.ProtocolError("missing required 'demographicAudiencesDeliveryType'", { instance: message });
                    if (!message.hasOwnProperty("otherAudiencesAccuracyLevel"))
                        throw $util.ProtocolError("missing required 'otherAudiencesAccuracyLevel'", { instance: message });
                    if (!message.hasOwnProperty("cookielessCriteriaOnly"))
                        throw $util.ProtocolError("missing required 'cookielessCriteriaOnly'", { instance: message });
                    if (!message.hasOwnProperty("description"))
                        throw $util.ProtocolError("missing required 'description'", { instance: message });
                    if (!message.hasOwnProperty("reason"))
                        throw $util.ProtocolError("missing required 'reason'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a Rule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Rule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.ListCustomTargetingRulesForCampaignResponse.Rule} Rule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Rule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a Rule message.
                 * @function verify
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Rule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Rule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.id) && !(message.id && $util.isInteger(message.id.low) && $util.isInteger(message.id.high)))
                        return "id: integer|Long expected";
                    if (!$util.isString(message.name))
                        return "name: string expected";
                    if (!$util.isString(message.tblString))
                        return "tblString: string expected";
                    switch (message.demographicAudiencesDeliveryType) {
                    default:
                        return "demographicAudiencesDeliveryType: enum value expected";
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                        break;
                    }
                    switch (message.otherAudiencesAccuracyLevel) {
                    default:
                        return "otherAudiencesAccuracyLevel: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                        break;
                    }
                    if (typeof message.cookielessCriteriaOnly !== "boolean")
                        return "cookielessCriteriaOnly: boolean expected";
                    if (!$util.isString(message.description))
                        return "description: string expected";
                    {
                        var error = $root.teads.api.ListCustomTargetingRulesForCampaignResponse.Reason.verify(message.reason);
                        if (error)
                            return "reason." + error;
                    }
                    if (message.channel != null && message.hasOwnProperty("channel"))
                        switch (message.channel) {
                        default:
                            return "channel: enum value expected";
                        case 1:
                        case 2:
                            break;
                        }
                    return null;
                };

                /**
                 * Creates a Rule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Rule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.ListCustomTargetingRulesForCampaignResponse.Rule} Rule
                 */
                Rule.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.ListCustomTargetingRulesForCampaignResponse.Rule)
                        return object;
                    var message = new $root.teads.api.ListCustomTargetingRulesForCampaignResponse.Rule();
                    if (object.id != null)
                        if ($util.Long)
                            (message.id = $util.Long.fromValue(object.id)).unsigned = false;
                        else if (typeof object.id === "string")
                            message.id = parseInt(object.id, 10);
                        else if (typeof object.id === "number")
                            message.id = object.id;
                        else if (typeof object.id === "object")
                            message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.tblString != null)
                        message.tblString = String(object.tblString);
                    switch (object.demographicAudiencesDeliveryType) {
                    default:
                        if (typeof object.demographicAudiencesDeliveryType === "number") {
                            message.demographicAudiencesDeliveryType = object.demographicAudiencesDeliveryType;
                            break;
                        }
                        break;
                    case "CUSTOM_TARGETING_RULE_AUDIENCES_DELIVERY_TYPE_HIGH_ACCURACY":
                    case 2:
                        message.demographicAudiencesDeliveryType = 2;
                        break;
                    case "CUSTOM_TARGETING_RULE_AUDIENCES_DELIVERY_TYPE_ACCURACY":
                    case 3:
                        message.demographicAudiencesDeliveryType = 3;
                        break;
                    case "CUSTOM_TARGETING_RULE_AUDIENCES_DELIVERY_TYPE_STANDARD":
                    case 4:
                        message.demographicAudiencesDeliveryType = 4;
                        break;
                    case "CUSTOM_TARGETING_RULE_AUDIENCES_DELIVERY_TYPE_REACH":
                    case 5:
                        message.demographicAudiencesDeliveryType = 5;
                        break;
                    }
                    switch (object.otherAudiencesAccuracyLevel) {
                    default:
                        if (typeof object.otherAudiencesAccuracyLevel === "number") {
                            message.otherAudiencesAccuracyLevel = object.otherAudiencesAccuracyLevel;
                            break;
                        }
                        break;
                    case "CUSTOM_TARGETING_RULE_AUDIENCES_ACCURACY_LEVEL_HIGH":
                    case 1:
                        message.otherAudiencesAccuracyLevel = 1;
                        break;
                    case "CUSTOM_TARGETING_RULE_AUDIENCES_ACCURACY_LEVEL_MEDIUM":
                    case 2:
                        message.otherAudiencesAccuracyLevel = 2;
                        break;
                    case "CUSTOM_TARGETING_RULE_AUDIENCES_ACCURACY_LEVEL_LOW":
                    case 3:
                        message.otherAudiencesAccuracyLevel = 3;
                        break;
                    }
                    if (object.cookielessCriteriaOnly != null)
                        message.cookielessCriteriaOnly = Boolean(object.cookielessCriteriaOnly);
                    if (object.description != null)
                        message.description = String(object.description);
                    if (object.reason != null) {
                        if (typeof object.reason !== "object")
                            throw TypeError(".teads.api.ListCustomTargetingRulesForCampaignResponse.Rule.reason: object expected");
                        message.reason = $root.teads.api.ListCustomTargetingRulesForCampaignResponse.Reason.fromObject(object.reason);
                    }
                    switch (object.channel) {
                    default:
                        if (typeof object.channel === "number") {
                            message.channel = object.channel;
                            break;
                        }
                        break;
                    case "CUSTOM_TARGETING_ENVIRONMENT_CHANNEL_WEB":
                    case 1:
                        message.channel = 1;
                        break;
                    case "CUSTOM_TARGETING_ENVIRONMENT_CHANNEL_CTV":
                    case 2:
                        message.channel = 2;
                        break;
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a Rule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Rule
                 * @static
                 * @param {teads.api.ListCustomTargetingRulesForCampaignResponse.Rule} message Rule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Rule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.id = options.longs === String ? "0" : 0;
                        object.name = "";
                        object.tblString = "";
                        object.demographicAudiencesDeliveryType = options.enums === String ? "CUSTOM_TARGETING_RULE_AUDIENCES_DELIVERY_TYPE_HIGH_ACCURACY" : 2;
                        object.otherAudiencesAccuracyLevel = options.enums === String ? "CUSTOM_TARGETING_RULE_AUDIENCES_ACCURACY_LEVEL_HIGH" : 1;
                        object.cookielessCriteriaOnly = false;
                        object.description = "";
                        object.reason = null;
                        object.channel = options.enums === String ? "CUSTOM_TARGETING_ENVIRONMENT_CHANNEL_WEB" : 1;
                    }
                    if (message.id != null && message.hasOwnProperty("id"))
                        if (typeof message.id === "number")
                            object.id = options.longs === String ? String(message.id) : message.id;
                        else
                            object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber() : message.id;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.tblString != null && message.hasOwnProperty("tblString"))
                        object.tblString = message.tblString;
                    if (message.demographicAudiencesDeliveryType != null && message.hasOwnProperty("demographicAudiencesDeliveryType"))
                        object.demographicAudiencesDeliveryType = options.enums === String ? $root.teads.api.CustomTargetingRuleAudiencesDeliveryType[message.demographicAudiencesDeliveryType] === undefined ? message.demographicAudiencesDeliveryType : $root.teads.api.CustomTargetingRuleAudiencesDeliveryType[message.demographicAudiencesDeliveryType] : message.demographicAudiencesDeliveryType;
                    if (message.otherAudiencesAccuracyLevel != null && message.hasOwnProperty("otherAudiencesAccuracyLevel"))
                        object.otherAudiencesAccuracyLevel = options.enums === String ? $root.teads.api.CustomTargetingRuleAudiencesAccuracyLevel[message.otherAudiencesAccuracyLevel] === undefined ? message.otherAudiencesAccuracyLevel : $root.teads.api.CustomTargetingRuleAudiencesAccuracyLevel[message.otherAudiencesAccuracyLevel] : message.otherAudiencesAccuracyLevel;
                    if (message.cookielessCriteriaOnly != null && message.hasOwnProperty("cookielessCriteriaOnly"))
                        object.cookielessCriteriaOnly = message.cookielessCriteriaOnly;
                    if (message.description != null && message.hasOwnProperty("description"))
                        object.description = message.description;
                    if (message.reason != null && message.hasOwnProperty("reason"))
                        object.reason = $root.teads.api.ListCustomTargetingRulesForCampaignResponse.Reason.toObject(message.reason, options);
                    if (message.channel != null && message.hasOwnProperty("channel"))
                        object.channel = options.enums === String ? $root.teads.api.CustomTargetingEnvironmentChannel[message.channel] === undefined ? message.channel : $root.teads.api.CustomTargetingEnvironmentChannel[message.channel] : message.channel;
                    return object;
                };

                /**
                 * Converts this Rule to JSON.
                 * @function toJSON
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Rule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Rule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for Rule
                 * @function getTypeUrl
                 * @memberof teads.api.ListCustomTargetingRulesForCampaignResponse.Rule
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Rule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.ListCustomTargetingRulesForCampaignResponse.Rule";
                };

                return Rule;
            })();

            return ListCustomTargetingRulesForCampaignResponse;
        })();

        api.ListOfficesRequest = (function() {

            /**
             * Properties of a ListOfficesRequest.
             * @memberof teads.api
             * @interface IListOfficesRequest
             * @property {teads.api.ISecurityContext} securityContext ListOfficesRequest securityContext
             */

            /**
             * Constructs a new ListOfficesRequest.
             * @memberof teads.api
             * @classdesc Represents a ListOfficesRequest.
             * @implements IListOfficesRequest
             * @constructor
             * @param {teads.api.IListOfficesRequest=} [properties] Properties to set
             */
            function ListOfficesRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * ListOfficesRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.ListOfficesRequest
             * @instance
             */
            ListOfficesRequest.prototype.securityContext = null;

            /**
             * Creates a new ListOfficesRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.ListOfficesRequest
             * @static
             * @param {teads.api.IListOfficesRequest=} [properties] Properties to set
             * @returns {teads.api.ListOfficesRequest} ListOfficesRequest instance
             */
            ListOfficesRequest.create = function create(properties) {
                return new ListOfficesRequest(properties);
            };

            /**
             * Encodes the specified ListOfficesRequest message. Does not implicitly {@link teads.api.ListOfficesRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.ListOfficesRequest
             * @static
             * @param {teads.api.IListOfficesRequest} message ListOfficesRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ListOfficesRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified ListOfficesRequest message, length delimited. Does not implicitly {@link teads.api.ListOfficesRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.ListOfficesRequest
             * @static
             * @param {teads.api.IListOfficesRequest} message ListOfficesRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ListOfficesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a ListOfficesRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.ListOfficesRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.ListOfficesRequest} ListOfficesRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ListOfficesRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.ListOfficesRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                return message;
            };

            /**
             * Decodes a ListOfficesRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.ListOfficesRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.ListOfficesRequest} ListOfficesRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ListOfficesRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a ListOfficesRequest message.
             * @function verify
             * @memberof teads.api.ListOfficesRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ListOfficesRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                return null;
            };

            /**
             * Creates a ListOfficesRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.ListOfficesRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.ListOfficesRequest} ListOfficesRequest
             */
            ListOfficesRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.ListOfficesRequest)
                    return object;
                var message = new $root.teads.api.ListOfficesRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.ListOfficesRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                return message;
            };

            /**
             * Creates a plain object from a ListOfficesRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.ListOfficesRequest
             * @static
             * @param {teads.api.ListOfficesRequest} message ListOfficesRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ListOfficesRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.securityContext = null;
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                return object;
            };

            /**
             * Converts this ListOfficesRequest to JSON.
             * @function toJSON
             * @memberof teads.api.ListOfficesRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ListOfficesRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for ListOfficesRequest
             * @function getTypeUrl
             * @memberof teads.api.ListOfficesRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ListOfficesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.ListOfficesRequest";
            };

            return ListOfficesRequest;
        })();

        api.ListOfficesResponse = (function() {

            /**
             * Properties of a ListOfficesResponse.
             * @memberof teads.api
             * @interface IListOfficesResponse
             * @property {Array.<teads.api.ListOfficesResponse.IListOffice>|null} [offices] ListOfficesResponse offices
             */

            /**
             * Constructs a new ListOfficesResponse.
             * @memberof teads.api
             * @classdesc Represents a ListOfficesResponse.
             * @implements IListOfficesResponse
             * @constructor
             * @param {teads.api.IListOfficesResponse=} [properties] Properties to set
             */
            function ListOfficesResponse(properties) {
                this.offices = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * ListOfficesResponse offices.
             * @member {Array.<teads.api.ListOfficesResponse.IListOffice>} offices
             * @memberof teads.api.ListOfficesResponse
             * @instance
             */
            ListOfficesResponse.prototype.offices = $util.emptyArray;

            /**
             * Creates a new ListOfficesResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.ListOfficesResponse
             * @static
             * @param {teads.api.IListOfficesResponse=} [properties] Properties to set
             * @returns {teads.api.ListOfficesResponse} ListOfficesResponse instance
             */
            ListOfficesResponse.create = function create(properties) {
                return new ListOfficesResponse(properties);
            };

            /**
             * Encodes the specified ListOfficesResponse message. Does not implicitly {@link teads.api.ListOfficesResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.ListOfficesResponse
             * @static
             * @param {teads.api.IListOfficesResponse} message ListOfficesResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ListOfficesResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.offices != null && message.offices.length)
                    for (var i = 0; i < message.offices.length; ++i)
                        $root.teads.api.ListOfficesResponse.ListOffice.encode(message.offices[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified ListOfficesResponse message, length delimited. Does not implicitly {@link teads.api.ListOfficesResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.ListOfficesResponse
             * @static
             * @param {teads.api.IListOfficesResponse} message ListOfficesResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            ListOfficesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a ListOfficesResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.ListOfficesResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.ListOfficesResponse} ListOfficesResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ListOfficesResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.ListOfficesResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            if (!(message.offices && message.offices.length))
                                message.offices = [];
                            message.offices.push($root.teads.api.ListOfficesResponse.ListOffice.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a ListOfficesResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.ListOfficesResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.ListOfficesResponse} ListOfficesResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            ListOfficesResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a ListOfficesResponse message.
             * @function verify
             * @memberof teads.api.ListOfficesResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            ListOfficesResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.offices != null && message.hasOwnProperty("offices")) {
                    if (!Array.isArray(message.offices))
                        return "offices: array expected";
                    for (var i = 0; i < message.offices.length; ++i) {
                        var error = $root.teads.api.ListOfficesResponse.ListOffice.verify(message.offices[i]);
                        if (error)
                            return "offices." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a ListOfficesResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.ListOfficesResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.ListOfficesResponse} ListOfficesResponse
             */
            ListOfficesResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.ListOfficesResponse)
                    return object;
                var message = new $root.teads.api.ListOfficesResponse();
                if (object.offices) {
                    if (!Array.isArray(object.offices))
                        throw TypeError(".teads.api.ListOfficesResponse.offices: array expected");
                    message.offices = [];
                    for (var i = 0; i < object.offices.length; ++i) {
                        if (typeof object.offices[i] !== "object")
                            throw TypeError(".teads.api.ListOfficesResponse.offices: object expected");
                        message.offices[i] = $root.teads.api.ListOfficesResponse.ListOffice.fromObject(object.offices[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a ListOfficesResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.ListOfficesResponse
             * @static
             * @param {teads.api.ListOfficesResponse} message ListOfficesResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            ListOfficesResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.offices = [];
                if (message.offices && message.offices.length) {
                    object.offices = [];
                    for (var j = 0; j < message.offices.length; ++j)
                        object.offices[j] = $root.teads.api.ListOfficesResponse.ListOffice.toObject(message.offices[j], options);
                }
                return object;
            };

            /**
             * Converts this ListOfficesResponse to JSON.
             * @function toJSON
             * @memberof teads.api.ListOfficesResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            ListOfficesResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for ListOfficesResponse
             * @function getTypeUrl
             * @memberof teads.api.ListOfficesResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            ListOfficesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.ListOfficesResponse";
            };

            ListOfficesResponse.ListOffice = (function() {

                /**
                 * Properties of a ListOffice.
                 * @memberof teads.api.ListOfficesResponse
                 * @interface IListOffice
                 * @property {number} officeId ListOffice officeId
                 * @property {string} officeName ListOffice officeName
                 */

                /**
                 * Constructs a new ListOffice.
                 * @memberof teads.api.ListOfficesResponse
                 * @classdesc Represents a ListOffice.
                 * @implements IListOffice
                 * @constructor
                 * @param {teads.api.ListOfficesResponse.IListOffice=} [properties] Properties to set
                 */
                function ListOffice(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * ListOffice officeId.
                 * @member {number} officeId
                 * @memberof teads.api.ListOfficesResponse.ListOffice
                 * @instance
                 */
                ListOffice.prototype.officeId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * ListOffice officeName.
                 * @member {string} officeName
                 * @memberof teads.api.ListOfficesResponse.ListOffice
                 * @instance
                 */
                ListOffice.prototype.officeName = "";

                /**
                 * Creates a new ListOffice instance using the specified properties.
                 * @function create
                 * @memberof teads.api.ListOfficesResponse.ListOffice
                 * @static
                 * @param {teads.api.ListOfficesResponse.IListOffice=} [properties] Properties to set
                 * @returns {teads.api.ListOfficesResponse.ListOffice} ListOffice instance
                 */
                ListOffice.create = function create(properties) {
                    return new ListOffice(properties);
                };

                /**
                 * Encodes the specified ListOffice message. Does not implicitly {@link teads.api.ListOfficesResponse.ListOffice.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.ListOfficesResponse.ListOffice
                 * @static
                 * @param {teads.api.ListOfficesResponse.IListOffice} message ListOffice message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOffice.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.officeId);
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.officeName);
                    return writer;
                };

                /**
                 * Encodes the specified ListOffice message, length delimited. Does not implicitly {@link teads.api.ListOfficesResponse.ListOffice.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.ListOfficesResponse.ListOffice
                 * @static
                 * @param {teads.api.ListOfficesResponse.IListOffice} message ListOffice message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOffice.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a ListOffice message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.ListOfficesResponse.ListOffice
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.ListOfficesResponse.ListOffice} ListOffice
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOffice.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.ListOfficesResponse.ListOffice();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.officeId = reader.int64();
                                break;
                            }
                        case 2: {
                                message.officeName = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("officeId"))
                        throw $util.ProtocolError("missing required 'officeId'", { instance: message });
                    if (!message.hasOwnProperty("officeName"))
                        throw $util.ProtocolError("missing required 'officeName'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a ListOffice message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.ListOfficesResponse.ListOffice
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.ListOfficesResponse.ListOffice} ListOffice
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOffice.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a ListOffice message.
                 * @function verify
                 * @memberof teads.api.ListOfficesResponse.ListOffice
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOffice.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.officeId) && !(message.officeId && $util.isInteger(message.officeId.low) && $util.isInteger(message.officeId.high)))
                        return "officeId: integer|Long expected";
                    if (!$util.isString(message.officeName))
                        return "officeName: string expected";
                    return null;
                };

                /**
                 * Creates a ListOffice message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.ListOfficesResponse.ListOffice
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.ListOfficesResponse.ListOffice} ListOffice
                 */
                ListOffice.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.ListOfficesResponse.ListOffice)
                        return object;
                    var message = new $root.teads.api.ListOfficesResponse.ListOffice();
                    if (object.officeId != null)
                        if ($util.Long)
                            (message.officeId = $util.Long.fromValue(object.officeId)).unsigned = false;
                        else if (typeof object.officeId === "string")
                            message.officeId = parseInt(object.officeId, 10);
                        else if (typeof object.officeId === "number")
                            message.officeId = object.officeId;
                        else if (typeof object.officeId === "object")
                            message.officeId = new $util.LongBits(object.officeId.low >>> 0, object.officeId.high >>> 0).toNumber();
                    if (object.officeName != null)
                        message.officeName = String(object.officeName);
                    return message;
                };

                /**
                 * Creates a plain object from a ListOffice message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.ListOfficesResponse.ListOffice
                 * @static
                 * @param {teads.api.ListOfficesResponse.ListOffice} message ListOffice
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOffice.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.officeId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.officeId = options.longs === String ? "0" : 0;
                        object.officeName = "";
                    }
                    if (message.officeId != null && message.hasOwnProperty("officeId"))
                        if (typeof message.officeId === "number")
                            object.officeId = options.longs === String ? String(message.officeId) : message.officeId;
                        else
                            object.officeId = options.longs === String ? $util.Long.prototype.toString.call(message.officeId) : options.longs === Number ? new $util.LongBits(message.officeId.low >>> 0, message.officeId.high >>> 0).toNumber() : message.officeId;
                    if (message.officeName != null && message.hasOwnProperty("officeName"))
                        object.officeName = message.officeName;
                    return object;
                };

                /**
                 * Converts this ListOffice to JSON.
                 * @function toJSON
                 * @memberof teads.api.ListOfficesResponse.ListOffice
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOffice.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for ListOffice
                 * @function getTypeUrl
                 * @memberof teads.api.ListOfficesResponse.ListOffice
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOffice.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.ListOfficesResponse.ListOffice";
                };

                return ListOffice;
            })();

            return ListOfficesResponse;
        })();

        api.MarkTeadsFinanceApprovalFilledForSeatRequest = (function() {

            /**
             * Properties of a MarkTeadsFinanceApprovalFilledForSeatRequest.
             * @memberof teads.api
             * @interface IMarkTeadsFinanceApprovalFilledForSeatRequest
             * @property {teads.api.ISecurityContext} securityContext MarkTeadsFinanceApprovalFilledForSeatRequest securityContext
             * @property {number} seatId MarkTeadsFinanceApprovalFilledForSeatRequest seatId
             */

            /**
             * Constructs a new MarkTeadsFinanceApprovalFilledForSeatRequest.
             * @memberof teads.api
             * @classdesc Represents a MarkTeadsFinanceApprovalFilledForSeatRequest.
             * @implements IMarkTeadsFinanceApprovalFilledForSeatRequest
             * @constructor
             * @param {teads.api.IMarkTeadsFinanceApprovalFilledForSeatRequest=} [properties] Properties to set
             */
            function MarkTeadsFinanceApprovalFilledForSeatRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * MarkTeadsFinanceApprovalFilledForSeatRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.MarkTeadsFinanceApprovalFilledForSeatRequest
             * @instance
             */
            MarkTeadsFinanceApprovalFilledForSeatRequest.prototype.securityContext = null;

            /**
             * MarkTeadsFinanceApprovalFilledForSeatRequest seatId.
             * @member {number} seatId
             * @memberof teads.api.MarkTeadsFinanceApprovalFilledForSeatRequest
             * @instance
             */
            MarkTeadsFinanceApprovalFilledForSeatRequest.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new MarkTeadsFinanceApprovalFilledForSeatRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.MarkTeadsFinanceApprovalFilledForSeatRequest
             * @static
             * @param {teads.api.IMarkTeadsFinanceApprovalFilledForSeatRequest=} [properties] Properties to set
             * @returns {teads.api.MarkTeadsFinanceApprovalFilledForSeatRequest} MarkTeadsFinanceApprovalFilledForSeatRequest instance
             */
            MarkTeadsFinanceApprovalFilledForSeatRequest.create = function create(properties) {
                return new MarkTeadsFinanceApprovalFilledForSeatRequest(properties);
            };

            /**
             * Encodes the specified MarkTeadsFinanceApprovalFilledForSeatRequest message. Does not implicitly {@link teads.api.MarkTeadsFinanceApprovalFilledForSeatRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.MarkTeadsFinanceApprovalFilledForSeatRequest
             * @static
             * @param {teads.api.IMarkTeadsFinanceApprovalFilledForSeatRequest} message MarkTeadsFinanceApprovalFilledForSeatRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MarkTeadsFinanceApprovalFilledForSeatRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.seatId);
                return writer;
            };

            /**
             * Encodes the specified MarkTeadsFinanceApprovalFilledForSeatRequest message, length delimited. Does not implicitly {@link teads.api.MarkTeadsFinanceApprovalFilledForSeatRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.MarkTeadsFinanceApprovalFilledForSeatRequest
             * @static
             * @param {teads.api.IMarkTeadsFinanceApprovalFilledForSeatRequest} message MarkTeadsFinanceApprovalFilledForSeatRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MarkTeadsFinanceApprovalFilledForSeatRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a MarkTeadsFinanceApprovalFilledForSeatRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.MarkTeadsFinanceApprovalFilledForSeatRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.MarkTeadsFinanceApprovalFilledForSeatRequest} MarkTeadsFinanceApprovalFilledForSeatRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MarkTeadsFinanceApprovalFilledForSeatRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.MarkTeadsFinanceApprovalFilledForSeatRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.seatId = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("seatId"))
                    throw $util.ProtocolError("missing required 'seatId'", { instance: message });
                return message;
            };

            /**
             * Decodes a MarkTeadsFinanceApprovalFilledForSeatRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.MarkTeadsFinanceApprovalFilledForSeatRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.MarkTeadsFinanceApprovalFilledForSeatRequest} MarkTeadsFinanceApprovalFilledForSeatRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MarkTeadsFinanceApprovalFilledForSeatRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a MarkTeadsFinanceApprovalFilledForSeatRequest message.
             * @function verify
             * @memberof teads.api.MarkTeadsFinanceApprovalFilledForSeatRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MarkTeadsFinanceApprovalFilledForSeatRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                    return "seatId: integer|Long expected";
                return null;
            };

            /**
             * Creates a MarkTeadsFinanceApprovalFilledForSeatRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.MarkTeadsFinanceApprovalFilledForSeatRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.MarkTeadsFinanceApprovalFilledForSeatRequest} MarkTeadsFinanceApprovalFilledForSeatRequest
             */
            MarkTeadsFinanceApprovalFilledForSeatRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.MarkTeadsFinanceApprovalFilledForSeatRequest)
                    return object;
                var message = new $root.teads.api.MarkTeadsFinanceApprovalFilledForSeatRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.MarkTeadsFinanceApprovalFilledForSeatRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.seatId != null)
                    if ($util.Long)
                        (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                    else if (typeof object.seatId === "string")
                        message.seatId = parseInt(object.seatId, 10);
                    else if (typeof object.seatId === "number")
                        message.seatId = object.seatId;
                    else if (typeof object.seatId === "object")
                        message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from a MarkTeadsFinanceApprovalFilledForSeatRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.MarkTeadsFinanceApprovalFilledForSeatRequest
             * @static
             * @param {teads.api.MarkTeadsFinanceApprovalFilledForSeatRequest} message MarkTeadsFinanceApprovalFilledForSeatRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MarkTeadsFinanceApprovalFilledForSeatRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seatId = options.longs === String ? "0" : 0;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.seatId != null && message.hasOwnProperty("seatId"))
                    if (typeof message.seatId === "number")
                        object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                    else
                        object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                return object;
            };

            /**
             * Converts this MarkTeadsFinanceApprovalFilledForSeatRequest to JSON.
             * @function toJSON
             * @memberof teads.api.MarkTeadsFinanceApprovalFilledForSeatRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MarkTeadsFinanceApprovalFilledForSeatRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for MarkTeadsFinanceApprovalFilledForSeatRequest
             * @function getTypeUrl
             * @memberof teads.api.MarkTeadsFinanceApprovalFilledForSeatRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            MarkTeadsFinanceApprovalFilledForSeatRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.MarkTeadsFinanceApprovalFilledForSeatRequest";
            };

            return MarkTeadsFinanceApprovalFilledForSeatRequest;
        })();

        api.MarkTeadsFinanceApprovalFilledForSeatResponse = (function() {

            /**
             * Properties of a MarkTeadsFinanceApprovalFilledForSeatResponse.
             * @memberof teads.api
             * @interface IMarkTeadsFinanceApprovalFilledForSeatResponse
             * @property {teads.api.BuyerSeatStatus} seatStatus MarkTeadsFinanceApprovalFilledForSeatResponse seatStatus
             */

            /**
             * Constructs a new MarkTeadsFinanceApprovalFilledForSeatResponse.
             * @memberof teads.api
             * @classdesc Represents a MarkTeadsFinanceApprovalFilledForSeatResponse.
             * @implements IMarkTeadsFinanceApprovalFilledForSeatResponse
             * @constructor
             * @param {teads.api.IMarkTeadsFinanceApprovalFilledForSeatResponse=} [properties] Properties to set
             */
            function MarkTeadsFinanceApprovalFilledForSeatResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * MarkTeadsFinanceApprovalFilledForSeatResponse seatStatus.
             * @member {teads.api.BuyerSeatStatus} seatStatus
             * @memberof teads.api.MarkTeadsFinanceApprovalFilledForSeatResponse
             * @instance
             */
            MarkTeadsFinanceApprovalFilledForSeatResponse.prototype.seatStatus = 1;

            /**
             * Creates a new MarkTeadsFinanceApprovalFilledForSeatResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.MarkTeadsFinanceApprovalFilledForSeatResponse
             * @static
             * @param {teads.api.IMarkTeadsFinanceApprovalFilledForSeatResponse=} [properties] Properties to set
             * @returns {teads.api.MarkTeadsFinanceApprovalFilledForSeatResponse} MarkTeadsFinanceApprovalFilledForSeatResponse instance
             */
            MarkTeadsFinanceApprovalFilledForSeatResponse.create = function create(properties) {
                return new MarkTeadsFinanceApprovalFilledForSeatResponse(properties);
            };

            /**
             * Encodes the specified MarkTeadsFinanceApprovalFilledForSeatResponse message. Does not implicitly {@link teads.api.MarkTeadsFinanceApprovalFilledForSeatResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.MarkTeadsFinanceApprovalFilledForSeatResponse
             * @static
             * @param {teads.api.IMarkTeadsFinanceApprovalFilledForSeatResponse} message MarkTeadsFinanceApprovalFilledForSeatResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MarkTeadsFinanceApprovalFilledForSeatResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.seatStatus);
                return writer;
            };

            /**
             * Encodes the specified MarkTeadsFinanceApprovalFilledForSeatResponse message, length delimited. Does not implicitly {@link teads.api.MarkTeadsFinanceApprovalFilledForSeatResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.MarkTeadsFinanceApprovalFilledForSeatResponse
             * @static
             * @param {teads.api.IMarkTeadsFinanceApprovalFilledForSeatResponse} message MarkTeadsFinanceApprovalFilledForSeatResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MarkTeadsFinanceApprovalFilledForSeatResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a MarkTeadsFinanceApprovalFilledForSeatResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.MarkTeadsFinanceApprovalFilledForSeatResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.MarkTeadsFinanceApprovalFilledForSeatResponse} MarkTeadsFinanceApprovalFilledForSeatResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MarkTeadsFinanceApprovalFilledForSeatResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.MarkTeadsFinanceApprovalFilledForSeatResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.seatStatus = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("seatStatus"))
                    throw $util.ProtocolError("missing required 'seatStatus'", { instance: message });
                return message;
            };

            /**
             * Decodes a MarkTeadsFinanceApprovalFilledForSeatResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.MarkTeadsFinanceApprovalFilledForSeatResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.MarkTeadsFinanceApprovalFilledForSeatResponse} MarkTeadsFinanceApprovalFilledForSeatResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MarkTeadsFinanceApprovalFilledForSeatResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a MarkTeadsFinanceApprovalFilledForSeatResponse message.
             * @function verify
             * @memberof teads.api.MarkTeadsFinanceApprovalFilledForSeatResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MarkTeadsFinanceApprovalFilledForSeatResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                switch (message.seatStatus) {
                default:
                    return "seatStatus: enum value expected";
                case 1:
                case 2:
                case 3:
                case 4:
                    break;
                }
                return null;
            };

            /**
             * Creates a MarkTeadsFinanceApprovalFilledForSeatResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.MarkTeadsFinanceApprovalFilledForSeatResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.MarkTeadsFinanceApprovalFilledForSeatResponse} MarkTeadsFinanceApprovalFilledForSeatResponse
             */
            MarkTeadsFinanceApprovalFilledForSeatResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.MarkTeadsFinanceApprovalFilledForSeatResponse)
                    return object;
                var message = new $root.teads.api.MarkTeadsFinanceApprovalFilledForSeatResponse();
                switch (object.seatStatus) {
                default:
                    if (typeof object.seatStatus === "number") {
                        message.seatStatus = object.seatStatus;
                        break;
                    }
                    break;
                case "BUYER_SEAT_STATUS_ENABLED":
                case 1:
                    message.seatStatus = 1;
                    break;
                case "BUYER_SEAT_STATUS_DISABLED":
                case 2:
                    message.seatStatus = 2;
                    break;
                case "BUYER_SEAT_STATUS_PENDING_CLIENT_INPUT":
                case 3:
                    message.seatStatus = 3;
                    break;
                case "BUYER_SEAT_STATUS_PENDING_TEADS_INPUT":
                case 4:
                    message.seatStatus = 4;
                    break;
                }
                return message;
            };

            /**
             * Creates a plain object from a MarkTeadsFinanceApprovalFilledForSeatResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.MarkTeadsFinanceApprovalFilledForSeatResponse
             * @static
             * @param {teads.api.MarkTeadsFinanceApprovalFilledForSeatResponse} message MarkTeadsFinanceApprovalFilledForSeatResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MarkTeadsFinanceApprovalFilledForSeatResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.seatStatus = options.enums === String ? "BUYER_SEAT_STATUS_ENABLED" : 1;
                if (message.seatStatus != null && message.hasOwnProperty("seatStatus"))
                    object.seatStatus = options.enums === String ? $root.teads.api.BuyerSeatStatus[message.seatStatus] === undefined ? message.seatStatus : $root.teads.api.BuyerSeatStatus[message.seatStatus] : message.seatStatus;
                return object;
            };

            /**
             * Converts this MarkTeadsFinanceApprovalFilledForSeatResponse to JSON.
             * @function toJSON
             * @memberof teads.api.MarkTeadsFinanceApprovalFilledForSeatResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MarkTeadsFinanceApprovalFilledForSeatResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for MarkTeadsFinanceApprovalFilledForSeatResponse
             * @function getTypeUrl
             * @memberof teads.api.MarkTeadsFinanceApprovalFilledForSeatResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            MarkTeadsFinanceApprovalFilledForSeatResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.MarkTeadsFinanceApprovalFilledForSeatResponse";
            };

            return MarkTeadsFinanceApprovalFilledForSeatResponse;
        })();

        api.MigrateCampaignToManagedServiceRequest = (function() {

            /**
             * Properties of a MigrateCampaignToManagedServiceRequest.
             * @memberof teads.api
             * @interface IMigrateCampaignToManagedServiceRequest
             * @property {teads.api.ISecurityContext} securityContext MigrateCampaignToManagedServiceRequest securityContext
             * @property {number} campaignId MigrateCampaignToManagedServiceRequest campaignId
             * @property {teads.api.CampaignMigrationReason} reason MigrateCampaignToManagedServiceRequest reason
             * @property {string|null} [details] MigrateCampaignToManagedServiceRequest details
             */

            /**
             * Constructs a new MigrateCampaignToManagedServiceRequest.
             * @memberof teads.api
             * @classdesc Represents a MigrateCampaignToManagedServiceRequest.
             * @implements IMigrateCampaignToManagedServiceRequest
             * @constructor
             * @param {teads.api.IMigrateCampaignToManagedServiceRequest=} [properties] Properties to set
             */
            function MigrateCampaignToManagedServiceRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * MigrateCampaignToManagedServiceRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.MigrateCampaignToManagedServiceRequest
             * @instance
             */
            MigrateCampaignToManagedServiceRequest.prototype.securityContext = null;

            /**
             * MigrateCampaignToManagedServiceRequest campaignId.
             * @member {number} campaignId
             * @memberof teads.api.MigrateCampaignToManagedServiceRequest
             * @instance
             */
            MigrateCampaignToManagedServiceRequest.prototype.campaignId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * MigrateCampaignToManagedServiceRequest reason.
             * @member {teads.api.CampaignMigrationReason} reason
             * @memberof teads.api.MigrateCampaignToManagedServiceRequest
             * @instance
             */
            MigrateCampaignToManagedServiceRequest.prototype.reason = 0;

            /**
             * MigrateCampaignToManagedServiceRequest details.
             * @member {string} details
             * @memberof teads.api.MigrateCampaignToManagedServiceRequest
             * @instance
             */
            MigrateCampaignToManagedServiceRequest.prototype.details = "";

            /**
             * Creates a new MigrateCampaignToManagedServiceRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.MigrateCampaignToManagedServiceRequest
             * @static
             * @param {teads.api.IMigrateCampaignToManagedServiceRequest=} [properties] Properties to set
             * @returns {teads.api.MigrateCampaignToManagedServiceRequest} MigrateCampaignToManagedServiceRequest instance
             */
            MigrateCampaignToManagedServiceRequest.create = function create(properties) {
                return new MigrateCampaignToManagedServiceRequest(properties);
            };

            /**
             * Encodes the specified MigrateCampaignToManagedServiceRequest message. Does not implicitly {@link teads.api.MigrateCampaignToManagedServiceRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.MigrateCampaignToManagedServiceRequest
             * @static
             * @param {teads.api.IMigrateCampaignToManagedServiceRequest} message MigrateCampaignToManagedServiceRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MigrateCampaignToManagedServiceRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.campaignId);
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.reason);
                if (message.details != null && Object.hasOwnProperty.call(message, "details"))
                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.details);
                return writer;
            };

            /**
             * Encodes the specified MigrateCampaignToManagedServiceRequest message, length delimited. Does not implicitly {@link teads.api.MigrateCampaignToManagedServiceRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.MigrateCampaignToManagedServiceRequest
             * @static
             * @param {teads.api.IMigrateCampaignToManagedServiceRequest} message MigrateCampaignToManagedServiceRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MigrateCampaignToManagedServiceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a MigrateCampaignToManagedServiceRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.MigrateCampaignToManagedServiceRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.MigrateCampaignToManagedServiceRequest} MigrateCampaignToManagedServiceRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MigrateCampaignToManagedServiceRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.MigrateCampaignToManagedServiceRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.campaignId = reader.int64();
                            break;
                        }
                    case 3: {
                            message.reason = reader.int32();
                            break;
                        }
                    case 4: {
                            message.details = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("campaignId"))
                    throw $util.ProtocolError("missing required 'campaignId'", { instance: message });
                if (!message.hasOwnProperty("reason"))
                    throw $util.ProtocolError("missing required 'reason'", { instance: message });
                return message;
            };

            /**
             * Decodes a MigrateCampaignToManagedServiceRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.MigrateCampaignToManagedServiceRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.MigrateCampaignToManagedServiceRequest} MigrateCampaignToManagedServiceRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MigrateCampaignToManagedServiceRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a MigrateCampaignToManagedServiceRequest message.
             * @function verify
             * @memberof teads.api.MigrateCampaignToManagedServiceRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MigrateCampaignToManagedServiceRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.campaignId) && !(message.campaignId && $util.isInteger(message.campaignId.low) && $util.isInteger(message.campaignId.high)))
                    return "campaignId: integer|Long expected";
                switch (message.reason) {
                default:
                    return "reason: enum value expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                case 23:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                case 29:
                case 30:
                case 31:
                case 32:
                case 33:
                case 34:
                case 35:
                case 36:
                    break;
                }
                if (message.details != null && message.hasOwnProperty("details"))
                    if (!$util.isString(message.details))
                        return "details: string expected";
                return null;
            };

            /**
             * Creates a MigrateCampaignToManagedServiceRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.MigrateCampaignToManagedServiceRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.MigrateCampaignToManagedServiceRequest} MigrateCampaignToManagedServiceRequest
             */
            MigrateCampaignToManagedServiceRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.MigrateCampaignToManagedServiceRequest)
                    return object;
                var message = new $root.teads.api.MigrateCampaignToManagedServiceRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.MigrateCampaignToManagedServiceRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.campaignId != null)
                    if ($util.Long)
                        (message.campaignId = $util.Long.fromValue(object.campaignId)).unsigned = false;
                    else if (typeof object.campaignId === "string")
                        message.campaignId = parseInt(object.campaignId, 10);
                    else if (typeof object.campaignId === "number")
                        message.campaignId = object.campaignId;
                    else if (typeof object.campaignId === "object")
                        message.campaignId = new $util.LongBits(object.campaignId.low >>> 0, object.campaignId.high >>> 0).toNumber();
                switch (object.reason) {
                default:
                    if (typeof object.reason === "number") {
                        message.reason = object.reason;
                        break;
                    }
                    break;
                case "CAMPAIGN_MIGRATION_REASON_TARGETING_NOT_AVAILABLE":
                case 0:
                    message.reason = 0;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_AUCTION_TYPE_NOT_AVAILABLE":
                case 1:
                    message.reason = 1;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_BILLING_EVENT_NOT_AVAILABLE":
                case 2:
                    message.reason = 2;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_PLAYER_MODE_NOT_AVAILABLE":
                case 3:
                    message.reason = 3;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_OTHER":
                case 5:
                    message.reason = 5;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_IAS_PREBID":
                case 6:
                    message.reason = 6;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_MOAT_100_PERCENT":
                case 7:
                    message.reason = 7;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_RETARGETING_SEGMENTS":
                case 8:
                    message.reason = 8;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_OFFICE_PACK":
                case 9:
                    message.reason = 9;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_FORMAT_POSITION":
                case 10:
                    message.reason = 10;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_CUSTOM_BRAND_SAFETY":
                case 11:
                    message.reason = 11;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_CUSTOM_AUDIENCE":
                case 12:
                    message.reason = 12;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_TAM_ISSUE":
                case 13:
                    message.reason = 13;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_ALTICE_DATA_SEGMENTS":
                case 14:
                    message.reason = 14;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_CREATIVE_STUDIO_UNIT":
                case 15:
                    message.reason = 15;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_CUSTOM_BILLING_EVENT":
                case 16:
                    message.reason = 16;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_PLAYER_MODE":
                case 17:
                    message.reason = 17;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_ADDED_VALUE":
                case 18:
                    message.reason = 18;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_REMARKETING_ON_CREATIVE_EVENT":
                case 19:
                    message.reason = 19;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_LOOKALIKE_SEGMENTS":
                case 20:
                    message.reason = 20;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_GEO_POSTAL_CODES":
                case 21:
                    message.reason = 21;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_CARRIER_PROVIDER":
                case 22:
                    message.reason = 22;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_AUDIENCES_STANDARD_TO_ACCURACY":
                case 23:
                    message.reason = 23;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_CREATIVE_HOURLY_FLIGHTING":
                case 24:
                    message.reason = 24;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_INNOVATION_TEST":
                case 25:
                    message.reason = 25;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_NOT_SUPPORTED_TRAFFIC_ACQUISITION_CREATIVE":
                case 26:
                    message.reason = 26;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_TRAFFIC_ACQUISITION_REACHCAST":
                case 27:
                    message.reason = 27;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_CAMPAIGN_DATE_TO_THE_FUTURE":
                case 28:
                    message.reason = 28;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_CAMPAIGN_TIMEZONE":
                case 29:
                    message.reason = 29;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_CTV_INSTREAM_SUPPLY_TARGETING":
                case 30:
                    message.reason = 30;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_GUARANTEED_SELF_SERVE_CAMPAIGN":
                case 31:
                    message.reason = 31;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_PLAYER_VIEWABILITY":
                case 32:
                    message.reason = 32;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_TRACKING_PIXEL_ON_CLICK_EVENT":
                case 33:
                    message.reason = 33;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_VIRTUAL_PRICE_FOR_MANAGED_CAMPAIGN":
                case 34:
                    message.reason = 34;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_HOURLY_FLIGHTING":
                case 35:
                    message.reason = 35;
                    break;
                case "CAMPAIGN_MIGRATION_REASON_ATTENTION_LUMEN_NO_SAMPLING":
                case 36:
                    message.reason = 36;
                    break;
                }
                if (object.details != null)
                    message.details = String(object.details);
                return message;
            };

            /**
             * Creates a plain object from a MigrateCampaignToManagedServiceRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.MigrateCampaignToManagedServiceRequest
             * @static
             * @param {teads.api.MigrateCampaignToManagedServiceRequest} message MigrateCampaignToManagedServiceRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MigrateCampaignToManagedServiceRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.campaignId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.campaignId = options.longs === String ? "0" : 0;
                    object.reason = options.enums === String ? "CAMPAIGN_MIGRATION_REASON_TARGETING_NOT_AVAILABLE" : 0;
                    object.details = "";
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.campaignId != null && message.hasOwnProperty("campaignId"))
                    if (typeof message.campaignId === "number")
                        object.campaignId = options.longs === String ? String(message.campaignId) : message.campaignId;
                    else
                        object.campaignId = options.longs === String ? $util.Long.prototype.toString.call(message.campaignId) : options.longs === Number ? new $util.LongBits(message.campaignId.low >>> 0, message.campaignId.high >>> 0).toNumber() : message.campaignId;
                if (message.reason != null && message.hasOwnProperty("reason"))
                    object.reason = options.enums === String ? $root.teads.api.CampaignMigrationReason[message.reason] === undefined ? message.reason : $root.teads.api.CampaignMigrationReason[message.reason] : message.reason;
                if (message.details != null && message.hasOwnProperty("details"))
                    object.details = message.details;
                return object;
            };

            /**
             * Converts this MigrateCampaignToManagedServiceRequest to JSON.
             * @function toJSON
             * @memberof teads.api.MigrateCampaignToManagedServiceRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MigrateCampaignToManagedServiceRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for MigrateCampaignToManagedServiceRequest
             * @function getTypeUrl
             * @memberof teads.api.MigrateCampaignToManagedServiceRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            MigrateCampaignToManagedServiceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.MigrateCampaignToManagedServiceRequest";
            };

            return MigrateCampaignToManagedServiceRequest;
        })();

        api.MigrateCampaignToManagedServiceResponse = (function() {

            /**
             * Properties of a MigrateCampaignToManagedServiceResponse.
             * @memberof teads.api
             * @interface IMigrateCampaignToManagedServiceResponse
             */

            /**
             * Constructs a new MigrateCampaignToManagedServiceResponse.
             * @memberof teads.api
             * @classdesc Represents a MigrateCampaignToManagedServiceResponse.
             * @implements IMigrateCampaignToManagedServiceResponse
             * @constructor
             * @param {teads.api.IMigrateCampaignToManagedServiceResponse=} [properties] Properties to set
             */
            function MigrateCampaignToManagedServiceResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Creates a new MigrateCampaignToManagedServiceResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.MigrateCampaignToManagedServiceResponse
             * @static
             * @param {teads.api.IMigrateCampaignToManagedServiceResponse=} [properties] Properties to set
             * @returns {teads.api.MigrateCampaignToManagedServiceResponse} MigrateCampaignToManagedServiceResponse instance
             */
            MigrateCampaignToManagedServiceResponse.create = function create(properties) {
                return new MigrateCampaignToManagedServiceResponse(properties);
            };

            /**
             * Encodes the specified MigrateCampaignToManagedServiceResponse message. Does not implicitly {@link teads.api.MigrateCampaignToManagedServiceResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.MigrateCampaignToManagedServiceResponse
             * @static
             * @param {teads.api.IMigrateCampaignToManagedServiceResponse} message MigrateCampaignToManagedServiceResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MigrateCampaignToManagedServiceResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified MigrateCampaignToManagedServiceResponse message, length delimited. Does not implicitly {@link teads.api.MigrateCampaignToManagedServiceResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.MigrateCampaignToManagedServiceResponse
             * @static
             * @param {teads.api.IMigrateCampaignToManagedServiceResponse} message MigrateCampaignToManagedServiceResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            MigrateCampaignToManagedServiceResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a MigrateCampaignToManagedServiceResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.MigrateCampaignToManagedServiceResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.MigrateCampaignToManagedServiceResponse} MigrateCampaignToManagedServiceResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MigrateCampaignToManagedServiceResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.MigrateCampaignToManagedServiceResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a MigrateCampaignToManagedServiceResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.MigrateCampaignToManagedServiceResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.MigrateCampaignToManagedServiceResponse} MigrateCampaignToManagedServiceResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            MigrateCampaignToManagedServiceResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a MigrateCampaignToManagedServiceResponse message.
             * @function verify
             * @memberof teads.api.MigrateCampaignToManagedServiceResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            MigrateCampaignToManagedServiceResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates a MigrateCampaignToManagedServiceResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.MigrateCampaignToManagedServiceResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.MigrateCampaignToManagedServiceResponse} MigrateCampaignToManagedServiceResponse
             */
            MigrateCampaignToManagedServiceResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.MigrateCampaignToManagedServiceResponse)
                    return object;
                return new $root.teads.api.MigrateCampaignToManagedServiceResponse();
            };

            /**
             * Creates a plain object from a MigrateCampaignToManagedServiceResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.MigrateCampaignToManagedServiceResponse
             * @static
             * @param {teads.api.MigrateCampaignToManagedServiceResponse} message MigrateCampaignToManagedServiceResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            MigrateCampaignToManagedServiceResponse.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this MigrateCampaignToManagedServiceResponse to JSON.
             * @function toJSON
             * @memberof teads.api.MigrateCampaignToManagedServiceResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            MigrateCampaignToManagedServiceResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for MigrateCampaignToManagedServiceResponse
             * @function getTypeUrl
             * @memberof teads.api.MigrateCampaignToManagedServiceResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            MigrateCampaignToManagedServiceResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.MigrateCampaignToManagedServiceResponse";
            };

            return MigrateCampaignToManagedServiceResponse;
        })();

        api.Page = (function() {

            /**
             * Properties of a Page.
             * @memberof teads.api
             * @interface IPage
             * @property {number|null} [index] Page index
             * @property {number|null} [size] Page size
             */

            /**
             * Constructs a new Page.
             * @memberof teads.api
             * @classdesc Represents a Page.
             * @implements IPage
             * @constructor
             * @param {teads.api.IPage=} [properties] Properties to set
             */
            function Page(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Page index.
             * @member {number} index
             * @memberof teads.api.Page
             * @instance
             */
            Page.prototype.index = 0;

            /**
             * Page size.
             * @member {number} size
             * @memberof teads.api.Page
             * @instance
             */
            Page.prototype.size = 0;

            /**
             * Creates a new Page instance using the specified properties.
             * @function create
             * @memberof teads.api.Page
             * @static
             * @param {teads.api.IPage=} [properties] Properties to set
             * @returns {teads.api.Page} Page instance
             */
            Page.create = function create(properties) {
                return new Page(properties);
            };

            /**
             * Encodes the specified Page message. Does not implicitly {@link teads.api.Page.verify|verify} messages.
             * @function encode
             * @memberof teads.api.Page
             * @static
             * @param {teads.api.IPage} message Page message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Page.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.index != null && Object.hasOwnProperty.call(message, "index"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.index);
                if (message.size != null && Object.hasOwnProperty.call(message, "size"))
                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.size);
                return writer;
            };

            /**
             * Encodes the specified Page message, length delimited. Does not implicitly {@link teads.api.Page.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.Page
             * @static
             * @param {teads.api.IPage} message Page message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Page.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a Page message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.Page
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.Page} Page
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Page.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.Page();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.index = reader.int32();
                            break;
                        }
                    case 2: {
                            message.size = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a Page message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.Page
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.Page} Page
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Page.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a Page message.
             * @function verify
             * @memberof teads.api.Page
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Page.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.index != null && message.hasOwnProperty("index"))
                    if (!$util.isInteger(message.index))
                        return "index: integer expected";
                if (message.size != null && message.hasOwnProperty("size"))
                    if (!$util.isInteger(message.size))
                        return "size: integer expected";
                return null;
            };

            /**
             * Creates a Page message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.Page
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.Page} Page
             */
            Page.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.Page)
                    return object;
                var message = new $root.teads.api.Page();
                if (object.index != null)
                    message.index = object.index | 0;
                if (object.size != null)
                    message.size = object.size | 0;
                return message;
            };

            /**
             * Creates a plain object from a Page message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.Page
             * @static
             * @param {teads.api.Page} message Page
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Page.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.index = 0;
                    object.size = 0;
                }
                if (message.index != null && message.hasOwnProperty("index"))
                    object.index = message.index;
                if (message.size != null && message.hasOwnProperty("size"))
                    object.size = message.size;
                return object;
            };

            /**
             * Converts this Page to JSON.
             * @function toJSON
             * @memberof teads.api.Page
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Page.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for Page
             * @function getTypeUrl
             * @memberof teads.api.Page
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Page.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.Page";
            };

            return Page;
        })();

        api.Pagination = (function() {

            /**
             * Properties of a Pagination.
             * @memberof teads.api
             * @interface IPagination
             * @property {number} index Pagination index
             * @property {number} size Pagination size
             * @property {number} totalElements Pagination totalElements
             * @property {number} totalPages Pagination totalPages
             */

            /**
             * Constructs a new Pagination.
             * @memberof teads.api
             * @classdesc Represents a Pagination.
             * @implements IPagination
             * @constructor
             * @param {teads.api.IPagination=} [properties] Properties to set
             */
            function Pagination(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Pagination index.
             * @member {number} index
             * @memberof teads.api.Pagination
             * @instance
             */
            Pagination.prototype.index = 0;

            /**
             * Pagination size.
             * @member {number} size
             * @memberof teads.api.Pagination
             * @instance
             */
            Pagination.prototype.size = 0;

            /**
             * Pagination totalElements.
             * @member {number} totalElements
             * @memberof teads.api.Pagination
             * @instance
             */
            Pagination.prototype.totalElements = 0;

            /**
             * Pagination totalPages.
             * @member {number} totalPages
             * @memberof teads.api.Pagination
             * @instance
             */
            Pagination.prototype.totalPages = 0;

            /**
             * Creates a new Pagination instance using the specified properties.
             * @function create
             * @memberof teads.api.Pagination
             * @static
             * @param {teads.api.IPagination=} [properties] Properties to set
             * @returns {teads.api.Pagination} Pagination instance
             */
            Pagination.create = function create(properties) {
                return new Pagination(properties);
            };

            /**
             * Encodes the specified Pagination message. Does not implicitly {@link teads.api.Pagination.verify|verify} messages.
             * @function encode
             * @memberof teads.api.Pagination
             * @static
             * @param {teads.api.IPagination} message Pagination message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Pagination.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.index);
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.size);
                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.totalElements);
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.totalPages);
                return writer;
            };

            /**
             * Encodes the specified Pagination message, length delimited. Does not implicitly {@link teads.api.Pagination.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.Pagination
             * @static
             * @param {teads.api.IPagination} message Pagination message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Pagination.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a Pagination message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.Pagination
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.Pagination} Pagination
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Pagination.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.Pagination();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.index = reader.int32();
                            break;
                        }
                    case 2: {
                            message.size = reader.int32();
                            break;
                        }
                    case 3: {
                            message.totalElements = reader.int32();
                            break;
                        }
                    case 4: {
                            message.totalPages = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("index"))
                    throw $util.ProtocolError("missing required 'index'", { instance: message });
                if (!message.hasOwnProperty("size"))
                    throw $util.ProtocolError("missing required 'size'", { instance: message });
                if (!message.hasOwnProperty("totalElements"))
                    throw $util.ProtocolError("missing required 'totalElements'", { instance: message });
                if (!message.hasOwnProperty("totalPages"))
                    throw $util.ProtocolError("missing required 'totalPages'", { instance: message });
                return message;
            };

            /**
             * Decodes a Pagination message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.Pagination
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.Pagination} Pagination
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Pagination.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a Pagination message.
             * @function verify
             * @memberof teads.api.Pagination
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Pagination.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.index))
                    return "index: integer expected";
                if (!$util.isInteger(message.size))
                    return "size: integer expected";
                if (!$util.isInteger(message.totalElements))
                    return "totalElements: integer expected";
                if (!$util.isInteger(message.totalPages))
                    return "totalPages: integer expected";
                return null;
            };

            /**
             * Creates a Pagination message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.Pagination
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.Pagination} Pagination
             */
            Pagination.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.Pagination)
                    return object;
                var message = new $root.teads.api.Pagination();
                if (object.index != null)
                    message.index = object.index | 0;
                if (object.size != null)
                    message.size = object.size | 0;
                if (object.totalElements != null)
                    message.totalElements = object.totalElements | 0;
                if (object.totalPages != null)
                    message.totalPages = object.totalPages | 0;
                return message;
            };

            /**
             * Creates a plain object from a Pagination message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.Pagination
             * @static
             * @param {teads.api.Pagination} message Pagination
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Pagination.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.index = 0;
                    object.size = 0;
                    object.totalElements = 0;
                    object.totalPages = 0;
                }
                if (message.index != null && message.hasOwnProperty("index"))
                    object.index = message.index;
                if (message.size != null && message.hasOwnProperty("size"))
                    object.size = message.size;
                if (message.totalElements != null && message.hasOwnProperty("totalElements"))
                    object.totalElements = message.totalElements;
                if (message.totalPages != null && message.hasOwnProperty("totalPages"))
                    object.totalPages = message.totalPages;
                return object;
            };

            /**
             * Converts this Pagination to JSON.
             * @function toJSON
             * @memberof teads.api.Pagination
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Pagination.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for Pagination
             * @function getTypeUrl
             * @memberof teads.api.Pagination
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Pagination.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.Pagination";
            };

            return Pagination;
        })();

        api.RemoveFirstPartySegmentFromWhitelistForSeatRequest = (function() {

            /**
             * Properties of a RemoveFirstPartySegmentFromWhitelistForSeatRequest.
             * @memberof teads.api
             * @interface IRemoveFirstPartySegmentFromWhitelistForSeatRequest
             * @property {teads.api.ISecurityContext} securityContext RemoveFirstPartySegmentFromWhitelistForSeatRequest securityContext
             * @property {teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.IAdvertiserFirstPartySegment} segment RemoveFirstPartySegmentFromWhitelistForSeatRequest segment
             * @property {number} entityId RemoveFirstPartySegmentFromWhitelistForSeatRequest entityId
             */

            /**
             * Constructs a new RemoveFirstPartySegmentFromWhitelistForSeatRequest.
             * @memberof teads.api
             * @classdesc Represents a RemoveFirstPartySegmentFromWhitelistForSeatRequest.
             * @implements IRemoveFirstPartySegmentFromWhitelistForSeatRequest
             * @constructor
             * @param {teads.api.IRemoveFirstPartySegmentFromWhitelistForSeatRequest=} [properties] Properties to set
             */
            function RemoveFirstPartySegmentFromWhitelistForSeatRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * RemoveFirstPartySegmentFromWhitelistForSeatRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest
             * @instance
             */
            RemoveFirstPartySegmentFromWhitelistForSeatRequest.prototype.securityContext = null;

            /**
             * RemoveFirstPartySegmentFromWhitelistForSeatRequest segment.
             * @member {teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.IAdvertiserFirstPartySegment} segment
             * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest
             * @instance
             */
            RemoveFirstPartySegmentFromWhitelistForSeatRequest.prototype.segment = null;

            /**
             * RemoveFirstPartySegmentFromWhitelistForSeatRequest entityId.
             * @member {number} entityId
             * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest
             * @instance
             */
            RemoveFirstPartySegmentFromWhitelistForSeatRequest.prototype.entityId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new RemoveFirstPartySegmentFromWhitelistForSeatRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest
             * @static
             * @param {teads.api.IRemoveFirstPartySegmentFromWhitelistForSeatRequest=} [properties] Properties to set
             * @returns {teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest} RemoveFirstPartySegmentFromWhitelistForSeatRequest instance
             */
            RemoveFirstPartySegmentFromWhitelistForSeatRequest.create = function create(properties) {
                return new RemoveFirstPartySegmentFromWhitelistForSeatRequest(properties);
            };

            /**
             * Encodes the specified RemoveFirstPartySegmentFromWhitelistForSeatRequest message. Does not implicitly {@link teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest
             * @static
             * @param {teads.api.IRemoveFirstPartySegmentFromWhitelistForSeatRequest} message RemoveFirstPartySegmentFromWhitelistForSeatRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RemoveFirstPartySegmentFromWhitelistForSeatRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                $root.teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment.encode(message.segment, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.entityId);
                return writer;
            };

            /**
             * Encodes the specified RemoveFirstPartySegmentFromWhitelistForSeatRequest message, length delimited. Does not implicitly {@link teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest
             * @static
             * @param {teads.api.IRemoveFirstPartySegmentFromWhitelistForSeatRequest} message RemoveFirstPartySegmentFromWhitelistForSeatRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RemoveFirstPartySegmentFromWhitelistForSeatRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a RemoveFirstPartySegmentFromWhitelistForSeatRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest} RemoveFirstPartySegmentFromWhitelistForSeatRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RemoveFirstPartySegmentFromWhitelistForSeatRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.segment = $root.teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment.decode(reader, reader.uint32());
                            break;
                        }
                    case 3: {
                            message.entityId = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("segment"))
                    throw $util.ProtocolError("missing required 'segment'", { instance: message });
                if (!message.hasOwnProperty("entityId"))
                    throw $util.ProtocolError("missing required 'entityId'", { instance: message });
                return message;
            };

            /**
             * Decodes a RemoveFirstPartySegmentFromWhitelistForSeatRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest} RemoveFirstPartySegmentFromWhitelistForSeatRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RemoveFirstPartySegmentFromWhitelistForSeatRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a RemoveFirstPartySegmentFromWhitelistForSeatRequest message.
             * @function verify
             * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            RemoveFirstPartySegmentFromWhitelistForSeatRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                {
                    var error = $root.teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment.verify(message.segment);
                    if (error)
                        return "segment." + error;
                }
                if (!$util.isInteger(message.entityId) && !(message.entityId && $util.isInteger(message.entityId.low) && $util.isInteger(message.entityId.high)))
                    return "entityId: integer|Long expected";
                return null;
            };

            /**
             * Creates a RemoveFirstPartySegmentFromWhitelistForSeatRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest} RemoveFirstPartySegmentFromWhitelistForSeatRequest
             */
            RemoveFirstPartySegmentFromWhitelistForSeatRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest)
                    return object;
                var message = new $root.teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.segment != null) {
                    if (typeof object.segment !== "object")
                        throw TypeError(".teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.segment: object expected");
                    message.segment = $root.teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment.fromObject(object.segment);
                }
                if (object.entityId != null)
                    if ($util.Long)
                        (message.entityId = $util.Long.fromValue(object.entityId)).unsigned = false;
                    else if (typeof object.entityId === "string")
                        message.entityId = parseInt(object.entityId, 10);
                    else if (typeof object.entityId === "number")
                        message.entityId = object.entityId;
                    else if (typeof object.entityId === "object")
                        message.entityId = new $util.LongBits(object.entityId.low >>> 0, object.entityId.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from a RemoveFirstPartySegmentFromWhitelistForSeatRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest
             * @static
             * @param {teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest} message RemoveFirstPartySegmentFromWhitelistForSeatRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            RemoveFirstPartySegmentFromWhitelistForSeatRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    object.segment = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.entityId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.entityId = options.longs === String ? "0" : 0;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.segment != null && message.hasOwnProperty("segment"))
                    object.segment = $root.teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment.toObject(message.segment, options);
                if (message.entityId != null && message.hasOwnProperty("entityId"))
                    if (typeof message.entityId === "number")
                        object.entityId = options.longs === String ? String(message.entityId) : message.entityId;
                    else
                        object.entityId = options.longs === String ? $util.Long.prototype.toString.call(message.entityId) : options.longs === Number ? new $util.LongBits(message.entityId.low >>> 0, message.entityId.high >>> 0).toNumber() : message.entityId;
                return object;
            };

            /**
             * Converts this RemoveFirstPartySegmentFromWhitelistForSeatRequest to JSON.
             * @function toJSON
             * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            RemoveFirstPartySegmentFromWhitelistForSeatRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for RemoveFirstPartySegmentFromWhitelistForSeatRequest
             * @function getTypeUrl
             * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            RemoveFirstPartySegmentFromWhitelistForSeatRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest";
            };

            RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment = (function() {

                /**
                 * Properties of an AdvertiserFirstPartySegment.
                 * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest
                 * @interface IAdvertiserFirstPartySegment
                 * @property {teads.api.AdvertiserFirstPartySegmentProvider} segmentProvider AdvertiserFirstPartySegment segmentProvider
                 * @property {number} providerSegmentId AdvertiserFirstPartySegment providerSegmentId
                 */

                /**
                 * Constructs a new AdvertiserFirstPartySegment.
                 * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest
                 * @classdesc Represents an AdvertiserFirstPartySegment.
                 * @implements IAdvertiserFirstPartySegment
                 * @constructor
                 * @param {teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.IAdvertiserFirstPartySegment=} [properties] Properties to set
                 */
                function AdvertiserFirstPartySegment(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * AdvertiserFirstPartySegment segmentProvider.
                 * @member {teads.api.AdvertiserFirstPartySegmentProvider} segmentProvider
                 * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment
                 * @instance
                 */
                AdvertiserFirstPartySegment.prototype.segmentProvider = 1;

                /**
                 * AdvertiserFirstPartySegment providerSegmentId.
                 * @member {number} providerSegmentId
                 * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment
                 * @instance
                 */
                AdvertiserFirstPartySegment.prototype.providerSegmentId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * Creates a new AdvertiserFirstPartySegment instance using the specified properties.
                 * @function create
                 * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment
                 * @static
                 * @param {teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.IAdvertiserFirstPartySegment=} [properties] Properties to set
                 * @returns {teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment} AdvertiserFirstPartySegment instance
                 */
                AdvertiserFirstPartySegment.create = function create(properties) {
                    return new AdvertiserFirstPartySegment(properties);
                };

                /**
                 * Encodes the specified AdvertiserFirstPartySegment message. Does not implicitly {@link teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment
                 * @static
                 * @param {teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.IAdvertiserFirstPartySegment} message AdvertiserFirstPartySegment message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                AdvertiserFirstPartySegment.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.segmentProvider);
                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.providerSegmentId);
                    return writer;
                };

                /**
                 * Encodes the specified AdvertiserFirstPartySegment message, length delimited. Does not implicitly {@link teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment
                 * @static
                 * @param {teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.IAdvertiserFirstPartySegment} message AdvertiserFirstPartySegment message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                AdvertiserFirstPartySegment.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes an AdvertiserFirstPartySegment message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment} AdvertiserFirstPartySegment
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                AdvertiserFirstPartySegment.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.segmentProvider = reader.int32();
                                break;
                            }
                        case 2: {
                                message.providerSegmentId = reader.int64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("segmentProvider"))
                        throw $util.ProtocolError("missing required 'segmentProvider'", { instance: message });
                    if (!message.hasOwnProperty("providerSegmentId"))
                        throw $util.ProtocolError("missing required 'providerSegmentId'", { instance: message });
                    return message;
                };

                /**
                 * Decodes an AdvertiserFirstPartySegment message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment} AdvertiserFirstPartySegment
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                AdvertiserFirstPartySegment.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies an AdvertiserFirstPartySegment message.
                 * @function verify
                 * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                AdvertiserFirstPartySegment.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    switch (message.segmentProvider) {
                    default:
                        return "segmentProvider: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 7:
                        break;
                    }
                    if (!$util.isInteger(message.providerSegmentId) && !(message.providerSegmentId && $util.isInteger(message.providerSegmentId.low) && $util.isInteger(message.providerSegmentId.high)))
                        return "providerSegmentId: integer|Long expected";
                    return null;
                };

                /**
                 * Creates an AdvertiserFirstPartySegment message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment} AdvertiserFirstPartySegment
                 */
                AdvertiserFirstPartySegment.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment)
                        return object;
                    var message = new $root.teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment();
                    switch (object.segmentProvider) {
                    default:
                        if (typeof object.segmentProvider === "number") {
                            message.segmentProvider = object.segmentProvider;
                            break;
                        }
                        break;
                    case "ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_NIELSEN":
                    case 1:
                        message.segmentProvider = 1;
                        break;
                    case "ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_LIVERAMP":
                    case 2:
                        message.segmentProvider = 2;
                        break;
                    case "ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_BLUEKAI":
                    case 3:
                        message.segmentProvider = 3;
                        break;
                    case "ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_NEUSTAR":
                    case 4:
                        message.segmentProvider = 4;
                        break;
                    case "ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_SALESFORCE":
                    case 5:
                        message.segmentProvider = 5;
                        break;
                    case "ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_RETARGETLY":
                    case 7:
                        message.segmentProvider = 7;
                        break;
                    }
                    if (object.providerSegmentId != null)
                        if ($util.Long)
                            (message.providerSegmentId = $util.Long.fromValue(object.providerSegmentId)).unsigned = false;
                        else if (typeof object.providerSegmentId === "string")
                            message.providerSegmentId = parseInt(object.providerSegmentId, 10);
                        else if (typeof object.providerSegmentId === "number")
                            message.providerSegmentId = object.providerSegmentId;
                        else if (typeof object.providerSegmentId === "object")
                            message.providerSegmentId = new $util.LongBits(object.providerSegmentId.low >>> 0, object.providerSegmentId.high >>> 0).toNumber();
                    return message;
                };

                /**
                 * Creates a plain object from an AdvertiserFirstPartySegment message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment
                 * @static
                 * @param {teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment} message AdvertiserFirstPartySegment
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                AdvertiserFirstPartySegment.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.segmentProvider = options.enums === String ? "ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_NIELSEN" : 1;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.providerSegmentId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.providerSegmentId = options.longs === String ? "0" : 0;
                    }
                    if (message.segmentProvider != null && message.hasOwnProperty("segmentProvider"))
                        object.segmentProvider = options.enums === String ? $root.teads.api.AdvertiserFirstPartySegmentProvider[message.segmentProvider] === undefined ? message.segmentProvider : $root.teads.api.AdvertiserFirstPartySegmentProvider[message.segmentProvider] : message.segmentProvider;
                    if (message.providerSegmentId != null && message.hasOwnProperty("providerSegmentId"))
                        if (typeof message.providerSegmentId === "number")
                            object.providerSegmentId = options.longs === String ? String(message.providerSegmentId) : message.providerSegmentId;
                        else
                            object.providerSegmentId = options.longs === String ? $util.Long.prototype.toString.call(message.providerSegmentId) : options.longs === Number ? new $util.LongBits(message.providerSegmentId.low >>> 0, message.providerSegmentId.high >>> 0).toNumber() : message.providerSegmentId;
                    return object;
                };

                /**
                 * Converts this AdvertiserFirstPartySegment to JSON.
                 * @function toJSON
                 * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                AdvertiserFirstPartySegment.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for AdvertiserFirstPartySegment
                 * @function getTypeUrl
                 * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                AdvertiserFirstPartySegment.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest.AdvertiserFirstPartySegment";
                };

                return AdvertiserFirstPartySegment;
            })();

            return RemoveFirstPartySegmentFromWhitelistForSeatRequest;
        })();

        api.RemoveFirstPartySegmentFromWhitelistForSeatResponse = (function() {

            /**
             * Properties of a RemoveFirstPartySegmentFromWhitelistForSeatResponse.
             * @memberof teads.api
             * @interface IRemoveFirstPartySegmentFromWhitelistForSeatResponse
             */

            /**
             * Constructs a new RemoveFirstPartySegmentFromWhitelistForSeatResponse.
             * @memberof teads.api
             * @classdesc Represents a RemoveFirstPartySegmentFromWhitelistForSeatResponse.
             * @implements IRemoveFirstPartySegmentFromWhitelistForSeatResponse
             * @constructor
             * @param {teads.api.IRemoveFirstPartySegmentFromWhitelistForSeatResponse=} [properties] Properties to set
             */
            function RemoveFirstPartySegmentFromWhitelistForSeatResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Creates a new RemoveFirstPartySegmentFromWhitelistForSeatResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatResponse
             * @static
             * @param {teads.api.IRemoveFirstPartySegmentFromWhitelistForSeatResponse=} [properties] Properties to set
             * @returns {teads.api.RemoveFirstPartySegmentFromWhitelistForSeatResponse} RemoveFirstPartySegmentFromWhitelistForSeatResponse instance
             */
            RemoveFirstPartySegmentFromWhitelistForSeatResponse.create = function create(properties) {
                return new RemoveFirstPartySegmentFromWhitelistForSeatResponse(properties);
            };

            /**
             * Encodes the specified RemoveFirstPartySegmentFromWhitelistForSeatResponse message. Does not implicitly {@link teads.api.RemoveFirstPartySegmentFromWhitelistForSeatResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatResponse
             * @static
             * @param {teads.api.IRemoveFirstPartySegmentFromWhitelistForSeatResponse} message RemoveFirstPartySegmentFromWhitelistForSeatResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RemoveFirstPartySegmentFromWhitelistForSeatResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified RemoveFirstPartySegmentFromWhitelistForSeatResponse message, length delimited. Does not implicitly {@link teads.api.RemoveFirstPartySegmentFromWhitelistForSeatResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatResponse
             * @static
             * @param {teads.api.IRemoveFirstPartySegmentFromWhitelistForSeatResponse} message RemoveFirstPartySegmentFromWhitelistForSeatResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RemoveFirstPartySegmentFromWhitelistForSeatResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a RemoveFirstPartySegmentFromWhitelistForSeatResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.RemoveFirstPartySegmentFromWhitelistForSeatResponse} RemoveFirstPartySegmentFromWhitelistForSeatResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RemoveFirstPartySegmentFromWhitelistForSeatResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.RemoveFirstPartySegmentFromWhitelistForSeatResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a RemoveFirstPartySegmentFromWhitelistForSeatResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.RemoveFirstPartySegmentFromWhitelistForSeatResponse} RemoveFirstPartySegmentFromWhitelistForSeatResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RemoveFirstPartySegmentFromWhitelistForSeatResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a RemoveFirstPartySegmentFromWhitelistForSeatResponse message.
             * @function verify
             * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            RemoveFirstPartySegmentFromWhitelistForSeatResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates a RemoveFirstPartySegmentFromWhitelistForSeatResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.RemoveFirstPartySegmentFromWhitelistForSeatResponse} RemoveFirstPartySegmentFromWhitelistForSeatResponse
             */
            RemoveFirstPartySegmentFromWhitelistForSeatResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.RemoveFirstPartySegmentFromWhitelistForSeatResponse)
                    return object;
                return new $root.teads.api.RemoveFirstPartySegmentFromWhitelistForSeatResponse();
            };

            /**
             * Creates a plain object from a RemoveFirstPartySegmentFromWhitelistForSeatResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatResponse
             * @static
             * @param {teads.api.RemoveFirstPartySegmentFromWhitelistForSeatResponse} message RemoveFirstPartySegmentFromWhitelistForSeatResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            RemoveFirstPartySegmentFromWhitelistForSeatResponse.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this RemoveFirstPartySegmentFromWhitelistForSeatResponse to JSON.
             * @function toJSON
             * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            RemoveFirstPartySegmentFromWhitelistForSeatResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for RemoveFirstPartySegmentFromWhitelistForSeatResponse
             * @function getTypeUrl
             * @memberof teads.api.RemoveFirstPartySegmentFromWhitelistForSeatResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            RemoveFirstPartySegmentFromWhitelistForSeatResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.RemoveFirstPartySegmentFromWhitelistForSeatResponse";
            };

            return RemoveFirstPartySegmentFromWhitelistForSeatResponse;
        })();

        api.RevokeAdminRoleForBuyerRequest = (function() {

            /**
             * Properties of a RevokeAdminRoleForBuyerRequest.
             * @memberof teads.api
             * @interface IRevokeAdminRoleForBuyerRequest
             * @property {teads.api.ISecurityContext} securityContext RevokeAdminRoleForBuyerRequest securityContext
             * @property {number} profileId RevokeAdminRoleForBuyerRequest profileId
             * @property {number} entityId RevokeAdminRoleForBuyerRequest entityId
             */

            /**
             * Constructs a new RevokeAdminRoleForBuyerRequest.
             * @memberof teads.api
             * @classdesc Represents a RevokeAdminRoleForBuyerRequest.
             * @implements IRevokeAdminRoleForBuyerRequest
             * @constructor
             * @param {teads.api.IRevokeAdminRoleForBuyerRequest=} [properties] Properties to set
             */
            function RevokeAdminRoleForBuyerRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * RevokeAdminRoleForBuyerRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.RevokeAdminRoleForBuyerRequest
             * @instance
             */
            RevokeAdminRoleForBuyerRequest.prototype.securityContext = null;

            /**
             * RevokeAdminRoleForBuyerRequest profileId.
             * @member {number} profileId
             * @memberof teads.api.RevokeAdminRoleForBuyerRequest
             * @instance
             */
            RevokeAdminRoleForBuyerRequest.prototype.profileId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * RevokeAdminRoleForBuyerRequest entityId.
             * @member {number} entityId
             * @memberof teads.api.RevokeAdminRoleForBuyerRequest
             * @instance
             */
            RevokeAdminRoleForBuyerRequest.prototype.entityId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new RevokeAdminRoleForBuyerRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.RevokeAdminRoleForBuyerRequest
             * @static
             * @param {teads.api.IRevokeAdminRoleForBuyerRequest=} [properties] Properties to set
             * @returns {teads.api.RevokeAdminRoleForBuyerRequest} RevokeAdminRoleForBuyerRequest instance
             */
            RevokeAdminRoleForBuyerRequest.create = function create(properties) {
                return new RevokeAdminRoleForBuyerRequest(properties);
            };

            /**
             * Encodes the specified RevokeAdminRoleForBuyerRequest message. Does not implicitly {@link teads.api.RevokeAdminRoleForBuyerRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.RevokeAdminRoleForBuyerRequest
             * @static
             * @param {teads.api.IRevokeAdminRoleForBuyerRequest} message RevokeAdminRoleForBuyerRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RevokeAdminRoleForBuyerRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.profileId);
                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.entityId);
                return writer;
            };

            /**
             * Encodes the specified RevokeAdminRoleForBuyerRequest message, length delimited. Does not implicitly {@link teads.api.RevokeAdminRoleForBuyerRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.RevokeAdminRoleForBuyerRequest
             * @static
             * @param {teads.api.IRevokeAdminRoleForBuyerRequest} message RevokeAdminRoleForBuyerRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RevokeAdminRoleForBuyerRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a RevokeAdminRoleForBuyerRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.RevokeAdminRoleForBuyerRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.RevokeAdminRoleForBuyerRequest} RevokeAdminRoleForBuyerRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RevokeAdminRoleForBuyerRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.RevokeAdminRoleForBuyerRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.profileId = reader.int64();
                            break;
                        }
                    case 3: {
                            message.entityId = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("profileId"))
                    throw $util.ProtocolError("missing required 'profileId'", { instance: message });
                if (!message.hasOwnProperty("entityId"))
                    throw $util.ProtocolError("missing required 'entityId'", { instance: message });
                return message;
            };

            /**
             * Decodes a RevokeAdminRoleForBuyerRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.RevokeAdminRoleForBuyerRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.RevokeAdminRoleForBuyerRequest} RevokeAdminRoleForBuyerRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RevokeAdminRoleForBuyerRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a RevokeAdminRoleForBuyerRequest message.
             * @function verify
             * @memberof teads.api.RevokeAdminRoleForBuyerRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            RevokeAdminRoleForBuyerRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.profileId) && !(message.profileId && $util.isInteger(message.profileId.low) && $util.isInteger(message.profileId.high)))
                    return "profileId: integer|Long expected";
                if (!$util.isInteger(message.entityId) && !(message.entityId && $util.isInteger(message.entityId.low) && $util.isInteger(message.entityId.high)))
                    return "entityId: integer|Long expected";
                return null;
            };

            /**
             * Creates a RevokeAdminRoleForBuyerRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.RevokeAdminRoleForBuyerRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.RevokeAdminRoleForBuyerRequest} RevokeAdminRoleForBuyerRequest
             */
            RevokeAdminRoleForBuyerRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.RevokeAdminRoleForBuyerRequest)
                    return object;
                var message = new $root.teads.api.RevokeAdminRoleForBuyerRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.RevokeAdminRoleForBuyerRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.profileId != null)
                    if ($util.Long)
                        (message.profileId = $util.Long.fromValue(object.profileId)).unsigned = false;
                    else if (typeof object.profileId === "string")
                        message.profileId = parseInt(object.profileId, 10);
                    else if (typeof object.profileId === "number")
                        message.profileId = object.profileId;
                    else if (typeof object.profileId === "object")
                        message.profileId = new $util.LongBits(object.profileId.low >>> 0, object.profileId.high >>> 0).toNumber();
                if (object.entityId != null)
                    if ($util.Long)
                        (message.entityId = $util.Long.fromValue(object.entityId)).unsigned = false;
                    else if (typeof object.entityId === "string")
                        message.entityId = parseInt(object.entityId, 10);
                    else if (typeof object.entityId === "number")
                        message.entityId = object.entityId;
                    else if (typeof object.entityId === "object")
                        message.entityId = new $util.LongBits(object.entityId.low >>> 0, object.entityId.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from a RevokeAdminRoleForBuyerRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.RevokeAdminRoleForBuyerRequest
             * @static
             * @param {teads.api.RevokeAdminRoleForBuyerRequest} message RevokeAdminRoleForBuyerRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            RevokeAdminRoleForBuyerRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.profileId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.profileId = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.entityId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.entityId = options.longs === String ? "0" : 0;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.profileId != null && message.hasOwnProperty("profileId"))
                    if (typeof message.profileId === "number")
                        object.profileId = options.longs === String ? String(message.profileId) : message.profileId;
                    else
                        object.profileId = options.longs === String ? $util.Long.prototype.toString.call(message.profileId) : options.longs === Number ? new $util.LongBits(message.profileId.low >>> 0, message.profileId.high >>> 0).toNumber() : message.profileId;
                if (message.entityId != null && message.hasOwnProperty("entityId"))
                    if (typeof message.entityId === "number")
                        object.entityId = options.longs === String ? String(message.entityId) : message.entityId;
                    else
                        object.entityId = options.longs === String ? $util.Long.prototype.toString.call(message.entityId) : options.longs === Number ? new $util.LongBits(message.entityId.low >>> 0, message.entityId.high >>> 0).toNumber() : message.entityId;
                return object;
            };

            /**
             * Converts this RevokeAdminRoleForBuyerRequest to JSON.
             * @function toJSON
             * @memberof teads.api.RevokeAdminRoleForBuyerRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            RevokeAdminRoleForBuyerRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for RevokeAdminRoleForBuyerRequest
             * @function getTypeUrl
             * @memberof teads.api.RevokeAdminRoleForBuyerRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            RevokeAdminRoleForBuyerRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.RevokeAdminRoleForBuyerRequest";
            };

            return RevokeAdminRoleForBuyerRequest;
        })();

        api.RevokeAdminRoleForBuyerResponse = (function() {

            /**
             * Properties of a RevokeAdminRoleForBuyerResponse.
             * @memberof teads.api
             * @interface IRevokeAdminRoleForBuyerResponse
             */

            /**
             * Constructs a new RevokeAdminRoleForBuyerResponse.
             * @memberof teads.api
             * @classdesc Represents a RevokeAdminRoleForBuyerResponse.
             * @implements IRevokeAdminRoleForBuyerResponse
             * @constructor
             * @param {teads.api.IRevokeAdminRoleForBuyerResponse=} [properties] Properties to set
             */
            function RevokeAdminRoleForBuyerResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Creates a new RevokeAdminRoleForBuyerResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.RevokeAdminRoleForBuyerResponse
             * @static
             * @param {teads.api.IRevokeAdminRoleForBuyerResponse=} [properties] Properties to set
             * @returns {teads.api.RevokeAdminRoleForBuyerResponse} RevokeAdminRoleForBuyerResponse instance
             */
            RevokeAdminRoleForBuyerResponse.create = function create(properties) {
                return new RevokeAdminRoleForBuyerResponse(properties);
            };

            /**
             * Encodes the specified RevokeAdminRoleForBuyerResponse message. Does not implicitly {@link teads.api.RevokeAdminRoleForBuyerResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.RevokeAdminRoleForBuyerResponse
             * @static
             * @param {teads.api.IRevokeAdminRoleForBuyerResponse} message RevokeAdminRoleForBuyerResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RevokeAdminRoleForBuyerResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified RevokeAdminRoleForBuyerResponse message, length delimited. Does not implicitly {@link teads.api.RevokeAdminRoleForBuyerResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.RevokeAdminRoleForBuyerResponse
             * @static
             * @param {teads.api.IRevokeAdminRoleForBuyerResponse} message RevokeAdminRoleForBuyerResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            RevokeAdminRoleForBuyerResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a RevokeAdminRoleForBuyerResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.RevokeAdminRoleForBuyerResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.RevokeAdminRoleForBuyerResponse} RevokeAdminRoleForBuyerResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RevokeAdminRoleForBuyerResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.RevokeAdminRoleForBuyerResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a RevokeAdminRoleForBuyerResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.RevokeAdminRoleForBuyerResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.RevokeAdminRoleForBuyerResponse} RevokeAdminRoleForBuyerResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            RevokeAdminRoleForBuyerResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a RevokeAdminRoleForBuyerResponse message.
             * @function verify
             * @memberof teads.api.RevokeAdminRoleForBuyerResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            RevokeAdminRoleForBuyerResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates a RevokeAdminRoleForBuyerResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.RevokeAdminRoleForBuyerResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.RevokeAdminRoleForBuyerResponse} RevokeAdminRoleForBuyerResponse
             */
            RevokeAdminRoleForBuyerResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.RevokeAdminRoleForBuyerResponse)
                    return object;
                return new $root.teads.api.RevokeAdminRoleForBuyerResponse();
            };

            /**
             * Creates a plain object from a RevokeAdminRoleForBuyerResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.RevokeAdminRoleForBuyerResponse
             * @static
             * @param {teads.api.RevokeAdminRoleForBuyerResponse} message RevokeAdminRoleForBuyerResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            RevokeAdminRoleForBuyerResponse.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this RevokeAdminRoleForBuyerResponse to JSON.
             * @function toJSON
             * @memberof teads.api.RevokeAdminRoleForBuyerResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            RevokeAdminRoleForBuyerResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for RevokeAdminRoleForBuyerResponse
             * @function getTypeUrl
             * @memberof teads.api.RevokeAdminRoleForBuyerResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            RevokeAdminRoleForBuyerResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.RevokeAdminRoleForBuyerResponse";
            };

            return RevokeAdminRoleForBuyerResponse;
        })();

        api.SearchAdvertiserFirstPartySegmentsRequest = (function() {

            /**
             * Properties of a SearchAdvertiserFirstPartySegmentsRequest.
             * @memberof teads.api
             * @interface ISearchAdvertiserFirstPartySegmentsRequest
             * @property {teads.api.ISecurityContext} securityContext SearchAdvertiserFirstPartySegmentsRequest securityContext
             * @property {string|null} [search] SearchAdvertiserFirstPartySegmentsRequest search
             * @property {teads.api.IPage} page SearchAdvertiserFirstPartySegmentsRequest page
             * @property {number|null} [advertiserId] SearchAdvertiserFirstPartySegmentsRequest advertiserId
             */

            /**
             * Constructs a new SearchAdvertiserFirstPartySegmentsRequest.
             * @memberof teads.api
             * @classdesc Represents a SearchAdvertiserFirstPartySegmentsRequest.
             * @implements ISearchAdvertiserFirstPartySegmentsRequest
             * @constructor
             * @param {teads.api.ISearchAdvertiserFirstPartySegmentsRequest=} [properties] Properties to set
             */
            function SearchAdvertiserFirstPartySegmentsRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SearchAdvertiserFirstPartySegmentsRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.SearchAdvertiserFirstPartySegmentsRequest
             * @instance
             */
            SearchAdvertiserFirstPartySegmentsRequest.prototype.securityContext = null;

            /**
             * SearchAdvertiserFirstPartySegmentsRequest search.
             * @member {string} search
             * @memberof teads.api.SearchAdvertiserFirstPartySegmentsRequest
             * @instance
             */
            SearchAdvertiserFirstPartySegmentsRequest.prototype.search = "";

            /**
             * SearchAdvertiserFirstPartySegmentsRequest page.
             * @member {teads.api.IPage} page
             * @memberof teads.api.SearchAdvertiserFirstPartySegmentsRequest
             * @instance
             */
            SearchAdvertiserFirstPartySegmentsRequest.prototype.page = null;

            /**
             * SearchAdvertiserFirstPartySegmentsRequest advertiserId.
             * @member {number} advertiserId
             * @memberof teads.api.SearchAdvertiserFirstPartySegmentsRequest
             * @instance
             */
            SearchAdvertiserFirstPartySegmentsRequest.prototype.advertiserId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new SearchAdvertiserFirstPartySegmentsRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.SearchAdvertiserFirstPartySegmentsRequest
             * @static
             * @param {teads.api.ISearchAdvertiserFirstPartySegmentsRequest=} [properties] Properties to set
             * @returns {teads.api.SearchAdvertiserFirstPartySegmentsRequest} SearchAdvertiserFirstPartySegmentsRequest instance
             */
            SearchAdvertiserFirstPartySegmentsRequest.create = function create(properties) {
                return new SearchAdvertiserFirstPartySegmentsRequest(properties);
            };

            /**
             * Encodes the specified SearchAdvertiserFirstPartySegmentsRequest message. Does not implicitly {@link teads.api.SearchAdvertiserFirstPartySegmentsRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.SearchAdvertiserFirstPartySegmentsRequest
             * @static
             * @param {teads.api.ISearchAdvertiserFirstPartySegmentsRequest} message SearchAdvertiserFirstPartySegmentsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SearchAdvertiserFirstPartySegmentsRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.search != null && Object.hasOwnProperty.call(message, "search"))
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.search);
                $root.teads.api.Page.encode(message.page, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                if (message.advertiserId != null && Object.hasOwnProperty.call(message, "advertiserId"))
                    writer.uint32(/* id 4, wireType 0 =*/32).int64(message.advertiserId);
                return writer;
            };

            /**
             * Encodes the specified SearchAdvertiserFirstPartySegmentsRequest message, length delimited. Does not implicitly {@link teads.api.SearchAdvertiserFirstPartySegmentsRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.SearchAdvertiserFirstPartySegmentsRequest
             * @static
             * @param {teads.api.ISearchAdvertiserFirstPartySegmentsRequest} message SearchAdvertiserFirstPartySegmentsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SearchAdvertiserFirstPartySegmentsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SearchAdvertiserFirstPartySegmentsRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.SearchAdvertiserFirstPartySegmentsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.SearchAdvertiserFirstPartySegmentsRequest} SearchAdvertiserFirstPartySegmentsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SearchAdvertiserFirstPartySegmentsRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.SearchAdvertiserFirstPartySegmentsRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.search = reader.string();
                            break;
                        }
                    case 3: {
                            message.page = $root.teads.api.Page.decode(reader, reader.uint32());
                            break;
                        }
                    case 4: {
                            message.advertiserId = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("page"))
                    throw $util.ProtocolError("missing required 'page'", { instance: message });
                return message;
            };

            /**
             * Decodes a SearchAdvertiserFirstPartySegmentsRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.SearchAdvertiserFirstPartySegmentsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.SearchAdvertiserFirstPartySegmentsRequest} SearchAdvertiserFirstPartySegmentsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SearchAdvertiserFirstPartySegmentsRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SearchAdvertiserFirstPartySegmentsRequest message.
             * @function verify
             * @memberof teads.api.SearchAdvertiserFirstPartySegmentsRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SearchAdvertiserFirstPartySegmentsRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (message.search != null && message.hasOwnProperty("search"))
                    if (!$util.isString(message.search))
                        return "search: string expected";
                {
                    var error = $root.teads.api.Page.verify(message.page);
                    if (error)
                        return "page." + error;
                }
                if (message.advertiserId != null && message.hasOwnProperty("advertiserId"))
                    if (!$util.isInteger(message.advertiserId) && !(message.advertiserId && $util.isInteger(message.advertiserId.low) && $util.isInteger(message.advertiserId.high)))
                        return "advertiserId: integer|Long expected";
                return null;
            };

            /**
             * Creates a SearchAdvertiserFirstPartySegmentsRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.SearchAdvertiserFirstPartySegmentsRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.SearchAdvertiserFirstPartySegmentsRequest} SearchAdvertiserFirstPartySegmentsRequest
             */
            SearchAdvertiserFirstPartySegmentsRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.SearchAdvertiserFirstPartySegmentsRequest)
                    return object;
                var message = new $root.teads.api.SearchAdvertiserFirstPartySegmentsRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.SearchAdvertiserFirstPartySegmentsRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.search != null)
                    message.search = String(object.search);
                if (object.page != null) {
                    if (typeof object.page !== "object")
                        throw TypeError(".teads.api.SearchAdvertiserFirstPartySegmentsRequest.page: object expected");
                    message.page = $root.teads.api.Page.fromObject(object.page);
                }
                if (object.advertiserId != null)
                    if ($util.Long)
                        (message.advertiserId = $util.Long.fromValue(object.advertiserId)).unsigned = false;
                    else if (typeof object.advertiserId === "string")
                        message.advertiserId = parseInt(object.advertiserId, 10);
                    else if (typeof object.advertiserId === "number")
                        message.advertiserId = object.advertiserId;
                    else if (typeof object.advertiserId === "object")
                        message.advertiserId = new $util.LongBits(object.advertiserId.low >>> 0, object.advertiserId.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from a SearchAdvertiserFirstPartySegmentsRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.SearchAdvertiserFirstPartySegmentsRequest
             * @static
             * @param {teads.api.SearchAdvertiserFirstPartySegmentsRequest} message SearchAdvertiserFirstPartySegmentsRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SearchAdvertiserFirstPartySegmentsRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    object.search = "";
                    object.page = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.advertiserId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.advertiserId = options.longs === String ? "0" : 0;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.search != null && message.hasOwnProperty("search"))
                    object.search = message.search;
                if (message.page != null && message.hasOwnProperty("page"))
                    object.page = $root.teads.api.Page.toObject(message.page, options);
                if (message.advertiserId != null && message.hasOwnProperty("advertiserId"))
                    if (typeof message.advertiserId === "number")
                        object.advertiserId = options.longs === String ? String(message.advertiserId) : message.advertiserId;
                    else
                        object.advertiserId = options.longs === String ? $util.Long.prototype.toString.call(message.advertiserId) : options.longs === Number ? new $util.LongBits(message.advertiserId.low >>> 0, message.advertiserId.high >>> 0).toNumber() : message.advertiserId;
                return object;
            };

            /**
             * Converts this SearchAdvertiserFirstPartySegmentsRequest to JSON.
             * @function toJSON
             * @memberof teads.api.SearchAdvertiserFirstPartySegmentsRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SearchAdvertiserFirstPartySegmentsRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SearchAdvertiserFirstPartySegmentsRequest
             * @function getTypeUrl
             * @memberof teads.api.SearchAdvertiserFirstPartySegmentsRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SearchAdvertiserFirstPartySegmentsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.SearchAdvertiserFirstPartySegmentsRequest";
            };

            return SearchAdvertiserFirstPartySegmentsRequest;
        })();

        api.SearchAdvertiserFirstPartySegmentsResponse = (function() {

            /**
             * Properties of a SearchAdvertiserFirstPartySegmentsResponse.
             * @memberof teads.api
             * @interface ISearchAdvertiserFirstPartySegmentsResponse
             * @property {Array.<teads.api.SearchAdvertiserFirstPartySegmentsResponse.IAdvertiserFirstPartySegment>|null} [segments] SearchAdvertiserFirstPartySegmentsResponse segments
             * @property {number} total SearchAdvertiserFirstPartySegmentsResponse total
             */

            /**
             * Constructs a new SearchAdvertiserFirstPartySegmentsResponse.
             * @memberof teads.api
             * @classdesc Represents a SearchAdvertiserFirstPartySegmentsResponse.
             * @implements ISearchAdvertiserFirstPartySegmentsResponse
             * @constructor
             * @param {teads.api.ISearchAdvertiserFirstPartySegmentsResponse=} [properties] Properties to set
             */
            function SearchAdvertiserFirstPartySegmentsResponse(properties) {
                this.segments = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SearchAdvertiserFirstPartySegmentsResponse segments.
             * @member {Array.<teads.api.SearchAdvertiserFirstPartySegmentsResponse.IAdvertiserFirstPartySegment>} segments
             * @memberof teads.api.SearchAdvertiserFirstPartySegmentsResponse
             * @instance
             */
            SearchAdvertiserFirstPartySegmentsResponse.prototype.segments = $util.emptyArray;

            /**
             * SearchAdvertiserFirstPartySegmentsResponse total.
             * @member {number} total
             * @memberof teads.api.SearchAdvertiserFirstPartySegmentsResponse
             * @instance
             */
            SearchAdvertiserFirstPartySegmentsResponse.prototype.total = 0;

            /**
             * Creates a new SearchAdvertiserFirstPartySegmentsResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.SearchAdvertiserFirstPartySegmentsResponse
             * @static
             * @param {teads.api.ISearchAdvertiserFirstPartySegmentsResponse=} [properties] Properties to set
             * @returns {teads.api.SearchAdvertiserFirstPartySegmentsResponse} SearchAdvertiserFirstPartySegmentsResponse instance
             */
            SearchAdvertiserFirstPartySegmentsResponse.create = function create(properties) {
                return new SearchAdvertiserFirstPartySegmentsResponse(properties);
            };

            /**
             * Encodes the specified SearchAdvertiserFirstPartySegmentsResponse message. Does not implicitly {@link teads.api.SearchAdvertiserFirstPartySegmentsResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.SearchAdvertiserFirstPartySegmentsResponse
             * @static
             * @param {teads.api.ISearchAdvertiserFirstPartySegmentsResponse} message SearchAdvertiserFirstPartySegmentsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SearchAdvertiserFirstPartySegmentsResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.segments != null && message.segments.length)
                    for (var i = 0; i < message.segments.length; ++i)
                        $root.teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment.encode(message.segments[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.total);
                return writer;
            };

            /**
             * Encodes the specified SearchAdvertiserFirstPartySegmentsResponse message, length delimited. Does not implicitly {@link teads.api.SearchAdvertiserFirstPartySegmentsResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.SearchAdvertiserFirstPartySegmentsResponse
             * @static
             * @param {teads.api.ISearchAdvertiserFirstPartySegmentsResponse} message SearchAdvertiserFirstPartySegmentsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SearchAdvertiserFirstPartySegmentsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SearchAdvertiserFirstPartySegmentsResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.SearchAdvertiserFirstPartySegmentsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.SearchAdvertiserFirstPartySegmentsResponse} SearchAdvertiserFirstPartySegmentsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SearchAdvertiserFirstPartySegmentsResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.SearchAdvertiserFirstPartySegmentsResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            if (!(message.segments && message.segments.length))
                                message.segments = [];
                            message.segments.push($root.teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment.decode(reader, reader.uint32()));
                            break;
                        }
                    case 2: {
                            message.total = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("total"))
                    throw $util.ProtocolError("missing required 'total'", { instance: message });
                return message;
            };

            /**
             * Decodes a SearchAdvertiserFirstPartySegmentsResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.SearchAdvertiserFirstPartySegmentsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.SearchAdvertiserFirstPartySegmentsResponse} SearchAdvertiserFirstPartySegmentsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SearchAdvertiserFirstPartySegmentsResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SearchAdvertiserFirstPartySegmentsResponse message.
             * @function verify
             * @memberof teads.api.SearchAdvertiserFirstPartySegmentsResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SearchAdvertiserFirstPartySegmentsResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.segments != null && message.hasOwnProperty("segments")) {
                    if (!Array.isArray(message.segments))
                        return "segments: array expected";
                    for (var i = 0; i < message.segments.length; ++i) {
                        var error = $root.teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment.verify(message.segments[i]);
                        if (error)
                            return "segments." + error;
                    }
                }
                if (!$util.isInteger(message.total))
                    return "total: integer expected";
                return null;
            };

            /**
             * Creates a SearchAdvertiserFirstPartySegmentsResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.SearchAdvertiserFirstPartySegmentsResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.SearchAdvertiserFirstPartySegmentsResponse} SearchAdvertiserFirstPartySegmentsResponse
             */
            SearchAdvertiserFirstPartySegmentsResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.SearchAdvertiserFirstPartySegmentsResponse)
                    return object;
                var message = new $root.teads.api.SearchAdvertiserFirstPartySegmentsResponse();
                if (object.segments) {
                    if (!Array.isArray(object.segments))
                        throw TypeError(".teads.api.SearchAdvertiserFirstPartySegmentsResponse.segments: array expected");
                    message.segments = [];
                    for (var i = 0; i < object.segments.length; ++i) {
                        if (typeof object.segments[i] !== "object")
                            throw TypeError(".teads.api.SearchAdvertiserFirstPartySegmentsResponse.segments: object expected");
                        message.segments[i] = $root.teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment.fromObject(object.segments[i]);
                    }
                }
                if (object.total != null)
                    message.total = object.total | 0;
                return message;
            };

            /**
             * Creates a plain object from a SearchAdvertiserFirstPartySegmentsResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.SearchAdvertiserFirstPartySegmentsResponse
             * @static
             * @param {teads.api.SearchAdvertiserFirstPartySegmentsResponse} message SearchAdvertiserFirstPartySegmentsResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SearchAdvertiserFirstPartySegmentsResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.segments = [];
                if (options.defaults)
                    object.total = 0;
                if (message.segments && message.segments.length) {
                    object.segments = [];
                    for (var j = 0; j < message.segments.length; ++j)
                        object.segments[j] = $root.teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment.toObject(message.segments[j], options);
                }
                if (message.total != null && message.hasOwnProperty("total"))
                    object.total = message.total;
                return object;
            };

            /**
             * Converts this SearchAdvertiserFirstPartySegmentsResponse to JSON.
             * @function toJSON
             * @memberof teads.api.SearchAdvertiserFirstPartySegmentsResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SearchAdvertiserFirstPartySegmentsResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SearchAdvertiserFirstPartySegmentsResponse
             * @function getTypeUrl
             * @memberof teads.api.SearchAdvertiserFirstPartySegmentsResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SearchAdvertiserFirstPartySegmentsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.SearchAdvertiserFirstPartySegmentsResponse";
            };

            SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment = (function() {

                /**
                 * Properties of an AdvertiserFirstPartySegment.
                 * @memberof teads.api.SearchAdvertiserFirstPartySegmentsResponse
                 * @interface IAdvertiserFirstPartySegment
                 * @property {number} providerSegmentId AdvertiserFirstPartySegment providerSegmentId
                 * @property {string} segmentLabel AdvertiserFirstPartySegment segmentLabel
                 * @property {string} segmentProvider AdvertiserFirstPartySegment segmentProvider
                 * @property {number|null} [advertiserId] AdvertiserFirstPartySegment advertiserId
                 */

                /**
                 * Constructs a new AdvertiserFirstPartySegment.
                 * @memberof teads.api.SearchAdvertiserFirstPartySegmentsResponse
                 * @classdesc Represents an AdvertiserFirstPartySegment.
                 * @implements IAdvertiserFirstPartySegment
                 * @constructor
                 * @param {teads.api.SearchAdvertiserFirstPartySegmentsResponse.IAdvertiserFirstPartySegment=} [properties] Properties to set
                 */
                function AdvertiserFirstPartySegment(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * AdvertiserFirstPartySegment providerSegmentId.
                 * @member {number} providerSegmentId
                 * @memberof teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @instance
                 */
                AdvertiserFirstPartySegment.prototype.providerSegmentId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * AdvertiserFirstPartySegment segmentLabel.
                 * @member {string} segmentLabel
                 * @memberof teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @instance
                 */
                AdvertiserFirstPartySegment.prototype.segmentLabel = "";

                /**
                 * AdvertiserFirstPartySegment segmentProvider.
                 * @member {string} segmentProvider
                 * @memberof teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @instance
                 */
                AdvertiserFirstPartySegment.prototype.segmentProvider = "";

                /**
                 * AdvertiserFirstPartySegment advertiserId.
                 * @member {number} advertiserId
                 * @memberof teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @instance
                 */
                AdvertiserFirstPartySegment.prototype.advertiserId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * Creates a new AdvertiserFirstPartySegment instance using the specified properties.
                 * @function create
                 * @memberof teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @static
                 * @param {teads.api.SearchAdvertiserFirstPartySegmentsResponse.IAdvertiserFirstPartySegment=} [properties] Properties to set
                 * @returns {teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment} AdvertiserFirstPartySegment instance
                 */
                AdvertiserFirstPartySegment.create = function create(properties) {
                    return new AdvertiserFirstPartySegment(properties);
                };

                /**
                 * Encodes the specified AdvertiserFirstPartySegment message. Does not implicitly {@link teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @static
                 * @param {teads.api.SearchAdvertiserFirstPartySegmentsResponse.IAdvertiserFirstPartySegment} message AdvertiserFirstPartySegment message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                AdvertiserFirstPartySegment.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.providerSegmentId);
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.segmentLabel);
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.segmentProvider);
                    if (message.advertiserId != null && Object.hasOwnProperty.call(message, "advertiserId"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int64(message.advertiserId);
                    return writer;
                };

                /**
                 * Encodes the specified AdvertiserFirstPartySegment message, length delimited. Does not implicitly {@link teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @static
                 * @param {teads.api.SearchAdvertiserFirstPartySegmentsResponse.IAdvertiserFirstPartySegment} message AdvertiserFirstPartySegment message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                AdvertiserFirstPartySegment.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes an AdvertiserFirstPartySegment message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment} AdvertiserFirstPartySegment
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                AdvertiserFirstPartySegment.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.providerSegmentId = reader.int64();
                                break;
                            }
                        case 2: {
                                message.segmentLabel = reader.string();
                                break;
                            }
                        case 3: {
                                message.segmentProvider = reader.string();
                                break;
                            }
                        case 4: {
                                message.advertiserId = reader.int64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("providerSegmentId"))
                        throw $util.ProtocolError("missing required 'providerSegmentId'", { instance: message });
                    if (!message.hasOwnProperty("segmentLabel"))
                        throw $util.ProtocolError("missing required 'segmentLabel'", { instance: message });
                    if (!message.hasOwnProperty("segmentProvider"))
                        throw $util.ProtocolError("missing required 'segmentProvider'", { instance: message });
                    return message;
                };

                /**
                 * Decodes an AdvertiserFirstPartySegment message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment} AdvertiserFirstPartySegment
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                AdvertiserFirstPartySegment.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies an AdvertiserFirstPartySegment message.
                 * @function verify
                 * @memberof teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                AdvertiserFirstPartySegment.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.providerSegmentId) && !(message.providerSegmentId && $util.isInteger(message.providerSegmentId.low) && $util.isInteger(message.providerSegmentId.high)))
                        return "providerSegmentId: integer|Long expected";
                    if (!$util.isString(message.segmentLabel))
                        return "segmentLabel: string expected";
                    if (!$util.isString(message.segmentProvider))
                        return "segmentProvider: string expected";
                    if (message.advertiserId != null && message.hasOwnProperty("advertiserId"))
                        if (!$util.isInteger(message.advertiserId) && !(message.advertiserId && $util.isInteger(message.advertiserId.low) && $util.isInteger(message.advertiserId.high)))
                            return "advertiserId: integer|Long expected";
                    return null;
                };

                /**
                 * Creates an AdvertiserFirstPartySegment message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment} AdvertiserFirstPartySegment
                 */
                AdvertiserFirstPartySegment.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment)
                        return object;
                    var message = new $root.teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment();
                    if (object.providerSegmentId != null)
                        if ($util.Long)
                            (message.providerSegmentId = $util.Long.fromValue(object.providerSegmentId)).unsigned = false;
                        else if (typeof object.providerSegmentId === "string")
                            message.providerSegmentId = parseInt(object.providerSegmentId, 10);
                        else if (typeof object.providerSegmentId === "number")
                            message.providerSegmentId = object.providerSegmentId;
                        else if (typeof object.providerSegmentId === "object")
                            message.providerSegmentId = new $util.LongBits(object.providerSegmentId.low >>> 0, object.providerSegmentId.high >>> 0).toNumber();
                    if (object.segmentLabel != null)
                        message.segmentLabel = String(object.segmentLabel);
                    if (object.segmentProvider != null)
                        message.segmentProvider = String(object.segmentProvider);
                    if (object.advertiserId != null)
                        if ($util.Long)
                            (message.advertiserId = $util.Long.fromValue(object.advertiserId)).unsigned = false;
                        else if (typeof object.advertiserId === "string")
                            message.advertiserId = parseInt(object.advertiserId, 10);
                        else if (typeof object.advertiserId === "number")
                            message.advertiserId = object.advertiserId;
                        else if (typeof object.advertiserId === "object")
                            message.advertiserId = new $util.LongBits(object.advertiserId.low >>> 0, object.advertiserId.high >>> 0).toNumber();
                    return message;
                };

                /**
                 * Creates a plain object from an AdvertiserFirstPartySegment message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @static
                 * @param {teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment} message AdvertiserFirstPartySegment
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                AdvertiserFirstPartySegment.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.providerSegmentId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.providerSegmentId = options.longs === String ? "0" : 0;
                        object.segmentLabel = "";
                        object.segmentProvider = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.advertiserId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.advertiserId = options.longs === String ? "0" : 0;
                    }
                    if (message.providerSegmentId != null && message.hasOwnProperty("providerSegmentId"))
                        if (typeof message.providerSegmentId === "number")
                            object.providerSegmentId = options.longs === String ? String(message.providerSegmentId) : message.providerSegmentId;
                        else
                            object.providerSegmentId = options.longs === String ? $util.Long.prototype.toString.call(message.providerSegmentId) : options.longs === Number ? new $util.LongBits(message.providerSegmentId.low >>> 0, message.providerSegmentId.high >>> 0).toNumber() : message.providerSegmentId;
                    if (message.segmentLabel != null && message.hasOwnProperty("segmentLabel"))
                        object.segmentLabel = message.segmentLabel;
                    if (message.segmentProvider != null && message.hasOwnProperty("segmentProvider"))
                        object.segmentProvider = message.segmentProvider;
                    if (message.advertiserId != null && message.hasOwnProperty("advertiserId"))
                        if (typeof message.advertiserId === "number")
                            object.advertiserId = options.longs === String ? String(message.advertiserId) : message.advertiserId;
                        else
                            object.advertiserId = options.longs === String ? $util.Long.prototype.toString.call(message.advertiserId) : options.longs === Number ? new $util.LongBits(message.advertiserId.low >>> 0, message.advertiserId.high >>> 0).toNumber() : message.advertiserId;
                    return object;
                };

                /**
                 * Converts this AdvertiserFirstPartySegment to JSON.
                 * @function toJSON
                 * @memberof teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                AdvertiserFirstPartySegment.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for AdvertiserFirstPartySegment
                 * @function getTypeUrl
                 * @memberof teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                AdvertiserFirstPartySegment.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.SearchAdvertiserFirstPartySegmentsResponse.AdvertiserFirstPartySegment";
                };

                return AdvertiserFirstPartySegment;
            })();

            return SearchAdvertiserFirstPartySegmentsResponse;
        })();

        api.SearchAdvertisersForSeatManagementRequest = (function() {

            /**
             * Properties of a SearchAdvertisersForSeatManagementRequest.
             * @memberof teads.api
             * @interface ISearchAdvertisersForSeatManagementRequest
             * @property {teads.api.ISecurityContext} securityContext SearchAdvertisersForSeatManagementRequest securityContext
             * @property {number} officeId SearchAdvertisersForSeatManagementRequest officeId
             * @property {string|null} [search] SearchAdvertisersForSeatManagementRequest search
             * @property {teads.api.IPage} page SearchAdvertisersForSeatManagementRequest page
             */

            /**
             * Constructs a new SearchAdvertisersForSeatManagementRequest.
             * @memberof teads.api
             * @classdesc Represents a SearchAdvertisersForSeatManagementRequest.
             * @implements ISearchAdvertisersForSeatManagementRequest
             * @constructor
             * @param {teads.api.ISearchAdvertisersForSeatManagementRequest=} [properties] Properties to set
             */
            function SearchAdvertisersForSeatManagementRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SearchAdvertisersForSeatManagementRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.SearchAdvertisersForSeatManagementRequest
             * @instance
             */
            SearchAdvertisersForSeatManagementRequest.prototype.securityContext = null;

            /**
             * SearchAdvertisersForSeatManagementRequest officeId.
             * @member {number} officeId
             * @memberof teads.api.SearchAdvertisersForSeatManagementRequest
             * @instance
             */
            SearchAdvertisersForSeatManagementRequest.prototype.officeId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * SearchAdvertisersForSeatManagementRequest search.
             * @member {string} search
             * @memberof teads.api.SearchAdvertisersForSeatManagementRequest
             * @instance
             */
            SearchAdvertisersForSeatManagementRequest.prototype.search = "";

            /**
             * SearchAdvertisersForSeatManagementRequest page.
             * @member {teads.api.IPage} page
             * @memberof teads.api.SearchAdvertisersForSeatManagementRequest
             * @instance
             */
            SearchAdvertisersForSeatManagementRequest.prototype.page = null;

            /**
             * Creates a new SearchAdvertisersForSeatManagementRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.SearchAdvertisersForSeatManagementRequest
             * @static
             * @param {teads.api.ISearchAdvertisersForSeatManagementRequest=} [properties] Properties to set
             * @returns {teads.api.SearchAdvertisersForSeatManagementRequest} SearchAdvertisersForSeatManagementRequest instance
             */
            SearchAdvertisersForSeatManagementRequest.create = function create(properties) {
                return new SearchAdvertisersForSeatManagementRequest(properties);
            };

            /**
             * Encodes the specified SearchAdvertisersForSeatManagementRequest message. Does not implicitly {@link teads.api.SearchAdvertisersForSeatManagementRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.SearchAdvertisersForSeatManagementRequest
             * @static
             * @param {teads.api.ISearchAdvertisersForSeatManagementRequest} message SearchAdvertisersForSeatManagementRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SearchAdvertisersForSeatManagementRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.officeId);
                if (message.search != null && Object.hasOwnProperty.call(message, "search"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.search);
                $root.teads.api.Page.encode(message.page, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified SearchAdvertisersForSeatManagementRequest message, length delimited. Does not implicitly {@link teads.api.SearchAdvertisersForSeatManagementRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.SearchAdvertisersForSeatManagementRequest
             * @static
             * @param {teads.api.ISearchAdvertisersForSeatManagementRequest} message SearchAdvertisersForSeatManagementRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SearchAdvertisersForSeatManagementRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SearchAdvertisersForSeatManagementRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.SearchAdvertisersForSeatManagementRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.SearchAdvertisersForSeatManagementRequest} SearchAdvertisersForSeatManagementRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SearchAdvertisersForSeatManagementRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.SearchAdvertisersForSeatManagementRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.officeId = reader.int64();
                            break;
                        }
                    case 3: {
                            message.search = reader.string();
                            break;
                        }
                    case 4: {
                            message.page = $root.teads.api.Page.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("officeId"))
                    throw $util.ProtocolError("missing required 'officeId'", { instance: message });
                if (!message.hasOwnProperty("page"))
                    throw $util.ProtocolError("missing required 'page'", { instance: message });
                return message;
            };

            /**
             * Decodes a SearchAdvertisersForSeatManagementRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.SearchAdvertisersForSeatManagementRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.SearchAdvertisersForSeatManagementRequest} SearchAdvertisersForSeatManagementRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SearchAdvertisersForSeatManagementRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SearchAdvertisersForSeatManagementRequest message.
             * @function verify
             * @memberof teads.api.SearchAdvertisersForSeatManagementRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SearchAdvertisersForSeatManagementRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.officeId) && !(message.officeId && $util.isInteger(message.officeId.low) && $util.isInteger(message.officeId.high)))
                    return "officeId: integer|Long expected";
                if (message.search != null && message.hasOwnProperty("search"))
                    if (!$util.isString(message.search))
                        return "search: string expected";
                {
                    var error = $root.teads.api.Page.verify(message.page);
                    if (error)
                        return "page." + error;
                }
                return null;
            };

            /**
             * Creates a SearchAdvertisersForSeatManagementRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.SearchAdvertisersForSeatManagementRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.SearchAdvertisersForSeatManagementRequest} SearchAdvertisersForSeatManagementRequest
             */
            SearchAdvertisersForSeatManagementRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.SearchAdvertisersForSeatManagementRequest)
                    return object;
                var message = new $root.teads.api.SearchAdvertisersForSeatManagementRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.SearchAdvertisersForSeatManagementRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.officeId != null)
                    if ($util.Long)
                        (message.officeId = $util.Long.fromValue(object.officeId)).unsigned = false;
                    else if (typeof object.officeId === "string")
                        message.officeId = parseInt(object.officeId, 10);
                    else if (typeof object.officeId === "number")
                        message.officeId = object.officeId;
                    else if (typeof object.officeId === "object")
                        message.officeId = new $util.LongBits(object.officeId.low >>> 0, object.officeId.high >>> 0).toNumber();
                if (object.search != null)
                    message.search = String(object.search);
                if (object.page != null) {
                    if (typeof object.page !== "object")
                        throw TypeError(".teads.api.SearchAdvertisersForSeatManagementRequest.page: object expected");
                    message.page = $root.teads.api.Page.fromObject(object.page);
                }
                return message;
            };

            /**
             * Creates a plain object from a SearchAdvertisersForSeatManagementRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.SearchAdvertisersForSeatManagementRequest
             * @static
             * @param {teads.api.SearchAdvertisersForSeatManagementRequest} message SearchAdvertisersForSeatManagementRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SearchAdvertisersForSeatManagementRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.officeId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.officeId = options.longs === String ? "0" : 0;
                    object.search = "";
                    object.page = null;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.officeId != null && message.hasOwnProperty("officeId"))
                    if (typeof message.officeId === "number")
                        object.officeId = options.longs === String ? String(message.officeId) : message.officeId;
                    else
                        object.officeId = options.longs === String ? $util.Long.prototype.toString.call(message.officeId) : options.longs === Number ? new $util.LongBits(message.officeId.low >>> 0, message.officeId.high >>> 0).toNumber() : message.officeId;
                if (message.search != null && message.hasOwnProperty("search"))
                    object.search = message.search;
                if (message.page != null && message.hasOwnProperty("page"))
                    object.page = $root.teads.api.Page.toObject(message.page, options);
                return object;
            };

            /**
             * Converts this SearchAdvertisersForSeatManagementRequest to JSON.
             * @function toJSON
             * @memberof teads.api.SearchAdvertisersForSeatManagementRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SearchAdvertisersForSeatManagementRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SearchAdvertisersForSeatManagementRequest
             * @function getTypeUrl
             * @memberof teads.api.SearchAdvertisersForSeatManagementRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SearchAdvertisersForSeatManagementRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.SearchAdvertisersForSeatManagementRequest";
            };

            return SearchAdvertisersForSeatManagementRequest;
        })();

        api.SearchAdvertisersForSeatManagementResponse = (function() {

            /**
             * Properties of a SearchAdvertisersForSeatManagementResponse.
             * @memberof teads.api
             * @interface ISearchAdvertisersForSeatManagementResponse
             * @property {Array.<teads.api.SearchAdvertisersForSeatManagementResponse.IAdvertiserForSeatManagementInfo>|null} [advertisers] SearchAdvertisersForSeatManagementResponse advertisers
             */

            /**
             * Constructs a new SearchAdvertisersForSeatManagementResponse.
             * @memberof teads.api
             * @classdesc Represents a SearchAdvertisersForSeatManagementResponse.
             * @implements ISearchAdvertisersForSeatManagementResponse
             * @constructor
             * @param {teads.api.ISearchAdvertisersForSeatManagementResponse=} [properties] Properties to set
             */
            function SearchAdvertisersForSeatManagementResponse(properties) {
                this.advertisers = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SearchAdvertisersForSeatManagementResponse advertisers.
             * @member {Array.<teads.api.SearchAdvertisersForSeatManagementResponse.IAdvertiserForSeatManagementInfo>} advertisers
             * @memberof teads.api.SearchAdvertisersForSeatManagementResponse
             * @instance
             */
            SearchAdvertisersForSeatManagementResponse.prototype.advertisers = $util.emptyArray;

            /**
             * Creates a new SearchAdvertisersForSeatManagementResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.SearchAdvertisersForSeatManagementResponse
             * @static
             * @param {teads.api.ISearchAdvertisersForSeatManagementResponse=} [properties] Properties to set
             * @returns {teads.api.SearchAdvertisersForSeatManagementResponse} SearchAdvertisersForSeatManagementResponse instance
             */
            SearchAdvertisersForSeatManagementResponse.create = function create(properties) {
                return new SearchAdvertisersForSeatManagementResponse(properties);
            };

            /**
             * Encodes the specified SearchAdvertisersForSeatManagementResponse message. Does not implicitly {@link teads.api.SearchAdvertisersForSeatManagementResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.SearchAdvertisersForSeatManagementResponse
             * @static
             * @param {teads.api.ISearchAdvertisersForSeatManagementResponse} message SearchAdvertisersForSeatManagementResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SearchAdvertisersForSeatManagementResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.advertisers != null && message.advertisers.length)
                    for (var i = 0; i < message.advertisers.length; ++i)
                        $root.teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo.encode(message.advertisers[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified SearchAdvertisersForSeatManagementResponse message, length delimited. Does not implicitly {@link teads.api.SearchAdvertisersForSeatManagementResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.SearchAdvertisersForSeatManagementResponse
             * @static
             * @param {teads.api.ISearchAdvertisersForSeatManagementResponse} message SearchAdvertisersForSeatManagementResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SearchAdvertisersForSeatManagementResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SearchAdvertisersForSeatManagementResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.SearchAdvertisersForSeatManagementResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.SearchAdvertisersForSeatManagementResponse} SearchAdvertisersForSeatManagementResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SearchAdvertisersForSeatManagementResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.SearchAdvertisersForSeatManagementResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            if (!(message.advertisers && message.advertisers.length))
                                message.advertisers = [];
                            message.advertisers.push($root.teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a SearchAdvertisersForSeatManagementResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.SearchAdvertisersForSeatManagementResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.SearchAdvertisersForSeatManagementResponse} SearchAdvertisersForSeatManagementResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SearchAdvertisersForSeatManagementResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SearchAdvertisersForSeatManagementResponse message.
             * @function verify
             * @memberof teads.api.SearchAdvertisersForSeatManagementResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SearchAdvertisersForSeatManagementResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.advertisers != null && message.hasOwnProperty("advertisers")) {
                    if (!Array.isArray(message.advertisers))
                        return "advertisers: array expected";
                    for (var i = 0; i < message.advertisers.length; ++i) {
                        var error = $root.teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo.verify(message.advertisers[i]);
                        if (error)
                            return "advertisers." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a SearchAdvertisersForSeatManagementResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.SearchAdvertisersForSeatManagementResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.SearchAdvertisersForSeatManagementResponse} SearchAdvertisersForSeatManagementResponse
             */
            SearchAdvertisersForSeatManagementResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.SearchAdvertisersForSeatManagementResponse)
                    return object;
                var message = new $root.teads.api.SearchAdvertisersForSeatManagementResponse();
                if (object.advertisers) {
                    if (!Array.isArray(object.advertisers))
                        throw TypeError(".teads.api.SearchAdvertisersForSeatManagementResponse.advertisers: array expected");
                    message.advertisers = [];
                    for (var i = 0; i < object.advertisers.length; ++i) {
                        if (typeof object.advertisers[i] !== "object")
                            throw TypeError(".teads.api.SearchAdvertisersForSeatManagementResponse.advertisers: object expected");
                        message.advertisers[i] = $root.teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo.fromObject(object.advertisers[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a SearchAdvertisersForSeatManagementResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.SearchAdvertisersForSeatManagementResponse
             * @static
             * @param {teads.api.SearchAdvertisersForSeatManagementResponse} message SearchAdvertisersForSeatManagementResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SearchAdvertisersForSeatManagementResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.advertisers = [];
                if (message.advertisers && message.advertisers.length) {
                    object.advertisers = [];
                    for (var j = 0; j < message.advertisers.length; ++j)
                        object.advertisers[j] = $root.teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo.toObject(message.advertisers[j], options);
                }
                return object;
            };

            /**
             * Converts this SearchAdvertisersForSeatManagementResponse to JSON.
             * @function toJSON
             * @memberof teads.api.SearchAdvertisersForSeatManagementResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SearchAdvertisersForSeatManagementResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SearchAdvertisersForSeatManagementResponse
             * @function getTypeUrl
             * @memberof teads.api.SearchAdvertisersForSeatManagementResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SearchAdvertisersForSeatManagementResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.SearchAdvertisersForSeatManagementResponse";
            };

            SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo = (function() {

                /**
                 * Properties of an AdvertiserForSeatManagementInfo.
                 * @memberof teads.api.SearchAdvertisersForSeatManagementResponse
                 * @interface IAdvertiserForSeatManagementInfo
                 * @property {number} advertiserId AdvertiserForSeatManagementInfo advertiserId
                 * @property {string} salesforceId AdvertiserForSeatManagementInfo salesforceId
                 * @property {string} name AdvertiserForSeatManagementInfo name
                 * @property {string|null} [description] AdvertiserForSeatManagementInfo description
                 * @property {boolean} hasBuyerSeat AdvertiserForSeatManagementInfo hasBuyerSeat
                 */

                /**
                 * Constructs a new AdvertiserForSeatManagementInfo.
                 * @memberof teads.api.SearchAdvertisersForSeatManagementResponse
                 * @classdesc Represents an AdvertiserForSeatManagementInfo.
                 * @implements IAdvertiserForSeatManagementInfo
                 * @constructor
                 * @param {teads.api.SearchAdvertisersForSeatManagementResponse.IAdvertiserForSeatManagementInfo=} [properties] Properties to set
                 */
                function AdvertiserForSeatManagementInfo(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * AdvertiserForSeatManagementInfo advertiserId.
                 * @member {number} advertiserId
                 * @memberof teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo
                 * @instance
                 */
                AdvertiserForSeatManagementInfo.prototype.advertiserId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * AdvertiserForSeatManagementInfo salesforceId.
                 * @member {string} salesforceId
                 * @memberof teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo
                 * @instance
                 */
                AdvertiserForSeatManagementInfo.prototype.salesforceId = "";

                /**
                 * AdvertiserForSeatManagementInfo name.
                 * @member {string} name
                 * @memberof teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo
                 * @instance
                 */
                AdvertiserForSeatManagementInfo.prototype.name = "";

                /**
                 * AdvertiserForSeatManagementInfo description.
                 * @member {string} description
                 * @memberof teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo
                 * @instance
                 */
                AdvertiserForSeatManagementInfo.prototype.description = "";

                /**
                 * AdvertiserForSeatManagementInfo hasBuyerSeat.
                 * @member {boolean} hasBuyerSeat
                 * @memberof teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo
                 * @instance
                 */
                AdvertiserForSeatManagementInfo.prototype.hasBuyerSeat = false;

                /**
                 * Creates a new AdvertiserForSeatManagementInfo instance using the specified properties.
                 * @function create
                 * @memberof teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo
                 * @static
                 * @param {teads.api.SearchAdvertisersForSeatManagementResponse.IAdvertiserForSeatManagementInfo=} [properties] Properties to set
                 * @returns {teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo} AdvertiserForSeatManagementInfo instance
                 */
                AdvertiserForSeatManagementInfo.create = function create(properties) {
                    return new AdvertiserForSeatManagementInfo(properties);
                };

                /**
                 * Encodes the specified AdvertiserForSeatManagementInfo message. Does not implicitly {@link teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo
                 * @static
                 * @param {teads.api.SearchAdvertisersForSeatManagementResponse.IAdvertiserForSeatManagementInfo} message AdvertiserForSeatManagementInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                AdvertiserForSeatManagementInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.advertiserId);
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.salesforceId);
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                    if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.description);
                    writer.uint32(/* id 5, wireType 0 =*/40).bool(message.hasBuyerSeat);
                    return writer;
                };

                /**
                 * Encodes the specified AdvertiserForSeatManagementInfo message, length delimited. Does not implicitly {@link teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo
                 * @static
                 * @param {teads.api.SearchAdvertisersForSeatManagementResponse.IAdvertiserForSeatManagementInfo} message AdvertiserForSeatManagementInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                AdvertiserForSeatManagementInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes an AdvertiserForSeatManagementInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo} AdvertiserForSeatManagementInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                AdvertiserForSeatManagementInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.advertiserId = reader.int64();
                                break;
                            }
                        case 2: {
                                message.salesforceId = reader.string();
                                break;
                            }
                        case 3: {
                                message.name = reader.string();
                                break;
                            }
                        case 4: {
                                message.description = reader.string();
                                break;
                            }
                        case 5: {
                                message.hasBuyerSeat = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("advertiserId"))
                        throw $util.ProtocolError("missing required 'advertiserId'", { instance: message });
                    if (!message.hasOwnProperty("salesforceId"))
                        throw $util.ProtocolError("missing required 'salesforceId'", { instance: message });
                    if (!message.hasOwnProperty("name"))
                        throw $util.ProtocolError("missing required 'name'", { instance: message });
                    if (!message.hasOwnProperty("hasBuyerSeat"))
                        throw $util.ProtocolError("missing required 'hasBuyerSeat'", { instance: message });
                    return message;
                };

                /**
                 * Decodes an AdvertiserForSeatManagementInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo} AdvertiserForSeatManagementInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                AdvertiserForSeatManagementInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies an AdvertiserForSeatManagementInfo message.
                 * @function verify
                 * @memberof teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                AdvertiserForSeatManagementInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.advertiserId) && !(message.advertiserId && $util.isInteger(message.advertiserId.low) && $util.isInteger(message.advertiserId.high)))
                        return "advertiserId: integer|Long expected";
                    if (!$util.isString(message.salesforceId))
                        return "salesforceId: string expected";
                    if (!$util.isString(message.name))
                        return "name: string expected";
                    if (message.description != null && message.hasOwnProperty("description"))
                        if (!$util.isString(message.description))
                            return "description: string expected";
                    if (typeof message.hasBuyerSeat !== "boolean")
                        return "hasBuyerSeat: boolean expected";
                    return null;
                };

                /**
                 * Creates an AdvertiserForSeatManagementInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo} AdvertiserForSeatManagementInfo
                 */
                AdvertiserForSeatManagementInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo)
                        return object;
                    var message = new $root.teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo();
                    if (object.advertiserId != null)
                        if ($util.Long)
                            (message.advertiserId = $util.Long.fromValue(object.advertiserId)).unsigned = false;
                        else if (typeof object.advertiserId === "string")
                            message.advertiserId = parseInt(object.advertiserId, 10);
                        else if (typeof object.advertiserId === "number")
                            message.advertiserId = object.advertiserId;
                        else if (typeof object.advertiserId === "object")
                            message.advertiserId = new $util.LongBits(object.advertiserId.low >>> 0, object.advertiserId.high >>> 0).toNumber();
                    if (object.salesforceId != null)
                        message.salesforceId = String(object.salesforceId);
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.description != null)
                        message.description = String(object.description);
                    if (object.hasBuyerSeat != null)
                        message.hasBuyerSeat = Boolean(object.hasBuyerSeat);
                    return message;
                };

                /**
                 * Creates a plain object from an AdvertiserForSeatManagementInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo
                 * @static
                 * @param {teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo} message AdvertiserForSeatManagementInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                AdvertiserForSeatManagementInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.advertiserId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.advertiserId = options.longs === String ? "0" : 0;
                        object.salesforceId = "";
                        object.name = "";
                        object.description = "";
                        object.hasBuyerSeat = false;
                    }
                    if (message.advertiserId != null && message.hasOwnProperty("advertiserId"))
                        if (typeof message.advertiserId === "number")
                            object.advertiserId = options.longs === String ? String(message.advertiserId) : message.advertiserId;
                        else
                            object.advertiserId = options.longs === String ? $util.Long.prototype.toString.call(message.advertiserId) : options.longs === Number ? new $util.LongBits(message.advertiserId.low >>> 0, message.advertiserId.high >>> 0).toNumber() : message.advertiserId;
                    if (message.salesforceId != null && message.hasOwnProperty("salesforceId"))
                        object.salesforceId = message.salesforceId;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.description != null && message.hasOwnProperty("description"))
                        object.description = message.description;
                    if (message.hasBuyerSeat != null && message.hasOwnProperty("hasBuyerSeat"))
                        object.hasBuyerSeat = message.hasBuyerSeat;
                    return object;
                };

                /**
                 * Converts this AdvertiserForSeatManagementInfo to JSON.
                 * @function toJSON
                 * @memberof teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                AdvertiserForSeatManagementInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for AdvertiserForSeatManagementInfo
                 * @function getTypeUrl
                 * @memberof teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                AdvertiserForSeatManagementInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.SearchAdvertisersForSeatManagementResponse.AdvertiserForSeatManagementInfo";
                };

                return AdvertiserForSeatManagementInfo;
            })();

            return SearchAdvertisersForSeatManagementResponse;
        })();

        api.SearchAgenciesForSeatManagementRequest = (function() {

            /**
             * Properties of a SearchAgenciesForSeatManagementRequest.
             * @memberof teads.api
             * @interface ISearchAgenciesForSeatManagementRequest
             * @property {teads.api.ISecurityContext} securityContext SearchAgenciesForSeatManagementRequest securityContext
             * @property {Array.<number>|null} [officeIds] SearchAgenciesForSeatManagementRequest officeIds
             * @property {string|null} [search] SearchAgenciesForSeatManagementRequest search
             * @property {teads.api.IPage} page SearchAgenciesForSeatManagementRequest page
             */

            /**
             * Constructs a new SearchAgenciesForSeatManagementRequest.
             * @memberof teads.api
             * @classdesc Represents a SearchAgenciesForSeatManagementRequest.
             * @implements ISearchAgenciesForSeatManagementRequest
             * @constructor
             * @param {teads.api.ISearchAgenciesForSeatManagementRequest=} [properties] Properties to set
             */
            function SearchAgenciesForSeatManagementRequest(properties) {
                this.officeIds = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SearchAgenciesForSeatManagementRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.SearchAgenciesForSeatManagementRequest
             * @instance
             */
            SearchAgenciesForSeatManagementRequest.prototype.securityContext = null;

            /**
             * SearchAgenciesForSeatManagementRequest officeIds.
             * @member {Array.<number>} officeIds
             * @memberof teads.api.SearchAgenciesForSeatManagementRequest
             * @instance
             */
            SearchAgenciesForSeatManagementRequest.prototype.officeIds = $util.emptyArray;

            /**
             * SearchAgenciesForSeatManagementRequest search.
             * @member {string} search
             * @memberof teads.api.SearchAgenciesForSeatManagementRequest
             * @instance
             */
            SearchAgenciesForSeatManagementRequest.prototype.search = "";

            /**
             * SearchAgenciesForSeatManagementRequest page.
             * @member {teads.api.IPage} page
             * @memberof teads.api.SearchAgenciesForSeatManagementRequest
             * @instance
             */
            SearchAgenciesForSeatManagementRequest.prototype.page = null;

            /**
             * Creates a new SearchAgenciesForSeatManagementRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.SearchAgenciesForSeatManagementRequest
             * @static
             * @param {teads.api.ISearchAgenciesForSeatManagementRequest=} [properties] Properties to set
             * @returns {teads.api.SearchAgenciesForSeatManagementRequest} SearchAgenciesForSeatManagementRequest instance
             */
            SearchAgenciesForSeatManagementRequest.create = function create(properties) {
                return new SearchAgenciesForSeatManagementRequest(properties);
            };

            /**
             * Encodes the specified SearchAgenciesForSeatManagementRequest message. Does not implicitly {@link teads.api.SearchAgenciesForSeatManagementRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.SearchAgenciesForSeatManagementRequest
             * @static
             * @param {teads.api.ISearchAgenciesForSeatManagementRequest} message SearchAgenciesForSeatManagementRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SearchAgenciesForSeatManagementRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.officeIds != null && message.officeIds.length)
                    for (var i = 0; i < message.officeIds.length; ++i)
                        writer.uint32(/* id 2, wireType 0 =*/16).int64(message.officeIds[i]);
                if (message.search != null && Object.hasOwnProperty.call(message, "search"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.search);
                $root.teads.api.Page.encode(message.page, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified SearchAgenciesForSeatManagementRequest message, length delimited. Does not implicitly {@link teads.api.SearchAgenciesForSeatManagementRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.SearchAgenciesForSeatManagementRequest
             * @static
             * @param {teads.api.ISearchAgenciesForSeatManagementRequest} message SearchAgenciesForSeatManagementRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SearchAgenciesForSeatManagementRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SearchAgenciesForSeatManagementRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.SearchAgenciesForSeatManagementRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.SearchAgenciesForSeatManagementRequest} SearchAgenciesForSeatManagementRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SearchAgenciesForSeatManagementRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.SearchAgenciesForSeatManagementRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            if (!(message.officeIds && message.officeIds.length))
                                message.officeIds = [];
                            if ((tag & 7) === 2) {
                                var end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.officeIds.push(reader.int64());
                            } else
                                message.officeIds.push(reader.int64());
                            break;
                        }
                    case 3: {
                            message.search = reader.string();
                            break;
                        }
                    case 4: {
                            message.page = $root.teads.api.Page.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("page"))
                    throw $util.ProtocolError("missing required 'page'", { instance: message });
                return message;
            };

            /**
             * Decodes a SearchAgenciesForSeatManagementRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.SearchAgenciesForSeatManagementRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.SearchAgenciesForSeatManagementRequest} SearchAgenciesForSeatManagementRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SearchAgenciesForSeatManagementRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SearchAgenciesForSeatManagementRequest message.
             * @function verify
             * @memberof teads.api.SearchAgenciesForSeatManagementRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SearchAgenciesForSeatManagementRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (message.officeIds != null && message.hasOwnProperty("officeIds")) {
                    if (!Array.isArray(message.officeIds))
                        return "officeIds: array expected";
                    for (var i = 0; i < message.officeIds.length; ++i)
                        if (!$util.isInteger(message.officeIds[i]) && !(message.officeIds[i] && $util.isInteger(message.officeIds[i].low) && $util.isInteger(message.officeIds[i].high)))
                            return "officeIds: integer|Long[] expected";
                }
                if (message.search != null && message.hasOwnProperty("search"))
                    if (!$util.isString(message.search))
                        return "search: string expected";
                {
                    var error = $root.teads.api.Page.verify(message.page);
                    if (error)
                        return "page." + error;
                }
                return null;
            };

            /**
             * Creates a SearchAgenciesForSeatManagementRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.SearchAgenciesForSeatManagementRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.SearchAgenciesForSeatManagementRequest} SearchAgenciesForSeatManagementRequest
             */
            SearchAgenciesForSeatManagementRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.SearchAgenciesForSeatManagementRequest)
                    return object;
                var message = new $root.teads.api.SearchAgenciesForSeatManagementRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.SearchAgenciesForSeatManagementRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.officeIds) {
                    if (!Array.isArray(object.officeIds))
                        throw TypeError(".teads.api.SearchAgenciesForSeatManagementRequest.officeIds: array expected");
                    message.officeIds = [];
                    for (var i = 0; i < object.officeIds.length; ++i)
                        if ($util.Long)
                            (message.officeIds[i] = $util.Long.fromValue(object.officeIds[i])).unsigned = false;
                        else if (typeof object.officeIds[i] === "string")
                            message.officeIds[i] = parseInt(object.officeIds[i], 10);
                        else if (typeof object.officeIds[i] === "number")
                            message.officeIds[i] = object.officeIds[i];
                        else if (typeof object.officeIds[i] === "object")
                            message.officeIds[i] = new $util.LongBits(object.officeIds[i].low >>> 0, object.officeIds[i].high >>> 0).toNumber();
                }
                if (object.search != null)
                    message.search = String(object.search);
                if (object.page != null) {
                    if (typeof object.page !== "object")
                        throw TypeError(".teads.api.SearchAgenciesForSeatManagementRequest.page: object expected");
                    message.page = $root.teads.api.Page.fromObject(object.page);
                }
                return message;
            };

            /**
             * Creates a plain object from a SearchAgenciesForSeatManagementRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.SearchAgenciesForSeatManagementRequest
             * @static
             * @param {teads.api.SearchAgenciesForSeatManagementRequest} message SearchAgenciesForSeatManagementRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SearchAgenciesForSeatManagementRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.officeIds = [];
                if (options.defaults) {
                    object.securityContext = null;
                    object.search = "";
                    object.page = null;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.officeIds && message.officeIds.length) {
                    object.officeIds = [];
                    for (var j = 0; j < message.officeIds.length; ++j)
                        if (typeof message.officeIds[j] === "number")
                            object.officeIds[j] = options.longs === String ? String(message.officeIds[j]) : message.officeIds[j];
                        else
                            object.officeIds[j] = options.longs === String ? $util.Long.prototype.toString.call(message.officeIds[j]) : options.longs === Number ? new $util.LongBits(message.officeIds[j].low >>> 0, message.officeIds[j].high >>> 0).toNumber() : message.officeIds[j];
                }
                if (message.search != null && message.hasOwnProperty("search"))
                    object.search = message.search;
                if (message.page != null && message.hasOwnProperty("page"))
                    object.page = $root.teads.api.Page.toObject(message.page, options);
                return object;
            };

            /**
             * Converts this SearchAgenciesForSeatManagementRequest to JSON.
             * @function toJSON
             * @memberof teads.api.SearchAgenciesForSeatManagementRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SearchAgenciesForSeatManagementRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SearchAgenciesForSeatManagementRequest
             * @function getTypeUrl
             * @memberof teads.api.SearchAgenciesForSeatManagementRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SearchAgenciesForSeatManagementRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.SearchAgenciesForSeatManagementRequest";
            };

            return SearchAgenciesForSeatManagementRequest;
        })();

        api.SearchAgenciesForSeatManagementResponse = (function() {

            /**
             * Properties of a SearchAgenciesForSeatManagementResponse.
             * @memberof teads.api
             * @interface ISearchAgenciesForSeatManagementResponse
             * @property {Array.<teads.api.SearchAgenciesForSeatManagementResponse.IAgencyForSeatManagementInfo>|null} [agencies] SearchAgenciesForSeatManagementResponse agencies
             */

            /**
             * Constructs a new SearchAgenciesForSeatManagementResponse.
             * @memberof teads.api
             * @classdesc Represents a SearchAgenciesForSeatManagementResponse.
             * @implements ISearchAgenciesForSeatManagementResponse
             * @constructor
             * @param {teads.api.ISearchAgenciesForSeatManagementResponse=} [properties] Properties to set
             */
            function SearchAgenciesForSeatManagementResponse(properties) {
                this.agencies = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SearchAgenciesForSeatManagementResponse agencies.
             * @member {Array.<teads.api.SearchAgenciesForSeatManagementResponse.IAgencyForSeatManagementInfo>} agencies
             * @memberof teads.api.SearchAgenciesForSeatManagementResponse
             * @instance
             */
            SearchAgenciesForSeatManagementResponse.prototype.agencies = $util.emptyArray;

            /**
             * Creates a new SearchAgenciesForSeatManagementResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.SearchAgenciesForSeatManagementResponse
             * @static
             * @param {teads.api.ISearchAgenciesForSeatManagementResponse=} [properties] Properties to set
             * @returns {teads.api.SearchAgenciesForSeatManagementResponse} SearchAgenciesForSeatManagementResponse instance
             */
            SearchAgenciesForSeatManagementResponse.create = function create(properties) {
                return new SearchAgenciesForSeatManagementResponse(properties);
            };

            /**
             * Encodes the specified SearchAgenciesForSeatManagementResponse message. Does not implicitly {@link teads.api.SearchAgenciesForSeatManagementResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.SearchAgenciesForSeatManagementResponse
             * @static
             * @param {teads.api.ISearchAgenciesForSeatManagementResponse} message SearchAgenciesForSeatManagementResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SearchAgenciesForSeatManagementResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.agencies != null && message.agencies.length)
                    for (var i = 0; i < message.agencies.length; ++i)
                        $root.teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo.encode(message.agencies[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified SearchAgenciesForSeatManagementResponse message, length delimited. Does not implicitly {@link teads.api.SearchAgenciesForSeatManagementResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.SearchAgenciesForSeatManagementResponse
             * @static
             * @param {teads.api.ISearchAgenciesForSeatManagementResponse} message SearchAgenciesForSeatManagementResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SearchAgenciesForSeatManagementResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SearchAgenciesForSeatManagementResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.SearchAgenciesForSeatManagementResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.SearchAgenciesForSeatManagementResponse} SearchAgenciesForSeatManagementResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SearchAgenciesForSeatManagementResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.SearchAgenciesForSeatManagementResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            if (!(message.agencies && message.agencies.length))
                                message.agencies = [];
                            message.agencies.push($root.teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a SearchAgenciesForSeatManagementResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.SearchAgenciesForSeatManagementResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.SearchAgenciesForSeatManagementResponse} SearchAgenciesForSeatManagementResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SearchAgenciesForSeatManagementResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SearchAgenciesForSeatManagementResponse message.
             * @function verify
             * @memberof teads.api.SearchAgenciesForSeatManagementResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SearchAgenciesForSeatManagementResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.agencies != null && message.hasOwnProperty("agencies")) {
                    if (!Array.isArray(message.agencies))
                        return "agencies: array expected";
                    for (var i = 0; i < message.agencies.length; ++i) {
                        var error = $root.teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo.verify(message.agencies[i]);
                        if (error)
                            return "agencies." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a SearchAgenciesForSeatManagementResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.SearchAgenciesForSeatManagementResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.SearchAgenciesForSeatManagementResponse} SearchAgenciesForSeatManagementResponse
             */
            SearchAgenciesForSeatManagementResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.SearchAgenciesForSeatManagementResponse)
                    return object;
                var message = new $root.teads.api.SearchAgenciesForSeatManagementResponse();
                if (object.agencies) {
                    if (!Array.isArray(object.agencies))
                        throw TypeError(".teads.api.SearchAgenciesForSeatManagementResponse.agencies: array expected");
                    message.agencies = [];
                    for (var i = 0; i < object.agencies.length; ++i) {
                        if (typeof object.agencies[i] !== "object")
                            throw TypeError(".teads.api.SearchAgenciesForSeatManagementResponse.agencies: object expected");
                        message.agencies[i] = $root.teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo.fromObject(object.agencies[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a SearchAgenciesForSeatManagementResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.SearchAgenciesForSeatManagementResponse
             * @static
             * @param {teads.api.SearchAgenciesForSeatManagementResponse} message SearchAgenciesForSeatManagementResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SearchAgenciesForSeatManagementResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.agencies = [];
                if (message.agencies && message.agencies.length) {
                    object.agencies = [];
                    for (var j = 0; j < message.agencies.length; ++j)
                        object.agencies[j] = $root.teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo.toObject(message.agencies[j], options);
                }
                return object;
            };

            /**
             * Converts this SearchAgenciesForSeatManagementResponse to JSON.
             * @function toJSON
             * @memberof teads.api.SearchAgenciesForSeatManagementResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SearchAgenciesForSeatManagementResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SearchAgenciesForSeatManagementResponse
             * @function getTypeUrl
             * @memberof teads.api.SearchAgenciesForSeatManagementResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SearchAgenciesForSeatManagementResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.SearchAgenciesForSeatManagementResponse";
            };

            SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo = (function() {

                /**
                 * Properties of an AgencyForSeatManagementInfo.
                 * @memberof teads.api.SearchAgenciesForSeatManagementResponse
                 * @interface IAgencyForSeatManagementInfo
                 * @property {number} agencyId AgencyForSeatManagementInfo agencyId
                 * @property {string} salesforceId AgencyForSeatManagementInfo salesforceId
                 * @property {string} name AgencyForSeatManagementInfo name
                 * @property {string|null} [description] AgencyForSeatManagementInfo description
                 * @property {Array.<number>|null} [officesWithBuyerSeat] AgencyForSeatManagementInfo officesWithBuyerSeat
                 * @property {number} officeId AgencyForSeatManagementInfo officeId
                 */

                /**
                 * Constructs a new AgencyForSeatManagementInfo.
                 * @memberof teads.api.SearchAgenciesForSeatManagementResponse
                 * @classdesc Represents an AgencyForSeatManagementInfo.
                 * @implements IAgencyForSeatManagementInfo
                 * @constructor
                 * @param {teads.api.SearchAgenciesForSeatManagementResponse.IAgencyForSeatManagementInfo=} [properties] Properties to set
                 */
                function AgencyForSeatManagementInfo(properties) {
                    this.officesWithBuyerSeat = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * AgencyForSeatManagementInfo agencyId.
                 * @member {number} agencyId
                 * @memberof teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo
                 * @instance
                 */
                AgencyForSeatManagementInfo.prototype.agencyId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * AgencyForSeatManagementInfo salesforceId.
                 * @member {string} salesforceId
                 * @memberof teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo
                 * @instance
                 */
                AgencyForSeatManagementInfo.prototype.salesforceId = "";

                /**
                 * AgencyForSeatManagementInfo name.
                 * @member {string} name
                 * @memberof teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo
                 * @instance
                 */
                AgencyForSeatManagementInfo.prototype.name = "";

                /**
                 * AgencyForSeatManagementInfo description.
                 * @member {string} description
                 * @memberof teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo
                 * @instance
                 */
                AgencyForSeatManagementInfo.prototype.description = "";

                /**
                 * AgencyForSeatManagementInfo officesWithBuyerSeat.
                 * @member {Array.<number>} officesWithBuyerSeat
                 * @memberof teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo
                 * @instance
                 */
                AgencyForSeatManagementInfo.prototype.officesWithBuyerSeat = $util.emptyArray;

                /**
                 * AgencyForSeatManagementInfo officeId.
                 * @member {number} officeId
                 * @memberof teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo
                 * @instance
                 */
                AgencyForSeatManagementInfo.prototype.officeId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * Creates a new AgencyForSeatManagementInfo instance using the specified properties.
                 * @function create
                 * @memberof teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo
                 * @static
                 * @param {teads.api.SearchAgenciesForSeatManagementResponse.IAgencyForSeatManagementInfo=} [properties] Properties to set
                 * @returns {teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo} AgencyForSeatManagementInfo instance
                 */
                AgencyForSeatManagementInfo.create = function create(properties) {
                    return new AgencyForSeatManagementInfo(properties);
                };

                /**
                 * Encodes the specified AgencyForSeatManagementInfo message. Does not implicitly {@link teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo
                 * @static
                 * @param {teads.api.SearchAgenciesForSeatManagementResponse.IAgencyForSeatManagementInfo} message AgencyForSeatManagementInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                AgencyForSeatManagementInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.agencyId);
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.salesforceId);
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                    if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.description);
                    if (message.officesWithBuyerSeat != null && message.officesWithBuyerSeat.length)
                        for (var i = 0; i < message.officesWithBuyerSeat.length; ++i)
                            writer.uint32(/* id 5, wireType 0 =*/40).int64(message.officesWithBuyerSeat[i]);
                    writer.uint32(/* id 6, wireType 0 =*/48).int64(message.officeId);
                    return writer;
                };

                /**
                 * Encodes the specified AgencyForSeatManagementInfo message, length delimited. Does not implicitly {@link teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo
                 * @static
                 * @param {teads.api.SearchAgenciesForSeatManagementResponse.IAgencyForSeatManagementInfo} message AgencyForSeatManagementInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                AgencyForSeatManagementInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes an AgencyForSeatManagementInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo} AgencyForSeatManagementInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                AgencyForSeatManagementInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.agencyId = reader.int64();
                                break;
                            }
                        case 2: {
                                message.salesforceId = reader.string();
                                break;
                            }
                        case 3: {
                                message.name = reader.string();
                                break;
                            }
                        case 4: {
                                message.description = reader.string();
                                break;
                            }
                        case 5: {
                                if (!(message.officesWithBuyerSeat && message.officesWithBuyerSeat.length))
                                    message.officesWithBuyerSeat = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.officesWithBuyerSeat.push(reader.int64());
                                } else
                                    message.officesWithBuyerSeat.push(reader.int64());
                                break;
                            }
                        case 6: {
                                message.officeId = reader.int64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("agencyId"))
                        throw $util.ProtocolError("missing required 'agencyId'", { instance: message });
                    if (!message.hasOwnProperty("salesforceId"))
                        throw $util.ProtocolError("missing required 'salesforceId'", { instance: message });
                    if (!message.hasOwnProperty("name"))
                        throw $util.ProtocolError("missing required 'name'", { instance: message });
                    if (!message.hasOwnProperty("officeId"))
                        throw $util.ProtocolError("missing required 'officeId'", { instance: message });
                    return message;
                };

                /**
                 * Decodes an AgencyForSeatManagementInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo} AgencyForSeatManagementInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                AgencyForSeatManagementInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies an AgencyForSeatManagementInfo message.
                 * @function verify
                 * @memberof teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                AgencyForSeatManagementInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.agencyId) && !(message.agencyId && $util.isInteger(message.agencyId.low) && $util.isInteger(message.agencyId.high)))
                        return "agencyId: integer|Long expected";
                    if (!$util.isString(message.salesforceId))
                        return "salesforceId: string expected";
                    if (!$util.isString(message.name))
                        return "name: string expected";
                    if (message.description != null && message.hasOwnProperty("description"))
                        if (!$util.isString(message.description))
                            return "description: string expected";
                    if (message.officesWithBuyerSeat != null && message.hasOwnProperty("officesWithBuyerSeat")) {
                        if (!Array.isArray(message.officesWithBuyerSeat))
                            return "officesWithBuyerSeat: array expected";
                        for (var i = 0; i < message.officesWithBuyerSeat.length; ++i)
                            if (!$util.isInteger(message.officesWithBuyerSeat[i]) && !(message.officesWithBuyerSeat[i] && $util.isInteger(message.officesWithBuyerSeat[i].low) && $util.isInteger(message.officesWithBuyerSeat[i].high)))
                                return "officesWithBuyerSeat: integer|Long[] expected";
                    }
                    if (!$util.isInteger(message.officeId) && !(message.officeId && $util.isInteger(message.officeId.low) && $util.isInteger(message.officeId.high)))
                        return "officeId: integer|Long expected";
                    return null;
                };

                /**
                 * Creates an AgencyForSeatManagementInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo} AgencyForSeatManagementInfo
                 */
                AgencyForSeatManagementInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo)
                        return object;
                    var message = new $root.teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo();
                    if (object.agencyId != null)
                        if ($util.Long)
                            (message.agencyId = $util.Long.fromValue(object.agencyId)).unsigned = false;
                        else if (typeof object.agencyId === "string")
                            message.agencyId = parseInt(object.agencyId, 10);
                        else if (typeof object.agencyId === "number")
                            message.agencyId = object.agencyId;
                        else if (typeof object.agencyId === "object")
                            message.agencyId = new $util.LongBits(object.agencyId.low >>> 0, object.agencyId.high >>> 0).toNumber();
                    if (object.salesforceId != null)
                        message.salesforceId = String(object.salesforceId);
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.description != null)
                        message.description = String(object.description);
                    if (object.officesWithBuyerSeat) {
                        if (!Array.isArray(object.officesWithBuyerSeat))
                            throw TypeError(".teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo.officesWithBuyerSeat: array expected");
                        message.officesWithBuyerSeat = [];
                        for (var i = 0; i < object.officesWithBuyerSeat.length; ++i)
                            if ($util.Long)
                                (message.officesWithBuyerSeat[i] = $util.Long.fromValue(object.officesWithBuyerSeat[i])).unsigned = false;
                            else if (typeof object.officesWithBuyerSeat[i] === "string")
                                message.officesWithBuyerSeat[i] = parseInt(object.officesWithBuyerSeat[i], 10);
                            else if (typeof object.officesWithBuyerSeat[i] === "number")
                                message.officesWithBuyerSeat[i] = object.officesWithBuyerSeat[i];
                            else if (typeof object.officesWithBuyerSeat[i] === "object")
                                message.officesWithBuyerSeat[i] = new $util.LongBits(object.officesWithBuyerSeat[i].low >>> 0, object.officesWithBuyerSeat[i].high >>> 0).toNumber();
                    }
                    if (object.officeId != null)
                        if ($util.Long)
                            (message.officeId = $util.Long.fromValue(object.officeId)).unsigned = false;
                        else if (typeof object.officeId === "string")
                            message.officeId = parseInt(object.officeId, 10);
                        else if (typeof object.officeId === "number")
                            message.officeId = object.officeId;
                        else if (typeof object.officeId === "object")
                            message.officeId = new $util.LongBits(object.officeId.low >>> 0, object.officeId.high >>> 0).toNumber();
                    return message;
                };

                /**
                 * Creates a plain object from an AgencyForSeatManagementInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo
                 * @static
                 * @param {teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo} message AgencyForSeatManagementInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                AgencyForSeatManagementInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.officesWithBuyerSeat = [];
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.agencyId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.agencyId = options.longs === String ? "0" : 0;
                        object.salesforceId = "";
                        object.name = "";
                        object.description = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.officeId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.officeId = options.longs === String ? "0" : 0;
                    }
                    if (message.agencyId != null && message.hasOwnProperty("agencyId"))
                        if (typeof message.agencyId === "number")
                            object.agencyId = options.longs === String ? String(message.agencyId) : message.agencyId;
                        else
                            object.agencyId = options.longs === String ? $util.Long.prototype.toString.call(message.agencyId) : options.longs === Number ? new $util.LongBits(message.agencyId.low >>> 0, message.agencyId.high >>> 0).toNumber() : message.agencyId;
                    if (message.salesforceId != null && message.hasOwnProperty("salesforceId"))
                        object.salesforceId = message.salesforceId;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.description != null && message.hasOwnProperty("description"))
                        object.description = message.description;
                    if (message.officesWithBuyerSeat && message.officesWithBuyerSeat.length) {
                        object.officesWithBuyerSeat = [];
                        for (var j = 0; j < message.officesWithBuyerSeat.length; ++j)
                            if (typeof message.officesWithBuyerSeat[j] === "number")
                                object.officesWithBuyerSeat[j] = options.longs === String ? String(message.officesWithBuyerSeat[j]) : message.officesWithBuyerSeat[j];
                            else
                                object.officesWithBuyerSeat[j] = options.longs === String ? $util.Long.prototype.toString.call(message.officesWithBuyerSeat[j]) : options.longs === Number ? new $util.LongBits(message.officesWithBuyerSeat[j].low >>> 0, message.officesWithBuyerSeat[j].high >>> 0).toNumber() : message.officesWithBuyerSeat[j];
                    }
                    if (message.officeId != null && message.hasOwnProperty("officeId"))
                        if (typeof message.officeId === "number")
                            object.officeId = options.longs === String ? String(message.officeId) : message.officeId;
                        else
                            object.officeId = options.longs === String ? $util.Long.prototype.toString.call(message.officeId) : options.longs === Number ? new $util.LongBits(message.officeId.low >>> 0, message.officeId.high >>> 0).toNumber() : message.officeId;
                    return object;
                };

                /**
                 * Converts this AgencyForSeatManagementInfo to JSON.
                 * @function toJSON
                 * @memberof teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                AgencyForSeatManagementInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for AgencyForSeatManagementInfo
                 * @function getTypeUrl
                 * @memberof teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                AgencyForSeatManagementInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.SearchAgenciesForSeatManagementResponse.AgencyForSeatManagementInfo";
                };

                return AgencyForSeatManagementInfo;
            })();

            return SearchAgenciesForSeatManagementResponse;
        })();

        api.SearchBuyerSeatsRequest = (function() {

            /**
             * Properties of a SearchBuyerSeatsRequest.
             * @memberof teads.api
             * @interface ISearchBuyerSeatsRequest
             * @property {teads.api.ISecurityContext} securityContext SearchBuyerSeatsRequest securityContext
             * @property {number} officeId SearchBuyerSeatsRequest officeId
             * @property {string|null} [search] SearchBuyerSeatsRequest search
             * @property {teads.api.SearchBuyerSeatsRequest.IFilters|null} [filters] SearchBuyerSeatsRequest filters
             * @property {teads.api.IPage} page SearchBuyerSeatsRequest page
             */

            /**
             * Constructs a new SearchBuyerSeatsRequest.
             * @memberof teads.api
             * @classdesc Represents a SearchBuyerSeatsRequest.
             * @implements ISearchBuyerSeatsRequest
             * @constructor
             * @param {teads.api.ISearchBuyerSeatsRequest=} [properties] Properties to set
             */
            function SearchBuyerSeatsRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SearchBuyerSeatsRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.SearchBuyerSeatsRequest
             * @instance
             */
            SearchBuyerSeatsRequest.prototype.securityContext = null;

            /**
             * SearchBuyerSeatsRequest officeId.
             * @member {number} officeId
             * @memberof teads.api.SearchBuyerSeatsRequest
             * @instance
             */
            SearchBuyerSeatsRequest.prototype.officeId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * SearchBuyerSeatsRequest search.
             * @member {string} search
             * @memberof teads.api.SearchBuyerSeatsRequest
             * @instance
             */
            SearchBuyerSeatsRequest.prototype.search = "";

            /**
             * SearchBuyerSeatsRequest filters.
             * @member {teads.api.SearchBuyerSeatsRequest.IFilters|null|undefined} filters
             * @memberof teads.api.SearchBuyerSeatsRequest
             * @instance
             */
            SearchBuyerSeatsRequest.prototype.filters = null;

            /**
             * SearchBuyerSeatsRequest page.
             * @member {teads.api.IPage} page
             * @memberof teads.api.SearchBuyerSeatsRequest
             * @instance
             */
            SearchBuyerSeatsRequest.prototype.page = null;

            /**
             * Creates a new SearchBuyerSeatsRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.SearchBuyerSeatsRequest
             * @static
             * @param {teads.api.ISearchBuyerSeatsRequest=} [properties] Properties to set
             * @returns {teads.api.SearchBuyerSeatsRequest} SearchBuyerSeatsRequest instance
             */
            SearchBuyerSeatsRequest.create = function create(properties) {
                return new SearchBuyerSeatsRequest(properties);
            };

            /**
             * Encodes the specified SearchBuyerSeatsRequest message. Does not implicitly {@link teads.api.SearchBuyerSeatsRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.SearchBuyerSeatsRequest
             * @static
             * @param {teads.api.ISearchBuyerSeatsRequest} message SearchBuyerSeatsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SearchBuyerSeatsRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.officeId);
                if (message.search != null && Object.hasOwnProperty.call(message, "search"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.search);
                if (message.filters != null && Object.hasOwnProperty.call(message, "filters"))
                    $root.teads.api.SearchBuyerSeatsRequest.Filters.encode(message.filters, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                $root.teads.api.Page.encode(message.page, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified SearchBuyerSeatsRequest message, length delimited. Does not implicitly {@link teads.api.SearchBuyerSeatsRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.SearchBuyerSeatsRequest
             * @static
             * @param {teads.api.ISearchBuyerSeatsRequest} message SearchBuyerSeatsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SearchBuyerSeatsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SearchBuyerSeatsRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.SearchBuyerSeatsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.SearchBuyerSeatsRequest} SearchBuyerSeatsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SearchBuyerSeatsRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.SearchBuyerSeatsRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.officeId = reader.int64();
                            break;
                        }
                    case 3: {
                            message.search = reader.string();
                            break;
                        }
                    case 4: {
                            message.filters = $root.teads.api.SearchBuyerSeatsRequest.Filters.decode(reader, reader.uint32());
                            break;
                        }
                    case 5: {
                            message.page = $root.teads.api.Page.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("officeId"))
                    throw $util.ProtocolError("missing required 'officeId'", { instance: message });
                if (!message.hasOwnProperty("page"))
                    throw $util.ProtocolError("missing required 'page'", { instance: message });
                return message;
            };

            /**
             * Decodes a SearchBuyerSeatsRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.SearchBuyerSeatsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.SearchBuyerSeatsRequest} SearchBuyerSeatsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SearchBuyerSeatsRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SearchBuyerSeatsRequest message.
             * @function verify
             * @memberof teads.api.SearchBuyerSeatsRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SearchBuyerSeatsRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.officeId) && !(message.officeId && $util.isInteger(message.officeId.low) && $util.isInteger(message.officeId.high)))
                    return "officeId: integer|Long expected";
                if (message.search != null && message.hasOwnProperty("search"))
                    if (!$util.isString(message.search))
                        return "search: string expected";
                if (message.filters != null && message.hasOwnProperty("filters")) {
                    var error = $root.teads.api.SearchBuyerSeatsRequest.Filters.verify(message.filters);
                    if (error)
                        return "filters." + error;
                }
                {
                    var error = $root.teads.api.Page.verify(message.page);
                    if (error)
                        return "page." + error;
                }
                return null;
            };

            /**
             * Creates a SearchBuyerSeatsRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.SearchBuyerSeatsRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.SearchBuyerSeatsRequest} SearchBuyerSeatsRequest
             */
            SearchBuyerSeatsRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.SearchBuyerSeatsRequest)
                    return object;
                var message = new $root.teads.api.SearchBuyerSeatsRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.SearchBuyerSeatsRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.officeId != null)
                    if ($util.Long)
                        (message.officeId = $util.Long.fromValue(object.officeId)).unsigned = false;
                    else if (typeof object.officeId === "string")
                        message.officeId = parseInt(object.officeId, 10);
                    else if (typeof object.officeId === "number")
                        message.officeId = object.officeId;
                    else if (typeof object.officeId === "object")
                        message.officeId = new $util.LongBits(object.officeId.low >>> 0, object.officeId.high >>> 0).toNumber();
                if (object.search != null)
                    message.search = String(object.search);
                if (object.filters != null) {
                    if (typeof object.filters !== "object")
                        throw TypeError(".teads.api.SearchBuyerSeatsRequest.filters: object expected");
                    message.filters = $root.teads.api.SearchBuyerSeatsRequest.Filters.fromObject(object.filters);
                }
                if (object.page != null) {
                    if (typeof object.page !== "object")
                        throw TypeError(".teads.api.SearchBuyerSeatsRequest.page: object expected");
                    message.page = $root.teads.api.Page.fromObject(object.page);
                }
                return message;
            };

            /**
             * Creates a plain object from a SearchBuyerSeatsRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.SearchBuyerSeatsRequest
             * @static
             * @param {teads.api.SearchBuyerSeatsRequest} message SearchBuyerSeatsRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SearchBuyerSeatsRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.officeId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.officeId = options.longs === String ? "0" : 0;
                    object.search = "";
                    object.filters = null;
                    object.page = null;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.officeId != null && message.hasOwnProperty("officeId"))
                    if (typeof message.officeId === "number")
                        object.officeId = options.longs === String ? String(message.officeId) : message.officeId;
                    else
                        object.officeId = options.longs === String ? $util.Long.prototype.toString.call(message.officeId) : options.longs === Number ? new $util.LongBits(message.officeId.low >>> 0, message.officeId.high >>> 0).toNumber() : message.officeId;
                if (message.search != null && message.hasOwnProperty("search"))
                    object.search = message.search;
                if (message.filters != null && message.hasOwnProperty("filters"))
                    object.filters = $root.teads.api.SearchBuyerSeatsRequest.Filters.toObject(message.filters, options);
                if (message.page != null && message.hasOwnProperty("page"))
                    object.page = $root.teads.api.Page.toObject(message.page, options);
                return object;
            };

            /**
             * Converts this SearchBuyerSeatsRequest to JSON.
             * @function toJSON
             * @memberof teads.api.SearchBuyerSeatsRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SearchBuyerSeatsRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SearchBuyerSeatsRequest
             * @function getTypeUrl
             * @memberof teads.api.SearchBuyerSeatsRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SearchBuyerSeatsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.SearchBuyerSeatsRequest";
            };

            SearchBuyerSeatsRequest.Filters = (function() {

                /**
                 * Properties of a Filters.
                 * @memberof teads.api.SearchBuyerSeatsRequest
                 * @interface IFilters
                 * @property {teads.api.BuyerServiceLevel|null} [serviceLevel] Filters serviceLevel
                 * @property {teads.api.BuyerSeatStatus|null} [seatStatus] Filters seatStatus
                 * @property {teads.api.BuyerSeatType|null} [seatType] Filters seatType
                 */

                /**
                 * Constructs a new Filters.
                 * @memberof teads.api.SearchBuyerSeatsRequest
                 * @classdesc Represents a Filters.
                 * @implements IFilters
                 * @constructor
                 * @param {teads.api.SearchBuyerSeatsRequest.IFilters=} [properties] Properties to set
                 */
                function Filters(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * Filters serviceLevel.
                 * @member {teads.api.BuyerServiceLevel} serviceLevel
                 * @memberof teads.api.SearchBuyerSeatsRequest.Filters
                 * @instance
                 */
                Filters.prototype.serviceLevel = 1;

                /**
                 * Filters seatStatus.
                 * @member {teads.api.BuyerSeatStatus} seatStatus
                 * @memberof teads.api.SearchBuyerSeatsRequest.Filters
                 * @instance
                 */
                Filters.prototype.seatStatus = 1;

                /**
                 * Filters seatType.
                 * @member {teads.api.BuyerSeatType} seatType
                 * @memberof teads.api.SearchBuyerSeatsRequest.Filters
                 * @instance
                 */
                Filters.prototype.seatType = 1;

                /**
                 * Creates a new Filters instance using the specified properties.
                 * @function create
                 * @memberof teads.api.SearchBuyerSeatsRequest.Filters
                 * @static
                 * @param {teads.api.SearchBuyerSeatsRequest.IFilters=} [properties] Properties to set
                 * @returns {teads.api.SearchBuyerSeatsRequest.Filters} Filters instance
                 */
                Filters.create = function create(properties) {
                    return new Filters(properties);
                };

                /**
                 * Encodes the specified Filters message. Does not implicitly {@link teads.api.SearchBuyerSeatsRequest.Filters.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.SearchBuyerSeatsRequest.Filters
                 * @static
                 * @param {teads.api.SearchBuyerSeatsRequest.IFilters} message Filters message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Filters.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.serviceLevel != null && Object.hasOwnProperty.call(message, "serviceLevel"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.serviceLevel);
                    if (message.seatStatus != null && Object.hasOwnProperty.call(message, "seatStatus"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.seatStatus);
                    if (message.seatType != null && Object.hasOwnProperty.call(message, "seatType"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.seatType);
                    return writer;
                };

                /**
                 * Encodes the specified Filters message, length delimited. Does not implicitly {@link teads.api.SearchBuyerSeatsRequest.Filters.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.SearchBuyerSeatsRequest.Filters
                 * @static
                 * @param {teads.api.SearchBuyerSeatsRequest.IFilters} message Filters message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Filters.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a Filters message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.SearchBuyerSeatsRequest.Filters
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.SearchBuyerSeatsRequest.Filters} Filters
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Filters.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.SearchBuyerSeatsRequest.Filters();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.serviceLevel = reader.int32();
                                break;
                            }
                        case 2: {
                                message.seatStatus = reader.int32();
                                break;
                            }
                        case 3: {
                                message.seatType = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };

                /**
                 * Decodes a Filters message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.SearchBuyerSeatsRequest.Filters
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.SearchBuyerSeatsRequest.Filters} Filters
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Filters.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a Filters message.
                 * @function verify
                 * @memberof teads.api.SearchBuyerSeatsRequest.Filters
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Filters.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.serviceLevel != null && message.hasOwnProperty("serviceLevel"))
                        switch (message.serviceLevel) {
                        default:
                            return "serviceLevel: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            break;
                        }
                    if (message.seatStatus != null && message.hasOwnProperty("seatStatus"))
                        switch (message.seatStatus) {
                        default:
                            return "seatStatus: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                            break;
                        }
                    if (message.seatType != null && message.hasOwnProperty("seatType"))
                        switch (message.seatType) {
                        default:
                            return "seatType: enum value expected";
                        case 1:
                        case 2:
                            break;
                        }
                    return null;
                };

                /**
                 * Creates a Filters message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.SearchBuyerSeatsRequest.Filters
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.SearchBuyerSeatsRequest.Filters} Filters
                 */
                Filters.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.SearchBuyerSeatsRequest.Filters)
                        return object;
                    var message = new $root.teads.api.SearchBuyerSeatsRequest.Filters();
                    switch (object.serviceLevel) {
                    default:
                        if (typeof object.serviceLevel === "number") {
                            message.serviceLevel = object.serviceLevel;
                            break;
                        }
                        break;
                    case "BUYER_SERVICE_LEVEL_MANAGED":
                    case 1:
                        message.serviceLevel = 1;
                        break;
                    case "BUYER_SERVICE_LEVEL_SELF_SERVED":
                    case 2:
                        message.serviceLevel = 2;
                        break;
                    case "BUYER_SERVICE_LEVEL_IO":
                    case 3:
                        message.serviceLevel = 3;
                        break;
                    case "BUYER_SERVICE_LEVEL_INTERNAL":
                    case 4:
                        message.serviceLevel = 4;
                        break;
                    case "BUYER_SERVICE_LEVEL_CLIENT":
                    case 5:
                        message.serviceLevel = 5;
                        break;
                    }
                    switch (object.seatStatus) {
                    default:
                        if (typeof object.seatStatus === "number") {
                            message.seatStatus = object.seatStatus;
                            break;
                        }
                        break;
                    case "BUYER_SEAT_STATUS_ENABLED":
                    case 1:
                        message.seatStatus = 1;
                        break;
                    case "BUYER_SEAT_STATUS_DISABLED":
                    case 2:
                        message.seatStatus = 2;
                        break;
                    case "BUYER_SEAT_STATUS_PENDING_CLIENT_INPUT":
                    case 3:
                        message.seatStatus = 3;
                        break;
                    case "BUYER_SEAT_STATUS_PENDING_TEADS_INPUT":
                    case 4:
                        message.seatStatus = 4;
                        break;
                    }
                    switch (object.seatType) {
                    default:
                        if (typeof object.seatType === "number") {
                            message.seatType = object.seatType;
                            break;
                        }
                        break;
                    case "BUYER_SEAT_TYPE_ADVERTISER":
                    case 1:
                        message.seatType = 1;
                        break;
                    case "BUYER_SEAT_TYPE_AGENCY":
                    case 2:
                        message.seatType = 2;
                        break;
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a Filters message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.SearchBuyerSeatsRequest.Filters
                 * @static
                 * @param {teads.api.SearchBuyerSeatsRequest.Filters} message Filters
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Filters.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.serviceLevel = options.enums === String ? "BUYER_SERVICE_LEVEL_MANAGED" : 1;
                        object.seatStatus = options.enums === String ? "BUYER_SEAT_STATUS_ENABLED" : 1;
                        object.seatType = options.enums === String ? "BUYER_SEAT_TYPE_ADVERTISER" : 1;
                    }
                    if (message.serviceLevel != null && message.hasOwnProperty("serviceLevel"))
                        object.serviceLevel = options.enums === String ? $root.teads.api.BuyerServiceLevel[message.serviceLevel] === undefined ? message.serviceLevel : $root.teads.api.BuyerServiceLevel[message.serviceLevel] : message.serviceLevel;
                    if (message.seatStatus != null && message.hasOwnProperty("seatStatus"))
                        object.seatStatus = options.enums === String ? $root.teads.api.BuyerSeatStatus[message.seatStatus] === undefined ? message.seatStatus : $root.teads.api.BuyerSeatStatus[message.seatStatus] : message.seatStatus;
                    if (message.seatType != null && message.hasOwnProperty("seatType"))
                        object.seatType = options.enums === String ? $root.teads.api.BuyerSeatType[message.seatType] === undefined ? message.seatType : $root.teads.api.BuyerSeatType[message.seatType] : message.seatType;
                    return object;
                };

                /**
                 * Converts this Filters to JSON.
                 * @function toJSON
                 * @memberof teads.api.SearchBuyerSeatsRequest.Filters
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Filters.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for Filters
                 * @function getTypeUrl
                 * @memberof teads.api.SearchBuyerSeatsRequest.Filters
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Filters.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.SearchBuyerSeatsRequest.Filters";
                };

                return Filters;
            })();

            return SearchBuyerSeatsRequest;
        })();

        api.SearchBuyerSeatsResponse = (function() {

            /**
             * Properties of a SearchBuyerSeatsResponse.
             * @memberof teads.api
             * @interface ISearchBuyerSeatsResponse
             * @property {Array.<teads.api.SearchBuyerSeatsResponse.IBuyerSeat>|null} [seats] SearchBuyerSeatsResponse seats
             * @property {number} pages SearchBuyerSeatsResponse pages
             */

            /**
             * Constructs a new SearchBuyerSeatsResponse.
             * @memberof teads.api
             * @classdesc Represents a SearchBuyerSeatsResponse.
             * @implements ISearchBuyerSeatsResponse
             * @constructor
             * @param {teads.api.ISearchBuyerSeatsResponse=} [properties] Properties to set
             */
            function SearchBuyerSeatsResponse(properties) {
                this.seats = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SearchBuyerSeatsResponse seats.
             * @member {Array.<teads.api.SearchBuyerSeatsResponse.IBuyerSeat>} seats
             * @memberof teads.api.SearchBuyerSeatsResponse
             * @instance
             */
            SearchBuyerSeatsResponse.prototype.seats = $util.emptyArray;

            /**
             * SearchBuyerSeatsResponse pages.
             * @member {number} pages
             * @memberof teads.api.SearchBuyerSeatsResponse
             * @instance
             */
            SearchBuyerSeatsResponse.prototype.pages = 0;

            /**
             * Creates a new SearchBuyerSeatsResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.SearchBuyerSeatsResponse
             * @static
             * @param {teads.api.ISearchBuyerSeatsResponse=} [properties] Properties to set
             * @returns {teads.api.SearchBuyerSeatsResponse} SearchBuyerSeatsResponse instance
             */
            SearchBuyerSeatsResponse.create = function create(properties) {
                return new SearchBuyerSeatsResponse(properties);
            };

            /**
             * Encodes the specified SearchBuyerSeatsResponse message. Does not implicitly {@link teads.api.SearchBuyerSeatsResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.SearchBuyerSeatsResponse
             * @static
             * @param {teads.api.ISearchBuyerSeatsResponse} message SearchBuyerSeatsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SearchBuyerSeatsResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.seats != null && message.seats.length)
                    for (var i = 0; i < message.seats.length; ++i)
                        $root.teads.api.SearchBuyerSeatsResponse.BuyerSeat.encode(message.seats[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.pages);
                return writer;
            };

            /**
             * Encodes the specified SearchBuyerSeatsResponse message, length delimited. Does not implicitly {@link teads.api.SearchBuyerSeatsResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.SearchBuyerSeatsResponse
             * @static
             * @param {teads.api.ISearchBuyerSeatsResponse} message SearchBuyerSeatsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SearchBuyerSeatsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SearchBuyerSeatsResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.SearchBuyerSeatsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.SearchBuyerSeatsResponse} SearchBuyerSeatsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SearchBuyerSeatsResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.SearchBuyerSeatsResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            if (!(message.seats && message.seats.length))
                                message.seats = [];
                            message.seats.push($root.teads.api.SearchBuyerSeatsResponse.BuyerSeat.decode(reader, reader.uint32()));
                            break;
                        }
                    case 2: {
                            message.pages = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("pages"))
                    throw $util.ProtocolError("missing required 'pages'", { instance: message });
                return message;
            };

            /**
             * Decodes a SearchBuyerSeatsResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.SearchBuyerSeatsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.SearchBuyerSeatsResponse} SearchBuyerSeatsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SearchBuyerSeatsResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SearchBuyerSeatsResponse message.
             * @function verify
             * @memberof teads.api.SearchBuyerSeatsResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SearchBuyerSeatsResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.seats != null && message.hasOwnProperty("seats")) {
                    if (!Array.isArray(message.seats))
                        return "seats: array expected";
                    for (var i = 0; i < message.seats.length; ++i) {
                        var error = $root.teads.api.SearchBuyerSeatsResponse.BuyerSeat.verify(message.seats[i]);
                        if (error)
                            return "seats." + error;
                    }
                }
                if (!$util.isInteger(message.pages))
                    return "pages: integer expected";
                return null;
            };

            /**
             * Creates a SearchBuyerSeatsResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.SearchBuyerSeatsResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.SearchBuyerSeatsResponse} SearchBuyerSeatsResponse
             */
            SearchBuyerSeatsResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.SearchBuyerSeatsResponse)
                    return object;
                var message = new $root.teads.api.SearchBuyerSeatsResponse();
                if (object.seats) {
                    if (!Array.isArray(object.seats))
                        throw TypeError(".teads.api.SearchBuyerSeatsResponse.seats: array expected");
                    message.seats = [];
                    for (var i = 0; i < object.seats.length; ++i) {
                        if (typeof object.seats[i] !== "object")
                            throw TypeError(".teads.api.SearchBuyerSeatsResponse.seats: object expected");
                        message.seats[i] = $root.teads.api.SearchBuyerSeatsResponse.BuyerSeat.fromObject(object.seats[i]);
                    }
                }
                if (object.pages != null)
                    message.pages = object.pages >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a SearchBuyerSeatsResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.SearchBuyerSeatsResponse
             * @static
             * @param {teads.api.SearchBuyerSeatsResponse} message SearchBuyerSeatsResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SearchBuyerSeatsResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.seats = [];
                if (options.defaults)
                    object.pages = 0;
                if (message.seats && message.seats.length) {
                    object.seats = [];
                    for (var j = 0; j < message.seats.length; ++j)
                        object.seats[j] = $root.teads.api.SearchBuyerSeatsResponse.BuyerSeat.toObject(message.seats[j], options);
                }
                if (message.pages != null && message.hasOwnProperty("pages"))
                    object.pages = message.pages;
                return object;
            };

            /**
             * Converts this SearchBuyerSeatsResponse to JSON.
             * @function toJSON
             * @memberof teads.api.SearchBuyerSeatsResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SearchBuyerSeatsResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SearchBuyerSeatsResponse
             * @function getTypeUrl
             * @memberof teads.api.SearchBuyerSeatsResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SearchBuyerSeatsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.SearchBuyerSeatsResponse";
            };

            SearchBuyerSeatsResponse.BuyerSeat = (function() {

                /**
                 * Properties of a BuyerSeat.
                 * @memberof teads.api.SearchBuyerSeatsResponse
                 * @interface IBuyerSeat
                 * @property {number} seatId BuyerSeat seatId
                 * @property {number} officeId BuyerSeat officeId
                 * @property {string} name BuyerSeat name
                 * @property {teads.api.SearchBuyerSeatsResponse.IEntityInfo} entity BuyerSeat entity
                 * @property {boolean} existingSeatMember BuyerSeat existingSeatMember
                 * @property {teads.api.BuyerServiceLevel} serviceLevel BuyerSeat serviceLevel
                 * @property {teads.api.BuyerSeatStatus} status BuyerSeat status
                 * @property {teads.api.MsaType|null} [msaType] BuyerSeat msaType
                 * @property {number} fee BuyerSeat fee
                 * @property {google.protobuf.ITimestamp|null} [createdAt] BuyerSeat createdAt
                 * @property {string|null} [salesforceAccountId] BuyerSeat salesforceAccountId
                 * @property {string|null} [salesforceContractId] BuyerSeat salesforceContractId
                 * @property {number|null} [agencyId] BuyerSeat agencyId
                 * @property {number|null} [advertiserId] BuyerSeat advertiserId
                 */

                /**
                 * Constructs a new BuyerSeat.
                 * @memberof teads.api.SearchBuyerSeatsResponse
                 * @classdesc Represents a BuyerSeat.
                 * @implements IBuyerSeat
                 * @constructor
                 * @param {teads.api.SearchBuyerSeatsResponse.IBuyerSeat=} [properties] Properties to set
                 */
                function BuyerSeat(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * BuyerSeat seatId.
                 * @member {number} seatId
                 * @memberof teads.api.SearchBuyerSeatsResponse.BuyerSeat
                 * @instance
                 */
                BuyerSeat.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * BuyerSeat officeId.
                 * @member {number} officeId
                 * @memberof teads.api.SearchBuyerSeatsResponse.BuyerSeat
                 * @instance
                 */
                BuyerSeat.prototype.officeId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * BuyerSeat name.
                 * @member {string} name
                 * @memberof teads.api.SearchBuyerSeatsResponse.BuyerSeat
                 * @instance
                 */
                BuyerSeat.prototype.name = "";

                /**
                 * BuyerSeat entity.
                 * @member {teads.api.SearchBuyerSeatsResponse.IEntityInfo} entity
                 * @memberof teads.api.SearchBuyerSeatsResponse.BuyerSeat
                 * @instance
                 */
                BuyerSeat.prototype.entity = null;

                /**
                 * BuyerSeat existingSeatMember.
                 * @member {boolean} existingSeatMember
                 * @memberof teads.api.SearchBuyerSeatsResponse.BuyerSeat
                 * @instance
                 */
                BuyerSeat.prototype.existingSeatMember = false;

                /**
                 * BuyerSeat serviceLevel.
                 * @member {teads.api.BuyerServiceLevel} serviceLevel
                 * @memberof teads.api.SearchBuyerSeatsResponse.BuyerSeat
                 * @instance
                 */
                BuyerSeat.prototype.serviceLevel = 1;

                /**
                 * BuyerSeat status.
                 * @member {teads.api.BuyerSeatStatus} status
                 * @memberof teads.api.SearchBuyerSeatsResponse.BuyerSeat
                 * @instance
                 */
                BuyerSeat.prototype.status = 1;

                /**
                 * BuyerSeat msaType.
                 * @member {teads.api.MsaType} msaType
                 * @memberof teads.api.SearchBuyerSeatsResponse.BuyerSeat
                 * @instance
                 */
                BuyerSeat.prototype.msaType = 1;

                /**
                 * BuyerSeat fee.
                 * @member {number} fee
                 * @memberof teads.api.SearchBuyerSeatsResponse.BuyerSeat
                 * @instance
                 */
                BuyerSeat.prototype.fee = 0;

                /**
                 * BuyerSeat createdAt.
                 * @member {google.protobuf.ITimestamp|null|undefined} createdAt
                 * @memberof teads.api.SearchBuyerSeatsResponse.BuyerSeat
                 * @instance
                 */
                BuyerSeat.prototype.createdAt = null;

                /**
                 * BuyerSeat salesforceAccountId.
                 * @member {string} salesforceAccountId
                 * @memberof teads.api.SearchBuyerSeatsResponse.BuyerSeat
                 * @instance
                 */
                BuyerSeat.prototype.salesforceAccountId = "";

                /**
                 * BuyerSeat salesforceContractId.
                 * @member {string} salesforceContractId
                 * @memberof teads.api.SearchBuyerSeatsResponse.BuyerSeat
                 * @instance
                 */
                BuyerSeat.prototype.salesforceContractId = "";

                /**
                 * BuyerSeat agencyId.
                 * @member {number|null|undefined} agencyId
                 * @memberof teads.api.SearchBuyerSeatsResponse.BuyerSeat
                 * @instance
                 */
                BuyerSeat.prototype.agencyId = null;

                /**
                 * BuyerSeat advertiserId.
                 * @member {number|null|undefined} advertiserId
                 * @memberof teads.api.SearchBuyerSeatsResponse.BuyerSeat
                 * @instance
                 */
                BuyerSeat.prototype.advertiserId = null;

                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;

                /**
                 * BuyerSeat buyerId.
                 * @member {"agencyId"|"advertiserId"|undefined} buyerId
                 * @memberof teads.api.SearchBuyerSeatsResponse.BuyerSeat
                 * @instance
                 */
                Object.defineProperty(BuyerSeat.prototype, "buyerId", {
                    get: $util.oneOfGetter($oneOfFields = ["agencyId", "advertiserId"]),
                    set: $util.oneOfSetter($oneOfFields)
                });

                /**
                 * Creates a new BuyerSeat instance using the specified properties.
                 * @function create
                 * @memberof teads.api.SearchBuyerSeatsResponse.BuyerSeat
                 * @static
                 * @param {teads.api.SearchBuyerSeatsResponse.IBuyerSeat=} [properties] Properties to set
                 * @returns {teads.api.SearchBuyerSeatsResponse.BuyerSeat} BuyerSeat instance
                 */
                BuyerSeat.create = function create(properties) {
                    return new BuyerSeat(properties);
                };

                /**
                 * Encodes the specified BuyerSeat message. Does not implicitly {@link teads.api.SearchBuyerSeatsResponse.BuyerSeat.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.SearchBuyerSeatsResponse.BuyerSeat
                 * @static
                 * @param {teads.api.SearchBuyerSeatsResponse.IBuyerSeat} message BuyerSeat message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BuyerSeat.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seatId);
                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.officeId);
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                    $root.teads.api.SearchBuyerSeatsResponse.EntityInfo.encode(message.entity, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    writer.uint32(/* id 5, wireType 0 =*/40).bool(message.existingSeatMember);
                    writer.uint32(/* id 6, wireType 0 =*/48).int32(message.serviceLevel);
                    writer.uint32(/* id 7, wireType 0 =*/56).int32(message.status);
                    if (message.msaType != null && Object.hasOwnProperty.call(message, "msaType"))
                        writer.uint32(/* id 8, wireType 0 =*/64).int32(message.msaType);
                    writer.uint32(/* id 9, wireType 1 =*/73).double(message.fee);
                    if (message.createdAt != null && Object.hasOwnProperty.call(message, "createdAt"))
                        $root.google.protobuf.Timestamp.encode(message.createdAt, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                    if (message.salesforceAccountId != null && Object.hasOwnProperty.call(message, "salesforceAccountId"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.salesforceAccountId);
                    if (message.salesforceContractId != null && Object.hasOwnProperty.call(message, "salesforceContractId"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.salesforceContractId);
                    if (message.agencyId != null && Object.hasOwnProperty.call(message, "agencyId"))
                        writer.uint32(/* id 13, wireType 0 =*/104).int64(message.agencyId);
                    if (message.advertiserId != null && Object.hasOwnProperty.call(message, "advertiserId"))
                        writer.uint32(/* id 14, wireType 0 =*/112).int64(message.advertiserId);
                    return writer;
                };

                /**
                 * Encodes the specified BuyerSeat message, length delimited. Does not implicitly {@link teads.api.SearchBuyerSeatsResponse.BuyerSeat.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.SearchBuyerSeatsResponse.BuyerSeat
                 * @static
                 * @param {teads.api.SearchBuyerSeatsResponse.IBuyerSeat} message BuyerSeat message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BuyerSeat.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a BuyerSeat message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.SearchBuyerSeatsResponse.BuyerSeat
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.SearchBuyerSeatsResponse.BuyerSeat} BuyerSeat
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BuyerSeat.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.SearchBuyerSeatsResponse.BuyerSeat();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seatId = reader.int64();
                                break;
                            }
                        case 2: {
                                message.officeId = reader.int64();
                                break;
                            }
                        case 3: {
                                message.name = reader.string();
                                break;
                            }
                        case 4: {
                                message.entity = $root.teads.api.SearchBuyerSeatsResponse.EntityInfo.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.existingSeatMember = reader.bool();
                                break;
                            }
                        case 6: {
                                message.serviceLevel = reader.int32();
                                break;
                            }
                        case 7: {
                                message.status = reader.int32();
                                break;
                            }
                        case 8: {
                                message.msaType = reader.int32();
                                break;
                            }
                        case 9: {
                                message.fee = reader.double();
                                break;
                            }
                        case 10: {
                                message.createdAt = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                break;
                            }
                        case 11: {
                                message.salesforceAccountId = reader.string();
                                break;
                            }
                        case 12: {
                                message.salesforceContractId = reader.string();
                                break;
                            }
                        case 13: {
                                message.agencyId = reader.int64();
                                break;
                            }
                        case 14: {
                                message.advertiserId = reader.int64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("seatId"))
                        throw $util.ProtocolError("missing required 'seatId'", { instance: message });
                    if (!message.hasOwnProperty("officeId"))
                        throw $util.ProtocolError("missing required 'officeId'", { instance: message });
                    if (!message.hasOwnProperty("name"))
                        throw $util.ProtocolError("missing required 'name'", { instance: message });
                    if (!message.hasOwnProperty("entity"))
                        throw $util.ProtocolError("missing required 'entity'", { instance: message });
                    if (!message.hasOwnProperty("existingSeatMember"))
                        throw $util.ProtocolError("missing required 'existingSeatMember'", { instance: message });
                    if (!message.hasOwnProperty("serviceLevel"))
                        throw $util.ProtocolError("missing required 'serviceLevel'", { instance: message });
                    if (!message.hasOwnProperty("status"))
                        throw $util.ProtocolError("missing required 'status'", { instance: message });
                    if (!message.hasOwnProperty("fee"))
                        throw $util.ProtocolError("missing required 'fee'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a BuyerSeat message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.SearchBuyerSeatsResponse.BuyerSeat
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.SearchBuyerSeatsResponse.BuyerSeat} BuyerSeat
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BuyerSeat.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a BuyerSeat message.
                 * @function verify
                 * @memberof teads.api.SearchBuyerSeatsResponse.BuyerSeat
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                BuyerSeat.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                        return "seatId: integer|Long expected";
                    if (!$util.isInteger(message.officeId) && !(message.officeId && $util.isInteger(message.officeId.low) && $util.isInteger(message.officeId.high)))
                        return "officeId: integer|Long expected";
                    if (!$util.isString(message.name))
                        return "name: string expected";
                    {
                        var error = $root.teads.api.SearchBuyerSeatsResponse.EntityInfo.verify(message.entity);
                        if (error)
                            return "entity." + error;
                    }
                    if (typeof message.existingSeatMember !== "boolean")
                        return "existingSeatMember: boolean expected";
                    switch (message.serviceLevel) {
                    default:
                        return "serviceLevel: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                        break;
                    }
                    switch (message.status) {
                    default:
                        return "status: enum value expected";
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                        break;
                    }
                    if (message.msaType != null && message.hasOwnProperty("msaType"))
                        switch (message.msaType) {
                        default:
                            return "msaType: enum value expected";
                        case 1:
                        case 2:
                            break;
                        }
                    if (typeof message.fee !== "number")
                        return "fee: number expected";
                    if (message.createdAt != null && message.hasOwnProperty("createdAt")) {
                        var error = $root.google.protobuf.Timestamp.verify(message.createdAt);
                        if (error)
                            return "createdAt." + error;
                    }
                    if (message.salesforceAccountId != null && message.hasOwnProperty("salesforceAccountId"))
                        if (!$util.isString(message.salesforceAccountId))
                            return "salesforceAccountId: string expected";
                    if (message.salesforceContractId != null && message.hasOwnProperty("salesforceContractId"))
                        if (!$util.isString(message.salesforceContractId))
                            return "salesforceContractId: string expected";
                    if (message.agencyId != null && message.hasOwnProperty("agencyId")) {
                        properties.buyerId = 1;
                        if (!$util.isInteger(message.agencyId) && !(message.agencyId && $util.isInteger(message.agencyId.low) && $util.isInteger(message.agencyId.high)))
                            return "agencyId: integer|Long expected";
                    }
                    if (message.advertiserId != null && message.hasOwnProperty("advertiserId")) {
                        if (properties.buyerId === 1)
                            return "buyerId: multiple values";
                        properties.buyerId = 1;
                        if (!$util.isInteger(message.advertiserId) && !(message.advertiserId && $util.isInteger(message.advertiserId.low) && $util.isInteger(message.advertiserId.high)))
                            return "advertiserId: integer|Long expected";
                    }
                    return null;
                };

                /**
                 * Creates a BuyerSeat message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.SearchBuyerSeatsResponse.BuyerSeat
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.SearchBuyerSeatsResponse.BuyerSeat} BuyerSeat
                 */
                BuyerSeat.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.SearchBuyerSeatsResponse.BuyerSeat)
                        return object;
                    var message = new $root.teads.api.SearchBuyerSeatsResponse.BuyerSeat();
                    if (object.seatId != null)
                        if ($util.Long)
                            (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                        else if (typeof object.seatId === "string")
                            message.seatId = parseInt(object.seatId, 10);
                        else if (typeof object.seatId === "number")
                            message.seatId = object.seatId;
                        else if (typeof object.seatId === "object")
                            message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                    if (object.officeId != null)
                        if ($util.Long)
                            (message.officeId = $util.Long.fromValue(object.officeId)).unsigned = false;
                        else if (typeof object.officeId === "string")
                            message.officeId = parseInt(object.officeId, 10);
                        else if (typeof object.officeId === "number")
                            message.officeId = object.officeId;
                        else if (typeof object.officeId === "object")
                            message.officeId = new $util.LongBits(object.officeId.low >>> 0, object.officeId.high >>> 0).toNumber();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.entity != null) {
                        if (typeof object.entity !== "object")
                            throw TypeError(".teads.api.SearchBuyerSeatsResponse.BuyerSeat.entity: object expected");
                        message.entity = $root.teads.api.SearchBuyerSeatsResponse.EntityInfo.fromObject(object.entity);
                    }
                    if (object.existingSeatMember != null)
                        message.existingSeatMember = Boolean(object.existingSeatMember);
                    switch (object.serviceLevel) {
                    default:
                        if (typeof object.serviceLevel === "number") {
                            message.serviceLevel = object.serviceLevel;
                            break;
                        }
                        break;
                    case "BUYER_SERVICE_LEVEL_MANAGED":
                    case 1:
                        message.serviceLevel = 1;
                        break;
                    case "BUYER_SERVICE_LEVEL_SELF_SERVED":
                    case 2:
                        message.serviceLevel = 2;
                        break;
                    case "BUYER_SERVICE_LEVEL_IO":
                    case 3:
                        message.serviceLevel = 3;
                        break;
                    case "BUYER_SERVICE_LEVEL_INTERNAL":
                    case 4:
                        message.serviceLevel = 4;
                        break;
                    case "BUYER_SERVICE_LEVEL_CLIENT":
                    case 5:
                        message.serviceLevel = 5;
                        break;
                    }
                    switch (object.status) {
                    default:
                        if (typeof object.status === "number") {
                            message.status = object.status;
                            break;
                        }
                        break;
                    case "BUYER_SEAT_STATUS_ENABLED":
                    case 1:
                        message.status = 1;
                        break;
                    case "BUYER_SEAT_STATUS_DISABLED":
                    case 2:
                        message.status = 2;
                        break;
                    case "BUYER_SEAT_STATUS_PENDING_CLIENT_INPUT":
                    case 3:
                        message.status = 3;
                        break;
                    case "BUYER_SEAT_STATUS_PENDING_TEADS_INPUT":
                    case 4:
                        message.status = 4;
                        break;
                    }
                    switch (object.msaType) {
                    default:
                        if (typeof object.msaType === "number") {
                            message.msaType = object.msaType;
                            break;
                        }
                        break;
                    case "MSA_TYPE_DIGITAL":
                    case 1:
                        message.msaType = 1;
                        break;
                    case "MSA_TYPE_PAPER":
                    case 2:
                        message.msaType = 2;
                        break;
                    }
                    if (object.fee != null)
                        message.fee = Number(object.fee);
                    if (object.createdAt != null) {
                        if (typeof object.createdAt !== "object")
                            throw TypeError(".teads.api.SearchBuyerSeatsResponse.BuyerSeat.createdAt: object expected");
                        message.createdAt = $root.google.protobuf.Timestamp.fromObject(object.createdAt);
                    }
                    if (object.salesforceAccountId != null)
                        message.salesforceAccountId = String(object.salesforceAccountId);
                    if (object.salesforceContractId != null)
                        message.salesforceContractId = String(object.salesforceContractId);
                    if (object.agencyId != null)
                        if ($util.Long)
                            (message.agencyId = $util.Long.fromValue(object.agencyId)).unsigned = false;
                        else if (typeof object.agencyId === "string")
                            message.agencyId = parseInt(object.agencyId, 10);
                        else if (typeof object.agencyId === "number")
                            message.agencyId = object.agencyId;
                        else if (typeof object.agencyId === "object")
                            message.agencyId = new $util.LongBits(object.agencyId.low >>> 0, object.agencyId.high >>> 0).toNumber();
                    if (object.advertiserId != null)
                        if ($util.Long)
                            (message.advertiserId = $util.Long.fromValue(object.advertiserId)).unsigned = false;
                        else if (typeof object.advertiserId === "string")
                            message.advertiserId = parseInt(object.advertiserId, 10);
                        else if (typeof object.advertiserId === "number")
                            message.advertiserId = object.advertiserId;
                        else if (typeof object.advertiserId === "object")
                            message.advertiserId = new $util.LongBits(object.advertiserId.low >>> 0, object.advertiserId.high >>> 0).toNumber();
                    return message;
                };

                /**
                 * Creates a plain object from a BuyerSeat message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.SearchBuyerSeatsResponse.BuyerSeat
                 * @static
                 * @param {teads.api.SearchBuyerSeatsResponse.BuyerSeat} message BuyerSeat
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                BuyerSeat.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seatId = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.officeId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.officeId = options.longs === String ? "0" : 0;
                        object.name = "";
                        object.entity = null;
                        object.existingSeatMember = false;
                        object.serviceLevel = options.enums === String ? "BUYER_SERVICE_LEVEL_MANAGED" : 1;
                        object.status = options.enums === String ? "BUYER_SEAT_STATUS_ENABLED" : 1;
                        object.msaType = options.enums === String ? "MSA_TYPE_DIGITAL" : 1;
                        object.fee = 0;
                        object.createdAt = null;
                        object.salesforceAccountId = "";
                        object.salesforceContractId = "";
                    }
                    if (message.seatId != null && message.hasOwnProperty("seatId"))
                        if (typeof message.seatId === "number")
                            object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                        else
                            object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                    if (message.officeId != null && message.hasOwnProperty("officeId"))
                        if (typeof message.officeId === "number")
                            object.officeId = options.longs === String ? String(message.officeId) : message.officeId;
                        else
                            object.officeId = options.longs === String ? $util.Long.prototype.toString.call(message.officeId) : options.longs === Number ? new $util.LongBits(message.officeId.low >>> 0, message.officeId.high >>> 0).toNumber() : message.officeId;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.entity != null && message.hasOwnProperty("entity"))
                        object.entity = $root.teads.api.SearchBuyerSeatsResponse.EntityInfo.toObject(message.entity, options);
                    if (message.existingSeatMember != null && message.hasOwnProperty("existingSeatMember"))
                        object.existingSeatMember = message.existingSeatMember;
                    if (message.serviceLevel != null && message.hasOwnProperty("serviceLevel"))
                        object.serviceLevel = options.enums === String ? $root.teads.api.BuyerServiceLevel[message.serviceLevel] === undefined ? message.serviceLevel : $root.teads.api.BuyerServiceLevel[message.serviceLevel] : message.serviceLevel;
                    if (message.status != null && message.hasOwnProperty("status"))
                        object.status = options.enums === String ? $root.teads.api.BuyerSeatStatus[message.status] === undefined ? message.status : $root.teads.api.BuyerSeatStatus[message.status] : message.status;
                    if (message.msaType != null && message.hasOwnProperty("msaType"))
                        object.msaType = options.enums === String ? $root.teads.api.MsaType[message.msaType] === undefined ? message.msaType : $root.teads.api.MsaType[message.msaType] : message.msaType;
                    if (message.fee != null && message.hasOwnProperty("fee"))
                        object.fee = options.json && !isFinite(message.fee) ? String(message.fee) : message.fee;
                    if (message.createdAt != null && message.hasOwnProperty("createdAt"))
                        object.createdAt = $root.google.protobuf.Timestamp.toObject(message.createdAt, options);
                    if (message.salesforceAccountId != null && message.hasOwnProperty("salesforceAccountId"))
                        object.salesforceAccountId = message.salesforceAccountId;
                    if (message.salesforceContractId != null && message.hasOwnProperty("salesforceContractId"))
                        object.salesforceContractId = message.salesforceContractId;
                    if (message.agencyId != null && message.hasOwnProperty("agencyId")) {
                        if (typeof message.agencyId === "number")
                            object.agencyId = options.longs === String ? String(message.agencyId) : message.agencyId;
                        else
                            object.agencyId = options.longs === String ? $util.Long.prototype.toString.call(message.agencyId) : options.longs === Number ? new $util.LongBits(message.agencyId.low >>> 0, message.agencyId.high >>> 0).toNumber() : message.agencyId;
                        if (options.oneofs)
                            object.buyerId = "agencyId";
                    }
                    if (message.advertiserId != null && message.hasOwnProperty("advertiserId")) {
                        if (typeof message.advertiserId === "number")
                            object.advertiserId = options.longs === String ? String(message.advertiserId) : message.advertiserId;
                        else
                            object.advertiserId = options.longs === String ? $util.Long.prototype.toString.call(message.advertiserId) : options.longs === Number ? new $util.LongBits(message.advertiserId.low >>> 0, message.advertiserId.high >>> 0).toNumber() : message.advertiserId;
                        if (options.oneofs)
                            object.buyerId = "advertiserId";
                    }
                    return object;
                };

                /**
                 * Converts this BuyerSeat to JSON.
                 * @function toJSON
                 * @memberof teads.api.SearchBuyerSeatsResponse.BuyerSeat
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                BuyerSeat.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for BuyerSeat
                 * @function getTypeUrl
                 * @memberof teads.api.SearchBuyerSeatsResponse.BuyerSeat
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                BuyerSeat.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.SearchBuyerSeatsResponse.BuyerSeat";
                };

                return BuyerSeat;
            })();

            SearchBuyerSeatsResponse.EntityInfo = (function() {

                /**
                 * Properties of an EntityInfo.
                 * @memberof teads.api.SearchBuyerSeatsResponse
                 * @interface IEntityInfo
                 * @property {number} entityId EntityInfo entityId
                 * @property {teads.api.BuyerSeatType} type EntityInfo type
                 * @property {teads.api.SearchBuyerSeatsResponse.IUsersCount} usersCount EntityInfo usersCount
                 */

                /**
                 * Constructs a new EntityInfo.
                 * @memberof teads.api.SearchBuyerSeatsResponse
                 * @classdesc Represents an EntityInfo.
                 * @implements IEntityInfo
                 * @constructor
                 * @param {teads.api.SearchBuyerSeatsResponse.IEntityInfo=} [properties] Properties to set
                 */
                function EntityInfo(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * EntityInfo entityId.
                 * @member {number} entityId
                 * @memberof teads.api.SearchBuyerSeatsResponse.EntityInfo
                 * @instance
                 */
                EntityInfo.prototype.entityId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * EntityInfo type.
                 * @member {teads.api.BuyerSeatType} type
                 * @memberof teads.api.SearchBuyerSeatsResponse.EntityInfo
                 * @instance
                 */
                EntityInfo.prototype.type = 1;

                /**
                 * EntityInfo usersCount.
                 * @member {teads.api.SearchBuyerSeatsResponse.IUsersCount} usersCount
                 * @memberof teads.api.SearchBuyerSeatsResponse.EntityInfo
                 * @instance
                 */
                EntityInfo.prototype.usersCount = null;

                /**
                 * Creates a new EntityInfo instance using the specified properties.
                 * @function create
                 * @memberof teads.api.SearchBuyerSeatsResponse.EntityInfo
                 * @static
                 * @param {teads.api.SearchBuyerSeatsResponse.IEntityInfo=} [properties] Properties to set
                 * @returns {teads.api.SearchBuyerSeatsResponse.EntityInfo} EntityInfo instance
                 */
                EntityInfo.create = function create(properties) {
                    return new EntityInfo(properties);
                };

                /**
                 * Encodes the specified EntityInfo message. Does not implicitly {@link teads.api.SearchBuyerSeatsResponse.EntityInfo.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.SearchBuyerSeatsResponse.EntityInfo
                 * @static
                 * @param {teads.api.SearchBuyerSeatsResponse.IEntityInfo} message EntityInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EntityInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.entityId);
                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);
                    $root.teads.api.SearchBuyerSeatsResponse.UsersCount.encode(message.usersCount, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified EntityInfo message, length delimited. Does not implicitly {@link teads.api.SearchBuyerSeatsResponse.EntityInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.SearchBuyerSeatsResponse.EntityInfo
                 * @static
                 * @param {teads.api.SearchBuyerSeatsResponse.IEntityInfo} message EntityInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EntityInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes an EntityInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.SearchBuyerSeatsResponse.EntityInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.SearchBuyerSeatsResponse.EntityInfo} EntityInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EntityInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.SearchBuyerSeatsResponse.EntityInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.entityId = reader.int64();
                                break;
                            }
                        case 2: {
                                message.type = reader.int32();
                                break;
                            }
                        case 3: {
                                message.usersCount = $root.teads.api.SearchBuyerSeatsResponse.UsersCount.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("entityId"))
                        throw $util.ProtocolError("missing required 'entityId'", { instance: message });
                    if (!message.hasOwnProperty("type"))
                        throw $util.ProtocolError("missing required 'type'", { instance: message });
                    if (!message.hasOwnProperty("usersCount"))
                        throw $util.ProtocolError("missing required 'usersCount'", { instance: message });
                    return message;
                };

                /**
                 * Decodes an EntityInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.SearchBuyerSeatsResponse.EntityInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.SearchBuyerSeatsResponse.EntityInfo} EntityInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EntityInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies an EntityInfo message.
                 * @function verify
                 * @memberof teads.api.SearchBuyerSeatsResponse.EntityInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EntityInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.entityId) && !(message.entityId && $util.isInteger(message.entityId.low) && $util.isInteger(message.entityId.high)))
                        return "entityId: integer|Long expected";
                    switch (message.type) {
                    default:
                        return "type: enum value expected";
                    case 1:
                    case 2:
                        break;
                    }
                    {
                        var error = $root.teads.api.SearchBuyerSeatsResponse.UsersCount.verify(message.usersCount);
                        if (error)
                            return "usersCount." + error;
                    }
                    return null;
                };

                /**
                 * Creates an EntityInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.SearchBuyerSeatsResponse.EntityInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.SearchBuyerSeatsResponse.EntityInfo} EntityInfo
                 */
                EntityInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.SearchBuyerSeatsResponse.EntityInfo)
                        return object;
                    var message = new $root.teads.api.SearchBuyerSeatsResponse.EntityInfo();
                    if (object.entityId != null)
                        if ($util.Long)
                            (message.entityId = $util.Long.fromValue(object.entityId)).unsigned = false;
                        else if (typeof object.entityId === "string")
                            message.entityId = parseInt(object.entityId, 10);
                        else if (typeof object.entityId === "number")
                            message.entityId = object.entityId;
                        else if (typeof object.entityId === "object")
                            message.entityId = new $util.LongBits(object.entityId.low >>> 0, object.entityId.high >>> 0).toNumber();
                    switch (object.type) {
                    default:
                        if (typeof object.type === "number") {
                            message.type = object.type;
                            break;
                        }
                        break;
                    case "BUYER_SEAT_TYPE_ADVERTISER":
                    case 1:
                        message.type = 1;
                        break;
                    case "BUYER_SEAT_TYPE_AGENCY":
                    case 2:
                        message.type = 2;
                        break;
                    }
                    if (object.usersCount != null) {
                        if (typeof object.usersCount !== "object")
                            throw TypeError(".teads.api.SearchBuyerSeatsResponse.EntityInfo.usersCount: object expected");
                        message.usersCount = $root.teads.api.SearchBuyerSeatsResponse.UsersCount.fromObject(object.usersCount);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from an EntityInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.SearchBuyerSeatsResponse.EntityInfo
                 * @static
                 * @param {teads.api.SearchBuyerSeatsResponse.EntityInfo} message EntityInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EntityInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.entityId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.entityId = options.longs === String ? "0" : 0;
                        object.type = options.enums === String ? "BUYER_SEAT_TYPE_ADVERTISER" : 1;
                        object.usersCount = null;
                    }
                    if (message.entityId != null && message.hasOwnProperty("entityId"))
                        if (typeof message.entityId === "number")
                            object.entityId = options.longs === String ? String(message.entityId) : message.entityId;
                        else
                            object.entityId = options.longs === String ? $util.Long.prototype.toString.call(message.entityId) : options.longs === Number ? new $util.LongBits(message.entityId.low >>> 0, message.entityId.high >>> 0).toNumber() : message.entityId;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.teads.api.BuyerSeatType[message.type] === undefined ? message.type : $root.teads.api.BuyerSeatType[message.type] : message.type;
                    if (message.usersCount != null && message.hasOwnProperty("usersCount"))
                        object.usersCount = $root.teads.api.SearchBuyerSeatsResponse.UsersCount.toObject(message.usersCount, options);
                    return object;
                };

                /**
                 * Converts this EntityInfo to JSON.
                 * @function toJSON
                 * @memberof teads.api.SearchBuyerSeatsResponse.EntityInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EntityInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for EntityInfo
                 * @function getTypeUrl
                 * @memberof teads.api.SearchBuyerSeatsResponse.EntityInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EntityInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.SearchBuyerSeatsResponse.EntityInfo";
                };

                return EntityInfo;
            })();

            SearchBuyerSeatsResponse.UsersCount = (function() {

                /**
                 * Properties of a UsersCount.
                 * @memberof teads.api.SearchBuyerSeatsResponse
                 * @interface IUsersCount
                 * @property {number} tamAdmin UsersCount tamAdmin
                 * @property {number} tamReportingAdmin UsersCount tamReportingAdmin
                 * @property {number} tamUser UsersCount tamUser
                 * @property {number} tamReportingUser UsersCount tamReportingUser
                 */

                /**
                 * Constructs a new UsersCount.
                 * @memberof teads.api.SearchBuyerSeatsResponse
                 * @classdesc Represents a UsersCount.
                 * @implements IUsersCount
                 * @constructor
                 * @param {teads.api.SearchBuyerSeatsResponse.IUsersCount=} [properties] Properties to set
                 */
                function UsersCount(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * UsersCount tamAdmin.
                 * @member {number} tamAdmin
                 * @memberof teads.api.SearchBuyerSeatsResponse.UsersCount
                 * @instance
                 */
                UsersCount.prototype.tamAdmin = 0;

                /**
                 * UsersCount tamReportingAdmin.
                 * @member {number} tamReportingAdmin
                 * @memberof teads.api.SearchBuyerSeatsResponse.UsersCount
                 * @instance
                 */
                UsersCount.prototype.tamReportingAdmin = 0;

                /**
                 * UsersCount tamUser.
                 * @member {number} tamUser
                 * @memberof teads.api.SearchBuyerSeatsResponse.UsersCount
                 * @instance
                 */
                UsersCount.prototype.tamUser = 0;

                /**
                 * UsersCount tamReportingUser.
                 * @member {number} tamReportingUser
                 * @memberof teads.api.SearchBuyerSeatsResponse.UsersCount
                 * @instance
                 */
                UsersCount.prototype.tamReportingUser = 0;

                /**
                 * Creates a new UsersCount instance using the specified properties.
                 * @function create
                 * @memberof teads.api.SearchBuyerSeatsResponse.UsersCount
                 * @static
                 * @param {teads.api.SearchBuyerSeatsResponse.IUsersCount=} [properties] Properties to set
                 * @returns {teads.api.SearchBuyerSeatsResponse.UsersCount} UsersCount instance
                 */
                UsersCount.create = function create(properties) {
                    return new UsersCount(properties);
                };

                /**
                 * Encodes the specified UsersCount message. Does not implicitly {@link teads.api.SearchBuyerSeatsResponse.UsersCount.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.SearchBuyerSeatsResponse.UsersCount
                 * @static
                 * @param {teads.api.SearchBuyerSeatsResponse.IUsersCount} message UsersCount message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UsersCount.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.tamAdmin);
                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.tamReportingAdmin);
                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.tamUser);
                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.tamReportingUser);
                    return writer;
                };

                /**
                 * Encodes the specified UsersCount message, length delimited. Does not implicitly {@link teads.api.SearchBuyerSeatsResponse.UsersCount.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.SearchBuyerSeatsResponse.UsersCount
                 * @static
                 * @param {teads.api.SearchBuyerSeatsResponse.IUsersCount} message UsersCount message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UsersCount.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a UsersCount message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.SearchBuyerSeatsResponse.UsersCount
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.SearchBuyerSeatsResponse.UsersCount} UsersCount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UsersCount.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.SearchBuyerSeatsResponse.UsersCount();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.tamAdmin = reader.uint32();
                                break;
                            }
                        case 2: {
                                message.tamReportingAdmin = reader.uint32();
                                break;
                            }
                        case 3: {
                                message.tamUser = reader.uint32();
                                break;
                            }
                        case 4: {
                                message.tamReportingUser = reader.uint32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("tamAdmin"))
                        throw $util.ProtocolError("missing required 'tamAdmin'", { instance: message });
                    if (!message.hasOwnProperty("tamReportingAdmin"))
                        throw $util.ProtocolError("missing required 'tamReportingAdmin'", { instance: message });
                    if (!message.hasOwnProperty("tamUser"))
                        throw $util.ProtocolError("missing required 'tamUser'", { instance: message });
                    if (!message.hasOwnProperty("tamReportingUser"))
                        throw $util.ProtocolError("missing required 'tamReportingUser'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a UsersCount message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.SearchBuyerSeatsResponse.UsersCount
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.SearchBuyerSeatsResponse.UsersCount} UsersCount
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UsersCount.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a UsersCount message.
                 * @function verify
                 * @memberof teads.api.SearchBuyerSeatsResponse.UsersCount
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UsersCount.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.tamAdmin))
                        return "tamAdmin: integer expected";
                    if (!$util.isInteger(message.tamReportingAdmin))
                        return "tamReportingAdmin: integer expected";
                    if (!$util.isInteger(message.tamUser))
                        return "tamUser: integer expected";
                    if (!$util.isInteger(message.tamReportingUser))
                        return "tamReportingUser: integer expected";
                    return null;
                };

                /**
                 * Creates a UsersCount message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.SearchBuyerSeatsResponse.UsersCount
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.SearchBuyerSeatsResponse.UsersCount} UsersCount
                 */
                UsersCount.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.SearchBuyerSeatsResponse.UsersCount)
                        return object;
                    var message = new $root.teads.api.SearchBuyerSeatsResponse.UsersCount();
                    if (object.tamAdmin != null)
                        message.tamAdmin = object.tamAdmin >>> 0;
                    if (object.tamReportingAdmin != null)
                        message.tamReportingAdmin = object.tamReportingAdmin >>> 0;
                    if (object.tamUser != null)
                        message.tamUser = object.tamUser >>> 0;
                    if (object.tamReportingUser != null)
                        message.tamReportingUser = object.tamReportingUser >>> 0;
                    return message;
                };

                /**
                 * Creates a plain object from a UsersCount message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.SearchBuyerSeatsResponse.UsersCount
                 * @static
                 * @param {teads.api.SearchBuyerSeatsResponse.UsersCount} message UsersCount
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UsersCount.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.tamAdmin = 0;
                        object.tamReportingAdmin = 0;
                        object.tamUser = 0;
                        object.tamReportingUser = 0;
                    }
                    if (message.tamAdmin != null && message.hasOwnProperty("tamAdmin"))
                        object.tamAdmin = message.tamAdmin;
                    if (message.tamReportingAdmin != null && message.hasOwnProperty("tamReportingAdmin"))
                        object.tamReportingAdmin = message.tamReportingAdmin;
                    if (message.tamUser != null && message.hasOwnProperty("tamUser"))
                        object.tamUser = message.tamUser;
                    if (message.tamReportingUser != null && message.hasOwnProperty("tamReportingUser"))
                        object.tamReportingUser = message.tamReportingUser;
                    return object;
                };

                /**
                 * Converts this UsersCount to JSON.
                 * @function toJSON
                 * @memberof teads.api.SearchBuyerSeatsResponse.UsersCount
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UsersCount.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for UsersCount
                 * @function getTypeUrl
                 * @memberof teads.api.SearchBuyerSeatsResponse.UsersCount
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UsersCount.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.SearchBuyerSeatsResponse.UsersCount";
                };

                return UsersCount;
            })();

            return SearchBuyerSeatsResponse;
        })();

        api.SearchCampaignsEligibleForManagedServiceMigrationRequest = (function() {

            /**
             * Properties of a SearchCampaignsEligibleForManagedServiceMigrationRequest.
             * @memberof teads.api
             * @interface ISearchCampaignsEligibleForManagedServiceMigrationRequest
             * @property {teads.api.ISecurityContext} securityContext SearchCampaignsEligibleForManagedServiceMigrationRequest securityContext
             * @property {number} officeId SearchCampaignsEligibleForManagedServiceMigrationRequest officeId
             * @property {string|null} [search] SearchCampaignsEligibleForManagedServiceMigrationRequest search
             * @property {teads.api.IPage} page SearchCampaignsEligibleForManagedServiceMigrationRequest page
             */

            /**
             * Constructs a new SearchCampaignsEligibleForManagedServiceMigrationRequest.
             * @memberof teads.api
             * @classdesc Represents a SearchCampaignsEligibleForManagedServiceMigrationRequest.
             * @implements ISearchCampaignsEligibleForManagedServiceMigrationRequest
             * @constructor
             * @param {teads.api.ISearchCampaignsEligibleForManagedServiceMigrationRequest=} [properties] Properties to set
             */
            function SearchCampaignsEligibleForManagedServiceMigrationRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SearchCampaignsEligibleForManagedServiceMigrationRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationRequest
             * @instance
             */
            SearchCampaignsEligibleForManagedServiceMigrationRequest.prototype.securityContext = null;

            /**
             * SearchCampaignsEligibleForManagedServiceMigrationRequest officeId.
             * @member {number} officeId
             * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationRequest
             * @instance
             */
            SearchCampaignsEligibleForManagedServiceMigrationRequest.prototype.officeId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * SearchCampaignsEligibleForManagedServiceMigrationRequest search.
             * @member {string} search
             * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationRequest
             * @instance
             */
            SearchCampaignsEligibleForManagedServiceMigrationRequest.prototype.search = "";

            /**
             * SearchCampaignsEligibleForManagedServiceMigrationRequest page.
             * @member {teads.api.IPage} page
             * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationRequest
             * @instance
             */
            SearchCampaignsEligibleForManagedServiceMigrationRequest.prototype.page = null;

            /**
             * Creates a new SearchCampaignsEligibleForManagedServiceMigrationRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationRequest
             * @static
             * @param {teads.api.ISearchCampaignsEligibleForManagedServiceMigrationRequest=} [properties] Properties to set
             * @returns {teads.api.SearchCampaignsEligibleForManagedServiceMigrationRequest} SearchCampaignsEligibleForManagedServiceMigrationRequest instance
             */
            SearchCampaignsEligibleForManagedServiceMigrationRequest.create = function create(properties) {
                return new SearchCampaignsEligibleForManagedServiceMigrationRequest(properties);
            };

            /**
             * Encodes the specified SearchCampaignsEligibleForManagedServiceMigrationRequest message. Does not implicitly {@link teads.api.SearchCampaignsEligibleForManagedServiceMigrationRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationRequest
             * @static
             * @param {teads.api.ISearchCampaignsEligibleForManagedServiceMigrationRequest} message SearchCampaignsEligibleForManagedServiceMigrationRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SearchCampaignsEligibleForManagedServiceMigrationRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.officeId);
                if (message.search != null && Object.hasOwnProperty.call(message, "search"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.search);
                $root.teads.api.Page.encode(message.page, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified SearchCampaignsEligibleForManagedServiceMigrationRequest message, length delimited. Does not implicitly {@link teads.api.SearchCampaignsEligibleForManagedServiceMigrationRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationRequest
             * @static
             * @param {teads.api.ISearchCampaignsEligibleForManagedServiceMigrationRequest} message SearchCampaignsEligibleForManagedServiceMigrationRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SearchCampaignsEligibleForManagedServiceMigrationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SearchCampaignsEligibleForManagedServiceMigrationRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.SearchCampaignsEligibleForManagedServiceMigrationRequest} SearchCampaignsEligibleForManagedServiceMigrationRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SearchCampaignsEligibleForManagedServiceMigrationRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.SearchCampaignsEligibleForManagedServiceMigrationRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.officeId = reader.int64();
                            break;
                        }
                    case 3: {
                            message.search = reader.string();
                            break;
                        }
                    case 4: {
                            message.page = $root.teads.api.Page.decode(reader, reader.uint32());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("officeId"))
                    throw $util.ProtocolError("missing required 'officeId'", { instance: message });
                if (!message.hasOwnProperty("page"))
                    throw $util.ProtocolError("missing required 'page'", { instance: message });
                return message;
            };

            /**
             * Decodes a SearchCampaignsEligibleForManagedServiceMigrationRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.SearchCampaignsEligibleForManagedServiceMigrationRequest} SearchCampaignsEligibleForManagedServiceMigrationRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SearchCampaignsEligibleForManagedServiceMigrationRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SearchCampaignsEligibleForManagedServiceMigrationRequest message.
             * @function verify
             * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SearchCampaignsEligibleForManagedServiceMigrationRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.officeId) && !(message.officeId && $util.isInteger(message.officeId.low) && $util.isInteger(message.officeId.high)))
                    return "officeId: integer|Long expected";
                if (message.search != null && message.hasOwnProperty("search"))
                    if (!$util.isString(message.search))
                        return "search: string expected";
                {
                    var error = $root.teads.api.Page.verify(message.page);
                    if (error)
                        return "page." + error;
                }
                return null;
            };

            /**
             * Creates a SearchCampaignsEligibleForManagedServiceMigrationRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.SearchCampaignsEligibleForManagedServiceMigrationRequest} SearchCampaignsEligibleForManagedServiceMigrationRequest
             */
            SearchCampaignsEligibleForManagedServiceMigrationRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.SearchCampaignsEligibleForManagedServiceMigrationRequest)
                    return object;
                var message = new $root.teads.api.SearchCampaignsEligibleForManagedServiceMigrationRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.SearchCampaignsEligibleForManagedServiceMigrationRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.officeId != null)
                    if ($util.Long)
                        (message.officeId = $util.Long.fromValue(object.officeId)).unsigned = false;
                    else if (typeof object.officeId === "string")
                        message.officeId = parseInt(object.officeId, 10);
                    else if (typeof object.officeId === "number")
                        message.officeId = object.officeId;
                    else if (typeof object.officeId === "object")
                        message.officeId = new $util.LongBits(object.officeId.low >>> 0, object.officeId.high >>> 0).toNumber();
                if (object.search != null)
                    message.search = String(object.search);
                if (object.page != null) {
                    if (typeof object.page !== "object")
                        throw TypeError(".teads.api.SearchCampaignsEligibleForManagedServiceMigrationRequest.page: object expected");
                    message.page = $root.teads.api.Page.fromObject(object.page);
                }
                return message;
            };

            /**
             * Creates a plain object from a SearchCampaignsEligibleForManagedServiceMigrationRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationRequest
             * @static
             * @param {teads.api.SearchCampaignsEligibleForManagedServiceMigrationRequest} message SearchCampaignsEligibleForManagedServiceMigrationRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SearchCampaignsEligibleForManagedServiceMigrationRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.officeId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.officeId = options.longs === String ? "0" : 0;
                    object.search = "";
                    object.page = null;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.officeId != null && message.hasOwnProperty("officeId"))
                    if (typeof message.officeId === "number")
                        object.officeId = options.longs === String ? String(message.officeId) : message.officeId;
                    else
                        object.officeId = options.longs === String ? $util.Long.prototype.toString.call(message.officeId) : options.longs === Number ? new $util.LongBits(message.officeId.low >>> 0, message.officeId.high >>> 0).toNumber() : message.officeId;
                if (message.search != null && message.hasOwnProperty("search"))
                    object.search = message.search;
                if (message.page != null && message.hasOwnProperty("page"))
                    object.page = $root.teads.api.Page.toObject(message.page, options);
                return object;
            };

            /**
             * Converts this SearchCampaignsEligibleForManagedServiceMigrationRequest to JSON.
             * @function toJSON
             * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SearchCampaignsEligibleForManagedServiceMigrationRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SearchCampaignsEligibleForManagedServiceMigrationRequest
             * @function getTypeUrl
             * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SearchCampaignsEligibleForManagedServiceMigrationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.SearchCampaignsEligibleForManagedServiceMigrationRequest";
            };

            return SearchCampaignsEligibleForManagedServiceMigrationRequest;
        })();

        api.SearchCampaignsEligibleForManagedServiceMigrationResponse = (function() {

            /**
             * Properties of a SearchCampaignsEligibleForManagedServiceMigrationResponse.
             * @memberof teads.api
             * @interface ISearchCampaignsEligibleForManagedServiceMigrationResponse
             * @property {Array.<teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.ICampaignInfo>|null} [campaigns] SearchCampaignsEligibleForManagedServiceMigrationResponse campaigns
             */

            /**
             * Constructs a new SearchCampaignsEligibleForManagedServiceMigrationResponse.
             * @memberof teads.api
             * @classdesc Represents a SearchCampaignsEligibleForManagedServiceMigrationResponse.
             * @implements ISearchCampaignsEligibleForManagedServiceMigrationResponse
             * @constructor
             * @param {teads.api.ISearchCampaignsEligibleForManagedServiceMigrationResponse=} [properties] Properties to set
             */
            function SearchCampaignsEligibleForManagedServiceMigrationResponse(properties) {
                this.campaigns = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SearchCampaignsEligibleForManagedServiceMigrationResponse campaigns.
             * @member {Array.<teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.ICampaignInfo>} campaigns
             * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse
             * @instance
             */
            SearchCampaignsEligibleForManagedServiceMigrationResponse.prototype.campaigns = $util.emptyArray;

            /**
             * Creates a new SearchCampaignsEligibleForManagedServiceMigrationResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse
             * @static
             * @param {teads.api.ISearchCampaignsEligibleForManagedServiceMigrationResponse=} [properties] Properties to set
             * @returns {teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse} SearchCampaignsEligibleForManagedServiceMigrationResponse instance
             */
            SearchCampaignsEligibleForManagedServiceMigrationResponse.create = function create(properties) {
                return new SearchCampaignsEligibleForManagedServiceMigrationResponse(properties);
            };

            /**
             * Encodes the specified SearchCampaignsEligibleForManagedServiceMigrationResponse message. Does not implicitly {@link teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse
             * @static
             * @param {teads.api.ISearchCampaignsEligibleForManagedServiceMigrationResponse} message SearchCampaignsEligibleForManagedServiceMigrationResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SearchCampaignsEligibleForManagedServiceMigrationResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.campaigns != null && message.campaigns.length)
                    for (var i = 0; i < message.campaigns.length; ++i)
                        $root.teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo.encode(message.campaigns[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified SearchCampaignsEligibleForManagedServiceMigrationResponse message, length delimited. Does not implicitly {@link teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse
             * @static
             * @param {teads.api.ISearchCampaignsEligibleForManagedServiceMigrationResponse} message SearchCampaignsEligibleForManagedServiceMigrationResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SearchCampaignsEligibleForManagedServiceMigrationResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SearchCampaignsEligibleForManagedServiceMigrationResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse} SearchCampaignsEligibleForManagedServiceMigrationResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SearchCampaignsEligibleForManagedServiceMigrationResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            if (!(message.campaigns && message.campaigns.length))
                                message.campaigns = [];
                            message.campaigns.push($root.teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a SearchCampaignsEligibleForManagedServiceMigrationResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse} SearchCampaignsEligibleForManagedServiceMigrationResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SearchCampaignsEligibleForManagedServiceMigrationResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SearchCampaignsEligibleForManagedServiceMigrationResponse message.
             * @function verify
             * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SearchCampaignsEligibleForManagedServiceMigrationResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.campaigns != null && message.hasOwnProperty("campaigns")) {
                    if (!Array.isArray(message.campaigns))
                        return "campaigns: array expected";
                    for (var i = 0; i < message.campaigns.length; ++i) {
                        var error = $root.teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo.verify(message.campaigns[i]);
                        if (error)
                            return "campaigns." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a SearchCampaignsEligibleForManagedServiceMigrationResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse} SearchCampaignsEligibleForManagedServiceMigrationResponse
             */
            SearchCampaignsEligibleForManagedServiceMigrationResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse)
                    return object;
                var message = new $root.teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse();
                if (object.campaigns) {
                    if (!Array.isArray(object.campaigns))
                        throw TypeError(".teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.campaigns: array expected");
                    message.campaigns = [];
                    for (var i = 0; i < object.campaigns.length; ++i) {
                        if (typeof object.campaigns[i] !== "object")
                            throw TypeError(".teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.campaigns: object expected");
                        message.campaigns[i] = $root.teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo.fromObject(object.campaigns[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a SearchCampaignsEligibleForManagedServiceMigrationResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse
             * @static
             * @param {teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse} message SearchCampaignsEligibleForManagedServiceMigrationResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SearchCampaignsEligibleForManagedServiceMigrationResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.campaigns = [];
                if (message.campaigns && message.campaigns.length) {
                    object.campaigns = [];
                    for (var j = 0; j < message.campaigns.length; ++j)
                        object.campaigns[j] = $root.teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo.toObject(message.campaigns[j], options);
                }
                return object;
            };

            /**
             * Converts this SearchCampaignsEligibleForManagedServiceMigrationResponse to JSON.
             * @function toJSON
             * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SearchCampaignsEligibleForManagedServiceMigrationResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SearchCampaignsEligibleForManagedServiceMigrationResponse
             * @function getTypeUrl
             * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SearchCampaignsEligibleForManagedServiceMigrationResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse";
            };

            SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo = (function() {

                /**
                 * Properties of a CampaignInfo.
                 * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse
                 * @interface ICampaignInfo
                 * @property {number} id CampaignInfo id
                 * @property {string} name CampaignInfo name
                 * @property {number|null} [ownerId] CampaignInfo ownerId
                 * @property {teads.api.CampaignObjective} objective CampaignInfo objective
                 */

                /**
                 * Constructs a new CampaignInfo.
                 * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse
                 * @classdesc Represents a CampaignInfo.
                 * @implements ICampaignInfo
                 * @constructor
                 * @param {teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.ICampaignInfo=} [properties] Properties to set
                 */
                function CampaignInfo(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * CampaignInfo id.
                 * @member {number} id
                 * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo
                 * @instance
                 */
                CampaignInfo.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * CampaignInfo name.
                 * @member {string} name
                 * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo
                 * @instance
                 */
                CampaignInfo.prototype.name = "";

                /**
                 * CampaignInfo ownerId.
                 * @member {number} ownerId
                 * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo
                 * @instance
                 */
                CampaignInfo.prototype.ownerId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * CampaignInfo objective.
                 * @member {teads.api.CampaignObjective} objective
                 * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo
                 * @instance
                 */
                CampaignInfo.prototype.objective = 0;

                /**
                 * Creates a new CampaignInfo instance using the specified properties.
                 * @function create
                 * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo
                 * @static
                 * @param {teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.ICampaignInfo=} [properties] Properties to set
                 * @returns {teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo} CampaignInfo instance
                 */
                CampaignInfo.create = function create(properties) {
                    return new CampaignInfo(properties);
                };

                /**
                 * Encodes the specified CampaignInfo message. Does not implicitly {@link teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo
                 * @static
                 * @param {teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.ICampaignInfo} message CampaignInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CampaignInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.id);
                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
                    if (message.ownerId != null && Object.hasOwnProperty.call(message, "ownerId"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int64(message.ownerId);
                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.objective);
                    return writer;
                };

                /**
                 * Encodes the specified CampaignInfo message, length delimited. Does not implicitly {@link teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo
                 * @static
                 * @param {teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.ICampaignInfo} message CampaignInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CampaignInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a CampaignInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo} CampaignInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CampaignInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.id = reader.int64();
                                break;
                            }
                        case 2: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.ownerId = reader.int64();
                                break;
                            }
                        case 4: {
                                message.objective = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("id"))
                        throw $util.ProtocolError("missing required 'id'", { instance: message });
                    if (!message.hasOwnProperty("name"))
                        throw $util.ProtocolError("missing required 'name'", { instance: message });
                    if (!message.hasOwnProperty("objective"))
                        throw $util.ProtocolError("missing required 'objective'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a CampaignInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo} CampaignInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CampaignInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a CampaignInfo message.
                 * @function verify
                 * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CampaignInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.id) && !(message.id && $util.isInteger(message.id.low) && $util.isInteger(message.id.high)))
                        return "id: integer|Long expected";
                    if (!$util.isString(message.name))
                        return "name: string expected";
                    if (message.ownerId != null && message.hasOwnProperty("ownerId"))
                        if (!$util.isInteger(message.ownerId) && !(message.ownerId && $util.isInteger(message.ownerId.low) && $util.isInteger(message.ownerId.high)))
                            return "ownerId: integer|Long expected";
                    switch (message.objective) {
                    default:
                        return "objective: enum value expected";
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                        break;
                    }
                    return null;
                };

                /**
                 * Creates a CampaignInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo} CampaignInfo
                 */
                CampaignInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo)
                        return object;
                    var message = new $root.teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo();
                    if (object.id != null)
                        if ($util.Long)
                            (message.id = $util.Long.fromValue(object.id)).unsigned = false;
                        else if (typeof object.id === "string")
                            message.id = parseInt(object.id, 10);
                        else if (typeof object.id === "number")
                            message.id = object.id;
                        else if (typeof object.id === "object")
                            message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.ownerId != null)
                        if ($util.Long)
                            (message.ownerId = $util.Long.fromValue(object.ownerId)).unsigned = false;
                        else if (typeof object.ownerId === "string")
                            message.ownerId = parseInt(object.ownerId, 10);
                        else if (typeof object.ownerId === "number")
                            message.ownerId = object.ownerId;
                        else if (typeof object.ownerId === "object")
                            message.ownerId = new $util.LongBits(object.ownerId.low >>> 0, object.ownerId.high >>> 0).toNumber();
                    switch (object.objective) {
                    default:
                        if (typeof object.objective === "number") {
                            message.objective = object.objective;
                            break;
                        }
                        break;
                    case "CAMPAIGN_OBJECTIVE_BRANDING":
                    case 0:
                        message.objective = 0;
                        break;
                    case "CAMPAIGN_OBJECTIVE_TRAFFIC_ACQUISITION":
                    case 1:
                        message.objective = 1;
                        break;
                    case "CAMPAIGN_OBJECTIVE_SOCIAL":
                    case 2:
                        message.objective = 2;
                        break;
                    case "CAMPAIGN_OBJECTIVE_CONVERSIONS":
                    case 3:
                        message.objective = 3;
                        break;
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a CampaignInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo
                 * @static
                 * @param {teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo} message CampaignInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CampaignInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.id = options.longs === String ? "0" : 0;
                        object.name = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.ownerId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.ownerId = options.longs === String ? "0" : 0;
                        object.objective = options.enums === String ? "CAMPAIGN_OBJECTIVE_BRANDING" : 0;
                    }
                    if (message.id != null && message.hasOwnProperty("id"))
                        if (typeof message.id === "number")
                            object.id = options.longs === String ? String(message.id) : message.id;
                        else
                            object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber() : message.id;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.ownerId != null && message.hasOwnProperty("ownerId"))
                        if (typeof message.ownerId === "number")
                            object.ownerId = options.longs === String ? String(message.ownerId) : message.ownerId;
                        else
                            object.ownerId = options.longs === String ? $util.Long.prototype.toString.call(message.ownerId) : options.longs === Number ? new $util.LongBits(message.ownerId.low >>> 0, message.ownerId.high >>> 0).toNumber() : message.ownerId;
                    if (message.objective != null && message.hasOwnProperty("objective"))
                        object.objective = options.enums === String ? $root.teads.api.CampaignObjective[message.objective] === undefined ? message.objective : $root.teads.api.CampaignObjective[message.objective] : message.objective;
                    return object;
                };

                /**
                 * Converts this CampaignInfo to JSON.
                 * @function toJSON
                 * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CampaignInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for CampaignInfo
                 * @function getTypeUrl
                 * @memberof teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CampaignInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse.CampaignInfo";
                };

                return CampaignInfo;
            })();

            return SearchCampaignsEligibleForManagedServiceMigrationResponse;
        })();

        api.SearchCampaignsRequest = (function() {

            /**
             * Properties of a SearchCampaignsRequest.
             * @memberof teads.api
             * @interface ISearchCampaignsRequest
             * @property {teads.api.ISecurityContext} securityContext SearchCampaignsRequest securityContext
             * @property {number|null} [officeId] SearchCampaignsRequest officeId
             * @property {string|null} [search] SearchCampaignsRequest search
             * @property {teads.api.IPage} page SearchCampaignsRequest page
             * @property {boolean|null} [includeManagedServiceMigratedCampaignsInfo] SearchCampaignsRequest includeManagedServiceMigratedCampaignsInfo
             */

            /**
             * Constructs a new SearchCampaignsRequest.
             * @memberof teads.api
             * @classdesc Represents a SearchCampaignsRequest.
             * @implements ISearchCampaignsRequest
             * @constructor
             * @param {teads.api.ISearchCampaignsRequest=} [properties] Properties to set
             */
            function SearchCampaignsRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SearchCampaignsRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.SearchCampaignsRequest
             * @instance
             */
            SearchCampaignsRequest.prototype.securityContext = null;

            /**
             * SearchCampaignsRequest officeId.
             * @member {number} officeId
             * @memberof teads.api.SearchCampaignsRequest
             * @instance
             */
            SearchCampaignsRequest.prototype.officeId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * SearchCampaignsRequest search.
             * @member {string} search
             * @memberof teads.api.SearchCampaignsRequest
             * @instance
             */
            SearchCampaignsRequest.prototype.search = "";

            /**
             * SearchCampaignsRequest page.
             * @member {teads.api.IPage} page
             * @memberof teads.api.SearchCampaignsRequest
             * @instance
             */
            SearchCampaignsRequest.prototype.page = null;

            /**
             * SearchCampaignsRequest includeManagedServiceMigratedCampaignsInfo.
             * @member {boolean} includeManagedServiceMigratedCampaignsInfo
             * @memberof teads.api.SearchCampaignsRequest
             * @instance
             */
            SearchCampaignsRequest.prototype.includeManagedServiceMigratedCampaignsInfo = false;

            /**
             * Creates a new SearchCampaignsRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.SearchCampaignsRequest
             * @static
             * @param {teads.api.ISearchCampaignsRequest=} [properties] Properties to set
             * @returns {teads.api.SearchCampaignsRequest} SearchCampaignsRequest instance
             */
            SearchCampaignsRequest.create = function create(properties) {
                return new SearchCampaignsRequest(properties);
            };

            /**
             * Encodes the specified SearchCampaignsRequest message. Does not implicitly {@link teads.api.SearchCampaignsRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.SearchCampaignsRequest
             * @static
             * @param {teads.api.ISearchCampaignsRequest} message SearchCampaignsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SearchCampaignsRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                if (message.officeId != null && Object.hasOwnProperty.call(message, "officeId"))
                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.officeId);
                if (message.search != null && Object.hasOwnProperty.call(message, "search"))
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.search);
                $root.teads.api.Page.encode(message.page, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                if (message.includeManagedServiceMigratedCampaignsInfo != null && Object.hasOwnProperty.call(message, "includeManagedServiceMigratedCampaignsInfo"))
                    writer.uint32(/* id 5, wireType 0 =*/40).bool(message.includeManagedServiceMigratedCampaignsInfo);
                return writer;
            };

            /**
             * Encodes the specified SearchCampaignsRequest message, length delimited. Does not implicitly {@link teads.api.SearchCampaignsRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.SearchCampaignsRequest
             * @static
             * @param {teads.api.ISearchCampaignsRequest} message SearchCampaignsRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SearchCampaignsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SearchCampaignsRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.SearchCampaignsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.SearchCampaignsRequest} SearchCampaignsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SearchCampaignsRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.SearchCampaignsRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.officeId = reader.int64();
                            break;
                        }
                    case 3: {
                            message.search = reader.string();
                            break;
                        }
                    case 4: {
                            message.page = $root.teads.api.Page.decode(reader, reader.uint32());
                            break;
                        }
                    case 5: {
                            message.includeManagedServiceMigratedCampaignsInfo = reader.bool();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("page"))
                    throw $util.ProtocolError("missing required 'page'", { instance: message });
                return message;
            };

            /**
             * Decodes a SearchCampaignsRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.SearchCampaignsRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.SearchCampaignsRequest} SearchCampaignsRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SearchCampaignsRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SearchCampaignsRequest message.
             * @function verify
             * @memberof teads.api.SearchCampaignsRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SearchCampaignsRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (message.officeId != null && message.hasOwnProperty("officeId"))
                    if (!$util.isInteger(message.officeId) && !(message.officeId && $util.isInteger(message.officeId.low) && $util.isInteger(message.officeId.high)))
                        return "officeId: integer|Long expected";
                if (message.search != null && message.hasOwnProperty("search"))
                    if (!$util.isString(message.search))
                        return "search: string expected";
                {
                    var error = $root.teads.api.Page.verify(message.page);
                    if (error)
                        return "page." + error;
                }
                if (message.includeManagedServiceMigratedCampaignsInfo != null && message.hasOwnProperty("includeManagedServiceMigratedCampaignsInfo"))
                    if (typeof message.includeManagedServiceMigratedCampaignsInfo !== "boolean")
                        return "includeManagedServiceMigratedCampaignsInfo: boolean expected";
                return null;
            };

            /**
             * Creates a SearchCampaignsRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.SearchCampaignsRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.SearchCampaignsRequest} SearchCampaignsRequest
             */
            SearchCampaignsRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.SearchCampaignsRequest)
                    return object;
                var message = new $root.teads.api.SearchCampaignsRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.SearchCampaignsRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.officeId != null)
                    if ($util.Long)
                        (message.officeId = $util.Long.fromValue(object.officeId)).unsigned = false;
                    else if (typeof object.officeId === "string")
                        message.officeId = parseInt(object.officeId, 10);
                    else if (typeof object.officeId === "number")
                        message.officeId = object.officeId;
                    else if (typeof object.officeId === "object")
                        message.officeId = new $util.LongBits(object.officeId.low >>> 0, object.officeId.high >>> 0).toNumber();
                if (object.search != null)
                    message.search = String(object.search);
                if (object.page != null) {
                    if (typeof object.page !== "object")
                        throw TypeError(".teads.api.SearchCampaignsRequest.page: object expected");
                    message.page = $root.teads.api.Page.fromObject(object.page);
                }
                if (object.includeManagedServiceMigratedCampaignsInfo != null)
                    message.includeManagedServiceMigratedCampaignsInfo = Boolean(object.includeManagedServiceMigratedCampaignsInfo);
                return message;
            };

            /**
             * Creates a plain object from a SearchCampaignsRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.SearchCampaignsRequest
             * @static
             * @param {teads.api.SearchCampaignsRequest} message SearchCampaignsRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SearchCampaignsRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.officeId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.officeId = options.longs === String ? "0" : 0;
                    object.search = "";
                    object.page = null;
                    object.includeManagedServiceMigratedCampaignsInfo = false;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.officeId != null && message.hasOwnProperty("officeId"))
                    if (typeof message.officeId === "number")
                        object.officeId = options.longs === String ? String(message.officeId) : message.officeId;
                    else
                        object.officeId = options.longs === String ? $util.Long.prototype.toString.call(message.officeId) : options.longs === Number ? new $util.LongBits(message.officeId.low >>> 0, message.officeId.high >>> 0).toNumber() : message.officeId;
                if (message.search != null && message.hasOwnProperty("search"))
                    object.search = message.search;
                if (message.page != null && message.hasOwnProperty("page"))
                    object.page = $root.teads.api.Page.toObject(message.page, options);
                if (message.includeManagedServiceMigratedCampaignsInfo != null && message.hasOwnProperty("includeManagedServiceMigratedCampaignsInfo"))
                    object.includeManagedServiceMigratedCampaignsInfo = message.includeManagedServiceMigratedCampaignsInfo;
                return object;
            };

            /**
             * Converts this SearchCampaignsRequest to JSON.
             * @function toJSON
             * @memberof teads.api.SearchCampaignsRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SearchCampaignsRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SearchCampaignsRequest
             * @function getTypeUrl
             * @memberof teads.api.SearchCampaignsRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SearchCampaignsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.SearchCampaignsRequest";
            };

            return SearchCampaignsRequest;
        })();

        api.SearchCampaignsResponse = (function() {

            /**
             * Properties of a SearchCampaignsResponse.
             * @memberof teads.api
             * @interface ISearchCampaignsResponse
             * @property {Array.<teads.api.SearchCampaignsResponse.ICampaignInfo>|null} [campaigns] SearchCampaignsResponse campaigns
             */

            /**
             * Constructs a new SearchCampaignsResponse.
             * @memberof teads.api
             * @classdesc Represents a SearchCampaignsResponse.
             * @implements ISearchCampaignsResponse
             * @constructor
             * @param {teads.api.ISearchCampaignsResponse=} [properties] Properties to set
             */
            function SearchCampaignsResponse(properties) {
                this.campaigns = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SearchCampaignsResponse campaigns.
             * @member {Array.<teads.api.SearchCampaignsResponse.ICampaignInfo>} campaigns
             * @memberof teads.api.SearchCampaignsResponse
             * @instance
             */
            SearchCampaignsResponse.prototype.campaigns = $util.emptyArray;

            /**
             * Creates a new SearchCampaignsResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.SearchCampaignsResponse
             * @static
             * @param {teads.api.ISearchCampaignsResponse=} [properties] Properties to set
             * @returns {teads.api.SearchCampaignsResponse} SearchCampaignsResponse instance
             */
            SearchCampaignsResponse.create = function create(properties) {
                return new SearchCampaignsResponse(properties);
            };

            /**
             * Encodes the specified SearchCampaignsResponse message. Does not implicitly {@link teads.api.SearchCampaignsResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.SearchCampaignsResponse
             * @static
             * @param {teads.api.ISearchCampaignsResponse} message SearchCampaignsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SearchCampaignsResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.campaigns != null && message.campaigns.length)
                    for (var i = 0; i < message.campaigns.length; ++i)
                        $root.teads.api.SearchCampaignsResponse.CampaignInfo.encode(message.campaigns[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                return writer;
            };

            /**
             * Encodes the specified SearchCampaignsResponse message, length delimited. Does not implicitly {@link teads.api.SearchCampaignsResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.SearchCampaignsResponse
             * @static
             * @param {teads.api.ISearchCampaignsResponse} message SearchCampaignsResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SearchCampaignsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SearchCampaignsResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.SearchCampaignsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.SearchCampaignsResponse} SearchCampaignsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SearchCampaignsResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.SearchCampaignsResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            if (!(message.campaigns && message.campaigns.length))
                                message.campaigns = [];
                            message.campaigns.push($root.teads.api.SearchCampaignsResponse.CampaignInfo.decode(reader, reader.uint32()));
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a SearchCampaignsResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.SearchCampaignsResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.SearchCampaignsResponse} SearchCampaignsResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SearchCampaignsResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SearchCampaignsResponse message.
             * @function verify
             * @memberof teads.api.SearchCampaignsResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SearchCampaignsResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.campaigns != null && message.hasOwnProperty("campaigns")) {
                    if (!Array.isArray(message.campaigns))
                        return "campaigns: array expected";
                    for (var i = 0; i < message.campaigns.length; ++i) {
                        var error = $root.teads.api.SearchCampaignsResponse.CampaignInfo.verify(message.campaigns[i]);
                        if (error)
                            return "campaigns." + error;
                    }
                }
                return null;
            };

            /**
             * Creates a SearchCampaignsResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.SearchCampaignsResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.SearchCampaignsResponse} SearchCampaignsResponse
             */
            SearchCampaignsResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.SearchCampaignsResponse)
                    return object;
                var message = new $root.teads.api.SearchCampaignsResponse();
                if (object.campaigns) {
                    if (!Array.isArray(object.campaigns))
                        throw TypeError(".teads.api.SearchCampaignsResponse.campaigns: array expected");
                    message.campaigns = [];
                    for (var i = 0; i < object.campaigns.length; ++i) {
                        if (typeof object.campaigns[i] !== "object")
                            throw TypeError(".teads.api.SearchCampaignsResponse.campaigns: object expected");
                        message.campaigns[i] = $root.teads.api.SearchCampaignsResponse.CampaignInfo.fromObject(object.campaigns[i]);
                    }
                }
                return message;
            };

            /**
             * Creates a plain object from a SearchCampaignsResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.SearchCampaignsResponse
             * @static
             * @param {teads.api.SearchCampaignsResponse} message SearchCampaignsResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SearchCampaignsResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.campaigns = [];
                if (message.campaigns && message.campaigns.length) {
                    object.campaigns = [];
                    for (var j = 0; j < message.campaigns.length; ++j)
                        object.campaigns[j] = $root.teads.api.SearchCampaignsResponse.CampaignInfo.toObject(message.campaigns[j], options);
                }
                return object;
            };

            /**
             * Converts this SearchCampaignsResponse to JSON.
             * @function toJSON
             * @memberof teads.api.SearchCampaignsResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SearchCampaignsResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SearchCampaignsResponse
             * @function getTypeUrl
             * @memberof teads.api.SearchCampaignsResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SearchCampaignsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.SearchCampaignsResponse";
            };

            SearchCampaignsResponse.CampaignInfo = (function() {

                /**
                 * Properties of a CampaignInfo.
                 * @memberof teads.api.SearchCampaignsResponse
                 * @interface ICampaignInfo
                 * @property {number} id CampaignInfo id
                 * @property {number} officeId CampaignInfo officeId
                 * @property {string} name CampaignInfo name
                 * @property {teads.api.SearchCampaignsResponse.CampaignInfo.IMigrationInfo|null} [migrationInfo] CampaignInfo migrationInfo
                 */

                /**
                 * Constructs a new CampaignInfo.
                 * @memberof teads.api.SearchCampaignsResponse
                 * @classdesc Represents a CampaignInfo.
                 * @implements ICampaignInfo
                 * @constructor
                 * @param {teads.api.SearchCampaignsResponse.ICampaignInfo=} [properties] Properties to set
                 */
                function CampaignInfo(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }

                /**
                 * CampaignInfo id.
                 * @member {number} id
                 * @memberof teads.api.SearchCampaignsResponse.CampaignInfo
                 * @instance
                 */
                CampaignInfo.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * CampaignInfo officeId.
                 * @member {number} officeId
                 * @memberof teads.api.SearchCampaignsResponse.CampaignInfo
                 * @instance
                 */
                CampaignInfo.prototype.officeId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                /**
                 * CampaignInfo name.
                 * @member {string} name
                 * @memberof teads.api.SearchCampaignsResponse.CampaignInfo
                 * @instance
                 */
                CampaignInfo.prototype.name = "";

                /**
                 * CampaignInfo migrationInfo.
                 * @member {teads.api.SearchCampaignsResponse.CampaignInfo.IMigrationInfo|null|undefined} migrationInfo
                 * @memberof teads.api.SearchCampaignsResponse.CampaignInfo
                 * @instance
                 */
                CampaignInfo.prototype.migrationInfo = null;

                /**
                 * Creates a new CampaignInfo instance using the specified properties.
                 * @function create
                 * @memberof teads.api.SearchCampaignsResponse.CampaignInfo
                 * @static
                 * @param {teads.api.SearchCampaignsResponse.ICampaignInfo=} [properties] Properties to set
                 * @returns {teads.api.SearchCampaignsResponse.CampaignInfo} CampaignInfo instance
                 */
                CampaignInfo.create = function create(properties) {
                    return new CampaignInfo(properties);
                };

                /**
                 * Encodes the specified CampaignInfo message. Does not implicitly {@link teads.api.SearchCampaignsResponse.CampaignInfo.verify|verify} messages.
                 * @function encode
                 * @memberof teads.api.SearchCampaignsResponse.CampaignInfo
                 * @static
                 * @param {teads.api.SearchCampaignsResponse.ICampaignInfo} message CampaignInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CampaignInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.id);
                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.officeId);
                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                    if (message.migrationInfo != null && Object.hasOwnProperty.call(message, "migrationInfo"))
                        $root.teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo.encode(message.migrationInfo, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    return writer;
                };

                /**
                 * Encodes the specified CampaignInfo message, length delimited. Does not implicitly {@link teads.api.SearchCampaignsResponse.CampaignInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof teads.api.SearchCampaignsResponse.CampaignInfo
                 * @static
                 * @param {teads.api.SearchCampaignsResponse.ICampaignInfo} message CampaignInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CampaignInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };

                /**
                 * Decodes a CampaignInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof teads.api.SearchCampaignsResponse.CampaignInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {teads.api.SearchCampaignsResponse.CampaignInfo} CampaignInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CampaignInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.SearchCampaignsResponse.CampaignInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.id = reader.int64();
                                break;
                            }
                        case 2: {
                                message.officeId = reader.int64();
                                break;
                            }
                        case 3: {
                                message.name = reader.string();
                                break;
                            }
                        case 4: {
                                message.migrationInfo = $root.teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    if (!message.hasOwnProperty("id"))
                        throw $util.ProtocolError("missing required 'id'", { instance: message });
                    if (!message.hasOwnProperty("officeId"))
                        throw $util.ProtocolError("missing required 'officeId'", { instance: message });
                    if (!message.hasOwnProperty("name"))
                        throw $util.ProtocolError("missing required 'name'", { instance: message });
                    return message;
                };

                /**
                 * Decodes a CampaignInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof teads.api.SearchCampaignsResponse.CampaignInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {teads.api.SearchCampaignsResponse.CampaignInfo} CampaignInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CampaignInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };

                /**
                 * Verifies a CampaignInfo message.
                 * @function verify
                 * @memberof teads.api.SearchCampaignsResponse.CampaignInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CampaignInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (!$util.isInteger(message.id) && !(message.id && $util.isInteger(message.id.low) && $util.isInteger(message.id.high)))
                        return "id: integer|Long expected";
                    if (!$util.isInteger(message.officeId) && !(message.officeId && $util.isInteger(message.officeId.low) && $util.isInteger(message.officeId.high)))
                        return "officeId: integer|Long expected";
                    if (!$util.isString(message.name))
                        return "name: string expected";
                    if (message.migrationInfo != null && message.hasOwnProperty("migrationInfo")) {
                        var error = $root.teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo.verify(message.migrationInfo);
                        if (error)
                            return "migrationInfo." + error;
                    }
                    return null;
                };

                /**
                 * Creates a CampaignInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof teads.api.SearchCampaignsResponse.CampaignInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {teads.api.SearchCampaignsResponse.CampaignInfo} CampaignInfo
                 */
                CampaignInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.teads.api.SearchCampaignsResponse.CampaignInfo)
                        return object;
                    var message = new $root.teads.api.SearchCampaignsResponse.CampaignInfo();
                    if (object.id != null)
                        if ($util.Long)
                            (message.id = $util.Long.fromValue(object.id)).unsigned = false;
                        else if (typeof object.id === "string")
                            message.id = parseInt(object.id, 10);
                        else if (typeof object.id === "number")
                            message.id = object.id;
                        else if (typeof object.id === "object")
                            message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber();
                    if (object.officeId != null)
                        if ($util.Long)
                            (message.officeId = $util.Long.fromValue(object.officeId)).unsigned = false;
                        else if (typeof object.officeId === "string")
                            message.officeId = parseInt(object.officeId, 10);
                        else if (typeof object.officeId === "number")
                            message.officeId = object.officeId;
                        else if (typeof object.officeId === "object")
                            message.officeId = new $util.LongBits(object.officeId.low >>> 0, object.officeId.high >>> 0).toNumber();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.migrationInfo != null) {
                        if (typeof object.migrationInfo !== "object")
                            throw TypeError(".teads.api.SearchCampaignsResponse.CampaignInfo.migrationInfo: object expected");
                        message.migrationInfo = $root.teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo.fromObject(object.migrationInfo);
                    }
                    return message;
                };

                /**
                 * Creates a plain object from a CampaignInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof teads.api.SearchCampaignsResponse.CampaignInfo
                 * @static
                 * @param {teads.api.SearchCampaignsResponse.CampaignInfo} message CampaignInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CampaignInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.id = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.officeId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.officeId = options.longs === String ? "0" : 0;
                        object.name = "";
                        object.migrationInfo = null;
                    }
                    if (message.id != null && message.hasOwnProperty("id"))
                        if (typeof message.id === "number")
                            object.id = options.longs === String ? String(message.id) : message.id;
                        else
                            object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber() : message.id;
                    if (message.officeId != null && message.hasOwnProperty("officeId"))
                        if (typeof message.officeId === "number")
                            object.officeId = options.longs === String ? String(message.officeId) : message.officeId;
                        else
                            object.officeId = options.longs === String ? $util.Long.prototype.toString.call(message.officeId) : options.longs === Number ? new $util.LongBits(message.officeId.low >>> 0, message.officeId.high >>> 0).toNumber() : message.officeId;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.migrationInfo != null && message.hasOwnProperty("migrationInfo"))
                        object.migrationInfo = $root.teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo.toObject(message.migrationInfo, options);
                    return object;
                };

                /**
                 * Converts this CampaignInfo to JSON.
                 * @function toJSON
                 * @memberof teads.api.SearchCampaignsResponse.CampaignInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CampaignInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };

                /**
                 * Gets the default type url for CampaignInfo
                 * @function getTypeUrl
                 * @memberof teads.api.SearchCampaignsResponse.CampaignInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CampaignInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/teads.api.SearchCampaignsResponse.CampaignInfo";
                };

                CampaignInfo.MigrationInfo = (function() {

                    /**
                     * Properties of a MigrationInfo.
                     * @memberof teads.api.SearchCampaignsResponse.CampaignInfo
                     * @interface IMigrationInfo
                     * @property {string} userEmail MigrationInfo userEmail
                     * @property {teads.api.CampaignMigrationReason} reason MigrationInfo reason
                     * @property {string} details MigrationInfo details
                     * @property {google.protobuf.ITimestamp} migratedAt MigrationInfo migratedAt
                     */

                    /**
                     * Constructs a new MigrationInfo.
                     * @memberof teads.api.SearchCampaignsResponse.CampaignInfo
                     * @classdesc Represents a MigrationInfo.
                     * @implements IMigrationInfo
                     * @constructor
                     * @param {teads.api.SearchCampaignsResponse.CampaignInfo.IMigrationInfo=} [properties] Properties to set
                     */
                    function MigrationInfo(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }

                    /**
                     * MigrationInfo userEmail.
                     * @member {string} userEmail
                     * @memberof teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo
                     * @instance
                     */
                    MigrationInfo.prototype.userEmail = "";

                    /**
                     * MigrationInfo reason.
                     * @member {teads.api.CampaignMigrationReason} reason
                     * @memberof teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo
                     * @instance
                     */
                    MigrationInfo.prototype.reason = 0;

                    /**
                     * MigrationInfo details.
                     * @member {string} details
                     * @memberof teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo
                     * @instance
                     */
                    MigrationInfo.prototype.details = "";

                    /**
                     * MigrationInfo migratedAt.
                     * @member {google.protobuf.ITimestamp} migratedAt
                     * @memberof teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo
                     * @instance
                     */
                    MigrationInfo.prototype.migratedAt = null;

                    /**
                     * Creates a new MigrationInfo instance using the specified properties.
                     * @function create
                     * @memberof teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo
                     * @static
                     * @param {teads.api.SearchCampaignsResponse.CampaignInfo.IMigrationInfo=} [properties] Properties to set
                     * @returns {teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo} MigrationInfo instance
                     */
                    MigrationInfo.create = function create(properties) {
                        return new MigrationInfo(properties);
                    };

                    /**
                     * Encodes the specified MigrationInfo message. Does not implicitly {@link teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo.verify|verify} messages.
                     * @function encode
                     * @memberof teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo
                     * @static
                     * @param {teads.api.SearchCampaignsResponse.CampaignInfo.IMigrationInfo} message MigrationInfo message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MigrationInfo.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.userEmail);
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.reason);
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.details);
                        $root.google.protobuf.Timestamp.encode(message.migratedAt, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        return writer;
                    };

                    /**
                     * Encodes the specified MigrationInfo message, length delimited. Does not implicitly {@link teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo
                     * @static
                     * @param {teads.api.SearchCampaignsResponse.CampaignInfo.IMigrationInfo} message MigrationInfo message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MigrationInfo.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };

                    /**
                     * Decodes a MigrationInfo message from the specified reader or buffer.
                     * @function decode
                     * @memberof teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo} MigrationInfo
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MigrationInfo.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.userEmail = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.reason = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.details = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.migratedAt = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("userEmail"))
                            throw $util.ProtocolError("missing required 'userEmail'", { instance: message });
                        if (!message.hasOwnProperty("reason"))
                            throw $util.ProtocolError("missing required 'reason'", { instance: message });
                        if (!message.hasOwnProperty("details"))
                            throw $util.ProtocolError("missing required 'details'", { instance: message });
                        if (!message.hasOwnProperty("migratedAt"))
                            throw $util.ProtocolError("missing required 'migratedAt'", { instance: message });
                        return message;
                    };

                    /**
                     * Decodes a MigrationInfo message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo} MigrationInfo
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MigrationInfo.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };

                    /**
                     * Verifies a MigrationInfo message.
                     * @function verify
                     * @memberof teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    MigrationInfo.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.userEmail))
                            return "userEmail: string expected";
                        switch (message.reason) {
                        default:
                            return "reason: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 23:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                            break;
                        }
                        if (!$util.isString(message.details))
                            return "details: string expected";
                        {
                            var error = $root.google.protobuf.Timestamp.verify(message.migratedAt);
                            if (error)
                                return "migratedAt." + error;
                        }
                        return null;
                    };

                    /**
                     * Creates a MigrationInfo message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo} MigrationInfo
                     */
                    MigrationInfo.fromObject = function fromObject(object) {
                        if (object instanceof $root.teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo)
                            return object;
                        var message = new $root.teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo();
                        if (object.userEmail != null)
                            message.userEmail = String(object.userEmail);
                        switch (object.reason) {
                        default:
                            if (typeof object.reason === "number") {
                                message.reason = object.reason;
                                break;
                            }
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_TARGETING_NOT_AVAILABLE":
                        case 0:
                            message.reason = 0;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_AUCTION_TYPE_NOT_AVAILABLE":
                        case 1:
                            message.reason = 1;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_BILLING_EVENT_NOT_AVAILABLE":
                        case 2:
                            message.reason = 2;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_PLAYER_MODE_NOT_AVAILABLE":
                        case 3:
                            message.reason = 3;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_OTHER":
                        case 5:
                            message.reason = 5;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_IAS_PREBID":
                        case 6:
                            message.reason = 6;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_MOAT_100_PERCENT":
                        case 7:
                            message.reason = 7;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_RETARGETING_SEGMENTS":
                        case 8:
                            message.reason = 8;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_OFFICE_PACK":
                        case 9:
                            message.reason = 9;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_FORMAT_POSITION":
                        case 10:
                            message.reason = 10;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_CUSTOM_BRAND_SAFETY":
                        case 11:
                            message.reason = 11;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_CUSTOM_AUDIENCE":
                        case 12:
                            message.reason = 12;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_TAM_ISSUE":
                        case 13:
                            message.reason = 13;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_ALTICE_DATA_SEGMENTS":
                        case 14:
                            message.reason = 14;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_CREATIVE_STUDIO_UNIT":
                        case 15:
                            message.reason = 15;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_CUSTOM_BILLING_EVENT":
                        case 16:
                            message.reason = 16;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_PLAYER_MODE":
                        case 17:
                            message.reason = 17;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_ADDED_VALUE":
                        case 18:
                            message.reason = 18;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_REMARKETING_ON_CREATIVE_EVENT":
                        case 19:
                            message.reason = 19;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_LOOKALIKE_SEGMENTS":
                        case 20:
                            message.reason = 20;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_GEO_POSTAL_CODES":
                        case 21:
                            message.reason = 21;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_CARRIER_PROVIDER":
                        case 22:
                            message.reason = 22;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_AUDIENCES_STANDARD_TO_ACCURACY":
                        case 23:
                            message.reason = 23;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_CREATIVE_HOURLY_FLIGHTING":
                        case 24:
                            message.reason = 24;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_INNOVATION_TEST":
                        case 25:
                            message.reason = 25;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_NOT_SUPPORTED_TRAFFIC_ACQUISITION_CREATIVE":
                        case 26:
                            message.reason = 26;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_TRAFFIC_ACQUISITION_REACHCAST":
                        case 27:
                            message.reason = 27;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_CAMPAIGN_DATE_TO_THE_FUTURE":
                        case 28:
                            message.reason = 28;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_CAMPAIGN_TIMEZONE":
                        case 29:
                            message.reason = 29;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_CTV_INSTREAM_SUPPLY_TARGETING":
                        case 30:
                            message.reason = 30;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_GUARANTEED_SELF_SERVE_CAMPAIGN":
                        case 31:
                            message.reason = 31;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_PLAYER_VIEWABILITY":
                        case 32:
                            message.reason = 32;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_TRACKING_PIXEL_ON_CLICK_EVENT":
                        case 33:
                            message.reason = 33;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_VIRTUAL_PRICE_FOR_MANAGED_CAMPAIGN":
                        case 34:
                            message.reason = 34;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_HOURLY_FLIGHTING":
                        case 35:
                            message.reason = 35;
                            break;
                        case "CAMPAIGN_MIGRATION_REASON_ATTENTION_LUMEN_NO_SAMPLING":
                        case 36:
                            message.reason = 36;
                            break;
                        }
                        if (object.details != null)
                            message.details = String(object.details);
                        if (object.migratedAt != null) {
                            if (typeof object.migratedAt !== "object")
                                throw TypeError(".teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo.migratedAt: object expected");
                            message.migratedAt = $root.google.protobuf.Timestamp.fromObject(object.migratedAt);
                        }
                        return message;
                    };

                    /**
                     * Creates a plain object from a MigrationInfo message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo
                     * @static
                     * @param {teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo} message MigrationInfo
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    MigrationInfo.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.userEmail = "";
                            object.reason = options.enums === String ? "CAMPAIGN_MIGRATION_REASON_TARGETING_NOT_AVAILABLE" : 0;
                            object.details = "";
                            object.migratedAt = null;
                        }
                        if (message.userEmail != null && message.hasOwnProperty("userEmail"))
                            object.userEmail = message.userEmail;
                        if (message.reason != null && message.hasOwnProperty("reason"))
                            object.reason = options.enums === String ? $root.teads.api.CampaignMigrationReason[message.reason] === undefined ? message.reason : $root.teads.api.CampaignMigrationReason[message.reason] : message.reason;
                        if (message.details != null && message.hasOwnProperty("details"))
                            object.details = message.details;
                        if (message.migratedAt != null && message.hasOwnProperty("migratedAt"))
                            object.migratedAt = $root.google.protobuf.Timestamp.toObject(message.migratedAt, options);
                        return object;
                    };

                    /**
                     * Converts this MigrationInfo to JSON.
                     * @function toJSON
                     * @memberof teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    MigrationInfo.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };

                    /**
                     * Gets the default type url for MigrationInfo
                     * @function getTypeUrl
                     * @memberof teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    MigrationInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/teads.api.SearchCampaignsResponse.CampaignInfo.MigrationInfo";
                    };

                    return MigrationInfo;
                })();

                return CampaignInfo;
            })();

            return SearchCampaignsResponse;
        })();

        api.SecurityContext = (function() {

            /**
             * Properties of a SecurityContext.
             * @memberof teads.api
             * @interface ISecurityContext
             * @property {number} profileId SecurityContext profileId
             * @property {number} entityId SecurityContext entityId
             * @property {number|null} [baseProfileId] SecurityContext baseProfileId
             */

            /**
             * Constructs a new SecurityContext.
             * @memberof teads.api
             * @classdesc Represents a SecurityContext.
             * @implements ISecurityContext
             * @constructor
             * @param {teads.api.ISecurityContext=} [properties] Properties to set
             */
            function SecurityContext(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SecurityContext profileId.
             * @member {number} profileId
             * @memberof teads.api.SecurityContext
             * @instance
             */
            SecurityContext.prototype.profileId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * SecurityContext entityId.
             * @member {number} entityId
             * @memberof teads.api.SecurityContext
             * @instance
             */
            SecurityContext.prototype.entityId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * SecurityContext baseProfileId.
             * @member {number} baseProfileId
             * @memberof teads.api.SecurityContext
             * @instance
             */
            SecurityContext.prototype.baseProfileId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new SecurityContext instance using the specified properties.
             * @function create
             * @memberof teads.api.SecurityContext
             * @static
             * @param {teads.api.ISecurityContext=} [properties] Properties to set
             * @returns {teads.api.SecurityContext} SecurityContext instance
             */
            SecurityContext.create = function create(properties) {
                return new SecurityContext(properties);
            };

            /**
             * Encodes the specified SecurityContext message. Does not implicitly {@link teads.api.SecurityContext.verify|verify} messages.
             * @function encode
             * @memberof teads.api.SecurityContext
             * @static
             * @param {teads.api.ISecurityContext} message SecurityContext message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SecurityContext.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 4, wireType 0 =*/32).int64(message.profileId);
                writer.uint32(/* id 5, wireType 0 =*/40).int64(message.entityId);
                if (message.baseProfileId != null && Object.hasOwnProperty.call(message, "baseProfileId"))
                    writer.uint32(/* id 6, wireType 0 =*/48).int64(message.baseProfileId);
                return writer;
            };

            /**
             * Encodes the specified SecurityContext message, length delimited. Does not implicitly {@link teads.api.SecurityContext.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.SecurityContext
             * @static
             * @param {teads.api.ISecurityContext} message SecurityContext message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SecurityContext.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SecurityContext message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.SecurityContext
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.SecurityContext} SecurityContext
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SecurityContext.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.SecurityContext();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 4: {
                            message.profileId = reader.int64();
                            break;
                        }
                    case 5: {
                            message.entityId = reader.int64();
                            break;
                        }
                    case 6: {
                            message.baseProfileId = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("profileId"))
                    throw $util.ProtocolError("missing required 'profileId'", { instance: message });
                if (!message.hasOwnProperty("entityId"))
                    throw $util.ProtocolError("missing required 'entityId'", { instance: message });
                return message;
            };

            /**
             * Decodes a SecurityContext message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.SecurityContext
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.SecurityContext} SecurityContext
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SecurityContext.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SecurityContext message.
             * @function verify
             * @memberof teads.api.SecurityContext
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SecurityContext.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.profileId) && !(message.profileId && $util.isInteger(message.profileId.low) && $util.isInteger(message.profileId.high)))
                    return "profileId: integer|Long expected";
                if (!$util.isInteger(message.entityId) && !(message.entityId && $util.isInteger(message.entityId.low) && $util.isInteger(message.entityId.high)))
                    return "entityId: integer|Long expected";
                if (message.baseProfileId != null && message.hasOwnProperty("baseProfileId"))
                    if (!$util.isInteger(message.baseProfileId) && !(message.baseProfileId && $util.isInteger(message.baseProfileId.low) && $util.isInteger(message.baseProfileId.high)))
                        return "baseProfileId: integer|Long expected";
                return null;
            };

            /**
             * Creates a SecurityContext message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.SecurityContext
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.SecurityContext} SecurityContext
             */
            SecurityContext.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.SecurityContext)
                    return object;
                var message = new $root.teads.api.SecurityContext();
                if (object.profileId != null)
                    if ($util.Long)
                        (message.profileId = $util.Long.fromValue(object.profileId)).unsigned = false;
                    else if (typeof object.profileId === "string")
                        message.profileId = parseInt(object.profileId, 10);
                    else if (typeof object.profileId === "number")
                        message.profileId = object.profileId;
                    else if (typeof object.profileId === "object")
                        message.profileId = new $util.LongBits(object.profileId.low >>> 0, object.profileId.high >>> 0).toNumber();
                if (object.entityId != null)
                    if ($util.Long)
                        (message.entityId = $util.Long.fromValue(object.entityId)).unsigned = false;
                    else if (typeof object.entityId === "string")
                        message.entityId = parseInt(object.entityId, 10);
                    else if (typeof object.entityId === "number")
                        message.entityId = object.entityId;
                    else if (typeof object.entityId === "object")
                        message.entityId = new $util.LongBits(object.entityId.low >>> 0, object.entityId.high >>> 0).toNumber();
                if (object.baseProfileId != null)
                    if ($util.Long)
                        (message.baseProfileId = $util.Long.fromValue(object.baseProfileId)).unsigned = false;
                    else if (typeof object.baseProfileId === "string")
                        message.baseProfileId = parseInt(object.baseProfileId, 10);
                    else if (typeof object.baseProfileId === "number")
                        message.baseProfileId = object.baseProfileId;
                    else if (typeof object.baseProfileId === "object")
                        message.baseProfileId = new $util.LongBits(object.baseProfileId.low >>> 0, object.baseProfileId.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from a SecurityContext message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.SecurityContext
             * @static
             * @param {teads.api.SecurityContext} message SecurityContext
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SecurityContext.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.profileId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.profileId = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.entityId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.entityId = options.longs === String ? "0" : 0;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.baseProfileId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.baseProfileId = options.longs === String ? "0" : 0;
                }
                if (message.profileId != null && message.hasOwnProperty("profileId"))
                    if (typeof message.profileId === "number")
                        object.profileId = options.longs === String ? String(message.profileId) : message.profileId;
                    else
                        object.profileId = options.longs === String ? $util.Long.prototype.toString.call(message.profileId) : options.longs === Number ? new $util.LongBits(message.profileId.low >>> 0, message.profileId.high >>> 0).toNumber() : message.profileId;
                if (message.entityId != null && message.hasOwnProperty("entityId"))
                    if (typeof message.entityId === "number")
                        object.entityId = options.longs === String ? String(message.entityId) : message.entityId;
                    else
                        object.entityId = options.longs === String ? $util.Long.prototype.toString.call(message.entityId) : options.longs === Number ? new $util.LongBits(message.entityId.low >>> 0, message.entityId.high >>> 0).toNumber() : message.entityId;
                if (message.baseProfileId != null && message.hasOwnProperty("baseProfileId"))
                    if (typeof message.baseProfileId === "number")
                        object.baseProfileId = options.longs === String ? String(message.baseProfileId) : message.baseProfileId;
                    else
                        object.baseProfileId = options.longs === String ? $util.Long.prototype.toString.call(message.baseProfileId) : options.longs === Number ? new $util.LongBits(message.baseProfileId.low >>> 0, message.baseProfileId.high >>> 0).toNumber() : message.baseProfileId;
                return object;
            };

            /**
             * Converts this SecurityContext to JSON.
             * @function toJSON
             * @memberof teads.api.SecurityContext
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SecurityContext.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SecurityContext
             * @function getTypeUrl
             * @memberof teads.api.SecurityContext
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SecurityContext.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.SecurityContext";
            };

            return SecurityContext;
        })();

        api.SetFeeForClientSeatRequest = (function() {

            /**
             * Properties of a SetFeeForClientSeatRequest.
             * @memberof teads.api
             * @interface ISetFeeForClientSeatRequest
             * @property {teads.api.ISecurityContext} securityContext SetFeeForClientSeatRequest securityContext
             * @property {number} seatId SetFeeForClientSeatRequest seatId
             * @property {number} fee SetFeeForClientSeatRequest fee
             * @property {number} salesforceContractVersion SetFeeForClientSeatRequest salesforceContractVersion
             */

            /**
             * Constructs a new SetFeeForClientSeatRequest.
             * @memberof teads.api
             * @classdesc Represents a SetFeeForClientSeatRequest.
             * @implements ISetFeeForClientSeatRequest
             * @constructor
             * @param {teads.api.ISetFeeForClientSeatRequest=} [properties] Properties to set
             */
            function SetFeeForClientSeatRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SetFeeForClientSeatRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.SetFeeForClientSeatRequest
             * @instance
             */
            SetFeeForClientSeatRequest.prototype.securityContext = null;

            /**
             * SetFeeForClientSeatRequest seatId.
             * @member {number} seatId
             * @memberof teads.api.SetFeeForClientSeatRequest
             * @instance
             */
            SetFeeForClientSeatRequest.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * SetFeeForClientSeatRequest fee.
             * @member {number} fee
             * @memberof teads.api.SetFeeForClientSeatRequest
             * @instance
             */
            SetFeeForClientSeatRequest.prototype.fee = 0;

            /**
             * SetFeeForClientSeatRequest salesforceContractVersion.
             * @member {number} salesforceContractVersion
             * @memberof teads.api.SetFeeForClientSeatRequest
             * @instance
             */
            SetFeeForClientSeatRequest.prototype.salesforceContractVersion = 0;

            /**
             * Creates a new SetFeeForClientSeatRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.SetFeeForClientSeatRequest
             * @static
             * @param {teads.api.ISetFeeForClientSeatRequest=} [properties] Properties to set
             * @returns {teads.api.SetFeeForClientSeatRequest} SetFeeForClientSeatRequest instance
             */
            SetFeeForClientSeatRequest.create = function create(properties) {
                return new SetFeeForClientSeatRequest(properties);
            };

            /**
             * Encodes the specified SetFeeForClientSeatRequest message. Does not implicitly {@link teads.api.SetFeeForClientSeatRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.SetFeeForClientSeatRequest
             * @static
             * @param {teads.api.ISetFeeForClientSeatRequest} message SetFeeForClientSeatRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SetFeeForClientSeatRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.seatId);
                writer.uint32(/* id 3, wireType 1 =*/25).double(message.fee);
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.salesforceContractVersion);
                return writer;
            };

            /**
             * Encodes the specified SetFeeForClientSeatRequest message, length delimited. Does not implicitly {@link teads.api.SetFeeForClientSeatRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.SetFeeForClientSeatRequest
             * @static
             * @param {teads.api.ISetFeeForClientSeatRequest} message SetFeeForClientSeatRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SetFeeForClientSeatRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SetFeeForClientSeatRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.SetFeeForClientSeatRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.SetFeeForClientSeatRequest} SetFeeForClientSeatRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SetFeeForClientSeatRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.SetFeeForClientSeatRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.seatId = reader.int64();
                            break;
                        }
                    case 3: {
                            message.fee = reader.double();
                            break;
                        }
                    case 4: {
                            message.salesforceContractVersion = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("seatId"))
                    throw $util.ProtocolError("missing required 'seatId'", { instance: message });
                if (!message.hasOwnProperty("fee"))
                    throw $util.ProtocolError("missing required 'fee'", { instance: message });
                if (!message.hasOwnProperty("salesforceContractVersion"))
                    throw $util.ProtocolError("missing required 'salesforceContractVersion'", { instance: message });
                return message;
            };

            /**
             * Decodes a SetFeeForClientSeatRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.SetFeeForClientSeatRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.SetFeeForClientSeatRequest} SetFeeForClientSeatRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SetFeeForClientSeatRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SetFeeForClientSeatRequest message.
             * @function verify
             * @memberof teads.api.SetFeeForClientSeatRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SetFeeForClientSeatRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                    return "seatId: integer|Long expected";
                if (typeof message.fee !== "number")
                    return "fee: number expected";
                if (!$util.isInteger(message.salesforceContractVersion))
                    return "salesforceContractVersion: integer expected";
                return null;
            };

            /**
             * Creates a SetFeeForClientSeatRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.SetFeeForClientSeatRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.SetFeeForClientSeatRequest} SetFeeForClientSeatRequest
             */
            SetFeeForClientSeatRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.SetFeeForClientSeatRequest)
                    return object;
                var message = new $root.teads.api.SetFeeForClientSeatRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.SetFeeForClientSeatRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.seatId != null)
                    if ($util.Long)
                        (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                    else if (typeof object.seatId === "string")
                        message.seatId = parseInt(object.seatId, 10);
                    else if (typeof object.seatId === "number")
                        message.seatId = object.seatId;
                    else if (typeof object.seatId === "object")
                        message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                if (object.fee != null)
                    message.fee = Number(object.fee);
                if (object.salesforceContractVersion != null)
                    message.salesforceContractVersion = object.salesforceContractVersion | 0;
                return message;
            };

            /**
             * Creates a plain object from a SetFeeForClientSeatRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.SetFeeForClientSeatRequest
             * @static
             * @param {teads.api.SetFeeForClientSeatRequest} message SetFeeForClientSeatRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SetFeeForClientSeatRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seatId = options.longs === String ? "0" : 0;
                    object.fee = 0;
                    object.salesforceContractVersion = 0;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.seatId != null && message.hasOwnProperty("seatId"))
                    if (typeof message.seatId === "number")
                        object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                    else
                        object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                if (message.fee != null && message.hasOwnProperty("fee"))
                    object.fee = options.json && !isFinite(message.fee) ? String(message.fee) : message.fee;
                if (message.salesforceContractVersion != null && message.hasOwnProperty("salesforceContractVersion"))
                    object.salesforceContractVersion = message.salesforceContractVersion;
                return object;
            };

            /**
             * Converts this SetFeeForClientSeatRequest to JSON.
             * @function toJSON
             * @memberof teads.api.SetFeeForClientSeatRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SetFeeForClientSeatRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SetFeeForClientSeatRequest
             * @function getTypeUrl
             * @memberof teads.api.SetFeeForClientSeatRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SetFeeForClientSeatRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.SetFeeForClientSeatRequest";
            };

            return SetFeeForClientSeatRequest;
        })();

        api.SetFeeForClientSeatResponse = (function() {

            /**
             * Properties of a SetFeeForClientSeatResponse.
             * @memberof teads.api
             * @interface ISetFeeForClientSeatResponse
             */

            /**
             * Constructs a new SetFeeForClientSeatResponse.
             * @memberof teads.api
             * @classdesc Represents a SetFeeForClientSeatResponse.
             * @implements ISetFeeForClientSeatResponse
             * @constructor
             * @param {teads.api.ISetFeeForClientSeatResponse=} [properties] Properties to set
             */
            function SetFeeForClientSeatResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Creates a new SetFeeForClientSeatResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.SetFeeForClientSeatResponse
             * @static
             * @param {teads.api.ISetFeeForClientSeatResponse=} [properties] Properties to set
             * @returns {teads.api.SetFeeForClientSeatResponse} SetFeeForClientSeatResponse instance
             */
            SetFeeForClientSeatResponse.create = function create(properties) {
                return new SetFeeForClientSeatResponse(properties);
            };

            /**
             * Encodes the specified SetFeeForClientSeatResponse message. Does not implicitly {@link teads.api.SetFeeForClientSeatResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.SetFeeForClientSeatResponse
             * @static
             * @param {teads.api.ISetFeeForClientSeatResponse} message SetFeeForClientSeatResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SetFeeForClientSeatResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified SetFeeForClientSeatResponse message, length delimited. Does not implicitly {@link teads.api.SetFeeForClientSeatResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.SetFeeForClientSeatResponse
             * @static
             * @param {teads.api.ISetFeeForClientSeatResponse} message SetFeeForClientSeatResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SetFeeForClientSeatResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SetFeeForClientSeatResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.SetFeeForClientSeatResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.SetFeeForClientSeatResponse} SetFeeForClientSeatResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SetFeeForClientSeatResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.SetFeeForClientSeatResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a SetFeeForClientSeatResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.SetFeeForClientSeatResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.SetFeeForClientSeatResponse} SetFeeForClientSeatResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SetFeeForClientSeatResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SetFeeForClientSeatResponse message.
             * @function verify
             * @memberof teads.api.SetFeeForClientSeatResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SetFeeForClientSeatResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates a SetFeeForClientSeatResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.SetFeeForClientSeatResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.SetFeeForClientSeatResponse} SetFeeForClientSeatResponse
             */
            SetFeeForClientSeatResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.SetFeeForClientSeatResponse)
                    return object;
                return new $root.teads.api.SetFeeForClientSeatResponse();
            };

            /**
             * Creates a plain object from a SetFeeForClientSeatResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.SetFeeForClientSeatResponse
             * @static
             * @param {teads.api.SetFeeForClientSeatResponse} message SetFeeForClientSeatResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SetFeeForClientSeatResponse.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this SetFeeForClientSeatResponse to JSON.
             * @function toJSON
             * @memberof teads.api.SetFeeForClientSeatResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SetFeeForClientSeatResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SetFeeForClientSeatResponse
             * @function getTypeUrl
             * @memberof teads.api.SetFeeForClientSeatResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SetFeeForClientSeatResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.SetFeeForClientSeatResponse";
            };

            return SetFeeForClientSeatResponse;
        })();

        api.SynchronizeCampaignFromSalesforceOpportunityRequest = (function() {

            /**
             * Properties of a SynchronizeCampaignFromSalesforceOpportunityRequest.
             * @memberof teads.api
             * @interface ISynchronizeCampaignFromSalesforceOpportunityRequest
             * @property {teads.api.ISecurityContext} securityContext SynchronizeCampaignFromSalesforceOpportunityRequest securityContext
             * @property {number} campaignId SynchronizeCampaignFromSalesforceOpportunityRequest campaignId
             */

            /**
             * Constructs a new SynchronizeCampaignFromSalesforceOpportunityRequest.
             * @memberof teads.api
             * @classdesc Represents a SynchronizeCampaignFromSalesforceOpportunityRequest.
             * @implements ISynchronizeCampaignFromSalesforceOpportunityRequest
             * @constructor
             * @param {teads.api.ISynchronizeCampaignFromSalesforceOpportunityRequest=} [properties] Properties to set
             */
            function SynchronizeCampaignFromSalesforceOpportunityRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SynchronizeCampaignFromSalesforceOpportunityRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.SynchronizeCampaignFromSalesforceOpportunityRequest
             * @instance
             */
            SynchronizeCampaignFromSalesforceOpportunityRequest.prototype.securityContext = null;

            /**
             * SynchronizeCampaignFromSalesforceOpportunityRequest campaignId.
             * @member {number} campaignId
             * @memberof teads.api.SynchronizeCampaignFromSalesforceOpportunityRequest
             * @instance
             */
            SynchronizeCampaignFromSalesforceOpportunityRequest.prototype.campaignId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new SynchronizeCampaignFromSalesforceOpportunityRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.SynchronizeCampaignFromSalesforceOpportunityRequest
             * @static
             * @param {teads.api.ISynchronizeCampaignFromSalesforceOpportunityRequest=} [properties] Properties to set
             * @returns {teads.api.SynchronizeCampaignFromSalesforceOpportunityRequest} SynchronizeCampaignFromSalesforceOpportunityRequest instance
             */
            SynchronizeCampaignFromSalesforceOpportunityRequest.create = function create(properties) {
                return new SynchronizeCampaignFromSalesforceOpportunityRequest(properties);
            };

            /**
             * Encodes the specified SynchronizeCampaignFromSalesforceOpportunityRequest message. Does not implicitly {@link teads.api.SynchronizeCampaignFromSalesforceOpportunityRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.SynchronizeCampaignFromSalesforceOpportunityRequest
             * @static
             * @param {teads.api.ISynchronizeCampaignFromSalesforceOpportunityRequest} message SynchronizeCampaignFromSalesforceOpportunityRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SynchronizeCampaignFromSalesforceOpportunityRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.campaignId);
                return writer;
            };

            /**
             * Encodes the specified SynchronizeCampaignFromSalesforceOpportunityRequest message, length delimited. Does not implicitly {@link teads.api.SynchronizeCampaignFromSalesforceOpportunityRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.SynchronizeCampaignFromSalesforceOpportunityRequest
             * @static
             * @param {teads.api.ISynchronizeCampaignFromSalesforceOpportunityRequest} message SynchronizeCampaignFromSalesforceOpportunityRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SynchronizeCampaignFromSalesforceOpportunityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SynchronizeCampaignFromSalesforceOpportunityRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.SynchronizeCampaignFromSalesforceOpportunityRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.SynchronizeCampaignFromSalesforceOpportunityRequest} SynchronizeCampaignFromSalesforceOpportunityRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SynchronizeCampaignFromSalesforceOpportunityRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.SynchronizeCampaignFromSalesforceOpportunityRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.campaignId = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("campaignId"))
                    throw $util.ProtocolError("missing required 'campaignId'", { instance: message });
                return message;
            };

            /**
             * Decodes a SynchronizeCampaignFromSalesforceOpportunityRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.SynchronizeCampaignFromSalesforceOpportunityRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.SynchronizeCampaignFromSalesforceOpportunityRequest} SynchronizeCampaignFromSalesforceOpportunityRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SynchronizeCampaignFromSalesforceOpportunityRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SynchronizeCampaignFromSalesforceOpportunityRequest message.
             * @function verify
             * @memberof teads.api.SynchronizeCampaignFromSalesforceOpportunityRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SynchronizeCampaignFromSalesforceOpportunityRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.campaignId) && !(message.campaignId && $util.isInteger(message.campaignId.low) && $util.isInteger(message.campaignId.high)))
                    return "campaignId: integer|Long expected";
                return null;
            };

            /**
             * Creates a SynchronizeCampaignFromSalesforceOpportunityRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.SynchronizeCampaignFromSalesforceOpportunityRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.SynchronizeCampaignFromSalesforceOpportunityRequest} SynchronizeCampaignFromSalesforceOpportunityRequest
             */
            SynchronizeCampaignFromSalesforceOpportunityRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.SynchronizeCampaignFromSalesforceOpportunityRequest)
                    return object;
                var message = new $root.teads.api.SynchronizeCampaignFromSalesforceOpportunityRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.SynchronizeCampaignFromSalesforceOpportunityRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.campaignId != null)
                    if ($util.Long)
                        (message.campaignId = $util.Long.fromValue(object.campaignId)).unsigned = false;
                    else if (typeof object.campaignId === "string")
                        message.campaignId = parseInt(object.campaignId, 10);
                    else if (typeof object.campaignId === "number")
                        message.campaignId = object.campaignId;
                    else if (typeof object.campaignId === "object")
                        message.campaignId = new $util.LongBits(object.campaignId.low >>> 0, object.campaignId.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from a SynchronizeCampaignFromSalesforceOpportunityRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.SynchronizeCampaignFromSalesforceOpportunityRequest
             * @static
             * @param {teads.api.SynchronizeCampaignFromSalesforceOpportunityRequest} message SynchronizeCampaignFromSalesforceOpportunityRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SynchronizeCampaignFromSalesforceOpportunityRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.campaignId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.campaignId = options.longs === String ? "0" : 0;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.campaignId != null && message.hasOwnProperty("campaignId"))
                    if (typeof message.campaignId === "number")
                        object.campaignId = options.longs === String ? String(message.campaignId) : message.campaignId;
                    else
                        object.campaignId = options.longs === String ? $util.Long.prototype.toString.call(message.campaignId) : options.longs === Number ? new $util.LongBits(message.campaignId.low >>> 0, message.campaignId.high >>> 0).toNumber() : message.campaignId;
                return object;
            };

            /**
             * Converts this SynchronizeCampaignFromSalesforceOpportunityRequest to JSON.
             * @function toJSON
             * @memberof teads.api.SynchronizeCampaignFromSalesforceOpportunityRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SynchronizeCampaignFromSalesforceOpportunityRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SynchronizeCampaignFromSalesforceOpportunityRequest
             * @function getTypeUrl
             * @memberof teads.api.SynchronizeCampaignFromSalesforceOpportunityRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SynchronizeCampaignFromSalesforceOpportunityRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.SynchronizeCampaignFromSalesforceOpportunityRequest";
            };

            return SynchronizeCampaignFromSalesforceOpportunityRequest;
        })();

        api.SynchronizeCampaignFromSalesforceOpportunityResponse = (function() {

            /**
             * Properties of a SynchronizeCampaignFromSalesforceOpportunityResponse.
             * @memberof teads.api
             * @interface ISynchronizeCampaignFromSalesforceOpportunityResponse
             * @property {Array.<string>|null} [createdLineItemIds] SynchronizeCampaignFromSalesforceOpportunityResponse createdLineItemIds
             */

            /**
             * Constructs a new SynchronizeCampaignFromSalesforceOpportunityResponse.
             * @memberof teads.api
             * @classdesc Represents a SynchronizeCampaignFromSalesforceOpportunityResponse.
             * @implements ISynchronizeCampaignFromSalesforceOpportunityResponse
             * @constructor
             * @param {teads.api.ISynchronizeCampaignFromSalesforceOpportunityResponse=} [properties] Properties to set
             */
            function SynchronizeCampaignFromSalesforceOpportunityResponse(properties) {
                this.createdLineItemIds = [];
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * SynchronizeCampaignFromSalesforceOpportunityResponse createdLineItemIds.
             * @member {Array.<string>} createdLineItemIds
             * @memberof teads.api.SynchronizeCampaignFromSalesforceOpportunityResponse
             * @instance
             */
            SynchronizeCampaignFromSalesforceOpportunityResponse.prototype.createdLineItemIds = $util.emptyArray;

            /**
             * Creates a new SynchronizeCampaignFromSalesforceOpportunityResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.SynchronizeCampaignFromSalesforceOpportunityResponse
             * @static
             * @param {teads.api.ISynchronizeCampaignFromSalesforceOpportunityResponse=} [properties] Properties to set
             * @returns {teads.api.SynchronizeCampaignFromSalesforceOpportunityResponse} SynchronizeCampaignFromSalesforceOpportunityResponse instance
             */
            SynchronizeCampaignFromSalesforceOpportunityResponse.create = function create(properties) {
                return new SynchronizeCampaignFromSalesforceOpportunityResponse(properties);
            };

            /**
             * Encodes the specified SynchronizeCampaignFromSalesforceOpportunityResponse message. Does not implicitly {@link teads.api.SynchronizeCampaignFromSalesforceOpportunityResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.SynchronizeCampaignFromSalesforceOpportunityResponse
             * @static
             * @param {teads.api.ISynchronizeCampaignFromSalesforceOpportunityResponse} message SynchronizeCampaignFromSalesforceOpportunityResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SynchronizeCampaignFromSalesforceOpportunityResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.createdLineItemIds != null && message.createdLineItemIds.length)
                    for (var i = 0; i < message.createdLineItemIds.length; ++i)
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.createdLineItemIds[i]);
                return writer;
            };

            /**
             * Encodes the specified SynchronizeCampaignFromSalesforceOpportunityResponse message, length delimited. Does not implicitly {@link teads.api.SynchronizeCampaignFromSalesforceOpportunityResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.SynchronizeCampaignFromSalesforceOpportunityResponse
             * @static
             * @param {teads.api.ISynchronizeCampaignFromSalesforceOpportunityResponse} message SynchronizeCampaignFromSalesforceOpportunityResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            SynchronizeCampaignFromSalesforceOpportunityResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a SynchronizeCampaignFromSalesforceOpportunityResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.SynchronizeCampaignFromSalesforceOpportunityResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.SynchronizeCampaignFromSalesforceOpportunityResponse} SynchronizeCampaignFromSalesforceOpportunityResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SynchronizeCampaignFromSalesforceOpportunityResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.SynchronizeCampaignFromSalesforceOpportunityResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            if (!(message.createdLineItemIds && message.createdLineItemIds.length))
                                message.createdLineItemIds = [];
                            message.createdLineItemIds.push(reader.string());
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a SynchronizeCampaignFromSalesforceOpportunityResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.SynchronizeCampaignFromSalesforceOpportunityResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.SynchronizeCampaignFromSalesforceOpportunityResponse} SynchronizeCampaignFromSalesforceOpportunityResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            SynchronizeCampaignFromSalesforceOpportunityResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a SynchronizeCampaignFromSalesforceOpportunityResponse message.
             * @function verify
             * @memberof teads.api.SynchronizeCampaignFromSalesforceOpportunityResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            SynchronizeCampaignFromSalesforceOpportunityResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.createdLineItemIds != null && message.hasOwnProperty("createdLineItemIds")) {
                    if (!Array.isArray(message.createdLineItemIds))
                        return "createdLineItemIds: array expected";
                    for (var i = 0; i < message.createdLineItemIds.length; ++i)
                        if (!$util.isString(message.createdLineItemIds[i]))
                            return "createdLineItemIds: string[] expected";
                }
                return null;
            };

            /**
             * Creates a SynchronizeCampaignFromSalesforceOpportunityResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.SynchronizeCampaignFromSalesforceOpportunityResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.SynchronizeCampaignFromSalesforceOpportunityResponse} SynchronizeCampaignFromSalesforceOpportunityResponse
             */
            SynchronizeCampaignFromSalesforceOpportunityResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.SynchronizeCampaignFromSalesforceOpportunityResponse)
                    return object;
                var message = new $root.teads.api.SynchronizeCampaignFromSalesforceOpportunityResponse();
                if (object.createdLineItemIds) {
                    if (!Array.isArray(object.createdLineItemIds))
                        throw TypeError(".teads.api.SynchronizeCampaignFromSalesforceOpportunityResponse.createdLineItemIds: array expected");
                    message.createdLineItemIds = [];
                    for (var i = 0; i < object.createdLineItemIds.length; ++i)
                        message.createdLineItemIds[i] = String(object.createdLineItemIds[i]);
                }
                return message;
            };

            /**
             * Creates a plain object from a SynchronizeCampaignFromSalesforceOpportunityResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.SynchronizeCampaignFromSalesforceOpportunityResponse
             * @static
             * @param {teads.api.SynchronizeCampaignFromSalesforceOpportunityResponse} message SynchronizeCampaignFromSalesforceOpportunityResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            SynchronizeCampaignFromSalesforceOpportunityResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.arrays || options.defaults)
                    object.createdLineItemIds = [];
                if (message.createdLineItemIds && message.createdLineItemIds.length) {
                    object.createdLineItemIds = [];
                    for (var j = 0; j < message.createdLineItemIds.length; ++j)
                        object.createdLineItemIds[j] = message.createdLineItemIds[j];
                }
                return object;
            };

            /**
             * Converts this SynchronizeCampaignFromSalesforceOpportunityResponse to JSON.
             * @function toJSON
             * @memberof teads.api.SynchronizeCampaignFromSalesforceOpportunityResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            SynchronizeCampaignFromSalesforceOpportunityResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for SynchronizeCampaignFromSalesforceOpportunityResponse
             * @function getTypeUrl
             * @memberof teads.api.SynchronizeCampaignFromSalesforceOpportunityResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            SynchronizeCampaignFromSalesforceOpportunityResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.SynchronizeCampaignFromSalesforceOpportunityResponse";
            };

            return SynchronizeCampaignFromSalesforceOpportunityResponse;
        })();

        api.TransitionIoBuyerSeatToManagedRequest = (function() {

            /**
             * Properties of a TransitionIoBuyerSeatToManagedRequest.
             * @memberof teads.api
             * @interface ITransitionIoBuyerSeatToManagedRequest
             * @property {teads.api.ISecurityContext} securityContext TransitionIoBuyerSeatToManagedRequest securityContext
             * @property {number} seatId TransitionIoBuyerSeatToManagedRequest seatId
             * @property {number} managedFee TransitionIoBuyerSeatToManagedRequest managedFee
             * @property {teads.api.MsaType} msaType TransitionIoBuyerSeatToManagedRequest msaType
             * @property {string} salesforceContractId TransitionIoBuyerSeatToManagedRequest salesforceContractId
             */

            /**
             * Constructs a new TransitionIoBuyerSeatToManagedRequest.
             * @memberof teads.api
             * @classdesc Represents a TransitionIoBuyerSeatToManagedRequest.
             * @implements ITransitionIoBuyerSeatToManagedRequest
             * @constructor
             * @param {teads.api.ITransitionIoBuyerSeatToManagedRequest=} [properties] Properties to set
             */
            function TransitionIoBuyerSeatToManagedRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * TransitionIoBuyerSeatToManagedRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.TransitionIoBuyerSeatToManagedRequest
             * @instance
             */
            TransitionIoBuyerSeatToManagedRequest.prototype.securityContext = null;

            /**
             * TransitionIoBuyerSeatToManagedRequest seatId.
             * @member {number} seatId
             * @memberof teads.api.TransitionIoBuyerSeatToManagedRequest
             * @instance
             */
            TransitionIoBuyerSeatToManagedRequest.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * TransitionIoBuyerSeatToManagedRequest managedFee.
             * @member {number} managedFee
             * @memberof teads.api.TransitionIoBuyerSeatToManagedRequest
             * @instance
             */
            TransitionIoBuyerSeatToManagedRequest.prototype.managedFee = 0;

            /**
             * TransitionIoBuyerSeatToManagedRequest msaType.
             * @member {teads.api.MsaType} msaType
             * @memberof teads.api.TransitionIoBuyerSeatToManagedRequest
             * @instance
             */
            TransitionIoBuyerSeatToManagedRequest.prototype.msaType = 1;

            /**
             * TransitionIoBuyerSeatToManagedRequest salesforceContractId.
             * @member {string} salesforceContractId
             * @memberof teads.api.TransitionIoBuyerSeatToManagedRequest
             * @instance
             */
            TransitionIoBuyerSeatToManagedRequest.prototype.salesforceContractId = "";

            /**
             * Creates a new TransitionIoBuyerSeatToManagedRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.TransitionIoBuyerSeatToManagedRequest
             * @static
             * @param {teads.api.ITransitionIoBuyerSeatToManagedRequest=} [properties] Properties to set
             * @returns {teads.api.TransitionIoBuyerSeatToManagedRequest} TransitionIoBuyerSeatToManagedRequest instance
             */
            TransitionIoBuyerSeatToManagedRequest.create = function create(properties) {
                return new TransitionIoBuyerSeatToManagedRequest(properties);
            };

            /**
             * Encodes the specified TransitionIoBuyerSeatToManagedRequest message. Does not implicitly {@link teads.api.TransitionIoBuyerSeatToManagedRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.TransitionIoBuyerSeatToManagedRequest
             * @static
             * @param {teads.api.ITransitionIoBuyerSeatToManagedRequest} message TransitionIoBuyerSeatToManagedRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TransitionIoBuyerSeatToManagedRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.seatId);
                writer.uint32(/* id 3, wireType 1 =*/25).double(message.managedFee);
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.msaType);
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.salesforceContractId);
                return writer;
            };

            /**
             * Encodes the specified TransitionIoBuyerSeatToManagedRequest message, length delimited. Does not implicitly {@link teads.api.TransitionIoBuyerSeatToManagedRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.TransitionIoBuyerSeatToManagedRequest
             * @static
             * @param {teads.api.ITransitionIoBuyerSeatToManagedRequest} message TransitionIoBuyerSeatToManagedRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TransitionIoBuyerSeatToManagedRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a TransitionIoBuyerSeatToManagedRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.TransitionIoBuyerSeatToManagedRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.TransitionIoBuyerSeatToManagedRequest} TransitionIoBuyerSeatToManagedRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TransitionIoBuyerSeatToManagedRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.TransitionIoBuyerSeatToManagedRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.seatId = reader.int64();
                            break;
                        }
                    case 3: {
                            message.managedFee = reader.double();
                            break;
                        }
                    case 4: {
                            message.msaType = reader.int32();
                            break;
                        }
                    case 5: {
                            message.salesforceContractId = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("seatId"))
                    throw $util.ProtocolError("missing required 'seatId'", { instance: message });
                if (!message.hasOwnProperty("managedFee"))
                    throw $util.ProtocolError("missing required 'managedFee'", { instance: message });
                if (!message.hasOwnProperty("msaType"))
                    throw $util.ProtocolError("missing required 'msaType'", { instance: message });
                if (!message.hasOwnProperty("salesforceContractId"))
                    throw $util.ProtocolError("missing required 'salesforceContractId'", { instance: message });
                return message;
            };

            /**
             * Decodes a TransitionIoBuyerSeatToManagedRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.TransitionIoBuyerSeatToManagedRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.TransitionIoBuyerSeatToManagedRequest} TransitionIoBuyerSeatToManagedRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TransitionIoBuyerSeatToManagedRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a TransitionIoBuyerSeatToManagedRequest message.
             * @function verify
             * @memberof teads.api.TransitionIoBuyerSeatToManagedRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            TransitionIoBuyerSeatToManagedRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                    return "seatId: integer|Long expected";
                if (typeof message.managedFee !== "number")
                    return "managedFee: number expected";
                switch (message.msaType) {
                default:
                    return "msaType: enum value expected";
                case 1:
                case 2:
                    break;
                }
                if (!$util.isString(message.salesforceContractId))
                    return "salesforceContractId: string expected";
                return null;
            };

            /**
             * Creates a TransitionIoBuyerSeatToManagedRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.TransitionIoBuyerSeatToManagedRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.TransitionIoBuyerSeatToManagedRequest} TransitionIoBuyerSeatToManagedRequest
             */
            TransitionIoBuyerSeatToManagedRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.TransitionIoBuyerSeatToManagedRequest)
                    return object;
                var message = new $root.teads.api.TransitionIoBuyerSeatToManagedRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.TransitionIoBuyerSeatToManagedRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.seatId != null)
                    if ($util.Long)
                        (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                    else if (typeof object.seatId === "string")
                        message.seatId = parseInt(object.seatId, 10);
                    else if (typeof object.seatId === "number")
                        message.seatId = object.seatId;
                    else if (typeof object.seatId === "object")
                        message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                if (object.managedFee != null)
                    message.managedFee = Number(object.managedFee);
                switch (object.msaType) {
                default:
                    if (typeof object.msaType === "number") {
                        message.msaType = object.msaType;
                        break;
                    }
                    break;
                case "MSA_TYPE_DIGITAL":
                case 1:
                    message.msaType = 1;
                    break;
                case "MSA_TYPE_PAPER":
                case 2:
                    message.msaType = 2;
                    break;
                }
                if (object.salesforceContractId != null)
                    message.salesforceContractId = String(object.salesforceContractId);
                return message;
            };

            /**
             * Creates a plain object from a TransitionIoBuyerSeatToManagedRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.TransitionIoBuyerSeatToManagedRequest
             * @static
             * @param {teads.api.TransitionIoBuyerSeatToManagedRequest} message TransitionIoBuyerSeatToManagedRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            TransitionIoBuyerSeatToManagedRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seatId = options.longs === String ? "0" : 0;
                    object.managedFee = 0;
                    object.msaType = options.enums === String ? "MSA_TYPE_DIGITAL" : 1;
                    object.salesforceContractId = "";
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.seatId != null && message.hasOwnProperty("seatId"))
                    if (typeof message.seatId === "number")
                        object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                    else
                        object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                if (message.managedFee != null && message.hasOwnProperty("managedFee"))
                    object.managedFee = options.json && !isFinite(message.managedFee) ? String(message.managedFee) : message.managedFee;
                if (message.msaType != null && message.hasOwnProperty("msaType"))
                    object.msaType = options.enums === String ? $root.teads.api.MsaType[message.msaType] === undefined ? message.msaType : $root.teads.api.MsaType[message.msaType] : message.msaType;
                if (message.salesforceContractId != null && message.hasOwnProperty("salesforceContractId"))
                    object.salesforceContractId = message.salesforceContractId;
                return object;
            };

            /**
             * Converts this TransitionIoBuyerSeatToManagedRequest to JSON.
             * @function toJSON
             * @memberof teads.api.TransitionIoBuyerSeatToManagedRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            TransitionIoBuyerSeatToManagedRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for TransitionIoBuyerSeatToManagedRequest
             * @function getTypeUrl
             * @memberof teads.api.TransitionIoBuyerSeatToManagedRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            TransitionIoBuyerSeatToManagedRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.TransitionIoBuyerSeatToManagedRequest";
            };

            return TransitionIoBuyerSeatToManagedRequest;
        })();

        api.TransitionIoBuyerSeatToManagedResponse = (function() {

            /**
             * Properties of a TransitionIoBuyerSeatToManagedResponse.
             * @memberof teads.api
             * @interface ITransitionIoBuyerSeatToManagedResponse
             * @property {number} seatId TransitionIoBuyerSeatToManagedResponse seatId
             */

            /**
             * Constructs a new TransitionIoBuyerSeatToManagedResponse.
             * @memberof teads.api
             * @classdesc Represents a TransitionIoBuyerSeatToManagedResponse.
             * @implements ITransitionIoBuyerSeatToManagedResponse
             * @constructor
             * @param {teads.api.ITransitionIoBuyerSeatToManagedResponse=} [properties] Properties to set
             */
            function TransitionIoBuyerSeatToManagedResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * TransitionIoBuyerSeatToManagedResponse seatId.
             * @member {number} seatId
             * @memberof teads.api.TransitionIoBuyerSeatToManagedResponse
             * @instance
             */
            TransitionIoBuyerSeatToManagedResponse.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new TransitionIoBuyerSeatToManagedResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.TransitionIoBuyerSeatToManagedResponse
             * @static
             * @param {teads.api.ITransitionIoBuyerSeatToManagedResponse=} [properties] Properties to set
             * @returns {teads.api.TransitionIoBuyerSeatToManagedResponse} TransitionIoBuyerSeatToManagedResponse instance
             */
            TransitionIoBuyerSeatToManagedResponse.create = function create(properties) {
                return new TransitionIoBuyerSeatToManagedResponse(properties);
            };

            /**
             * Encodes the specified TransitionIoBuyerSeatToManagedResponse message. Does not implicitly {@link teads.api.TransitionIoBuyerSeatToManagedResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.TransitionIoBuyerSeatToManagedResponse
             * @static
             * @param {teads.api.ITransitionIoBuyerSeatToManagedResponse} message TransitionIoBuyerSeatToManagedResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TransitionIoBuyerSeatToManagedResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seatId);
                return writer;
            };

            /**
             * Encodes the specified TransitionIoBuyerSeatToManagedResponse message, length delimited. Does not implicitly {@link teads.api.TransitionIoBuyerSeatToManagedResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.TransitionIoBuyerSeatToManagedResponse
             * @static
             * @param {teads.api.ITransitionIoBuyerSeatToManagedResponse} message TransitionIoBuyerSeatToManagedResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TransitionIoBuyerSeatToManagedResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a TransitionIoBuyerSeatToManagedResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.TransitionIoBuyerSeatToManagedResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.TransitionIoBuyerSeatToManagedResponse} TransitionIoBuyerSeatToManagedResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TransitionIoBuyerSeatToManagedResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.TransitionIoBuyerSeatToManagedResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.seatId = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("seatId"))
                    throw $util.ProtocolError("missing required 'seatId'", { instance: message });
                return message;
            };

            /**
             * Decodes a TransitionIoBuyerSeatToManagedResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.TransitionIoBuyerSeatToManagedResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.TransitionIoBuyerSeatToManagedResponse} TransitionIoBuyerSeatToManagedResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TransitionIoBuyerSeatToManagedResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a TransitionIoBuyerSeatToManagedResponse message.
             * @function verify
             * @memberof teads.api.TransitionIoBuyerSeatToManagedResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            TransitionIoBuyerSeatToManagedResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                    return "seatId: integer|Long expected";
                return null;
            };

            /**
             * Creates a TransitionIoBuyerSeatToManagedResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.TransitionIoBuyerSeatToManagedResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.TransitionIoBuyerSeatToManagedResponse} TransitionIoBuyerSeatToManagedResponse
             */
            TransitionIoBuyerSeatToManagedResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.TransitionIoBuyerSeatToManagedResponse)
                    return object;
                var message = new $root.teads.api.TransitionIoBuyerSeatToManagedResponse();
                if (object.seatId != null)
                    if ($util.Long)
                        (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                    else if (typeof object.seatId === "string")
                        message.seatId = parseInt(object.seatId, 10);
                    else if (typeof object.seatId === "number")
                        message.seatId = object.seatId;
                    else if (typeof object.seatId === "object")
                        message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from a TransitionIoBuyerSeatToManagedResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.TransitionIoBuyerSeatToManagedResponse
             * @static
             * @param {teads.api.TransitionIoBuyerSeatToManagedResponse} message TransitionIoBuyerSeatToManagedResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            TransitionIoBuyerSeatToManagedResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seatId = options.longs === String ? "0" : 0;
                if (message.seatId != null && message.hasOwnProperty("seatId"))
                    if (typeof message.seatId === "number")
                        object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                    else
                        object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                return object;
            };

            /**
             * Converts this TransitionIoBuyerSeatToManagedResponse to JSON.
             * @function toJSON
             * @memberof teads.api.TransitionIoBuyerSeatToManagedResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            TransitionIoBuyerSeatToManagedResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for TransitionIoBuyerSeatToManagedResponse
             * @function getTypeUrl
             * @memberof teads.api.TransitionIoBuyerSeatToManagedResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            TransitionIoBuyerSeatToManagedResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.TransitionIoBuyerSeatToManagedResponse";
            };

            return TransitionIoBuyerSeatToManagedResponse;
        })();

        api.TransitionIoBuyerSeatToSelfServedRequest = (function() {

            /**
             * Properties of a TransitionIoBuyerSeatToSelfServedRequest.
             * @memberof teads.api
             * @interface ITransitionIoBuyerSeatToSelfServedRequest
             * @property {teads.api.ISecurityContext} securityContext TransitionIoBuyerSeatToSelfServedRequest securityContext
             * @property {number} seatId TransitionIoBuyerSeatToSelfServedRequest seatId
             * @property {number} platformFee TransitionIoBuyerSeatToSelfServedRequest platformFee
             * @property {teads.api.MsaType} msaType TransitionIoBuyerSeatToSelfServedRequest msaType
             * @property {string} salesforceContractId TransitionIoBuyerSeatToSelfServedRequest salesforceContractId
             */

            /**
             * Constructs a new TransitionIoBuyerSeatToSelfServedRequest.
             * @memberof teads.api
             * @classdesc Represents a TransitionIoBuyerSeatToSelfServedRequest.
             * @implements ITransitionIoBuyerSeatToSelfServedRequest
             * @constructor
             * @param {teads.api.ITransitionIoBuyerSeatToSelfServedRequest=} [properties] Properties to set
             */
            function TransitionIoBuyerSeatToSelfServedRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * TransitionIoBuyerSeatToSelfServedRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.TransitionIoBuyerSeatToSelfServedRequest
             * @instance
             */
            TransitionIoBuyerSeatToSelfServedRequest.prototype.securityContext = null;

            /**
             * TransitionIoBuyerSeatToSelfServedRequest seatId.
             * @member {number} seatId
             * @memberof teads.api.TransitionIoBuyerSeatToSelfServedRequest
             * @instance
             */
            TransitionIoBuyerSeatToSelfServedRequest.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * TransitionIoBuyerSeatToSelfServedRequest platformFee.
             * @member {number} platformFee
             * @memberof teads.api.TransitionIoBuyerSeatToSelfServedRequest
             * @instance
             */
            TransitionIoBuyerSeatToSelfServedRequest.prototype.platformFee = 0;

            /**
             * TransitionIoBuyerSeatToSelfServedRequest msaType.
             * @member {teads.api.MsaType} msaType
             * @memberof teads.api.TransitionIoBuyerSeatToSelfServedRequest
             * @instance
             */
            TransitionIoBuyerSeatToSelfServedRequest.prototype.msaType = 1;

            /**
             * TransitionIoBuyerSeatToSelfServedRequest salesforceContractId.
             * @member {string} salesforceContractId
             * @memberof teads.api.TransitionIoBuyerSeatToSelfServedRequest
             * @instance
             */
            TransitionIoBuyerSeatToSelfServedRequest.prototype.salesforceContractId = "";

            /**
             * Creates a new TransitionIoBuyerSeatToSelfServedRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.TransitionIoBuyerSeatToSelfServedRequest
             * @static
             * @param {teads.api.ITransitionIoBuyerSeatToSelfServedRequest=} [properties] Properties to set
             * @returns {teads.api.TransitionIoBuyerSeatToSelfServedRequest} TransitionIoBuyerSeatToSelfServedRequest instance
             */
            TransitionIoBuyerSeatToSelfServedRequest.create = function create(properties) {
                return new TransitionIoBuyerSeatToSelfServedRequest(properties);
            };

            /**
             * Encodes the specified TransitionIoBuyerSeatToSelfServedRequest message. Does not implicitly {@link teads.api.TransitionIoBuyerSeatToSelfServedRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.TransitionIoBuyerSeatToSelfServedRequest
             * @static
             * @param {teads.api.ITransitionIoBuyerSeatToSelfServedRequest} message TransitionIoBuyerSeatToSelfServedRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TransitionIoBuyerSeatToSelfServedRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.seatId);
                writer.uint32(/* id 3, wireType 1 =*/25).double(message.platformFee);
                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.msaType);
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.salesforceContractId);
                return writer;
            };

            /**
             * Encodes the specified TransitionIoBuyerSeatToSelfServedRequest message, length delimited. Does not implicitly {@link teads.api.TransitionIoBuyerSeatToSelfServedRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.TransitionIoBuyerSeatToSelfServedRequest
             * @static
             * @param {teads.api.ITransitionIoBuyerSeatToSelfServedRequest} message TransitionIoBuyerSeatToSelfServedRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TransitionIoBuyerSeatToSelfServedRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a TransitionIoBuyerSeatToSelfServedRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.TransitionIoBuyerSeatToSelfServedRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.TransitionIoBuyerSeatToSelfServedRequest} TransitionIoBuyerSeatToSelfServedRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TransitionIoBuyerSeatToSelfServedRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.TransitionIoBuyerSeatToSelfServedRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.seatId = reader.int64();
                            break;
                        }
                    case 3: {
                            message.platformFee = reader.double();
                            break;
                        }
                    case 4: {
                            message.msaType = reader.int32();
                            break;
                        }
                    case 5: {
                            message.salesforceContractId = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("seatId"))
                    throw $util.ProtocolError("missing required 'seatId'", { instance: message });
                if (!message.hasOwnProperty("platformFee"))
                    throw $util.ProtocolError("missing required 'platformFee'", { instance: message });
                if (!message.hasOwnProperty("msaType"))
                    throw $util.ProtocolError("missing required 'msaType'", { instance: message });
                if (!message.hasOwnProperty("salesforceContractId"))
                    throw $util.ProtocolError("missing required 'salesforceContractId'", { instance: message });
                return message;
            };

            /**
             * Decodes a TransitionIoBuyerSeatToSelfServedRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.TransitionIoBuyerSeatToSelfServedRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.TransitionIoBuyerSeatToSelfServedRequest} TransitionIoBuyerSeatToSelfServedRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TransitionIoBuyerSeatToSelfServedRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a TransitionIoBuyerSeatToSelfServedRequest message.
             * @function verify
             * @memberof teads.api.TransitionIoBuyerSeatToSelfServedRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            TransitionIoBuyerSeatToSelfServedRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                    return "seatId: integer|Long expected";
                if (typeof message.platformFee !== "number")
                    return "platformFee: number expected";
                switch (message.msaType) {
                default:
                    return "msaType: enum value expected";
                case 1:
                case 2:
                    break;
                }
                if (!$util.isString(message.salesforceContractId))
                    return "salesforceContractId: string expected";
                return null;
            };

            /**
             * Creates a TransitionIoBuyerSeatToSelfServedRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.TransitionIoBuyerSeatToSelfServedRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.TransitionIoBuyerSeatToSelfServedRequest} TransitionIoBuyerSeatToSelfServedRequest
             */
            TransitionIoBuyerSeatToSelfServedRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.TransitionIoBuyerSeatToSelfServedRequest)
                    return object;
                var message = new $root.teads.api.TransitionIoBuyerSeatToSelfServedRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.TransitionIoBuyerSeatToSelfServedRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.seatId != null)
                    if ($util.Long)
                        (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                    else if (typeof object.seatId === "string")
                        message.seatId = parseInt(object.seatId, 10);
                    else if (typeof object.seatId === "number")
                        message.seatId = object.seatId;
                    else if (typeof object.seatId === "object")
                        message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                if (object.platformFee != null)
                    message.platformFee = Number(object.platformFee);
                switch (object.msaType) {
                default:
                    if (typeof object.msaType === "number") {
                        message.msaType = object.msaType;
                        break;
                    }
                    break;
                case "MSA_TYPE_DIGITAL":
                case 1:
                    message.msaType = 1;
                    break;
                case "MSA_TYPE_PAPER":
                case 2:
                    message.msaType = 2;
                    break;
                }
                if (object.salesforceContractId != null)
                    message.salesforceContractId = String(object.salesforceContractId);
                return message;
            };

            /**
             * Creates a plain object from a TransitionIoBuyerSeatToSelfServedRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.TransitionIoBuyerSeatToSelfServedRequest
             * @static
             * @param {teads.api.TransitionIoBuyerSeatToSelfServedRequest} message TransitionIoBuyerSeatToSelfServedRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            TransitionIoBuyerSeatToSelfServedRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seatId = options.longs === String ? "0" : 0;
                    object.platformFee = 0;
                    object.msaType = options.enums === String ? "MSA_TYPE_DIGITAL" : 1;
                    object.salesforceContractId = "";
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.seatId != null && message.hasOwnProperty("seatId"))
                    if (typeof message.seatId === "number")
                        object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                    else
                        object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                if (message.platformFee != null && message.hasOwnProperty("platformFee"))
                    object.platformFee = options.json && !isFinite(message.platformFee) ? String(message.platformFee) : message.platformFee;
                if (message.msaType != null && message.hasOwnProperty("msaType"))
                    object.msaType = options.enums === String ? $root.teads.api.MsaType[message.msaType] === undefined ? message.msaType : $root.teads.api.MsaType[message.msaType] : message.msaType;
                if (message.salesforceContractId != null && message.hasOwnProperty("salesforceContractId"))
                    object.salesforceContractId = message.salesforceContractId;
                return object;
            };

            /**
             * Converts this TransitionIoBuyerSeatToSelfServedRequest to JSON.
             * @function toJSON
             * @memberof teads.api.TransitionIoBuyerSeatToSelfServedRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            TransitionIoBuyerSeatToSelfServedRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for TransitionIoBuyerSeatToSelfServedRequest
             * @function getTypeUrl
             * @memberof teads.api.TransitionIoBuyerSeatToSelfServedRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            TransitionIoBuyerSeatToSelfServedRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.TransitionIoBuyerSeatToSelfServedRequest";
            };

            return TransitionIoBuyerSeatToSelfServedRequest;
        })();

        api.TransitionIoBuyerSeatToSelfServedResponse = (function() {

            /**
             * Properties of a TransitionIoBuyerSeatToSelfServedResponse.
             * @memberof teads.api
             * @interface ITransitionIoBuyerSeatToSelfServedResponse
             * @property {number} seatId TransitionIoBuyerSeatToSelfServedResponse seatId
             */

            /**
             * Constructs a new TransitionIoBuyerSeatToSelfServedResponse.
             * @memberof teads.api
             * @classdesc Represents a TransitionIoBuyerSeatToSelfServedResponse.
             * @implements ITransitionIoBuyerSeatToSelfServedResponse
             * @constructor
             * @param {teads.api.ITransitionIoBuyerSeatToSelfServedResponse=} [properties] Properties to set
             */
            function TransitionIoBuyerSeatToSelfServedResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * TransitionIoBuyerSeatToSelfServedResponse seatId.
             * @member {number} seatId
             * @memberof teads.api.TransitionIoBuyerSeatToSelfServedResponse
             * @instance
             */
            TransitionIoBuyerSeatToSelfServedResponse.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new TransitionIoBuyerSeatToSelfServedResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.TransitionIoBuyerSeatToSelfServedResponse
             * @static
             * @param {teads.api.ITransitionIoBuyerSeatToSelfServedResponse=} [properties] Properties to set
             * @returns {teads.api.TransitionIoBuyerSeatToSelfServedResponse} TransitionIoBuyerSeatToSelfServedResponse instance
             */
            TransitionIoBuyerSeatToSelfServedResponse.create = function create(properties) {
                return new TransitionIoBuyerSeatToSelfServedResponse(properties);
            };

            /**
             * Encodes the specified TransitionIoBuyerSeatToSelfServedResponse message. Does not implicitly {@link teads.api.TransitionIoBuyerSeatToSelfServedResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.TransitionIoBuyerSeatToSelfServedResponse
             * @static
             * @param {teads.api.ITransitionIoBuyerSeatToSelfServedResponse} message TransitionIoBuyerSeatToSelfServedResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TransitionIoBuyerSeatToSelfServedResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seatId);
                return writer;
            };

            /**
             * Encodes the specified TransitionIoBuyerSeatToSelfServedResponse message, length delimited. Does not implicitly {@link teads.api.TransitionIoBuyerSeatToSelfServedResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.TransitionIoBuyerSeatToSelfServedResponse
             * @static
             * @param {teads.api.ITransitionIoBuyerSeatToSelfServedResponse} message TransitionIoBuyerSeatToSelfServedResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TransitionIoBuyerSeatToSelfServedResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a TransitionIoBuyerSeatToSelfServedResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.TransitionIoBuyerSeatToSelfServedResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.TransitionIoBuyerSeatToSelfServedResponse} TransitionIoBuyerSeatToSelfServedResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TransitionIoBuyerSeatToSelfServedResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.TransitionIoBuyerSeatToSelfServedResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.seatId = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("seatId"))
                    throw $util.ProtocolError("missing required 'seatId'", { instance: message });
                return message;
            };

            /**
             * Decodes a TransitionIoBuyerSeatToSelfServedResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.TransitionIoBuyerSeatToSelfServedResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.TransitionIoBuyerSeatToSelfServedResponse} TransitionIoBuyerSeatToSelfServedResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TransitionIoBuyerSeatToSelfServedResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a TransitionIoBuyerSeatToSelfServedResponse message.
             * @function verify
             * @memberof teads.api.TransitionIoBuyerSeatToSelfServedResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            TransitionIoBuyerSeatToSelfServedResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                    return "seatId: integer|Long expected";
                return null;
            };

            /**
             * Creates a TransitionIoBuyerSeatToSelfServedResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.TransitionIoBuyerSeatToSelfServedResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.TransitionIoBuyerSeatToSelfServedResponse} TransitionIoBuyerSeatToSelfServedResponse
             */
            TransitionIoBuyerSeatToSelfServedResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.TransitionIoBuyerSeatToSelfServedResponse)
                    return object;
                var message = new $root.teads.api.TransitionIoBuyerSeatToSelfServedResponse();
                if (object.seatId != null)
                    if ($util.Long)
                        (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                    else if (typeof object.seatId === "string")
                        message.seatId = parseInt(object.seatId, 10);
                    else if (typeof object.seatId === "number")
                        message.seatId = object.seatId;
                    else if (typeof object.seatId === "object")
                        message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from a TransitionIoBuyerSeatToSelfServedResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.TransitionIoBuyerSeatToSelfServedResponse
             * @static
             * @param {teads.api.TransitionIoBuyerSeatToSelfServedResponse} message TransitionIoBuyerSeatToSelfServedResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            TransitionIoBuyerSeatToSelfServedResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seatId = options.longs === String ? "0" : 0;
                if (message.seatId != null && message.hasOwnProperty("seatId"))
                    if (typeof message.seatId === "number")
                        object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                    else
                        object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                return object;
            };

            /**
             * Converts this TransitionIoBuyerSeatToSelfServedResponse to JSON.
             * @function toJSON
             * @memberof teads.api.TransitionIoBuyerSeatToSelfServedResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            TransitionIoBuyerSeatToSelfServedResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for TransitionIoBuyerSeatToSelfServedResponse
             * @function getTypeUrl
             * @memberof teads.api.TransitionIoBuyerSeatToSelfServedResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            TransitionIoBuyerSeatToSelfServedResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.TransitionIoBuyerSeatToSelfServedResponse";
            };

            return TransitionIoBuyerSeatToSelfServedResponse;
        })();

        api.TransitionManagedBuyerSeatToSelfServedRequest = (function() {

            /**
             * Properties of a TransitionManagedBuyerSeatToSelfServedRequest.
             * @memberof teads.api
             * @interface ITransitionManagedBuyerSeatToSelfServedRequest
             * @property {teads.api.ISecurityContext} securityContext TransitionManagedBuyerSeatToSelfServedRequest securityContext
             * @property {number} seatId TransitionManagedBuyerSeatToSelfServedRequest seatId
             * @property {number} platformFee TransitionManagedBuyerSeatToSelfServedRequest platformFee
             */

            /**
             * Constructs a new TransitionManagedBuyerSeatToSelfServedRequest.
             * @memberof teads.api
             * @classdesc Represents a TransitionManagedBuyerSeatToSelfServedRequest.
             * @implements ITransitionManagedBuyerSeatToSelfServedRequest
             * @constructor
             * @param {teads.api.ITransitionManagedBuyerSeatToSelfServedRequest=} [properties] Properties to set
             */
            function TransitionManagedBuyerSeatToSelfServedRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * TransitionManagedBuyerSeatToSelfServedRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.TransitionManagedBuyerSeatToSelfServedRequest
             * @instance
             */
            TransitionManagedBuyerSeatToSelfServedRequest.prototype.securityContext = null;

            /**
             * TransitionManagedBuyerSeatToSelfServedRequest seatId.
             * @member {number} seatId
             * @memberof teads.api.TransitionManagedBuyerSeatToSelfServedRequest
             * @instance
             */
            TransitionManagedBuyerSeatToSelfServedRequest.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * TransitionManagedBuyerSeatToSelfServedRequest platformFee.
             * @member {number} platformFee
             * @memberof teads.api.TransitionManagedBuyerSeatToSelfServedRequest
             * @instance
             */
            TransitionManagedBuyerSeatToSelfServedRequest.prototype.platformFee = 0;

            /**
             * Creates a new TransitionManagedBuyerSeatToSelfServedRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.TransitionManagedBuyerSeatToSelfServedRequest
             * @static
             * @param {teads.api.ITransitionManagedBuyerSeatToSelfServedRequest=} [properties] Properties to set
             * @returns {teads.api.TransitionManagedBuyerSeatToSelfServedRequest} TransitionManagedBuyerSeatToSelfServedRequest instance
             */
            TransitionManagedBuyerSeatToSelfServedRequest.create = function create(properties) {
                return new TransitionManagedBuyerSeatToSelfServedRequest(properties);
            };

            /**
             * Encodes the specified TransitionManagedBuyerSeatToSelfServedRequest message. Does not implicitly {@link teads.api.TransitionManagedBuyerSeatToSelfServedRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.TransitionManagedBuyerSeatToSelfServedRequest
             * @static
             * @param {teads.api.ITransitionManagedBuyerSeatToSelfServedRequest} message TransitionManagedBuyerSeatToSelfServedRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TransitionManagedBuyerSeatToSelfServedRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.seatId);
                writer.uint32(/* id 3, wireType 1 =*/25).double(message.platformFee);
                return writer;
            };

            /**
             * Encodes the specified TransitionManagedBuyerSeatToSelfServedRequest message, length delimited. Does not implicitly {@link teads.api.TransitionManagedBuyerSeatToSelfServedRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.TransitionManagedBuyerSeatToSelfServedRequest
             * @static
             * @param {teads.api.ITransitionManagedBuyerSeatToSelfServedRequest} message TransitionManagedBuyerSeatToSelfServedRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TransitionManagedBuyerSeatToSelfServedRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a TransitionManagedBuyerSeatToSelfServedRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.TransitionManagedBuyerSeatToSelfServedRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.TransitionManagedBuyerSeatToSelfServedRequest} TransitionManagedBuyerSeatToSelfServedRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TransitionManagedBuyerSeatToSelfServedRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.TransitionManagedBuyerSeatToSelfServedRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.seatId = reader.int64();
                            break;
                        }
                    case 3: {
                            message.platformFee = reader.double();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("seatId"))
                    throw $util.ProtocolError("missing required 'seatId'", { instance: message });
                if (!message.hasOwnProperty("platformFee"))
                    throw $util.ProtocolError("missing required 'platformFee'", { instance: message });
                return message;
            };

            /**
             * Decodes a TransitionManagedBuyerSeatToSelfServedRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.TransitionManagedBuyerSeatToSelfServedRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.TransitionManagedBuyerSeatToSelfServedRequest} TransitionManagedBuyerSeatToSelfServedRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TransitionManagedBuyerSeatToSelfServedRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a TransitionManagedBuyerSeatToSelfServedRequest message.
             * @function verify
             * @memberof teads.api.TransitionManagedBuyerSeatToSelfServedRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            TransitionManagedBuyerSeatToSelfServedRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                    return "seatId: integer|Long expected";
                if (typeof message.platformFee !== "number")
                    return "platformFee: number expected";
                return null;
            };

            /**
             * Creates a TransitionManagedBuyerSeatToSelfServedRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.TransitionManagedBuyerSeatToSelfServedRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.TransitionManagedBuyerSeatToSelfServedRequest} TransitionManagedBuyerSeatToSelfServedRequest
             */
            TransitionManagedBuyerSeatToSelfServedRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.TransitionManagedBuyerSeatToSelfServedRequest)
                    return object;
                var message = new $root.teads.api.TransitionManagedBuyerSeatToSelfServedRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.TransitionManagedBuyerSeatToSelfServedRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.seatId != null)
                    if ($util.Long)
                        (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                    else if (typeof object.seatId === "string")
                        message.seatId = parseInt(object.seatId, 10);
                    else if (typeof object.seatId === "number")
                        message.seatId = object.seatId;
                    else if (typeof object.seatId === "object")
                        message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                if (object.platformFee != null)
                    message.platformFee = Number(object.platformFee);
                return message;
            };

            /**
             * Creates a plain object from a TransitionManagedBuyerSeatToSelfServedRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.TransitionManagedBuyerSeatToSelfServedRequest
             * @static
             * @param {teads.api.TransitionManagedBuyerSeatToSelfServedRequest} message TransitionManagedBuyerSeatToSelfServedRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            TransitionManagedBuyerSeatToSelfServedRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seatId = options.longs === String ? "0" : 0;
                    object.platformFee = 0;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.seatId != null && message.hasOwnProperty("seatId"))
                    if (typeof message.seatId === "number")
                        object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                    else
                        object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                if (message.platformFee != null && message.hasOwnProperty("platformFee"))
                    object.platformFee = options.json && !isFinite(message.platformFee) ? String(message.platformFee) : message.platformFee;
                return object;
            };

            /**
             * Converts this TransitionManagedBuyerSeatToSelfServedRequest to JSON.
             * @function toJSON
             * @memberof teads.api.TransitionManagedBuyerSeatToSelfServedRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            TransitionManagedBuyerSeatToSelfServedRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for TransitionManagedBuyerSeatToSelfServedRequest
             * @function getTypeUrl
             * @memberof teads.api.TransitionManagedBuyerSeatToSelfServedRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            TransitionManagedBuyerSeatToSelfServedRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.TransitionManagedBuyerSeatToSelfServedRequest";
            };

            return TransitionManagedBuyerSeatToSelfServedRequest;
        })();

        api.TransitionManagedBuyerSeatToSelfServedResponse = (function() {

            /**
             * Properties of a TransitionManagedBuyerSeatToSelfServedResponse.
             * @memberof teads.api
             * @interface ITransitionManagedBuyerSeatToSelfServedResponse
             * @property {number} seatId TransitionManagedBuyerSeatToSelfServedResponse seatId
             */

            /**
             * Constructs a new TransitionManagedBuyerSeatToSelfServedResponse.
             * @memberof teads.api
             * @classdesc Represents a TransitionManagedBuyerSeatToSelfServedResponse.
             * @implements ITransitionManagedBuyerSeatToSelfServedResponse
             * @constructor
             * @param {teads.api.ITransitionManagedBuyerSeatToSelfServedResponse=} [properties] Properties to set
             */
            function TransitionManagedBuyerSeatToSelfServedResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * TransitionManagedBuyerSeatToSelfServedResponse seatId.
             * @member {number} seatId
             * @memberof teads.api.TransitionManagedBuyerSeatToSelfServedResponse
             * @instance
             */
            TransitionManagedBuyerSeatToSelfServedResponse.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new TransitionManagedBuyerSeatToSelfServedResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.TransitionManagedBuyerSeatToSelfServedResponse
             * @static
             * @param {teads.api.ITransitionManagedBuyerSeatToSelfServedResponse=} [properties] Properties to set
             * @returns {teads.api.TransitionManagedBuyerSeatToSelfServedResponse} TransitionManagedBuyerSeatToSelfServedResponse instance
             */
            TransitionManagedBuyerSeatToSelfServedResponse.create = function create(properties) {
                return new TransitionManagedBuyerSeatToSelfServedResponse(properties);
            };

            /**
             * Encodes the specified TransitionManagedBuyerSeatToSelfServedResponse message. Does not implicitly {@link teads.api.TransitionManagedBuyerSeatToSelfServedResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.TransitionManagedBuyerSeatToSelfServedResponse
             * @static
             * @param {teads.api.ITransitionManagedBuyerSeatToSelfServedResponse} message TransitionManagedBuyerSeatToSelfServedResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TransitionManagedBuyerSeatToSelfServedResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seatId);
                return writer;
            };

            /**
             * Encodes the specified TransitionManagedBuyerSeatToSelfServedResponse message, length delimited. Does not implicitly {@link teads.api.TransitionManagedBuyerSeatToSelfServedResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.TransitionManagedBuyerSeatToSelfServedResponse
             * @static
             * @param {teads.api.ITransitionManagedBuyerSeatToSelfServedResponse} message TransitionManagedBuyerSeatToSelfServedResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TransitionManagedBuyerSeatToSelfServedResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a TransitionManagedBuyerSeatToSelfServedResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.TransitionManagedBuyerSeatToSelfServedResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.TransitionManagedBuyerSeatToSelfServedResponse} TransitionManagedBuyerSeatToSelfServedResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TransitionManagedBuyerSeatToSelfServedResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.TransitionManagedBuyerSeatToSelfServedResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.seatId = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("seatId"))
                    throw $util.ProtocolError("missing required 'seatId'", { instance: message });
                return message;
            };

            /**
             * Decodes a TransitionManagedBuyerSeatToSelfServedResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.TransitionManagedBuyerSeatToSelfServedResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.TransitionManagedBuyerSeatToSelfServedResponse} TransitionManagedBuyerSeatToSelfServedResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TransitionManagedBuyerSeatToSelfServedResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a TransitionManagedBuyerSeatToSelfServedResponse message.
             * @function verify
             * @memberof teads.api.TransitionManagedBuyerSeatToSelfServedResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            TransitionManagedBuyerSeatToSelfServedResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                    return "seatId: integer|Long expected";
                return null;
            };

            /**
             * Creates a TransitionManagedBuyerSeatToSelfServedResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.TransitionManagedBuyerSeatToSelfServedResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.TransitionManagedBuyerSeatToSelfServedResponse} TransitionManagedBuyerSeatToSelfServedResponse
             */
            TransitionManagedBuyerSeatToSelfServedResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.TransitionManagedBuyerSeatToSelfServedResponse)
                    return object;
                var message = new $root.teads.api.TransitionManagedBuyerSeatToSelfServedResponse();
                if (object.seatId != null)
                    if ($util.Long)
                        (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                    else if (typeof object.seatId === "string")
                        message.seatId = parseInt(object.seatId, 10);
                    else if (typeof object.seatId === "number")
                        message.seatId = object.seatId;
                    else if (typeof object.seatId === "object")
                        message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from a TransitionManagedBuyerSeatToSelfServedResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.TransitionManagedBuyerSeatToSelfServedResponse
             * @static
             * @param {teads.api.TransitionManagedBuyerSeatToSelfServedResponse} message TransitionManagedBuyerSeatToSelfServedResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            TransitionManagedBuyerSeatToSelfServedResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seatId = options.longs === String ? "0" : 0;
                if (message.seatId != null && message.hasOwnProperty("seatId"))
                    if (typeof message.seatId === "number")
                        object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                    else
                        object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                return object;
            };

            /**
             * Converts this TransitionManagedBuyerSeatToSelfServedResponse to JSON.
             * @function toJSON
             * @memberof teads.api.TransitionManagedBuyerSeatToSelfServedResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            TransitionManagedBuyerSeatToSelfServedResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for TransitionManagedBuyerSeatToSelfServedResponse
             * @function getTypeUrl
             * @memberof teads.api.TransitionManagedBuyerSeatToSelfServedResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            TransitionManagedBuyerSeatToSelfServedResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.TransitionManagedBuyerSeatToSelfServedResponse";
            };

            return TransitionManagedBuyerSeatToSelfServedResponse;
        })();

        api.TransitionSelfServedBuyerSeatToManagedRequest = (function() {

            /**
             * Properties of a TransitionSelfServedBuyerSeatToManagedRequest.
             * @memberof teads.api
             * @interface ITransitionSelfServedBuyerSeatToManagedRequest
             * @property {teads.api.ISecurityContext} securityContext TransitionSelfServedBuyerSeatToManagedRequest securityContext
             * @property {number} seatId TransitionSelfServedBuyerSeatToManagedRequest seatId
             * @property {number} managedFee TransitionSelfServedBuyerSeatToManagedRequest managedFee
             */

            /**
             * Constructs a new TransitionSelfServedBuyerSeatToManagedRequest.
             * @memberof teads.api
             * @classdesc Represents a TransitionSelfServedBuyerSeatToManagedRequest.
             * @implements ITransitionSelfServedBuyerSeatToManagedRequest
             * @constructor
             * @param {teads.api.ITransitionSelfServedBuyerSeatToManagedRequest=} [properties] Properties to set
             */
            function TransitionSelfServedBuyerSeatToManagedRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * TransitionSelfServedBuyerSeatToManagedRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.TransitionSelfServedBuyerSeatToManagedRequest
             * @instance
             */
            TransitionSelfServedBuyerSeatToManagedRequest.prototype.securityContext = null;

            /**
             * TransitionSelfServedBuyerSeatToManagedRequest seatId.
             * @member {number} seatId
             * @memberof teads.api.TransitionSelfServedBuyerSeatToManagedRequest
             * @instance
             */
            TransitionSelfServedBuyerSeatToManagedRequest.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * TransitionSelfServedBuyerSeatToManagedRequest managedFee.
             * @member {number} managedFee
             * @memberof teads.api.TransitionSelfServedBuyerSeatToManagedRequest
             * @instance
             */
            TransitionSelfServedBuyerSeatToManagedRequest.prototype.managedFee = 0;

            /**
             * Creates a new TransitionSelfServedBuyerSeatToManagedRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.TransitionSelfServedBuyerSeatToManagedRequest
             * @static
             * @param {teads.api.ITransitionSelfServedBuyerSeatToManagedRequest=} [properties] Properties to set
             * @returns {teads.api.TransitionSelfServedBuyerSeatToManagedRequest} TransitionSelfServedBuyerSeatToManagedRequest instance
             */
            TransitionSelfServedBuyerSeatToManagedRequest.create = function create(properties) {
                return new TransitionSelfServedBuyerSeatToManagedRequest(properties);
            };

            /**
             * Encodes the specified TransitionSelfServedBuyerSeatToManagedRequest message. Does not implicitly {@link teads.api.TransitionSelfServedBuyerSeatToManagedRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.TransitionSelfServedBuyerSeatToManagedRequest
             * @static
             * @param {teads.api.ITransitionSelfServedBuyerSeatToManagedRequest} message TransitionSelfServedBuyerSeatToManagedRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TransitionSelfServedBuyerSeatToManagedRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.seatId);
                writer.uint32(/* id 3, wireType 1 =*/25).double(message.managedFee);
                return writer;
            };

            /**
             * Encodes the specified TransitionSelfServedBuyerSeatToManagedRequest message, length delimited. Does not implicitly {@link teads.api.TransitionSelfServedBuyerSeatToManagedRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.TransitionSelfServedBuyerSeatToManagedRequest
             * @static
             * @param {teads.api.ITransitionSelfServedBuyerSeatToManagedRequest} message TransitionSelfServedBuyerSeatToManagedRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TransitionSelfServedBuyerSeatToManagedRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a TransitionSelfServedBuyerSeatToManagedRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.TransitionSelfServedBuyerSeatToManagedRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.TransitionSelfServedBuyerSeatToManagedRequest} TransitionSelfServedBuyerSeatToManagedRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TransitionSelfServedBuyerSeatToManagedRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.TransitionSelfServedBuyerSeatToManagedRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.seatId = reader.int64();
                            break;
                        }
                    case 3: {
                            message.managedFee = reader.double();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("seatId"))
                    throw $util.ProtocolError("missing required 'seatId'", { instance: message });
                if (!message.hasOwnProperty("managedFee"))
                    throw $util.ProtocolError("missing required 'managedFee'", { instance: message });
                return message;
            };

            /**
             * Decodes a TransitionSelfServedBuyerSeatToManagedRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.TransitionSelfServedBuyerSeatToManagedRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.TransitionSelfServedBuyerSeatToManagedRequest} TransitionSelfServedBuyerSeatToManagedRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TransitionSelfServedBuyerSeatToManagedRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a TransitionSelfServedBuyerSeatToManagedRequest message.
             * @function verify
             * @memberof teads.api.TransitionSelfServedBuyerSeatToManagedRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            TransitionSelfServedBuyerSeatToManagedRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                    return "seatId: integer|Long expected";
                if (typeof message.managedFee !== "number")
                    return "managedFee: number expected";
                return null;
            };

            /**
             * Creates a TransitionSelfServedBuyerSeatToManagedRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.TransitionSelfServedBuyerSeatToManagedRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.TransitionSelfServedBuyerSeatToManagedRequest} TransitionSelfServedBuyerSeatToManagedRequest
             */
            TransitionSelfServedBuyerSeatToManagedRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.TransitionSelfServedBuyerSeatToManagedRequest)
                    return object;
                var message = new $root.teads.api.TransitionSelfServedBuyerSeatToManagedRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.TransitionSelfServedBuyerSeatToManagedRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.seatId != null)
                    if ($util.Long)
                        (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                    else if (typeof object.seatId === "string")
                        message.seatId = parseInt(object.seatId, 10);
                    else if (typeof object.seatId === "number")
                        message.seatId = object.seatId;
                    else if (typeof object.seatId === "object")
                        message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                if (object.managedFee != null)
                    message.managedFee = Number(object.managedFee);
                return message;
            };

            /**
             * Creates a plain object from a TransitionSelfServedBuyerSeatToManagedRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.TransitionSelfServedBuyerSeatToManagedRequest
             * @static
             * @param {teads.api.TransitionSelfServedBuyerSeatToManagedRequest} message TransitionSelfServedBuyerSeatToManagedRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            TransitionSelfServedBuyerSeatToManagedRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seatId = options.longs === String ? "0" : 0;
                    object.managedFee = 0;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.seatId != null && message.hasOwnProperty("seatId"))
                    if (typeof message.seatId === "number")
                        object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                    else
                        object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                if (message.managedFee != null && message.hasOwnProperty("managedFee"))
                    object.managedFee = options.json && !isFinite(message.managedFee) ? String(message.managedFee) : message.managedFee;
                return object;
            };

            /**
             * Converts this TransitionSelfServedBuyerSeatToManagedRequest to JSON.
             * @function toJSON
             * @memberof teads.api.TransitionSelfServedBuyerSeatToManagedRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            TransitionSelfServedBuyerSeatToManagedRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for TransitionSelfServedBuyerSeatToManagedRequest
             * @function getTypeUrl
             * @memberof teads.api.TransitionSelfServedBuyerSeatToManagedRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            TransitionSelfServedBuyerSeatToManagedRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.TransitionSelfServedBuyerSeatToManagedRequest";
            };

            return TransitionSelfServedBuyerSeatToManagedRequest;
        })();

        api.TransitionSelfServedBuyerSeatToManagedResponse = (function() {

            /**
             * Properties of a TransitionSelfServedBuyerSeatToManagedResponse.
             * @memberof teads.api
             * @interface ITransitionSelfServedBuyerSeatToManagedResponse
             * @property {number} seatId TransitionSelfServedBuyerSeatToManagedResponse seatId
             */

            /**
             * Constructs a new TransitionSelfServedBuyerSeatToManagedResponse.
             * @memberof teads.api
             * @classdesc Represents a TransitionSelfServedBuyerSeatToManagedResponse.
             * @implements ITransitionSelfServedBuyerSeatToManagedResponse
             * @constructor
             * @param {teads.api.ITransitionSelfServedBuyerSeatToManagedResponse=} [properties] Properties to set
             */
            function TransitionSelfServedBuyerSeatToManagedResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * TransitionSelfServedBuyerSeatToManagedResponse seatId.
             * @member {number} seatId
             * @memberof teads.api.TransitionSelfServedBuyerSeatToManagedResponse
             * @instance
             */
            TransitionSelfServedBuyerSeatToManagedResponse.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new TransitionSelfServedBuyerSeatToManagedResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.TransitionSelfServedBuyerSeatToManagedResponse
             * @static
             * @param {teads.api.ITransitionSelfServedBuyerSeatToManagedResponse=} [properties] Properties to set
             * @returns {teads.api.TransitionSelfServedBuyerSeatToManagedResponse} TransitionSelfServedBuyerSeatToManagedResponse instance
             */
            TransitionSelfServedBuyerSeatToManagedResponse.create = function create(properties) {
                return new TransitionSelfServedBuyerSeatToManagedResponse(properties);
            };

            /**
             * Encodes the specified TransitionSelfServedBuyerSeatToManagedResponse message. Does not implicitly {@link teads.api.TransitionSelfServedBuyerSeatToManagedResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.TransitionSelfServedBuyerSeatToManagedResponse
             * @static
             * @param {teads.api.ITransitionSelfServedBuyerSeatToManagedResponse} message TransitionSelfServedBuyerSeatToManagedResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TransitionSelfServedBuyerSeatToManagedResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seatId);
                return writer;
            };

            /**
             * Encodes the specified TransitionSelfServedBuyerSeatToManagedResponse message, length delimited. Does not implicitly {@link teads.api.TransitionSelfServedBuyerSeatToManagedResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.TransitionSelfServedBuyerSeatToManagedResponse
             * @static
             * @param {teads.api.ITransitionSelfServedBuyerSeatToManagedResponse} message TransitionSelfServedBuyerSeatToManagedResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            TransitionSelfServedBuyerSeatToManagedResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a TransitionSelfServedBuyerSeatToManagedResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.TransitionSelfServedBuyerSeatToManagedResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.TransitionSelfServedBuyerSeatToManagedResponse} TransitionSelfServedBuyerSeatToManagedResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TransitionSelfServedBuyerSeatToManagedResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.TransitionSelfServedBuyerSeatToManagedResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.seatId = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("seatId"))
                    throw $util.ProtocolError("missing required 'seatId'", { instance: message });
                return message;
            };

            /**
             * Decodes a TransitionSelfServedBuyerSeatToManagedResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.TransitionSelfServedBuyerSeatToManagedResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.TransitionSelfServedBuyerSeatToManagedResponse} TransitionSelfServedBuyerSeatToManagedResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            TransitionSelfServedBuyerSeatToManagedResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a TransitionSelfServedBuyerSeatToManagedResponse message.
             * @function verify
             * @memberof teads.api.TransitionSelfServedBuyerSeatToManagedResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            TransitionSelfServedBuyerSeatToManagedResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                    return "seatId: integer|Long expected";
                return null;
            };

            /**
             * Creates a TransitionSelfServedBuyerSeatToManagedResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.TransitionSelfServedBuyerSeatToManagedResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.TransitionSelfServedBuyerSeatToManagedResponse} TransitionSelfServedBuyerSeatToManagedResponse
             */
            TransitionSelfServedBuyerSeatToManagedResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.TransitionSelfServedBuyerSeatToManagedResponse)
                    return object;
                var message = new $root.teads.api.TransitionSelfServedBuyerSeatToManagedResponse();
                if (object.seatId != null)
                    if ($util.Long)
                        (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                    else if (typeof object.seatId === "string")
                        message.seatId = parseInt(object.seatId, 10);
                    else if (typeof object.seatId === "number")
                        message.seatId = object.seatId;
                    else if (typeof object.seatId === "object")
                        message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from a TransitionSelfServedBuyerSeatToManagedResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.TransitionSelfServedBuyerSeatToManagedResponse
             * @static
             * @param {teads.api.TransitionSelfServedBuyerSeatToManagedResponse} message TransitionSelfServedBuyerSeatToManagedResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            TransitionSelfServedBuyerSeatToManagedResponse.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seatId = options.longs === String ? "0" : 0;
                if (message.seatId != null && message.hasOwnProperty("seatId"))
                    if (typeof message.seatId === "number")
                        object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                    else
                        object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                return object;
            };

            /**
             * Converts this TransitionSelfServedBuyerSeatToManagedResponse to JSON.
             * @function toJSON
             * @memberof teads.api.TransitionSelfServedBuyerSeatToManagedResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            TransitionSelfServedBuyerSeatToManagedResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for TransitionSelfServedBuyerSeatToManagedResponse
             * @function getTypeUrl
             * @memberof teads.api.TransitionSelfServedBuyerSeatToManagedResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            TransitionSelfServedBuyerSeatToManagedResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.TransitionSelfServedBuyerSeatToManagedResponse";
            };

            return TransitionSelfServedBuyerSeatToManagedResponse;
        })();

        api.UpdateBuyerSeatFeeRequest = (function() {

            /**
             * Properties of an UpdateBuyerSeatFeeRequest.
             * @memberof teads.api
             * @interface IUpdateBuyerSeatFeeRequest
             * @property {teads.api.ISecurityContext} securityContext UpdateBuyerSeatFeeRequest securityContext
             * @property {number} seatId UpdateBuyerSeatFeeRequest seatId
             * @property {number} fee UpdateBuyerSeatFeeRequest fee
             */

            /**
             * Constructs a new UpdateBuyerSeatFeeRequest.
             * @memberof teads.api
             * @classdesc Represents an UpdateBuyerSeatFeeRequest.
             * @implements IUpdateBuyerSeatFeeRequest
             * @constructor
             * @param {teads.api.IUpdateBuyerSeatFeeRequest=} [properties] Properties to set
             */
            function UpdateBuyerSeatFeeRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * UpdateBuyerSeatFeeRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.UpdateBuyerSeatFeeRequest
             * @instance
             */
            UpdateBuyerSeatFeeRequest.prototype.securityContext = null;

            /**
             * UpdateBuyerSeatFeeRequest seatId.
             * @member {number} seatId
             * @memberof teads.api.UpdateBuyerSeatFeeRequest
             * @instance
             */
            UpdateBuyerSeatFeeRequest.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * UpdateBuyerSeatFeeRequest fee.
             * @member {number} fee
             * @memberof teads.api.UpdateBuyerSeatFeeRequest
             * @instance
             */
            UpdateBuyerSeatFeeRequest.prototype.fee = 0;

            /**
             * Creates a new UpdateBuyerSeatFeeRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.UpdateBuyerSeatFeeRequest
             * @static
             * @param {teads.api.IUpdateBuyerSeatFeeRequest=} [properties] Properties to set
             * @returns {teads.api.UpdateBuyerSeatFeeRequest} UpdateBuyerSeatFeeRequest instance
             */
            UpdateBuyerSeatFeeRequest.create = function create(properties) {
                return new UpdateBuyerSeatFeeRequest(properties);
            };

            /**
             * Encodes the specified UpdateBuyerSeatFeeRequest message. Does not implicitly {@link teads.api.UpdateBuyerSeatFeeRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.UpdateBuyerSeatFeeRequest
             * @static
             * @param {teads.api.IUpdateBuyerSeatFeeRequest} message UpdateBuyerSeatFeeRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UpdateBuyerSeatFeeRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.seatId);
                writer.uint32(/* id 3, wireType 1 =*/25).double(message.fee);
                return writer;
            };

            /**
             * Encodes the specified UpdateBuyerSeatFeeRequest message, length delimited. Does not implicitly {@link teads.api.UpdateBuyerSeatFeeRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.UpdateBuyerSeatFeeRequest
             * @static
             * @param {teads.api.IUpdateBuyerSeatFeeRequest} message UpdateBuyerSeatFeeRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UpdateBuyerSeatFeeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an UpdateBuyerSeatFeeRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.UpdateBuyerSeatFeeRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.UpdateBuyerSeatFeeRequest} UpdateBuyerSeatFeeRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UpdateBuyerSeatFeeRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.UpdateBuyerSeatFeeRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.seatId = reader.int64();
                            break;
                        }
                    case 3: {
                            message.fee = reader.double();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("seatId"))
                    throw $util.ProtocolError("missing required 'seatId'", { instance: message });
                if (!message.hasOwnProperty("fee"))
                    throw $util.ProtocolError("missing required 'fee'", { instance: message });
                return message;
            };

            /**
             * Decodes an UpdateBuyerSeatFeeRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.UpdateBuyerSeatFeeRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.UpdateBuyerSeatFeeRequest} UpdateBuyerSeatFeeRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UpdateBuyerSeatFeeRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an UpdateBuyerSeatFeeRequest message.
             * @function verify
             * @memberof teads.api.UpdateBuyerSeatFeeRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            UpdateBuyerSeatFeeRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                    return "seatId: integer|Long expected";
                if (typeof message.fee !== "number")
                    return "fee: number expected";
                return null;
            };

            /**
             * Creates an UpdateBuyerSeatFeeRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.UpdateBuyerSeatFeeRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.UpdateBuyerSeatFeeRequest} UpdateBuyerSeatFeeRequest
             */
            UpdateBuyerSeatFeeRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.UpdateBuyerSeatFeeRequest)
                    return object;
                var message = new $root.teads.api.UpdateBuyerSeatFeeRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.UpdateBuyerSeatFeeRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.seatId != null)
                    if ($util.Long)
                        (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                    else if (typeof object.seatId === "string")
                        message.seatId = parseInt(object.seatId, 10);
                    else if (typeof object.seatId === "number")
                        message.seatId = object.seatId;
                    else if (typeof object.seatId === "object")
                        message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                if (object.fee != null)
                    message.fee = Number(object.fee);
                return message;
            };

            /**
             * Creates a plain object from an UpdateBuyerSeatFeeRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.UpdateBuyerSeatFeeRequest
             * @static
             * @param {teads.api.UpdateBuyerSeatFeeRequest} message UpdateBuyerSeatFeeRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            UpdateBuyerSeatFeeRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seatId = options.longs === String ? "0" : 0;
                    object.fee = 0;
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.seatId != null && message.hasOwnProperty("seatId"))
                    if (typeof message.seatId === "number")
                        object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                    else
                        object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                if (message.fee != null && message.hasOwnProperty("fee"))
                    object.fee = options.json && !isFinite(message.fee) ? String(message.fee) : message.fee;
                return object;
            };

            /**
             * Converts this UpdateBuyerSeatFeeRequest to JSON.
             * @function toJSON
             * @memberof teads.api.UpdateBuyerSeatFeeRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            UpdateBuyerSeatFeeRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for UpdateBuyerSeatFeeRequest
             * @function getTypeUrl
             * @memberof teads.api.UpdateBuyerSeatFeeRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            UpdateBuyerSeatFeeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.UpdateBuyerSeatFeeRequest";
            };

            return UpdateBuyerSeatFeeRequest;
        })();

        api.UpdateBuyerSeatFeeResponse = (function() {

            /**
             * Properties of an UpdateBuyerSeatFeeResponse.
             * @memberof teads.api
             * @interface IUpdateBuyerSeatFeeResponse
             */

            /**
             * Constructs a new UpdateBuyerSeatFeeResponse.
             * @memberof teads.api
             * @classdesc Represents an UpdateBuyerSeatFeeResponse.
             * @implements IUpdateBuyerSeatFeeResponse
             * @constructor
             * @param {teads.api.IUpdateBuyerSeatFeeResponse=} [properties] Properties to set
             */
            function UpdateBuyerSeatFeeResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Creates a new UpdateBuyerSeatFeeResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.UpdateBuyerSeatFeeResponse
             * @static
             * @param {teads.api.IUpdateBuyerSeatFeeResponse=} [properties] Properties to set
             * @returns {teads.api.UpdateBuyerSeatFeeResponse} UpdateBuyerSeatFeeResponse instance
             */
            UpdateBuyerSeatFeeResponse.create = function create(properties) {
                return new UpdateBuyerSeatFeeResponse(properties);
            };

            /**
             * Encodes the specified UpdateBuyerSeatFeeResponse message. Does not implicitly {@link teads.api.UpdateBuyerSeatFeeResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.UpdateBuyerSeatFeeResponse
             * @static
             * @param {teads.api.IUpdateBuyerSeatFeeResponse} message UpdateBuyerSeatFeeResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UpdateBuyerSeatFeeResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified UpdateBuyerSeatFeeResponse message, length delimited. Does not implicitly {@link teads.api.UpdateBuyerSeatFeeResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.UpdateBuyerSeatFeeResponse
             * @static
             * @param {teads.api.IUpdateBuyerSeatFeeResponse} message UpdateBuyerSeatFeeResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UpdateBuyerSeatFeeResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an UpdateBuyerSeatFeeResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.UpdateBuyerSeatFeeResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.UpdateBuyerSeatFeeResponse} UpdateBuyerSeatFeeResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UpdateBuyerSeatFeeResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.UpdateBuyerSeatFeeResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes an UpdateBuyerSeatFeeResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.UpdateBuyerSeatFeeResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.UpdateBuyerSeatFeeResponse} UpdateBuyerSeatFeeResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UpdateBuyerSeatFeeResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an UpdateBuyerSeatFeeResponse message.
             * @function verify
             * @memberof teads.api.UpdateBuyerSeatFeeResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            UpdateBuyerSeatFeeResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates an UpdateBuyerSeatFeeResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.UpdateBuyerSeatFeeResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.UpdateBuyerSeatFeeResponse} UpdateBuyerSeatFeeResponse
             */
            UpdateBuyerSeatFeeResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.UpdateBuyerSeatFeeResponse)
                    return object;
                return new $root.teads.api.UpdateBuyerSeatFeeResponse();
            };

            /**
             * Creates a plain object from an UpdateBuyerSeatFeeResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.UpdateBuyerSeatFeeResponse
             * @static
             * @param {teads.api.UpdateBuyerSeatFeeResponse} message UpdateBuyerSeatFeeResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            UpdateBuyerSeatFeeResponse.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this UpdateBuyerSeatFeeResponse to JSON.
             * @function toJSON
             * @memberof teads.api.UpdateBuyerSeatFeeResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            UpdateBuyerSeatFeeResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for UpdateBuyerSeatFeeResponse
             * @function getTypeUrl
             * @memberof teads.api.UpdateBuyerSeatFeeResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            UpdateBuyerSeatFeeResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.UpdateBuyerSeatFeeResponse";
            };

            return UpdateBuyerSeatFeeResponse;
        })();

        api.UpdateBuyerSeatNameRequest = (function() {

            /**
             * Properties of an UpdateBuyerSeatNameRequest.
             * @memberof teads.api
             * @interface IUpdateBuyerSeatNameRequest
             * @property {teads.api.ISecurityContext} securityContext UpdateBuyerSeatNameRequest securityContext
             * @property {number} seatId UpdateBuyerSeatNameRequest seatId
             * @property {string} name UpdateBuyerSeatNameRequest name
             */

            /**
             * Constructs a new UpdateBuyerSeatNameRequest.
             * @memberof teads.api
             * @classdesc Represents an UpdateBuyerSeatNameRequest.
             * @implements IUpdateBuyerSeatNameRequest
             * @constructor
             * @param {teads.api.IUpdateBuyerSeatNameRequest=} [properties] Properties to set
             */
            function UpdateBuyerSeatNameRequest(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * UpdateBuyerSeatNameRequest securityContext.
             * @member {teads.api.ISecurityContext} securityContext
             * @memberof teads.api.UpdateBuyerSeatNameRequest
             * @instance
             */
            UpdateBuyerSeatNameRequest.prototype.securityContext = null;

            /**
             * UpdateBuyerSeatNameRequest seatId.
             * @member {number} seatId
             * @memberof teads.api.UpdateBuyerSeatNameRequest
             * @instance
             */
            UpdateBuyerSeatNameRequest.prototype.seatId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * UpdateBuyerSeatNameRequest name.
             * @member {string} name
             * @memberof teads.api.UpdateBuyerSeatNameRequest
             * @instance
             */
            UpdateBuyerSeatNameRequest.prototype.name = "";

            /**
             * Creates a new UpdateBuyerSeatNameRequest instance using the specified properties.
             * @function create
             * @memberof teads.api.UpdateBuyerSeatNameRequest
             * @static
             * @param {teads.api.IUpdateBuyerSeatNameRequest=} [properties] Properties to set
             * @returns {teads.api.UpdateBuyerSeatNameRequest} UpdateBuyerSeatNameRequest instance
             */
            UpdateBuyerSeatNameRequest.create = function create(properties) {
                return new UpdateBuyerSeatNameRequest(properties);
            };

            /**
             * Encodes the specified UpdateBuyerSeatNameRequest message. Does not implicitly {@link teads.api.UpdateBuyerSeatNameRequest.verify|verify} messages.
             * @function encode
             * @memberof teads.api.UpdateBuyerSeatNameRequest
             * @static
             * @param {teads.api.IUpdateBuyerSeatNameRequest} message UpdateBuyerSeatNameRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UpdateBuyerSeatNameRequest.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                $root.teads.api.SecurityContext.encode(message.securityContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.seatId);
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                return writer;
            };

            /**
             * Encodes the specified UpdateBuyerSeatNameRequest message, length delimited. Does not implicitly {@link teads.api.UpdateBuyerSeatNameRequest.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.UpdateBuyerSeatNameRequest
             * @static
             * @param {teads.api.IUpdateBuyerSeatNameRequest} message UpdateBuyerSeatNameRequest message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UpdateBuyerSeatNameRequest.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an UpdateBuyerSeatNameRequest message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.UpdateBuyerSeatNameRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.UpdateBuyerSeatNameRequest} UpdateBuyerSeatNameRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UpdateBuyerSeatNameRequest.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.UpdateBuyerSeatNameRequest();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.securityContext = $root.teads.api.SecurityContext.decode(reader, reader.uint32());
                            break;
                        }
                    case 2: {
                            message.seatId = reader.int64();
                            break;
                        }
                    case 3: {
                            message.name = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                if (!message.hasOwnProperty("securityContext"))
                    throw $util.ProtocolError("missing required 'securityContext'", { instance: message });
                if (!message.hasOwnProperty("seatId"))
                    throw $util.ProtocolError("missing required 'seatId'", { instance: message });
                if (!message.hasOwnProperty("name"))
                    throw $util.ProtocolError("missing required 'name'", { instance: message });
                return message;
            };

            /**
             * Decodes an UpdateBuyerSeatNameRequest message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.UpdateBuyerSeatNameRequest
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.UpdateBuyerSeatNameRequest} UpdateBuyerSeatNameRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UpdateBuyerSeatNameRequest.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an UpdateBuyerSeatNameRequest message.
             * @function verify
             * @memberof teads.api.UpdateBuyerSeatNameRequest
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            UpdateBuyerSeatNameRequest.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                {
                    var error = $root.teads.api.SecurityContext.verify(message.securityContext);
                    if (error)
                        return "securityContext." + error;
                }
                if (!$util.isInteger(message.seatId) && !(message.seatId && $util.isInteger(message.seatId.low) && $util.isInteger(message.seatId.high)))
                    return "seatId: integer|Long expected";
                if (!$util.isString(message.name))
                    return "name: string expected";
                return null;
            };

            /**
             * Creates an UpdateBuyerSeatNameRequest message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.UpdateBuyerSeatNameRequest
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.UpdateBuyerSeatNameRequest} UpdateBuyerSeatNameRequest
             */
            UpdateBuyerSeatNameRequest.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.UpdateBuyerSeatNameRequest)
                    return object;
                var message = new $root.teads.api.UpdateBuyerSeatNameRequest();
                if (object.securityContext != null) {
                    if (typeof object.securityContext !== "object")
                        throw TypeError(".teads.api.UpdateBuyerSeatNameRequest.securityContext: object expected");
                    message.securityContext = $root.teads.api.SecurityContext.fromObject(object.securityContext);
                }
                if (object.seatId != null)
                    if ($util.Long)
                        (message.seatId = $util.Long.fromValue(object.seatId)).unsigned = false;
                    else if (typeof object.seatId === "string")
                        message.seatId = parseInt(object.seatId, 10);
                    else if (typeof object.seatId === "number")
                        message.seatId = object.seatId;
                    else if (typeof object.seatId === "object")
                        message.seatId = new $util.LongBits(object.seatId.low >>> 0, object.seatId.high >>> 0).toNumber();
                if (object.name != null)
                    message.name = String(object.name);
                return message;
            };

            /**
             * Creates a plain object from an UpdateBuyerSeatNameRequest message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.UpdateBuyerSeatNameRequest
             * @static
             * @param {teads.api.UpdateBuyerSeatNameRequest} message UpdateBuyerSeatNameRequest
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            UpdateBuyerSeatNameRequest.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.securityContext = null;
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seatId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seatId = options.longs === String ? "0" : 0;
                    object.name = "";
                }
                if (message.securityContext != null && message.hasOwnProperty("securityContext"))
                    object.securityContext = $root.teads.api.SecurityContext.toObject(message.securityContext, options);
                if (message.seatId != null && message.hasOwnProperty("seatId"))
                    if (typeof message.seatId === "number")
                        object.seatId = options.longs === String ? String(message.seatId) : message.seatId;
                    else
                        object.seatId = options.longs === String ? $util.Long.prototype.toString.call(message.seatId) : options.longs === Number ? new $util.LongBits(message.seatId.low >>> 0, message.seatId.high >>> 0).toNumber() : message.seatId;
                if (message.name != null && message.hasOwnProperty("name"))
                    object.name = message.name;
                return object;
            };

            /**
             * Converts this UpdateBuyerSeatNameRequest to JSON.
             * @function toJSON
             * @memberof teads.api.UpdateBuyerSeatNameRequest
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            UpdateBuyerSeatNameRequest.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for UpdateBuyerSeatNameRequest
             * @function getTypeUrl
             * @memberof teads.api.UpdateBuyerSeatNameRequest
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            UpdateBuyerSeatNameRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.UpdateBuyerSeatNameRequest";
            };

            return UpdateBuyerSeatNameRequest;
        })();

        api.UpdateBuyerSeatNameResponse = (function() {

            /**
             * Properties of an UpdateBuyerSeatNameResponse.
             * @memberof teads.api
             * @interface IUpdateBuyerSeatNameResponse
             */

            /**
             * Constructs a new UpdateBuyerSeatNameResponse.
             * @memberof teads.api
             * @classdesc Represents an UpdateBuyerSeatNameResponse.
             * @implements IUpdateBuyerSeatNameResponse
             * @constructor
             * @param {teads.api.IUpdateBuyerSeatNameResponse=} [properties] Properties to set
             */
            function UpdateBuyerSeatNameResponse(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Creates a new UpdateBuyerSeatNameResponse instance using the specified properties.
             * @function create
             * @memberof teads.api.UpdateBuyerSeatNameResponse
             * @static
             * @param {teads.api.IUpdateBuyerSeatNameResponse=} [properties] Properties to set
             * @returns {teads.api.UpdateBuyerSeatNameResponse} UpdateBuyerSeatNameResponse instance
             */
            UpdateBuyerSeatNameResponse.create = function create(properties) {
                return new UpdateBuyerSeatNameResponse(properties);
            };

            /**
             * Encodes the specified UpdateBuyerSeatNameResponse message. Does not implicitly {@link teads.api.UpdateBuyerSeatNameResponse.verify|verify} messages.
             * @function encode
             * @memberof teads.api.UpdateBuyerSeatNameResponse
             * @static
             * @param {teads.api.IUpdateBuyerSeatNameResponse} message UpdateBuyerSeatNameResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UpdateBuyerSeatNameResponse.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                return writer;
            };

            /**
             * Encodes the specified UpdateBuyerSeatNameResponse message, length delimited. Does not implicitly {@link teads.api.UpdateBuyerSeatNameResponse.verify|verify} messages.
             * @function encodeDelimited
             * @memberof teads.api.UpdateBuyerSeatNameResponse
             * @static
             * @param {teads.api.IUpdateBuyerSeatNameResponse} message UpdateBuyerSeatNameResponse message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UpdateBuyerSeatNameResponse.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an UpdateBuyerSeatNameResponse message from the specified reader or buffer.
             * @function decode
             * @memberof teads.api.UpdateBuyerSeatNameResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {teads.api.UpdateBuyerSeatNameResponse} UpdateBuyerSeatNameResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UpdateBuyerSeatNameResponse.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.teads.api.UpdateBuyerSeatNameResponse();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes an UpdateBuyerSeatNameResponse message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof teads.api.UpdateBuyerSeatNameResponse
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {teads.api.UpdateBuyerSeatNameResponse} UpdateBuyerSeatNameResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UpdateBuyerSeatNameResponse.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an UpdateBuyerSeatNameResponse message.
             * @function verify
             * @memberof teads.api.UpdateBuyerSeatNameResponse
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            UpdateBuyerSeatNameResponse.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                return null;
            };

            /**
             * Creates an UpdateBuyerSeatNameResponse message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof teads.api.UpdateBuyerSeatNameResponse
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {teads.api.UpdateBuyerSeatNameResponse} UpdateBuyerSeatNameResponse
             */
            UpdateBuyerSeatNameResponse.fromObject = function fromObject(object) {
                if (object instanceof $root.teads.api.UpdateBuyerSeatNameResponse)
                    return object;
                return new $root.teads.api.UpdateBuyerSeatNameResponse();
            };

            /**
             * Creates a plain object from an UpdateBuyerSeatNameResponse message. Also converts values to other types if specified.
             * @function toObject
             * @memberof teads.api.UpdateBuyerSeatNameResponse
             * @static
             * @param {teads.api.UpdateBuyerSeatNameResponse} message UpdateBuyerSeatNameResponse
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            UpdateBuyerSeatNameResponse.toObject = function toObject() {
                return {};
            };

            /**
             * Converts this UpdateBuyerSeatNameResponse to JSON.
             * @function toJSON
             * @memberof teads.api.UpdateBuyerSeatNameResponse
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            UpdateBuyerSeatNameResponse.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for UpdateBuyerSeatNameResponse
             * @function getTypeUrl
             * @memberof teads.api.UpdateBuyerSeatNameResponse
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            UpdateBuyerSeatNameResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/teads.api.UpdateBuyerSeatNameResponse";
            };

            return UpdateBuyerSeatNameResponse;
        })();

        /**
         * AccountType enum.
         * @name teads.api.AccountType
         * @enum {number}
         * @property {number} ACCOUNT_TYPE_INTERNAL_EMPLOYEE=1 ACCOUNT_TYPE_INTERNAL_EMPLOYEE value
         * @property {number} ACCOUNT_TYPE_PUBLISHER=2 ACCOUNT_TYPE_PUBLISHER value
         * @property {number} ACCOUNT_TYPE_ADVERTISER=3 ACCOUNT_TYPE_ADVERTISER value
         * @property {number} ACCOUNT_TYPE_AGENCY=4 ACCOUNT_TYPE_AGENCY value
         */
        api.AccountType = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "ACCOUNT_TYPE_INTERNAL_EMPLOYEE"] = 1;
            values[valuesById[2] = "ACCOUNT_TYPE_PUBLISHER"] = 2;
            values[valuesById[3] = "ACCOUNT_TYPE_ADVERTISER"] = 3;
            values[valuesById[4] = "ACCOUNT_TYPE_AGENCY"] = 4;
            return values;
        })();

        /**
         * AdvertiserFirstPartySegmentProvider enum.
         * @name teads.api.AdvertiserFirstPartySegmentProvider
         * @enum {number}
         * @property {number} ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_NIELSEN=1 ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_NIELSEN value
         * @property {number} ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_LIVERAMP=2 ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_LIVERAMP value
         * @property {number} ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_BLUEKAI=3 ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_BLUEKAI value
         * @property {number} ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_NEUSTAR=4 ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_NEUSTAR value
         * @property {number} ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_SALESFORCE=5 ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_SALESFORCE value
         * @property {number} ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_RETARGETLY=7 ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_RETARGETLY value
         */
        api.AdvertiserFirstPartySegmentProvider = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_NIELSEN"] = 1;
            values[valuesById[2] = "ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_LIVERAMP"] = 2;
            values[valuesById[3] = "ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_BLUEKAI"] = 3;
            values[valuesById[4] = "ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_NEUSTAR"] = 4;
            values[valuesById[5] = "ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_SALESFORCE"] = 5;
            values[valuesById[7] = "ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_RETARGETLY"] = 7;
            return values;
        })();

        /**
         * AdvertisingSolutionId enum.
         * @name teads.api.AdvertisingSolutionId
         * @enum {number}
         * @property {number} ADVERTISING_SOLUTION_ID_AWARENESS=1 ADVERTISING_SOLUTION_ID_AWARENESS value
         * @property {number} ADVERTISING_SOLUTION_ID_TA_CLICKS=2 ADVERTISING_SOLUTION_ID_TA_CLICKS value
         * @property {number} ADVERTISING_SOLUTION_ID_TA_VISITS=3 ADVERTISING_SOLUTION_ID_TA_VISITS value
         * @property {number} ADVERTISING_SOLUTION_ID_TA_MIXED=4 ADVERTISING_SOLUTION_ID_TA_MIXED value
         * @property {number} ADVERTISING_SOLUTION_ID_WEBSITE_CONVERSIONS=5 ADVERTISING_SOLUTION_ID_WEBSITE_CONVERSIONS value
         * @property {number} ADVERTISING_SOLUTION_ID_SEAMLESS_COMMERCE=6 ADVERTISING_SOLUTION_ID_SEAMLESS_COMMERCE value
         * @property {number} ADVERTISING_SOLUTION_ID_TA_CLICKS_GUARANTEED_CPC=7 ADVERTISING_SOLUTION_ID_TA_CLICKS_GUARANTEED_CPC value
         * @property {number} ADVERTISING_SOLUTION_ID_TA_VISITS_GUARANTEED_CPC=8 ADVERTISING_SOLUTION_ID_TA_VISITS_GUARANTEED_CPC value
         */
        api.AdvertisingSolutionId = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "ADVERTISING_SOLUTION_ID_AWARENESS"] = 1;
            values[valuesById[2] = "ADVERTISING_SOLUTION_ID_TA_CLICKS"] = 2;
            values[valuesById[3] = "ADVERTISING_SOLUTION_ID_TA_VISITS"] = 3;
            values[valuesById[4] = "ADVERTISING_SOLUTION_ID_TA_MIXED"] = 4;
            values[valuesById[5] = "ADVERTISING_SOLUTION_ID_WEBSITE_CONVERSIONS"] = 5;
            values[valuesById[6] = "ADVERTISING_SOLUTION_ID_SEAMLESS_COMMERCE"] = 6;
            values[valuesById[7] = "ADVERTISING_SOLUTION_ID_TA_CLICKS_GUARANTEED_CPC"] = 7;
            values[valuesById[8] = "ADVERTISING_SOLUTION_ID_TA_VISITS_GUARANTEED_CPC"] = 8;
            return values;
        })();

        /**
         * BuyerSeatStatus enum.
         * @name teads.api.BuyerSeatStatus
         * @enum {number}
         * @property {number} BUYER_SEAT_STATUS_ENABLED=1 BUYER_SEAT_STATUS_ENABLED value
         * @property {number} BUYER_SEAT_STATUS_DISABLED=2 BUYER_SEAT_STATUS_DISABLED value
         * @property {number} BUYER_SEAT_STATUS_PENDING_CLIENT_INPUT=3 BUYER_SEAT_STATUS_PENDING_CLIENT_INPUT value
         * @property {number} BUYER_SEAT_STATUS_PENDING_TEADS_INPUT=4 BUYER_SEAT_STATUS_PENDING_TEADS_INPUT value
         */
        api.BuyerSeatStatus = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "BUYER_SEAT_STATUS_ENABLED"] = 1;
            values[valuesById[2] = "BUYER_SEAT_STATUS_DISABLED"] = 2;
            values[valuesById[3] = "BUYER_SEAT_STATUS_PENDING_CLIENT_INPUT"] = 3;
            values[valuesById[4] = "BUYER_SEAT_STATUS_PENDING_TEADS_INPUT"] = 4;
            return values;
        })();

        /**
         * BuyerSeatStatusFlag enum.
         * @name teads.api.BuyerSeatStatusFlag
         * @enum {number}
         * @property {number} BUYER_SEAT_STATUS_FLAG_NOT_REQUIRED=0 BUYER_SEAT_STATUS_FLAG_NOT_REQUIRED value
         * @property {number} BUYER_SEAT_STATUS_FLAG_REQUIRED=1 BUYER_SEAT_STATUS_FLAG_REQUIRED value
         * @property {number} BUYER_SEAT_STATUS_FLAG_COMPLETED=2 BUYER_SEAT_STATUS_FLAG_COMPLETED value
         */
        api.BuyerSeatStatusFlag = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "BUYER_SEAT_STATUS_FLAG_NOT_REQUIRED"] = 0;
            values[valuesById[1] = "BUYER_SEAT_STATUS_FLAG_REQUIRED"] = 1;
            values[valuesById[2] = "BUYER_SEAT_STATUS_FLAG_COMPLETED"] = 2;
            return values;
        })();

        /**
         * BuyerSeatType enum.
         * @name teads.api.BuyerSeatType
         * @enum {number}
         * @property {number} BUYER_SEAT_TYPE_ADVERTISER=1 BUYER_SEAT_TYPE_ADVERTISER value
         * @property {number} BUYER_SEAT_TYPE_AGENCY=2 BUYER_SEAT_TYPE_AGENCY value
         */
        api.BuyerSeatType = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "BUYER_SEAT_TYPE_ADVERTISER"] = 1;
            values[valuesById[2] = "BUYER_SEAT_TYPE_AGENCY"] = 2;
            return values;
        })();

        /**
         * BuyerServiceLevel enum.
         * @name teads.api.BuyerServiceLevel
         * @enum {number}
         * @property {number} BUYER_SERVICE_LEVEL_MANAGED=1 BUYER_SERVICE_LEVEL_MANAGED value
         * @property {number} BUYER_SERVICE_LEVEL_SELF_SERVED=2 BUYER_SERVICE_LEVEL_SELF_SERVED value
         * @property {number} BUYER_SERVICE_LEVEL_IO=3 BUYER_SERVICE_LEVEL_IO value
         * @property {number} BUYER_SERVICE_LEVEL_INTERNAL=4 BUYER_SERVICE_LEVEL_INTERNAL value
         * @property {number} BUYER_SERVICE_LEVEL_CLIENT=5 BUYER_SERVICE_LEVEL_CLIENT value
         */
        api.BuyerServiceLevel = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "BUYER_SERVICE_LEVEL_MANAGED"] = 1;
            values[valuesById[2] = "BUYER_SERVICE_LEVEL_SELF_SERVED"] = 2;
            values[valuesById[3] = "BUYER_SERVICE_LEVEL_IO"] = 3;
            values[valuesById[4] = "BUYER_SERVICE_LEVEL_INTERNAL"] = 4;
            values[valuesById[5] = "BUYER_SERVICE_LEVEL_CLIENT"] = 5;
            return values;
        })();

        /**
         * CampaignMigrationReason enum.
         * @name teads.api.CampaignMigrationReason
         * @enum {number}
         * @property {number} CAMPAIGN_MIGRATION_REASON_TARGETING_NOT_AVAILABLE=0 CAMPAIGN_MIGRATION_REASON_TARGETING_NOT_AVAILABLE value
         * @property {number} CAMPAIGN_MIGRATION_REASON_AUCTION_TYPE_NOT_AVAILABLE=1 CAMPAIGN_MIGRATION_REASON_AUCTION_TYPE_NOT_AVAILABLE value
         * @property {number} CAMPAIGN_MIGRATION_REASON_BILLING_EVENT_NOT_AVAILABLE=2 CAMPAIGN_MIGRATION_REASON_BILLING_EVENT_NOT_AVAILABLE value
         * @property {number} CAMPAIGN_MIGRATION_REASON_PLAYER_MODE_NOT_AVAILABLE=3 CAMPAIGN_MIGRATION_REASON_PLAYER_MODE_NOT_AVAILABLE value
         * @property {number} CAMPAIGN_MIGRATION_REASON_OTHER=5 CAMPAIGN_MIGRATION_REASON_OTHER value
         * @property {number} CAMPAIGN_MIGRATION_REASON_IAS_PREBID=6 CAMPAIGN_MIGRATION_REASON_IAS_PREBID value
         * @property {number} CAMPAIGN_MIGRATION_REASON_MOAT_100_PERCENT=7 CAMPAIGN_MIGRATION_REASON_MOAT_100_PERCENT value
         * @property {number} CAMPAIGN_MIGRATION_REASON_RETARGETING_SEGMENTS=8 CAMPAIGN_MIGRATION_REASON_RETARGETING_SEGMENTS value
         * @property {number} CAMPAIGN_MIGRATION_REASON_OFFICE_PACK=9 CAMPAIGN_MIGRATION_REASON_OFFICE_PACK value
         * @property {number} CAMPAIGN_MIGRATION_REASON_FORMAT_POSITION=10 CAMPAIGN_MIGRATION_REASON_FORMAT_POSITION value
         * @property {number} CAMPAIGN_MIGRATION_REASON_CUSTOM_BRAND_SAFETY=11 CAMPAIGN_MIGRATION_REASON_CUSTOM_BRAND_SAFETY value
         * @property {number} CAMPAIGN_MIGRATION_REASON_CUSTOM_AUDIENCE=12 CAMPAIGN_MIGRATION_REASON_CUSTOM_AUDIENCE value
         * @property {number} CAMPAIGN_MIGRATION_REASON_TAM_ISSUE=13 CAMPAIGN_MIGRATION_REASON_TAM_ISSUE value
         * @property {number} CAMPAIGN_MIGRATION_REASON_ALTICE_DATA_SEGMENTS=14 CAMPAIGN_MIGRATION_REASON_ALTICE_DATA_SEGMENTS value
         * @property {number} CAMPAIGN_MIGRATION_REASON_CREATIVE_STUDIO_UNIT=15 CAMPAIGN_MIGRATION_REASON_CREATIVE_STUDIO_UNIT value
         * @property {number} CAMPAIGN_MIGRATION_REASON_CUSTOM_BILLING_EVENT=16 CAMPAIGN_MIGRATION_REASON_CUSTOM_BILLING_EVENT value
         * @property {number} CAMPAIGN_MIGRATION_REASON_PLAYER_MODE=17 CAMPAIGN_MIGRATION_REASON_PLAYER_MODE value
         * @property {number} CAMPAIGN_MIGRATION_REASON_ADDED_VALUE=18 CAMPAIGN_MIGRATION_REASON_ADDED_VALUE value
         * @property {number} CAMPAIGN_MIGRATION_REASON_REMARKETING_ON_CREATIVE_EVENT=19 CAMPAIGN_MIGRATION_REASON_REMARKETING_ON_CREATIVE_EVENT value
         * @property {number} CAMPAIGN_MIGRATION_REASON_LOOKALIKE_SEGMENTS=20 CAMPAIGN_MIGRATION_REASON_LOOKALIKE_SEGMENTS value
         * @property {number} CAMPAIGN_MIGRATION_REASON_GEO_POSTAL_CODES=21 CAMPAIGN_MIGRATION_REASON_GEO_POSTAL_CODES value
         * @property {number} CAMPAIGN_MIGRATION_REASON_CARRIER_PROVIDER=22 CAMPAIGN_MIGRATION_REASON_CARRIER_PROVIDER value
         * @property {number} CAMPAIGN_MIGRATION_REASON_AUDIENCES_STANDARD_TO_ACCURACY=23 CAMPAIGN_MIGRATION_REASON_AUDIENCES_STANDARD_TO_ACCURACY value
         * @property {number} CAMPAIGN_MIGRATION_REASON_CREATIVE_HOURLY_FLIGHTING=24 CAMPAIGN_MIGRATION_REASON_CREATIVE_HOURLY_FLIGHTING value
         * @property {number} CAMPAIGN_MIGRATION_REASON_INNOVATION_TEST=25 CAMPAIGN_MIGRATION_REASON_INNOVATION_TEST value
         * @property {number} CAMPAIGN_MIGRATION_REASON_NOT_SUPPORTED_TRAFFIC_ACQUISITION_CREATIVE=26 CAMPAIGN_MIGRATION_REASON_NOT_SUPPORTED_TRAFFIC_ACQUISITION_CREATIVE value
         * @property {number} CAMPAIGN_MIGRATION_REASON_TRAFFIC_ACQUISITION_REACHCAST=27 CAMPAIGN_MIGRATION_REASON_TRAFFIC_ACQUISITION_REACHCAST value
         * @property {number} CAMPAIGN_MIGRATION_REASON_CAMPAIGN_DATE_TO_THE_FUTURE=28 CAMPAIGN_MIGRATION_REASON_CAMPAIGN_DATE_TO_THE_FUTURE value
         * @property {number} CAMPAIGN_MIGRATION_REASON_CAMPAIGN_TIMEZONE=29 CAMPAIGN_MIGRATION_REASON_CAMPAIGN_TIMEZONE value
         * @property {number} CAMPAIGN_MIGRATION_REASON_CTV_INSTREAM_SUPPLY_TARGETING=30 CAMPAIGN_MIGRATION_REASON_CTV_INSTREAM_SUPPLY_TARGETING value
         * @property {number} CAMPAIGN_MIGRATION_REASON_GUARANTEED_SELF_SERVE_CAMPAIGN=31 CAMPAIGN_MIGRATION_REASON_GUARANTEED_SELF_SERVE_CAMPAIGN value
         * @property {number} CAMPAIGN_MIGRATION_REASON_PLAYER_VIEWABILITY=32 CAMPAIGN_MIGRATION_REASON_PLAYER_VIEWABILITY value
         * @property {number} CAMPAIGN_MIGRATION_REASON_TRACKING_PIXEL_ON_CLICK_EVENT=33 CAMPAIGN_MIGRATION_REASON_TRACKING_PIXEL_ON_CLICK_EVENT value
         * @property {number} CAMPAIGN_MIGRATION_REASON_VIRTUAL_PRICE_FOR_MANAGED_CAMPAIGN=34 CAMPAIGN_MIGRATION_REASON_VIRTUAL_PRICE_FOR_MANAGED_CAMPAIGN value
         * @property {number} CAMPAIGN_MIGRATION_REASON_HOURLY_FLIGHTING=35 CAMPAIGN_MIGRATION_REASON_HOURLY_FLIGHTING value
         * @property {number} CAMPAIGN_MIGRATION_REASON_ATTENTION_LUMEN_NO_SAMPLING=36 CAMPAIGN_MIGRATION_REASON_ATTENTION_LUMEN_NO_SAMPLING value
         */
        api.CampaignMigrationReason = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "CAMPAIGN_MIGRATION_REASON_TARGETING_NOT_AVAILABLE"] = 0;
            values[valuesById[1] = "CAMPAIGN_MIGRATION_REASON_AUCTION_TYPE_NOT_AVAILABLE"] = 1;
            values[valuesById[2] = "CAMPAIGN_MIGRATION_REASON_BILLING_EVENT_NOT_AVAILABLE"] = 2;
            values[valuesById[3] = "CAMPAIGN_MIGRATION_REASON_PLAYER_MODE_NOT_AVAILABLE"] = 3;
            values[valuesById[5] = "CAMPAIGN_MIGRATION_REASON_OTHER"] = 5;
            values[valuesById[6] = "CAMPAIGN_MIGRATION_REASON_IAS_PREBID"] = 6;
            values[valuesById[7] = "CAMPAIGN_MIGRATION_REASON_MOAT_100_PERCENT"] = 7;
            values[valuesById[8] = "CAMPAIGN_MIGRATION_REASON_RETARGETING_SEGMENTS"] = 8;
            values[valuesById[9] = "CAMPAIGN_MIGRATION_REASON_OFFICE_PACK"] = 9;
            values[valuesById[10] = "CAMPAIGN_MIGRATION_REASON_FORMAT_POSITION"] = 10;
            values[valuesById[11] = "CAMPAIGN_MIGRATION_REASON_CUSTOM_BRAND_SAFETY"] = 11;
            values[valuesById[12] = "CAMPAIGN_MIGRATION_REASON_CUSTOM_AUDIENCE"] = 12;
            values[valuesById[13] = "CAMPAIGN_MIGRATION_REASON_TAM_ISSUE"] = 13;
            values[valuesById[14] = "CAMPAIGN_MIGRATION_REASON_ALTICE_DATA_SEGMENTS"] = 14;
            values[valuesById[15] = "CAMPAIGN_MIGRATION_REASON_CREATIVE_STUDIO_UNIT"] = 15;
            values[valuesById[16] = "CAMPAIGN_MIGRATION_REASON_CUSTOM_BILLING_EVENT"] = 16;
            values[valuesById[17] = "CAMPAIGN_MIGRATION_REASON_PLAYER_MODE"] = 17;
            values[valuesById[18] = "CAMPAIGN_MIGRATION_REASON_ADDED_VALUE"] = 18;
            values[valuesById[19] = "CAMPAIGN_MIGRATION_REASON_REMARKETING_ON_CREATIVE_EVENT"] = 19;
            values[valuesById[20] = "CAMPAIGN_MIGRATION_REASON_LOOKALIKE_SEGMENTS"] = 20;
            values[valuesById[21] = "CAMPAIGN_MIGRATION_REASON_GEO_POSTAL_CODES"] = 21;
            values[valuesById[22] = "CAMPAIGN_MIGRATION_REASON_CARRIER_PROVIDER"] = 22;
            values[valuesById[23] = "CAMPAIGN_MIGRATION_REASON_AUDIENCES_STANDARD_TO_ACCURACY"] = 23;
            values[valuesById[24] = "CAMPAIGN_MIGRATION_REASON_CREATIVE_HOURLY_FLIGHTING"] = 24;
            values[valuesById[25] = "CAMPAIGN_MIGRATION_REASON_INNOVATION_TEST"] = 25;
            values[valuesById[26] = "CAMPAIGN_MIGRATION_REASON_NOT_SUPPORTED_TRAFFIC_ACQUISITION_CREATIVE"] = 26;
            values[valuesById[27] = "CAMPAIGN_MIGRATION_REASON_TRAFFIC_ACQUISITION_REACHCAST"] = 27;
            values[valuesById[28] = "CAMPAIGN_MIGRATION_REASON_CAMPAIGN_DATE_TO_THE_FUTURE"] = 28;
            values[valuesById[29] = "CAMPAIGN_MIGRATION_REASON_CAMPAIGN_TIMEZONE"] = 29;
            values[valuesById[30] = "CAMPAIGN_MIGRATION_REASON_CTV_INSTREAM_SUPPLY_TARGETING"] = 30;
            values[valuesById[31] = "CAMPAIGN_MIGRATION_REASON_GUARANTEED_SELF_SERVE_CAMPAIGN"] = 31;
            values[valuesById[32] = "CAMPAIGN_MIGRATION_REASON_PLAYER_VIEWABILITY"] = 32;
            values[valuesById[33] = "CAMPAIGN_MIGRATION_REASON_TRACKING_PIXEL_ON_CLICK_EVENT"] = 33;
            values[valuesById[34] = "CAMPAIGN_MIGRATION_REASON_VIRTUAL_PRICE_FOR_MANAGED_CAMPAIGN"] = 34;
            values[valuesById[35] = "CAMPAIGN_MIGRATION_REASON_HOURLY_FLIGHTING"] = 35;
            values[valuesById[36] = "CAMPAIGN_MIGRATION_REASON_ATTENTION_LUMEN_NO_SAMPLING"] = 36;
            return values;
        })();

        /**
         * CampaignObjective enum.
         * @name teads.api.CampaignObjective
         * @enum {number}
         * @property {number} CAMPAIGN_OBJECTIVE_BRANDING=0 CAMPAIGN_OBJECTIVE_BRANDING value
         * @property {number} CAMPAIGN_OBJECTIVE_TRAFFIC_ACQUISITION=1 CAMPAIGN_OBJECTIVE_TRAFFIC_ACQUISITION value
         * @property {number} CAMPAIGN_OBJECTIVE_SOCIAL=2 CAMPAIGN_OBJECTIVE_SOCIAL value
         * @property {number} CAMPAIGN_OBJECTIVE_CONVERSIONS=3 CAMPAIGN_OBJECTIVE_CONVERSIONS value
         */
        api.CampaignObjective = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "CAMPAIGN_OBJECTIVE_BRANDING"] = 0;
            values[valuesById[1] = "CAMPAIGN_OBJECTIVE_TRAFFIC_ACQUISITION"] = 1;
            values[valuesById[2] = "CAMPAIGN_OBJECTIVE_SOCIAL"] = 2;
            values[valuesById[3] = "CAMPAIGN_OBJECTIVE_CONVERSIONS"] = 3;
            return values;
        })();

        /**
         * CustomTargetingEnvironmentChannel enum.
         * @name teads.api.CustomTargetingEnvironmentChannel
         * @enum {number}
         * @property {number} CUSTOM_TARGETING_ENVIRONMENT_CHANNEL_WEB=1 CUSTOM_TARGETING_ENVIRONMENT_CHANNEL_WEB value
         * @property {number} CUSTOM_TARGETING_ENVIRONMENT_CHANNEL_CTV=2 CUSTOM_TARGETING_ENVIRONMENT_CHANNEL_CTV value
         */
        api.CustomTargetingEnvironmentChannel = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "CUSTOM_TARGETING_ENVIRONMENT_CHANNEL_WEB"] = 1;
            values[valuesById[2] = "CUSTOM_TARGETING_ENVIRONMENT_CHANNEL_CTV"] = 2;
            return values;
        })();

        /**
         * CustomTargetingRuleAudiencesAccuracyLevel enum.
         * @name teads.api.CustomTargetingRuleAudiencesAccuracyLevel
         * @enum {number}
         * @property {number} CUSTOM_TARGETING_RULE_AUDIENCES_ACCURACY_LEVEL_HIGH=1 CUSTOM_TARGETING_RULE_AUDIENCES_ACCURACY_LEVEL_HIGH value
         * @property {number} CUSTOM_TARGETING_RULE_AUDIENCES_ACCURACY_LEVEL_MEDIUM=2 CUSTOM_TARGETING_RULE_AUDIENCES_ACCURACY_LEVEL_MEDIUM value
         * @property {number} CUSTOM_TARGETING_RULE_AUDIENCES_ACCURACY_LEVEL_LOW=3 CUSTOM_TARGETING_RULE_AUDIENCES_ACCURACY_LEVEL_LOW value
         */
        api.CustomTargetingRuleAudiencesAccuracyLevel = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "CUSTOM_TARGETING_RULE_AUDIENCES_ACCURACY_LEVEL_HIGH"] = 1;
            values[valuesById[2] = "CUSTOM_TARGETING_RULE_AUDIENCES_ACCURACY_LEVEL_MEDIUM"] = 2;
            values[valuesById[3] = "CUSTOM_TARGETING_RULE_AUDIENCES_ACCURACY_LEVEL_LOW"] = 3;
            return values;
        })();

        /**
         * CustomTargetingRuleAudiencesDeliveryType enum.
         * @name teads.api.CustomTargetingRuleAudiencesDeliveryType
         * @enum {number}
         * @property {number} CUSTOM_TARGETING_RULE_AUDIENCES_DELIVERY_TYPE_HIGH_ACCURACY=2 CUSTOM_TARGETING_RULE_AUDIENCES_DELIVERY_TYPE_HIGH_ACCURACY value
         * @property {number} CUSTOM_TARGETING_RULE_AUDIENCES_DELIVERY_TYPE_ACCURACY=3 CUSTOM_TARGETING_RULE_AUDIENCES_DELIVERY_TYPE_ACCURACY value
         * @property {number} CUSTOM_TARGETING_RULE_AUDIENCES_DELIVERY_TYPE_STANDARD=4 CUSTOM_TARGETING_RULE_AUDIENCES_DELIVERY_TYPE_STANDARD value
         * @property {number} CUSTOM_TARGETING_RULE_AUDIENCES_DELIVERY_TYPE_REACH=5 CUSTOM_TARGETING_RULE_AUDIENCES_DELIVERY_TYPE_REACH value
         */
        api.CustomTargetingRuleAudiencesDeliveryType = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[2] = "CUSTOM_TARGETING_RULE_AUDIENCES_DELIVERY_TYPE_HIGH_ACCURACY"] = 2;
            values[valuesById[3] = "CUSTOM_TARGETING_RULE_AUDIENCES_DELIVERY_TYPE_ACCURACY"] = 3;
            values[valuesById[4] = "CUSTOM_TARGETING_RULE_AUDIENCES_DELIVERY_TYPE_STANDARD"] = 4;
            values[valuesById[5] = "CUSTOM_TARGETING_RULE_AUDIENCES_DELIVERY_TYPE_REACH"] = 5;
            return values;
        })();

        /**
         * EntityType enum.
         * @name teads.api.EntityType
         * @enum {number}
         * @property {number} ENTITY_TYPE_OFFICE=1 ENTITY_TYPE_OFFICE value
         * @property {number} ENTITY_TYPE_PLATFORM=2 ENTITY_TYPE_PLATFORM value
         * @property {number} ENTITY_TYPE_SELF_SERVED=3 ENTITY_TYPE_SELF_SERVED value
         * @property {number} ENTITY_TYPE_MANAGED_SERVICES=4 ENTITY_TYPE_MANAGED_SERVICES value
         * @property {number} ENTITY_TYPE_AGENCY=5 ENTITY_TYPE_AGENCY value
         * @property {number} ENTITY_TYPE_ADVERTISER=6 ENTITY_TYPE_ADVERTISER value
         * @property {number} ENTITY_TYPE_ADNETWORK=7 ENTITY_TYPE_ADNETWORK value
         * @property {number} ENTITY_TYPE_UNKNOWN=8 ENTITY_TYPE_UNKNOWN value
         */
        api.EntityType = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "ENTITY_TYPE_OFFICE"] = 1;
            values[valuesById[2] = "ENTITY_TYPE_PLATFORM"] = 2;
            values[valuesById[3] = "ENTITY_TYPE_SELF_SERVED"] = 3;
            values[valuesById[4] = "ENTITY_TYPE_MANAGED_SERVICES"] = 4;
            values[valuesById[5] = "ENTITY_TYPE_AGENCY"] = 5;
            values[valuesById[6] = "ENTITY_TYPE_ADVERTISER"] = 6;
            values[valuesById[7] = "ENTITY_TYPE_ADNETWORK"] = 7;
            values[valuesById[8] = "ENTITY_TYPE_UNKNOWN"] = 8;
            return values;
        })();

        /**
         * InsertionOrderLineAuctionType enum.
         * @name teads.api.InsertionOrderLineAuctionType
         * @enum {number}
         * @property {number} INSERTION_ORDER_LINE_AUCTION_TYPE_FIXED=1 INSERTION_ORDER_LINE_AUCTION_TYPE_FIXED value
         * @property {number} INSERTION_ORDER_LINE_AUCTION_TYPE_DYNAMIC=2 INSERTION_ORDER_LINE_AUCTION_TYPE_DYNAMIC value
         */
        api.InsertionOrderLineAuctionType = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "INSERTION_ORDER_LINE_AUCTION_TYPE_FIXED"] = 1;
            values[valuesById[2] = "INSERTION_ORDER_LINE_AUCTION_TYPE_DYNAMIC"] = 2;
            return values;
        })();

        /**
         * InsertionOrderLineBillingModel enum.
         * @name teads.api.InsertionOrderLineBillingModel
         * @enum {number}
         * @property {number} INSERTION_ORDER_LINE_BILLING_MODEL_CPM=1 INSERTION_ORDER_LINE_BILLING_MODEL_CPM value
         * @property {number} INSERTION_ORDER_LINE_BILLING_MODEL_VCPM=2 INSERTION_ORDER_LINE_BILLING_MODEL_VCPM value
         * @property {number} INSERTION_ORDER_LINE_BILLING_MODEL_CPCV=3 INSERTION_ORDER_LINE_BILLING_MODEL_CPCV value
         * @property {number} INSERTION_ORDER_LINE_BILLING_MODEL_CPC=4 INSERTION_ORDER_LINE_BILLING_MODEL_CPC value
         * @property {number} INSERTION_ORDER_LINE_BILLING_MODEL_CPV=5 INSERTION_ORDER_LINE_BILLING_MODEL_CPV value
         */
        api.InsertionOrderLineBillingModel = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "INSERTION_ORDER_LINE_BILLING_MODEL_CPM"] = 1;
            values[valuesById[2] = "INSERTION_ORDER_LINE_BILLING_MODEL_VCPM"] = 2;
            values[valuesById[3] = "INSERTION_ORDER_LINE_BILLING_MODEL_CPCV"] = 3;
            values[valuesById[4] = "INSERTION_ORDER_LINE_BILLING_MODEL_CPC"] = 4;
            values[valuesById[5] = "INSERTION_ORDER_LINE_BILLING_MODEL_CPV"] = 5;
            return values;
        })();

        /**
         * InsertionOrderLineCreativeTypeFamily enum.
         * @name teads.api.InsertionOrderLineCreativeTypeFamily
         * @enum {number}
         * @property {number} INSERTION_ORDER_LINE_CREATIVE_TYPE_FAMILY_VIDEO=1 INSERTION_ORDER_LINE_CREATIVE_TYPE_FAMILY_VIDEO value
         * @property {number} INSERTION_ORDER_LINE_CREATIVE_TYPE_FAMILY_DISPLAY=2 INSERTION_ORDER_LINE_CREATIVE_TYPE_FAMILY_DISPLAY value
         */
        api.InsertionOrderLineCreativeTypeFamily = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "INSERTION_ORDER_LINE_CREATIVE_TYPE_FAMILY_VIDEO"] = 1;
            values[valuesById[2] = "INSERTION_ORDER_LINE_CREATIVE_TYPE_FAMILY_DISPLAY"] = 2;
            return values;
        })();

        /**
         * MsaType enum.
         * @name teads.api.MsaType
         * @enum {number}
         * @property {number} MSA_TYPE_DIGITAL=1 MSA_TYPE_DIGITAL value
         * @property {number} MSA_TYPE_PAPER=2 MSA_TYPE_PAPER value
         */
        api.MsaType = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "MSA_TYPE_DIGITAL"] = 1;
            values[valuesById[2] = "MSA_TYPE_PAPER"] = 2;
            return values;
        })();

        /**
         * ProfileStatus enum.
         * @name teads.api.ProfileStatus
         * @enum {number}
         * @property {number} PROFILE_STATUS_ENABLED=1 PROFILE_STATUS_ENABLED value
         * @property {number} PROFILE_STATUS_DISABLED=2 PROFILE_STATUS_DISABLED value
         * @property {number} PROFILE_STATUS_DELETED=3 PROFILE_STATUS_DELETED value
         * @property {number} PROFILE_STATUS_WAITING_PASSWORD=4 PROFILE_STATUS_WAITING_PASSWORD value
         * @property {number} PROFILE_STATUS_FIRST_LOGIN=5 PROFILE_STATUS_FIRST_LOGIN value
         */
        api.ProfileStatus = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[1] = "PROFILE_STATUS_ENABLED"] = 1;
            values[valuesById[2] = "PROFILE_STATUS_DISABLED"] = 2;
            values[valuesById[3] = "PROFILE_STATUS_DELETED"] = 3;
            values[valuesById[4] = "PROFILE_STATUS_WAITING_PASSWORD"] = 4;
            values[valuesById[5] = "PROFILE_STATUS_FIRST_LOGIN"] = 5;
            return values;
        })();

        /**
         * SeatFeature enum.
         * @name teads.api.SeatFeature
         * @enum {number}
         * @property {number} SEAT_FEATURE_MULTIPLE_PIXELS=0 SEAT_FEATURE_MULTIPLE_PIXELS value
         * @property {number} SEAT_FEATURE_SHARE_WITH_ADVERTISERS=1 SEAT_FEATURE_SHARE_WITH_ADVERTISERS value
         * @property {number} SEAT_FEATURE_PREFER_VIEW_TO_PLAY_START_MODE=2 SEAT_FEATURE_PREFER_VIEW_TO_PLAY_START_MODE value
         * @property {number} SEAT_FEATURE_ACCURACY_LEVELS=4 SEAT_FEATURE_ACCURACY_LEVELS value
         * @property {number} SEAT_FEATURE_AGENCY_FEE=5 SEAT_FEATURE_AGENCY_FEE value
         * @property {number} SEAT_FEATURE_CUSTOM_AUDIENCE_ALTICE_US=6 SEAT_FEATURE_CUSTOM_AUDIENCE_ALTICE_US value
         * @property {number} SEAT_FEATURE_CUSTOM_CREATIVES_FOR_PERFORMANCE=7 SEAT_FEATURE_CUSTOM_CREATIVES_FOR_PERFORMANCE value
         * @property {number} SEAT_FEATURE_LUMEN=8 SEAT_FEATURE_LUMEN value
         * @property {number} SEAT_FEATURE_CUSTOM_AUDIENCE_SKP=9 SEAT_FEATURE_CUSTOM_AUDIENCE_SKP value
         * @property {number} SEAT_FEATURE_CUSTOM_AUDIENCE_CROSSIX=10 SEAT_FEATURE_CUSTOM_AUDIENCE_CROSSIX value
         * @property {number} SEAT_FEATURE_CUSTOM_AUDIENCE_ALTICE_FR=11 SEAT_FEATURE_CUSTOM_AUDIENCE_ALTICE_FR value
         * @property {number} SEAT_FEATURE_REMARKETING_SEGMENTATION_ACCESS=12 SEAT_FEATURE_REMARKETING_SEGMENTATION_ACCESS value
         * @property {number} SEAT_FEATURE_CPV=13 SEAT_FEATURE_CPV value
         * @property {number} SEAT_FEATURE_PLAYER_MODE_SELECTION_FOR_BRANDING=14 SEAT_FEATURE_PLAYER_MODE_SELECTION_FOR_BRANDING value
         * @property {number} SEAT_FEATURE_PLAYER_MODE_SELECTION_FOR_BRANDFORMANCE=15 SEAT_FEATURE_PLAYER_MODE_SELECTION_FOR_BRANDFORMANCE value
         * @property {number} SEAT_FEATURE_LOOKALIKE_SEGMENTATION_ACCESS=16 SEAT_FEATURE_LOOKALIKE_SEGMENTATION_ACCESS value
         * @property {number} SEAT_FEATURE_CUSTOM_AUDIENCE_THIRD_PARTY_DATA_ACCESS=17 SEAT_FEATURE_CUSTOM_AUDIENCE_THIRD_PARTY_DATA_ACCESS value
         * @property {number} SEAT_FEATURE_HAS_OPTED_IN_AD_ASSISTANT=18 SEAT_FEATURE_HAS_OPTED_IN_AD_ASSISTANT value
         * @property {number} SEAT_FEATURE_PLAYER_MODE_SELECTION_FOR_BRANDING_CPCV=19 SEAT_FEATURE_PLAYER_MODE_SELECTION_FOR_BRANDING_CPCV value
         */
        api.SeatFeature = (function() {
            var valuesById = {}, values = Object.create(valuesById);
            values[valuesById[0] = "SEAT_FEATURE_MULTIPLE_PIXELS"] = 0;
            values[valuesById[1] = "SEAT_FEATURE_SHARE_WITH_ADVERTISERS"] = 1;
            values[valuesById[2] = "SEAT_FEATURE_PREFER_VIEW_TO_PLAY_START_MODE"] = 2;
            values[valuesById[4] = "SEAT_FEATURE_ACCURACY_LEVELS"] = 4;
            values[valuesById[5] = "SEAT_FEATURE_AGENCY_FEE"] = 5;
            values[valuesById[6] = "SEAT_FEATURE_CUSTOM_AUDIENCE_ALTICE_US"] = 6;
            values[valuesById[7] = "SEAT_FEATURE_CUSTOM_CREATIVES_FOR_PERFORMANCE"] = 7;
            values[valuesById[8] = "SEAT_FEATURE_LUMEN"] = 8;
            values[valuesById[9] = "SEAT_FEATURE_CUSTOM_AUDIENCE_SKP"] = 9;
            values[valuesById[10] = "SEAT_FEATURE_CUSTOM_AUDIENCE_CROSSIX"] = 10;
            values[valuesById[11] = "SEAT_FEATURE_CUSTOM_AUDIENCE_ALTICE_FR"] = 11;
            values[valuesById[12] = "SEAT_FEATURE_REMARKETING_SEGMENTATION_ACCESS"] = 12;
            values[valuesById[13] = "SEAT_FEATURE_CPV"] = 13;
            values[valuesById[14] = "SEAT_FEATURE_PLAYER_MODE_SELECTION_FOR_BRANDING"] = 14;
            values[valuesById[15] = "SEAT_FEATURE_PLAYER_MODE_SELECTION_FOR_BRANDFORMANCE"] = 15;
            values[valuesById[16] = "SEAT_FEATURE_LOOKALIKE_SEGMENTATION_ACCESS"] = 16;
            values[valuesById[17] = "SEAT_FEATURE_CUSTOM_AUDIENCE_THIRD_PARTY_DATA_ACCESS"] = 17;
            values[valuesById[18] = "SEAT_FEATURE_HAS_OPTED_IN_AD_ASSISTANT"] = 18;
            values[valuesById[19] = "SEAT_FEATURE_PLAYER_MODE_SELECTION_FOR_BRANDING_CPCV"] = 19;
            return values;
        })();

        api.CommandService = (function() {

            /**
             * Constructs a new CommandService service.
             * @memberof teads.api
             * @classdesc Represents a CommandService
             * @extends $protobuf.rpc.Service
             * @constructor
             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
             */
            function CommandService(rpcImpl, requestDelimited, responseDelimited) {
                $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
            }

            (CommandService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = CommandService;

            /**
             * Creates new CommandService service using the specified rpc implementation.
             * @function create
             * @memberof teads.api.CommandService
             * @static
             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
             * @returns {CommandService} RPC service. Useful where requests and/or responses are streamed.
             */
            CommandService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                return new this(rpcImpl, requestDelimited, responseDelimited);
            };

            /**
             * Callback as used by {@link teads.api.CommandService#acknowledgeCampaignSkeletonCreationToSalesforce}.
             * @memberof teads.api.CommandService
             * @typedef AcknowledgeCampaignSkeletonCreationToSalesforceCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceResponse} [response] AcknowledgeCampaignSkeletonCreationToSalesforceResponse
             */

            /**
             * Calls AcknowledgeCampaignSkeletonCreationToSalesforce.
             * @function acknowledgeCampaignSkeletonCreationToSalesforce
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IAcknowledgeCampaignSkeletonCreationToSalesforceRequest} request AcknowledgeCampaignSkeletonCreationToSalesforceRequest message or plain object
             * @param {teads.api.CommandService.AcknowledgeCampaignSkeletonCreationToSalesforceCallback} callback Node-style callback called with the error, if any, and AcknowledgeCampaignSkeletonCreationToSalesforceResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.acknowledgeCampaignSkeletonCreationToSalesforce = function acknowledgeCampaignSkeletonCreationToSalesforce(request, callback) {
                return this.rpcCall(acknowledgeCampaignSkeletonCreationToSalesforce, $root.teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceRequest, $root.teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceResponse, request, callback);
            }, "name", { value: "AcknowledgeCampaignSkeletonCreationToSalesforce" });

            /**
             * Calls AcknowledgeCampaignSkeletonCreationToSalesforce.
             * @function acknowledgeCampaignSkeletonCreationToSalesforce
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IAcknowledgeCampaignSkeletonCreationToSalesforceRequest} request AcknowledgeCampaignSkeletonCreationToSalesforceRequest message or plain object
             * @returns {Promise<teads.api.AcknowledgeCampaignSkeletonCreationToSalesforceResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.CommandService#activateFeatureForSeat}.
             * @memberof teads.api.CommandService
             * @typedef ActivateFeatureForSeatCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.ActivateFeatureForSeatResponse} [response] ActivateFeatureForSeatResponse
             */

            /**
             * Calls ActivateFeatureForSeat.
             * @function activateFeatureForSeat
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IActivateFeatureForSeatRequest} request ActivateFeatureForSeatRequest message or plain object
             * @param {teads.api.CommandService.ActivateFeatureForSeatCallback} callback Node-style callback called with the error, if any, and ActivateFeatureForSeatResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.activateFeatureForSeat = function activateFeatureForSeat(request, callback) {
                return this.rpcCall(activateFeatureForSeat, $root.teads.api.ActivateFeatureForSeatRequest, $root.teads.api.ActivateFeatureForSeatResponse, request, callback);
            }, "name", { value: "ActivateFeatureForSeat" });

            /**
             * Calls ActivateFeatureForSeat.
             * @function activateFeatureForSeat
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IActivateFeatureForSeatRequest} request ActivateFeatureForSeatRequest message or plain object
             * @returns {Promise<teads.api.ActivateFeatureForSeatResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.CommandService#addFirstPartySegmentToWhitelistForSeat}.
             * @memberof teads.api.CommandService
             * @typedef AddFirstPartySegmentToWhitelistForSeatCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.AddFirstPartySegmentToWhitelistForSeatResponse} [response] AddFirstPartySegmentToWhitelistForSeatResponse
             */

            /**
             * Calls AddFirstPartySegmentToWhitelistForSeat.
             * @function addFirstPartySegmentToWhitelistForSeat
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IAddFirstPartySegmentToWhitelistForSeatRequest} request AddFirstPartySegmentToWhitelistForSeatRequest message or plain object
             * @param {teads.api.CommandService.AddFirstPartySegmentToWhitelistForSeatCallback} callback Node-style callback called with the error, if any, and AddFirstPartySegmentToWhitelistForSeatResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.addFirstPartySegmentToWhitelistForSeat = function addFirstPartySegmentToWhitelistForSeat(request, callback) {
                return this.rpcCall(addFirstPartySegmentToWhitelistForSeat, $root.teads.api.AddFirstPartySegmentToWhitelistForSeatRequest, $root.teads.api.AddFirstPartySegmentToWhitelistForSeatResponse, request, callback);
            }, "name", { value: "AddFirstPartySegmentToWhitelistForSeat" });

            /**
             * Calls AddFirstPartySegmentToWhitelistForSeat.
             * @function addFirstPartySegmentToWhitelistForSeat
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IAddFirstPartySegmentToWhitelistForSeatRequest} request AddFirstPartySegmentToWhitelistForSeatRequest message or plain object
             * @returns {Promise<teads.api.AddFirstPartySegmentToWhitelistForSeatResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.CommandService#addGrapeshotBrandSuitabilitySegmentForBuyerSeat}.
             * @memberof teads.api.CommandService
             * @typedef AddGrapeshotBrandSuitabilitySegmentForBuyerSeatCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse} [response] AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse
             */

            /**
             * Calls AddGrapeshotBrandSuitabilitySegmentForBuyerSeat.
             * @function addGrapeshotBrandSuitabilitySegmentForBuyerSeat
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IAddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest} request AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest message or plain object
             * @param {teads.api.CommandService.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatCallback} callback Node-style callback called with the error, if any, and AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.addGrapeshotBrandSuitabilitySegmentForBuyerSeat = function addGrapeshotBrandSuitabilitySegmentForBuyerSeat(request, callback) {
                return this.rpcCall(addGrapeshotBrandSuitabilitySegmentForBuyerSeat, $root.teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest, $root.teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse, request, callback);
            }, "name", { value: "AddGrapeshotBrandSuitabilitySegmentForBuyerSeat" });

            /**
             * Calls AddGrapeshotBrandSuitabilitySegmentForBuyerSeat.
             * @function addGrapeshotBrandSuitabilitySegmentForBuyerSeat
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IAddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest} request AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest message or plain object
             * @returns {Promise<teads.api.AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.CommandService#createBuyerEntity}.
             * @memberof teads.api.CommandService
             * @typedef CreateBuyerEntityCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.CreateBuyerEntityResponse} [response] CreateBuyerEntityResponse
             */

            /**
             * Calls CreateBuyerEntity.
             * @function createBuyerEntity
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.ICreateBuyerEntityRequest} request CreateBuyerEntityRequest message or plain object
             * @param {teads.api.CommandService.CreateBuyerEntityCallback} callback Node-style callback called with the error, if any, and CreateBuyerEntityResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.createBuyerEntity = function createBuyerEntity(request, callback) {
                return this.rpcCall(createBuyerEntity, $root.teads.api.CreateBuyerEntityRequest, $root.teads.api.CreateBuyerEntityResponse, request, callback);
            }, "name", { value: "CreateBuyerEntity" });

            /**
             * Calls CreateBuyerEntity.
             * @function createBuyerEntity
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.ICreateBuyerEntityRequest} request CreateBuyerEntityRequest message or plain object
             * @returns {Promise<teads.api.CreateBuyerEntityResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.CommandService#createCampaignSkeletonsFromSalesforceOpportunity}.
             * @memberof teads.api.CommandService
             * @typedef CreateCampaignSkeletonsFromSalesforceOpportunityCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse} [response] CreateCampaignSkeletonsFromSalesforceOpportunityResponse
             */

            /**
             * Calls CreateCampaignSkeletonsFromSalesforceOpportunity.
             * @function createCampaignSkeletonsFromSalesforceOpportunity
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.ICreateCampaignSkeletonsFromSalesforceOpportunityRequest} request CreateCampaignSkeletonsFromSalesforceOpportunityRequest message or plain object
             * @param {teads.api.CommandService.CreateCampaignSkeletonsFromSalesforceOpportunityCallback} callback Node-style callback called with the error, if any, and CreateCampaignSkeletonsFromSalesforceOpportunityResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.createCampaignSkeletonsFromSalesforceOpportunity = function createCampaignSkeletonsFromSalesforceOpportunity(request, callback) {
                return this.rpcCall(createCampaignSkeletonsFromSalesforceOpportunity, $root.teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityRequest, $root.teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse, request, callback);
            }, "name", { value: "CreateCampaignSkeletonsFromSalesforceOpportunity" });

            /**
             * Calls CreateCampaignSkeletonsFromSalesforceOpportunity.
             * @function createCampaignSkeletonsFromSalesforceOpportunity
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.ICreateCampaignSkeletonsFromSalesforceOpportunityRequest} request CreateCampaignSkeletonsFromSalesforceOpportunityRequest message or plain object
             * @returns {Promise<teads.api.CreateCampaignSkeletonsFromSalesforceOpportunityResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.CommandService#createClientSeatForBuyer}.
             * @memberof teads.api.CommandService
             * @typedef CreateClientSeatForBuyerCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.CreateClientSeatForBuyerResponse} [response] CreateClientSeatForBuyerResponse
             */

            /**
             * Calls CreateClientSeatForBuyer.
             * @function createClientSeatForBuyer
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.ICreateClientSeatForBuyerRequest} request CreateClientSeatForBuyerRequest message or plain object
             * @param {teads.api.CommandService.CreateClientSeatForBuyerCallback} callback Node-style callback called with the error, if any, and CreateClientSeatForBuyerResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.createClientSeatForBuyer = function createClientSeatForBuyer(request, callback) {
                return this.rpcCall(createClientSeatForBuyer, $root.teads.api.CreateClientSeatForBuyerRequest, $root.teads.api.CreateClientSeatForBuyerResponse, request, callback);
            }, "name", { value: "CreateClientSeatForBuyer" });

            /**
             * Calls CreateClientSeatForBuyer.
             * @function createClientSeatForBuyer
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.ICreateClientSeatForBuyerRequest} request CreateClientSeatForBuyerRequest message or plain object
             * @returns {Promise<teads.api.CreateClientSeatForBuyerResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.CommandService#createCustomTargetingRuleForCampaign}.
             * @memberof teads.api.CommandService
             * @typedef CreateCustomTargetingRuleForCampaignCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.CreateCustomTargetingRuleForCampaignResponse} [response] CreateCustomTargetingRuleForCampaignResponse
             */

            /**
             * Calls CreateCustomTargetingRuleForCampaign.
             * @function createCustomTargetingRuleForCampaign
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.ICreateCustomTargetingRuleForCampaignRequest} request CreateCustomTargetingRuleForCampaignRequest message or plain object
             * @param {teads.api.CommandService.CreateCustomTargetingRuleForCampaignCallback} callback Node-style callback called with the error, if any, and CreateCustomTargetingRuleForCampaignResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.createCustomTargetingRuleForCampaign = function createCustomTargetingRuleForCampaign(request, callback) {
                return this.rpcCall(createCustomTargetingRuleForCampaign, $root.teads.api.CreateCustomTargetingRuleForCampaignRequest, $root.teads.api.CreateCustomTargetingRuleForCampaignResponse, request, callback);
            }, "name", { value: "CreateCustomTargetingRuleForCampaign" });

            /**
             * Calls CreateCustomTargetingRuleForCampaign.
             * @function createCustomTargetingRuleForCampaign
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.ICreateCustomTargetingRuleForCampaignRequest} request CreateCustomTargetingRuleForCampaignRequest message or plain object
             * @returns {Promise<teads.api.CreateCustomTargetingRuleForCampaignResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.CommandService#createInternalSeatForBuyer}.
             * @memberof teads.api.CommandService
             * @typedef CreateInternalSeatForBuyerCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.CreateInternalSeatForBuyerResponse} [response] CreateInternalSeatForBuyerResponse
             */

            /**
             * Calls CreateInternalSeatForBuyer.
             * @function createInternalSeatForBuyer
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.ICreateInternalSeatForBuyerRequest} request CreateInternalSeatForBuyerRequest message or plain object
             * @param {teads.api.CommandService.CreateInternalSeatForBuyerCallback} callback Node-style callback called with the error, if any, and CreateInternalSeatForBuyerResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.createInternalSeatForBuyer = function createInternalSeatForBuyer(request, callback) {
                return this.rpcCall(createInternalSeatForBuyer, $root.teads.api.CreateInternalSeatForBuyerRequest, $root.teads.api.CreateInternalSeatForBuyerResponse, request, callback);
            }, "name", { value: "CreateInternalSeatForBuyer" });

            /**
             * Calls CreateInternalSeatForBuyer.
             * @function createInternalSeatForBuyer
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.ICreateInternalSeatForBuyerRequest} request CreateInternalSeatForBuyerRequest message or plain object
             * @returns {Promise<teads.api.CreateInternalSeatForBuyerResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.CommandService#createIoBuyerSeatForEntity}.
             * @memberof teads.api.CommandService
             * @typedef CreateIoBuyerSeatForEntityCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.CreateIoBuyerSeatForEntityResponse} [response] CreateIoBuyerSeatForEntityResponse
             */

            /**
             * Calls CreateIoBuyerSeatForEntity.
             * @function createIoBuyerSeatForEntity
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.ICreateIoBuyerSeatForEntityRequest} request CreateIoBuyerSeatForEntityRequest message or plain object
             * @param {teads.api.CommandService.CreateIoBuyerSeatForEntityCallback} callback Node-style callback called with the error, if any, and CreateIoBuyerSeatForEntityResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.createIoBuyerSeatForEntity = function createIoBuyerSeatForEntity(request, callback) {
                return this.rpcCall(createIoBuyerSeatForEntity, $root.teads.api.CreateIoBuyerSeatForEntityRequest, $root.teads.api.CreateIoBuyerSeatForEntityResponse, request, callback);
            }, "name", { value: "CreateIoBuyerSeatForEntity" });

            /**
             * Calls CreateIoBuyerSeatForEntity.
             * @function createIoBuyerSeatForEntity
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.ICreateIoBuyerSeatForEntityRequest} request CreateIoBuyerSeatForEntityRequest message or plain object
             * @returns {Promise<teads.api.CreateIoBuyerSeatForEntityResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.CommandService#createManagedBuyerSeatForEntity}.
             * @memberof teads.api.CommandService
             * @typedef CreateManagedBuyerSeatForEntityCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.CreateManagedBuyerSeatForEntityResponse} [response] CreateManagedBuyerSeatForEntityResponse
             */

            /**
             * Calls CreateManagedBuyerSeatForEntity.
             * @function createManagedBuyerSeatForEntity
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.ICreateManagedBuyerSeatForEntityRequest} request CreateManagedBuyerSeatForEntityRequest message or plain object
             * @param {teads.api.CommandService.CreateManagedBuyerSeatForEntityCallback} callback Node-style callback called with the error, if any, and CreateManagedBuyerSeatForEntityResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.createManagedBuyerSeatForEntity = function createManagedBuyerSeatForEntity(request, callback) {
                return this.rpcCall(createManagedBuyerSeatForEntity, $root.teads.api.CreateManagedBuyerSeatForEntityRequest, $root.teads.api.CreateManagedBuyerSeatForEntityResponse, request, callback);
            }, "name", { value: "CreateManagedBuyerSeatForEntity" });

            /**
             * Calls CreateManagedBuyerSeatForEntity.
             * @function createManagedBuyerSeatForEntity
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.ICreateManagedBuyerSeatForEntityRequest} request CreateManagedBuyerSeatForEntityRequest message or plain object
             * @returns {Promise<teads.api.CreateManagedBuyerSeatForEntityResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.CommandService#createSelfServedBuyerSeatForEntity}.
             * @memberof teads.api.CommandService
             * @typedef CreateSelfServedBuyerSeatForEntityCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.CreateSelfServedBuyerSeatForEntityResponse} [response] CreateSelfServedBuyerSeatForEntityResponse
             */

            /**
             * Calls CreateSelfServedBuyerSeatForEntity.
             * @function createSelfServedBuyerSeatForEntity
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.ICreateSelfServedBuyerSeatForEntityRequest} request CreateSelfServedBuyerSeatForEntityRequest message or plain object
             * @param {teads.api.CommandService.CreateSelfServedBuyerSeatForEntityCallback} callback Node-style callback called with the error, if any, and CreateSelfServedBuyerSeatForEntityResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.createSelfServedBuyerSeatForEntity = function createSelfServedBuyerSeatForEntity(request, callback) {
                return this.rpcCall(createSelfServedBuyerSeatForEntity, $root.teads.api.CreateSelfServedBuyerSeatForEntityRequest, $root.teads.api.CreateSelfServedBuyerSeatForEntityResponse, request, callback);
            }, "name", { value: "CreateSelfServedBuyerSeatForEntity" });

            /**
             * Calls CreateSelfServedBuyerSeatForEntity.
             * @function createSelfServedBuyerSeatForEntity
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.ICreateSelfServedBuyerSeatForEntityRequest} request CreateSelfServedBuyerSeatForEntityRequest message or plain object
             * @returns {Promise<teads.api.CreateSelfServedBuyerSeatForEntityResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.CommandService#deactivateFeatureForSeat}.
             * @memberof teads.api.CommandService
             * @typedef DeactivateFeatureForSeatCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.DeactivateFeatureForSeatResponse} [response] DeactivateFeatureForSeatResponse
             */

            /**
             * Calls DeactivateFeatureForSeat.
             * @function deactivateFeatureForSeat
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IDeactivateFeatureForSeatRequest} request DeactivateFeatureForSeatRequest message or plain object
             * @param {teads.api.CommandService.DeactivateFeatureForSeatCallback} callback Node-style callback called with the error, if any, and DeactivateFeatureForSeatResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.deactivateFeatureForSeat = function deactivateFeatureForSeat(request, callback) {
                return this.rpcCall(deactivateFeatureForSeat, $root.teads.api.DeactivateFeatureForSeatRequest, $root.teads.api.DeactivateFeatureForSeatResponse, request, callback);
            }, "name", { value: "DeactivateFeatureForSeat" });

            /**
             * Calls DeactivateFeatureForSeat.
             * @function deactivateFeatureForSeat
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IDeactivateFeatureForSeatRequest} request DeactivateFeatureForSeatRequest message or plain object
             * @returns {Promise<teads.api.DeactivateFeatureForSeatResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.CommandService#deleteGrapeshotBrandSuitabilitySegmentsForBuyerSeat}.
             * @memberof teads.api.CommandService
             * @typedef DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse} [response] DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse
             */

            /**
             * Calls DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeat.
             * @function deleteGrapeshotBrandSuitabilitySegmentsForBuyerSeat
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IDeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest} request DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest message or plain object
             * @param {teads.api.CommandService.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatCallback} callback Node-style callback called with the error, if any, and DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.deleteGrapeshotBrandSuitabilitySegmentsForBuyerSeat = function deleteGrapeshotBrandSuitabilitySegmentsForBuyerSeat(request, callback) {
                return this.rpcCall(deleteGrapeshotBrandSuitabilitySegmentsForBuyerSeat, $root.teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest, $root.teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse, request, callback);
            }, "name", { value: "DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeat" });

            /**
             * Calls DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeat.
             * @function deleteGrapeshotBrandSuitabilitySegmentsForBuyerSeat
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IDeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest} request DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest message or plain object
             * @returns {Promise<teads.api.DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.CommandService#disableBuyerSeat}.
             * @memberof teads.api.CommandService
             * @typedef DisableBuyerSeatCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.DisableBuyerSeatResponse} [response] DisableBuyerSeatResponse
             */

            /**
             * Calls DisableBuyerSeat.
             * @function disableBuyerSeat
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IDisableBuyerSeatRequest} request DisableBuyerSeatRequest message or plain object
             * @param {teads.api.CommandService.DisableBuyerSeatCallback} callback Node-style callback called with the error, if any, and DisableBuyerSeatResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.disableBuyerSeat = function disableBuyerSeat(request, callback) {
                return this.rpcCall(disableBuyerSeat, $root.teads.api.DisableBuyerSeatRequest, $root.teads.api.DisableBuyerSeatResponse, request, callback);
            }, "name", { value: "DisableBuyerSeat" });

            /**
             * Calls DisableBuyerSeat.
             * @function disableBuyerSeat
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IDisableBuyerSeatRequest} request DisableBuyerSeatRequest message or plain object
             * @returns {Promise<teads.api.DisableBuyerSeatResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.CommandService#enableBuyerSeat}.
             * @memberof teads.api.CommandService
             * @typedef EnableBuyerSeatCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.EnableBuyerSeatResponse} [response] EnableBuyerSeatResponse
             */

            /**
             * Calls EnableBuyerSeat.
             * @function enableBuyerSeat
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IEnableBuyerSeatRequest} request EnableBuyerSeatRequest message or plain object
             * @param {teads.api.CommandService.EnableBuyerSeatCallback} callback Node-style callback called with the error, if any, and EnableBuyerSeatResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.enableBuyerSeat = function enableBuyerSeat(request, callback) {
                return this.rpcCall(enableBuyerSeat, $root.teads.api.EnableBuyerSeatRequest, $root.teads.api.EnableBuyerSeatResponse, request, callback);
            }, "name", { value: "EnableBuyerSeat" });

            /**
             * Calls EnableBuyerSeat.
             * @function enableBuyerSeat
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IEnableBuyerSeatRequest} request EnableBuyerSeatRequest message or plain object
             * @returns {Promise<teads.api.EnableBuyerSeatResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.CommandService#grantAdminRoleForBuyer}.
             * @memberof teads.api.CommandService
             * @typedef GrantAdminRoleForBuyerCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.GrantAdminRoleForBuyerResponse} [response] GrantAdminRoleForBuyerResponse
             */

            /**
             * Calls GrantAdminRoleForBuyer.
             * @function grantAdminRoleForBuyer
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IGrantAdminRoleForBuyerRequest} request GrantAdminRoleForBuyerRequest message or plain object
             * @param {teads.api.CommandService.GrantAdminRoleForBuyerCallback} callback Node-style callback called with the error, if any, and GrantAdminRoleForBuyerResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.grantAdminRoleForBuyer = function grantAdminRoleForBuyer(request, callback) {
                return this.rpcCall(grantAdminRoleForBuyer, $root.teads.api.GrantAdminRoleForBuyerRequest, $root.teads.api.GrantAdminRoleForBuyerResponse, request, callback);
            }, "name", { value: "GrantAdminRoleForBuyer" });

            /**
             * Calls GrantAdminRoleForBuyer.
             * @function grantAdminRoleForBuyer
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IGrantAdminRoleForBuyerRequest} request GrantAdminRoleForBuyerRequest message or plain object
             * @returns {Promise<teads.api.GrantAdminRoleForBuyerResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.CommandService#markTeadsFinanceApprovalFilledForSeat}.
             * @memberof teads.api.CommandService
             * @typedef MarkTeadsFinanceApprovalFilledForSeatCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.MarkTeadsFinanceApprovalFilledForSeatResponse} [response] MarkTeadsFinanceApprovalFilledForSeatResponse
             */

            /**
             * Calls MarkTeadsFinanceApprovalFilledForSeat.
             * @function markTeadsFinanceApprovalFilledForSeat
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IMarkTeadsFinanceApprovalFilledForSeatRequest} request MarkTeadsFinanceApprovalFilledForSeatRequest message or plain object
             * @param {teads.api.CommandService.MarkTeadsFinanceApprovalFilledForSeatCallback} callback Node-style callback called with the error, if any, and MarkTeadsFinanceApprovalFilledForSeatResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.markTeadsFinanceApprovalFilledForSeat = function markTeadsFinanceApprovalFilledForSeat(request, callback) {
                return this.rpcCall(markTeadsFinanceApprovalFilledForSeat, $root.teads.api.MarkTeadsFinanceApprovalFilledForSeatRequest, $root.teads.api.MarkTeadsFinanceApprovalFilledForSeatResponse, request, callback);
            }, "name", { value: "MarkTeadsFinanceApprovalFilledForSeat" });

            /**
             * Calls MarkTeadsFinanceApprovalFilledForSeat.
             * @function markTeadsFinanceApprovalFilledForSeat
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IMarkTeadsFinanceApprovalFilledForSeatRequest} request MarkTeadsFinanceApprovalFilledForSeatRequest message or plain object
             * @returns {Promise<teads.api.MarkTeadsFinanceApprovalFilledForSeatResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.CommandService#migrateCampaignToManagedService}.
             * @memberof teads.api.CommandService
             * @typedef MigrateCampaignToManagedServiceCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.MigrateCampaignToManagedServiceResponse} [response] MigrateCampaignToManagedServiceResponse
             */

            /**
             * Calls MigrateCampaignToManagedService.
             * @function migrateCampaignToManagedService
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IMigrateCampaignToManagedServiceRequest} request MigrateCampaignToManagedServiceRequest message or plain object
             * @param {teads.api.CommandService.MigrateCampaignToManagedServiceCallback} callback Node-style callback called with the error, if any, and MigrateCampaignToManagedServiceResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.migrateCampaignToManagedService = function migrateCampaignToManagedService(request, callback) {
                return this.rpcCall(migrateCampaignToManagedService, $root.teads.api.MigrateCampaignToManagedServiceRequest, $root.teads.api.MigrateCampaignToManagedServiceResponse, request, callback);
            }, "name", { value: "MigrateCampaignToManagedService" });

            /**
             * Calls MigrateCampaignToManagedService.
             * @function migrateCampaignToManagedService
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IMigrateCampaignToManagedServiceRequest} request MigrateCampaignToManagedServiceRequest message or plain object
             * @returns {Promise<teads.api.MigrateCampaignToManagedServiceResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.CommandService#removeFirstPartySegmentFromWhitelistForSeat}.
             * @memberof teads.api.CommandService
             * @typedef RemoveFirstPartySegmentFromWhitelistForSeatCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.RemoveFirstPartySegmentFromWhitelistForSeatResponse} [response] RemoveFirstPartySegmentFromWhitelistForSeatResponse
             */

            /**
             * Calls RemoveFirstPartySegmentFromWhitelistForSeat.
             * @function removeFirstPartySegmentFromWhitelistForSeat
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IRemoveFirstPartySegmentFromWhitelistForSeatRequest} request RemoveFirstPartySegmentFromWhitelistForSeatRequest message or plain object
             * @param {teads.api.CommandService.RemoveFirstPartySegmentFromWhitelistForSeatCallback} callback Node-style callback called with the error, if any, and RemoveFirstPartySegmentFromWhitelistForSeatResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.removeFirstPartySegmentFromWhitelistForSeat = function removeFirstPartySegmentFromWhitelistForSeat(request, callback) {
                return this.rpcCall(removeFirstPartySegmentFromWhitelistForSeat, $root.teads.api.RemoveFirstPartySegmentFromWhitelistForSeatRequest, $root.teads.api.RemoveFirstPartySegmentFromWhitelistForSeatResponse, request, callback);
            }, "name", { value: "RemoveFirstPartySegmentFromWhitelistForSeat" });

            /**
             * Calls RemoveFirstPartySegmentFromWhitelistForSeat.
             * @function removeFirstPartySegmentFromWhitelistForSeat
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IRemoveFirstPartySegmentFromWhitelistForSeatRequest} request RemoveFirstPartySegmentFromWhitelistForSeatRequest message or plain object
             * @returns {Promise<teads.api.RemoveFirstPartySegmentFromWhitelistForSeatResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.CommandService#revokeAdminRoleForBuyer}.
             * @memberof teads.api.CommandService
             * @typedef RevokeAdminRoleForBuyerCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.RevokeAdminRoleForBuyerResponse} [response] RevokeAdminRoleForBuyerResponse
             */

            /**
             * Calls RevokeAdminRoleForBuyer.
             * @function revokeAdminRoleForBuyer
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IRevokeAdminRoleForBuyerRequest} request RevokeAdminRoleForBuyerRequest message or plain object
             * @param {teads.api.CommandService.RevokeAdminRoleForBuyerCallback} callback Node-style callback called with the error, if any, and RevokeAdminRoleForBuyerResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.revokeAdminRoleForBuyer = function revokeAdminRoleForBuyer(request, callback) {
                return this.rpcCall(revokeAdminRoleForBuyer, $root.teads.api.RevokeAdminRoleForBuyerRequest, $root.teads.api.RevokeAdminRoleForBuyerResponse, request, callback);
            }, "name", { value: "RevokeAdminRoleForBuyer" });

            /**
             * Calls RevokeAdminRoleForBuyer.
             * @function revokeAdminRoleForBuyer
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IRevokeAdminRoleForBuyerRequest} request RevokeAdminRoleForBuyerRequest message or plain object
             * @returns {Promise<teads.api.RevokeAdminRoleForBuyerResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.CommandService#setFeeForClientSeat}.
             * @memberof teads.api.CommandService
             * @typedef SetFeeForClientSeatCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.SetFeeForClientSeatResponse} [response] SetFeeForClientSeatResponse
             */

            /**
             * Calls SetFeeForClientSeat.
             * @function setFeeForClientSeat
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.ISetFeeForClientSeatRequest} request SetFeeForClientSeatRequest message or plain object
             * @param {teads.api.CommandService.SetFeeForClientSeatCallback} callback Node-style callback called with the error, if any, and SetFeeForClientSeatResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.setFeeForClientSeat = function setFeeForClientSeat(request, callback) {
                return this.rpcCall(setFeeForClientSeat, $root.teads.api.SetFeeForClientSeatRequest, $root.teads.api.SetFeeForClientSeatResponse, request, callback);
            }, "name", { value: "SetFeeForClientSeat" });

            /**
             * Calls SetFeeForClientSeat.
             * @function setFeeForClientSeat
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.ISetFeeForClientSeatRequest} request SetFeeForClientSeatRequest message or plain object
             * @returns {Promise<teads.api.SetFeeForClientSeatResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.CommandService#synchronizeCampaignFromSalesforceOpportunity}.
             * @memberof teads.api.CommandService
             * @typedef SynchronizeCampaignFromSalesforceOpportunityCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.SynchronizeCampaignFromSalesforceOpportunityResponse} [response] SynchronizeCampaignFromSalesforceOpportunityResponse
             */

            /**
             * Calls SynchronizeCampaignFromSalesforceOpportunity.
             * @function synchronizeCampaignFromSalesforceOpportunity
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.ISynchronizeCampaignFromSalesforceOpportunityRequest} request SynchronizeCampaignFromSalesforceOpportunityRequest message or plain object
             * @param {teads.api.CommandService.SynchronizeCampaignFromSalesforceOpportunityCallback} callback Node-style callback called with the error, if any, and SynchronizeCampaignFromSalesforceOpportunityResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.synchronizeCampaignFromSalesforceOpportunity = function synchronizeCampaignFromSalesforceOpportunity(request, callback) {
                return this.rpcCall(synchronizeCampaignFromSalesforceOpportunity, $root.teads.api.SynchronizeCampaignFromSalesforceOpportunityRequest, $root.teads.api.SynchronizeCampaignFromSalesforceOpportunityResponse, request, callback);
            }, "name", { value: "SynchronizeCampaignFromSalesforceOpportunity" });

            /**
             * Calls SynchronizeCampaignFromSalesforceOpportunity.
             * @function synchronizeCampaignFromSalesforceOpportunity
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.ISynchronizeCampaignFromSalesforceOpportunityRequest} request SynchronizeCampaignFromSalesforceOpportunityRequest message or plain object
             * @returns {Promise<teads.api.SynchronizeCampaignFromSalesforceOpportunityResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.CommandService#transitionIoBuyerSeatToManaged}.
             * @memberof teads.api.CommandService
             * @typedef TransitionIoBuyerSeatToManagedCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.TransitionIoBuyerSeatToManagedResponse} [response] TransitionIoBuyerSeatToManagedResponse
             */

            /**
             * Calls TransitionIoBuyerSeatToManaged.
             * @function transitionIoBuyerSeatToManaged
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.ITransitionIoBuyerSeatToManagedRequest} request TransitionIoBuyerSeatToManagedRequest message or plain object
             * @param {teads.api.CommandService.TransitionIoBuyerSeatToManagedCallback} callback Node-style callback called with the error, if any, and TransitionIoBuyerSeatToManagedResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.transitionIoBuyerSeatToManaged = function transitionIoBuyerSeatToManaged(request, callback) {
                return this.rpcCall(transitionIoBuyerSeatToManaged, $root.teads.api.TransitionIoBuyerSeatToManagedRequest, $root.teads.api.TransitionIoBuyerSeatToManagedResponse, request, callback);
            }, "name", { value: "TransitionIoBuyerSeatToManaged" });

            /**
             * Calls TransitionIoBuyerSeatToManaged.
             * @function transitionIoBuyerSeatToManaged
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.ITransitionIoBuyerSeatToManagedRequest} request TransitionIoBuyerSeatToManagedRequest message or plain object
             * @returns {Promise<teads.api.TransitionIoBuyerSeatToManagedResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.CommandService#transitionIoBuyerSeatToSelfServed}.
             * @memberof teads.api.CommandService
             * @typedef TransitionIoBuyerSeatToSelfServedCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.TransitionIoBuyerSeatToSelfServedResponse} [response] TransitionIoBuyerSeatToSelfServedResponse
             */

            /**
             * Calls TransitionIoBuyerSeatToSelfServed.
             * @function transitionIoBuyerSeatToSelfServed
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.ITransitionIoBuyerSeatToSelfServedRequest} request TransitionIoBuyerSeatToSelfServedRequest message or plain object
             * @param {teads.api.CommandService.TransitionIoBuyerSeatToSelfServedCallback} callback Node-style callback called with the error, if any, and TransitionIoBuyerSeatToSelfServedResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.transitionIoBuyerSeatToSelfServed = function transitionIoBuyerSeatToSelfServed(request, callback) {
                return this.rpcCall(transitionIoBuyerSeatToSelfServed, $root.teads.api.TransitionIoBuyerSeatToSelfServedRequest, $root.teads.api.TransitionIoBuyerSeatToSelfServedResponse, request, callback);
            }, "name", { value: "TransitionIoBuyerSeatToSelfServed" });

            /**
             * Calls TransitionIoBuyerSeatToSelfServed.
             * @function transitionIoBuyerSeatToSelfServed
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.ITransitionIoBuyerSeatToSelfServedRequest} request TransitionIoBuyerSeatToSelfServedRequest message or plain object
             * @returns {Promise<teads.api.TransitionIoBuyerSeatToSelfServedResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.CommandService#transitionManagedBuyerSeatToSelfServed}.
             * @memberof teads.api.CommandService
             * @typedef TransitionManagedBuyerSeatToSelfServedCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.TransitionManagedBuyerSeatToSelfServedResponse} [response] TransitionManagedBuyerSeatToSelfServedResponse
             */

            /**
             * Calls TransitionManagedBuyerSeatToSelfServed.
             * @function transitionManagedBuyerSeatToSelfServed
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.ITransitionManagedBuyerSeatToSelfServedRequest} request TransitionManagedBuyerSeatToSelfServedRequest message or plain object
             * @param {teads.api.CommandService.TransitionManagedBuyerSeatToSelfServedCallback} callback Node-style callback called with the error, if any, and TransitionManagedBuyerSeatToSelfServedResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.transitionManagedBuyerSeatToSelfServed = function transitionManagedBuyerSeatToSelfServed(request, callback) {
                return this.rpcCall(transitionManagedBuyerSeatToSelfServed, $root.teads.api.TransitionManagedBuyerSeatToSelfServedRequest, $root.teads.api.TransitionManagedBuyerSeatToSelfServedResponse, request, callback);
            }, "name", { value: "TransitionManagedBuyerSeatToSelfServed" });

            /**
             * Calls TransitionManagedBuyerSeatToSelfServed.
             * @function transitionManagedBuyerSeatToSelfServed
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.ITransitionManagedBuyerSeatToSelfServedRequest} request TransitionManagedBuyerSeatToSelfServedRequest message or plain object
             * @returns {Promise<teads.api.TransitionManagedBuyerSeatToSelfServedResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.CommandService#transitionSelfServedBuyerSeatToManaged}.
             * @memberof teads.api.CommandService
             * @typedef TransitionSelfServedBuyerSeatToManagedCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.TransitionSelfServedBuyerSeatToManagedResponse} [response] TransitionSelfServedBuyerSeatToManagedResponse
             */

            /**
             * Calls TransitionSelfServedBuyerSeatToManaged.
             * @function transitionSelfServedBuyerSeatToManaged
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.ITransitionSelfServedBuyerSeatToManagedRequest} request TransitionSelfServedBuyerSeatToManagedRequest message or plain object
             * @param {teads.api.CommandService.TransitionSelfServedBuyerSeatToManagedCallback} callback Node-style callback called with the error, if any, and TransitionSelfServedBuyerSeatToManagedResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.transitionSelfServedBuyerSeatToManaged = function transitionSelfServedBuyerSeatToManaged(request, callback) {
                return this.rpcCall(transitionSelfServedBuyerSeatToManaged, $root.teads.api.TransitionSelfServedBuyerSeatToManagedRequest, $root.teads.api.TransitionSelfServedBuyerSeatToManagedResponse, request, callback);
            }, "name", { value: "TransitionSelfServedBuyerSeatToManaged" });

            /**
             * Calls TransitionSelfServedBuyerSeatToManaged.
             * @function transitionSelfServedBuyerSeatToManaged
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.ITransitionSelfServedBuyerSeatToManagedRequest} request TransitionSelfServedBuyerSeatToManagedRequest message or plain object
             * @returns {Promise<teads.api.TransitionSelfServedBuyerSeatToManagedResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.CommandService#updateBuyerSeatFee}.
             * @memberof teads.api.CommandService
             * @typedef UpdateBuyerSeatFeeCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.UpdateBuyerSeatFeeResponse} [response] UpdateBuyerSeatFeeResponse
             */

            /**
             * Calls UpdateBuyerSeatFee.
             * @function updateBuyerSeatFee
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IUpdateBuyerSeatFeeRequest} request UpdateBuyerSeatFeeRequest message or plain object
             * @param {teads.api.CommandService.UpdateBuyerSeatFeeCallback} callback Node-style callback called with the error, if any, and UpdateBuyerSeatFeeResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.updateBuyerSeatFee = function updateBuyerSeatFee(request, callback) {
                return this.rpcCall(updateBuyerSeatFee, $root.teads.api.UpdateBuyerSeatFeeRequest, $root.teads.api.UpdateBuyerSeatFeeResponse, request, callback);
            }, "name", { value: "UpdateBuyerSeatFee" });

            /**
             * Calls UpdateBuyerSeatFee.
             * @function updateBuyerSeatFee
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IUpdateBuyerSeatFeeRequest} request UpdateBuyerSeatFeeRequest message or plain object
             * @returns {Promise<teads.api.UpdateBuyerSeatFeeResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.CommandService#updateBuyerSeatName}.
             * @memberof teads.api.CommandService
             * @typedef UpdateBuyerSeatNameCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.UpdateBuyerSeatNameResponse} [response] UpdateBuyerSeatNameResponse
             */

            /**
             * Calls UpdateBuyerSeatName.
             * @function updateBuyerSeatName
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IUpdateBuyerSeatNameRequest} request UpdateBuyerSeatNameRequest message or plain object
             * @param {teads.api.CommandService.UpdateBuyerSeatNameCallback} callback Node-style callback called with the error, if any, and UpdateBuyerSeatNameResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(CommandService.prototype.updateBuyerSeatName = function updateBuyerSeatName(request, callback) {
                return this.rpcCall(updateBuyerSeatName, $root.teads.api.UpdateBuyerSeatNameRequest, $root.teads.api.UpdateBuyerSeatNameResponse, request, callback);
            }, "name", { value: "UpdateBuyerSeatName" });

            /**
             * Calls UpdateBuyerSeatName.
             * @function updateBuyerSeatName
             * @memberof teads.api.CommandService
             * @instance
             * @param {teads.api.IUpdateBuyerSeatNameRequest} request UpdateBuyerSeatNameRequest message or plain object
             * @returns {Promise<teads.api.UpdateBuyerSeatNameResponse>} Promise
             * @variation 2
             */

            return CommandService;
        })();

        api.QueryService = (function() {

            /**
             * Constructs a new QueryService service.
             * @memberof teads.api
             * @classdesc Represents a QueryService
             * @extends $protobuf.rpc.Service
             * @constructor
             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
             */
            function QueryService(rpcImpl, requestDelimited, responseDelimited) {
                $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
            }

            (QueryService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = QueryService;

            /**
             * Creates new QueryService service using the specified rpc implementation.
             * @function create
             * @memberof teads.api.QueryService
             * @static
             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
             * @returns {QueryService} RPC service. Useful where requests and/or responses are streamed.
             */
            QueryService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                return new this(rpcImpl, requestDelimited, responseDelimited);
            };

            /**
             * Callback as used by {@link teads.api.QueryService#canAccountEditCampaign}.
             * @memberof teads.api.QueryService
             * @typedef CanAccountEditCampaignCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.CanAccountEditCampaignResponse} [response] CanAccountEditCampaignResponse
             */

            /**
             * Calls CanAccountEditCampaign.
             * @function canAccountEditCampaign
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.ICanAccountEditCampaignRequest} request CanAccountEditCampaignRequest message or plain object
             * @param {teads.api.QueryService.CanAccountEditCampaignCallback} callback Node-style callback called with the error, if any, and CanAccountEditCampaignResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(QueryService.prototype.canAccountEditCampaign = function canAccountEditCampaign(request, callback) {
                return this.rpcCall(canAccountEditCampaign, $root.teads.api.CanAccountEditCampaignRequest, $root.teads.api.CanAccountEditCampaignResponse, request, callback);
            }, "name", { value: "CanAccountEditCampaign" });

            /**
             * Calls CanAccountEditCampaign.
             * @function canAccountEditCampaign
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.ICanAccountEditCampaignRequest} request CanAccountEditCampaignRequest message or plain object
             * @returns {Promise<teads.api.CanAccountEditCampaignResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.QueryService#findActiveAccountsForProfile}.
             * @memberof teads.api.QueryService
             * @typedef FindActiveAccountsForProfileCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.FindActiveAccountsForProfileResponse} [response] FindActiveAccountsForProfileResponse
             */

            /**
             * Calls FindActiveAccountsForProfile.
             * @function findActiveAccountsForProfile
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IFindActiveAccountsForProfileRequest} request FindActiveAccountsForProfileRequest message or plain object
             * @param {teads.api.QueryService.FindActiveAccountsForProfileCallback} callback Node-style callback called with the error, if any, and FindActiveAccountsForProfileResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(QueryService.prototype.findActiveAccountsForProfile = function findActiveAccountsForProfile(request, callback) {
                return this.rpcCall(findActiveAccountsForProfile, $root.teads.api.FindActiveAccountsForProfileRequest, $root.teads.api.FindActiveAccountsForProfileResponse, request, callback);
            }, "name", { value: "FindActiveAccountsForProfile" });

            /**
             * Calls FindActiveAccountsForProfile.
             * @function findActiveAccountsForProfile
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IFindActiveAccountsForProfileRequest} request FindActiveAccountsForProfileRequest message or plain object
             * @returns {Promise<teads.api.FindActiveAccountsForProfileResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.QueryService#findBuyerPixelsForAdvertiser}.
             * @memberof teads.api.QueryService
             * @typedef FindBuyerPixelsForAdvertiserCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.FindBuyerPixelsForAdvertiserResponse} [response] FindBuyerPixelsForAdvertiserResponse
             */

            /**
             * Calls FindBuyerPixelsForAdvertiser.
             * @function findBuyerPixelsForAdvertiser
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IFindBuyerPixelsForAdvertiserRequest} request FindBuyerPixelsForAdvertiserRequest message or plain object
             * @param {teads.api.QueryService.FindBuyerPixelsForAdvertiserCallback} callback Node-style callback called with the error, if any, and FindBuyerPixelsForAdvertiserResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(QueryService.prototype.findBuyerPixelsForAdvertiser = function findBuyerPixelsForAdvertiser(request, callback) {
                return this.rpcCall(findBuyerPixelsForAdvertiser, $root.teads.api.FindBuyerPixelsForAdvertiserRequest, $root.teads.api.FindBuyerPixelsForAdvertiserResponse, request, callback);
            }, "name", { value: "FindBuyerPixelsForAdvertiser" });

            /**
             * Calls FindBuyerPixelsForAdvertiser.
             * @function findBuyerPixelsForAdvertiser
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IFindBuyerPixelsForAdvertiserRequest} request FindBuyerPixelsForAdvertiserRequest message or plain object
             * @returns {Promise<teads.api.FindBuyerPixelsForAdvertiserResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.QueryService#findBuyerSeatForEntity}.
             * @memberof teads.api.QueryService
             * @typedef FindBuyerSeatForEntityCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.FindBuyerSeatForEntityResponse} [response] FindBuyerSeatForEntityResponse
             */

            /**
             * Calls FindBuyerSeatForEntity.
             * @function findBuyerSeatForEntity
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IFindBuyerSeatForEntityRequest} request FindBuyerSeatForEntityRequest message or plain object
             * @param {teads.api.QueryService.FindBuyerSeatForEntityCallback} callback Node-style callback called with the error, if any, and FindBuyerSeatForEntityResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(QueryService.prototype.findBuyerSeatForEntity = function findBuyerSeatForEntity(request, callback) {
                return this.rpcCall(findBuyerSeatForEntity, $root.teads.api.FindBuyerSeatForEntityRequest, $root.teads.api.FindBuyerSeatForEntityResponse, request, callback);
            }, "name", { value: "FindBuyerSeatForEntity" });

            /**
             * Calls FindBuyerSeatForEntity.
             * @function findBuyerSeatForEntity
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IFindBuyerSeatForEntityRequest} request FindBuyerSeatForEntityRequest message or plain object
             * @returns {Promise<teads.api.FindBuyerSeatForEntityResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.QueryService#findBuyerSeatForSalesforceSeat}.
             * @memberof teads.api.QueryService
             * @typedef FindBuyerSeatForSalesforceSeatCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.FindBuyerSeatForSalesforceSeatResponse} [response] FindBuyerSeatForSalesforceSeatResponse
             */

            /**
             * Calls FindBuyerSeatForSalesforceSeat.
             * @function findBuyerSeatForSalesforceSeat
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IFindBuyerSeatForSalesforceSeatRequest} request FindBuyerSeatForSalesforceSeatRequest message or plain object
             * @param {teads.api.QueryService.FindBuyerSeatForSalesforceSeatCallback} callback Node-style callback called with the error, if any, and FindBuyerSeatForSalesforceSeatResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(QueryService.prototype.findBuyerSeatForSalesforceSeat = function findBuyerSeatForSalesforceSeat(request, callback) {
                return this.rpcCall(findBuyerSeatForSalesforceSeat, $root.teads.api.FindBuyerSeatForSalesforceSeatRequest, $root.teads.api.FindBuyerSeatForSalesforceSeatResponse, request, callback);
            }, "name", { value: "FindBuyerSeatForSalesforceSeat" });

            /**
             * Calls FindBuyerSeatForSalesforceSeat.
             * @function findBuyerSeatForSalesforceSeat
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IFindBuyerSeatForSalesforceSeatRequest} request FindBuyerSeatForSalesforceSeatRequest message or plain object
             * @returns {Promise<teads.api.FindBuyerSeatForSalesforceSeatResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.QueryService#findCampaignsForSalesforceOpportunity}.
             * @memberof teads.api.QueryService
             * @typedef FindCampaignsForSalesforceOpportunityCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.FindCampaignsForSalesforceOpportunityResponse} [response] FindCampaignsForSalesforceOpportunityResponse
             */

            /**
             * Calls FindCampaignsForSalesforceOpportunity.
             * @function findCampaignsForSalesforceOpportunity
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IFindCampaignsForSalesforceOpportunityRequest} request FindCampaignsForSalesforceOpportunityRequest message or plain object
             * @param {teads.api.QueryService.FindCampaignsForSalesforceOpportunityCallback} callback Node-style callback called with the error, if any, and FindCampaignsForSalesforceOpportunityResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(QueryService.prototype.findCampaignsForSalesforceOpportunity = function findCampaignsForSalesforceOpportunity(request, callback) {
                return this.rpcCall(findCampaignsForSalesforceOpportunity, $root.teads.api.FindCampaignsForSalesforceOpportunityRequest, $root.teads.api.FindCampaignsForSalesforceOpportunityResponse, request, callback);
            }, "name", { value: "FindCampaignsForSalesforceOpportunity" });

            /**
             * Calls FindCampaignsForSalesforceOpportunity.
             * @function findCampaignsForSalesforceOpportunity
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IFindCampaignsForSalesforceOpportunityRequest} request FindCampaignsForSalesforceOpportunityRequest message or plain object
             * @returns {Promise<teads.api.FindCampaignsForSalesforceOpportunityResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.QueryService#findCampaignsForSalesforceOpportunityAndProfile}.
             * @memberof teads.api.QueryService
             * @typedef FindCampaignsForSalesforceOpportunityAndProfileCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse} [response] FindCampaignsForSalesforceOpportunityAndProfileResponse
             */

            /**
             * Calls FindCampaignsForSalesforceOpportunityAndProfile.
             * @function findCampaignsForSalesforceOpportunityAndProfile
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IFindCampaignsForSalesforceOpportunityAndProfileRequest} request FindCampaignsForSalesforceOpportunityAndProfileRequest message or plain object
             * @param {teads.api.QueryService.FindCampaignsForSalesforceOpportunityAndProfileCallback} callback Node-style callback called with the error, if any, and FindCampaignsForSalesforceOpportunityAndProfileResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(QueryService.prototype.findCampaignsForSalesforceOpportunityAndProfile = function findCampaignsForSalesforceOpportunityAndProfile(request, callback) {
                return this.rpcCall(findCampaignsForSalesforceOpportunityAndProfile, $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileRequest, $root.teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse, request, callback);
            }, "name", { value: "FindCampaignsForSalesforceOpportunityAndProfile" });

            /**
             * Calls FindCampaignsForSalesforceOpportunityAndProfile.
             * @function findCampaignsForSalesforceOpportunityAndProfile
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IFindCampaignsForSalesforceOpportunityAndProfileRequest} request FindCampaignsForSalesforceOpportunityAndProfileRequest message or plain object
             * @returns {Promise<teads.api.FindCampaignsForSalesforceOpportunityAndProfileResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.QueryService#findGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeats}.
             * @memberof teads.api.QueryService
             * @typedef FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse} [response] FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse
             */

            /**
             * Calls FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeats.
             * @function findGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeats
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IFindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest} request FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest message or plain object
             * @param {teads.api.QueryService.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsCallback} callback Node-style callback called with the error, if any, and FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(QueryService.prototype.findGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeats = function findGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeats(request, callback) {
                return this.rpcCall(findGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeats, $root.teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest, $root.teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse, request, callback);
            }, "name", { value: "FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeats" });

            /**
             * Calls FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeats.
             * @function findGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeats
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IFindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest} request FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest message or plain object
             * @returns {Promise<teads.api.FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.QueryService#findLineItemsForCampaign}.
             * @memberof teads.api.QueryService
             * @typedef FindLineItemsForCampaignCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.FindLineItemsForCampaignResponse} [response] FindLineItemsForCampaignResponse
             */

            /**
             * Calls FindLineItemsForCampaign.
             * @function findLineItemsForCampaign
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IFindLineItemsForCampaignRequest} request FindLineItemsForCampaignRequest message or plain object
             * @param {teads.api.QueryService.FindLineItemsForCampaignCallback} callback Node-style callback called with the error, if any, and FindLineItemsForCampaignResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(QueryService.prototype.findLineItemsForCampaign = function findLineItemsForCampaign(request, callback) {
                return this.rpcCall(findLineItemsForCampaign, $root.teads.api.FindLineItemsForCampaignRequest, $root.teads.api.FindLineItemsForCampaignResponse, request, callback);
            }, "name", { value: "FindLineItemsForCampaign" });

            /**
             * Calls FindLineItemsForCampaign.
             * @function findLineItemsForCampaign
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IFindLineItemsForCampaignRequest} request FindLineItemsForCampaignRequest message or plain object
             * @returns {Promise<teads.api.FindLineItemsForCampaignResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.QueryService#findProfileForEmailAnonymously}.
             * @memberof teads.api.QueryService
             * @typedef FindProfileForEmailAnonymouslyCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.FindProfileForEmailAnonymouslyResponse} [response] FindProfileForEmailAnonymouslyResponse
             */

            /**
             * Calls FindProfileForEmailAnonymously.
             * @function findProfileForEmailAnonymously
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IFindProfileForEmailAnonymouslyRequest} request FindProfileForEmailAnonymouslyRequest message or plain object
             * @param {teads.api.QueryService.FindProfileForEmailAnonymouslyCallback} callback Node-style callback called with the error, if any, and FindProfileForEmailAnonymouslyResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(QueryService.prototype.findProfileForEmailAnonymously = function findProfileForEmailAnonymously(request, callback) {
                return this.rpcCall(findProfileForEmailAnonymously, $root.teads.api.FindProfileForEmailAnonymouslyRequest, $root.teads.api.FindProfileForEmailAnonymouslyResponse, request, callback);
            }, "name", { value: "FindProfileForEmailAnonymously" });

            /**
             * Calls FindProfileForEmailAnonymously.
             * @function findProfileForEmailAnonymously
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IFindProfileForEmailAnonymouslyRequest} request FindProfileForEmailAnonymouslyRequest message or plain object
             * @returns {Promise<teads.api.FindProfileForEmailAnonymouslyResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.QueryService#findWhitelistedAdvertiserFirstPartySegmentsForSeat}.
             * @memberof teads.api.QueryService
             * @typedef FindWhitelistedAdvertiserFirstPartySegmentsForSeatCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse} [response] FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse
             */

            /**
             * Calls FindWhitelistedAdvertiserFirstPartySegmentsForSeat.
             * @function findWhitelistedAdvertiserFirstPartySegmentsForSeat
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IFindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest} request FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest message or plain object
             * @param {teads.api.QueryService.FindWhitelistedAdvertiserFirstPartySegmentsForSeatCallback} callback Node-style callback called with the error, if any, and FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(QueryService.prototype.findWhitelistedAdvertiserFirstPartySegmentsForSeat = function findWhitelistedAdvertiserFirstPartySegmentsForSeat(request, callback) {
                return this.rpcCall(findWhitelistedAdvertiserFirstPartySegmentsForSeat, $root.teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest, $root.teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse, request, callback);
            }, "name", { value: "FindWhitelistedAdvertiserFirstPartySegmentsForSeat" });

            /**
             * Calls FindWhitelistedAdvertiserFirstPartySegmentsForSeat.
             * @function findWhitelistedAdvertiserFirstPartySegmentsForSeat
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IFindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest} request FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest message or plain object
             * @returns {Promise<teads.api.FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.QueryService#getAccount}.
             * @memberof teads.api.QueryService
             * @typedef GetAccountCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.GetAccountResponse} [response] GetAccountResponse
             */

            /**
             * Calls GetAccount.
             * @function getAccount
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IGetAccountRequest} request GetAccountRequest message or plain object
             * @param {teads.api.QueryService.GetAccountCallback} callback Node-style callback called with the error, if any, and GetAccountResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(QueryService.prototype.getAccount = function getAccount(request, callback) {
                return this.rpcCall(getAccount, $root.teads.api.GetAccountRequest, $root.teads.api.GetAccountResponse, request, callback);
            }, "name", { value: "GetAccount" });

            /**
             * Calls GetAccount.
             * @function getAccount
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IGetAccountRequest} request GetAccountRequest message or plain object
             * @returns {Promise<teads.api.GetAccountResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.QueryService#getAdvertiserFirstPartySegments}.
             * @memberof teads.api.QueryService
             * @typedef GetAdvertiserFirstPartySegmentsCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.GetAdvertiserFirstPartySegmentsResponse} [response] GetAdvertiserFirstPartySegmentsResponse
             */

            /**
             * Calls GetAdvertiserFirstPartySegments.
             * @function getAdvertiserFirstPartySegments
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IGetAdvertiserFirstPartySegmentsRequest} request GetAdvertiserFirstPartySegmentsRequest message or plain object
             * @param {teads.api.QueryService.GetAdvertiserFirstPartySegmentsCallback} callback Node-style callback called with the error, if any, and GetAdvertiserFirstPartySegmentsResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(QueryService.prototype.getAdvertiserFirstPartySegments = function getAdvertiserFirstPartySegments(request, callback) {
                return this.rpcCall(getAdvertiserFirstPartySegments, $root.teads.api.GetAdvertiserFirstPartySegmentsRequest, $root.teads.api.GetAdvertiserFirstPartySegmentsResponse, request, callback);
            }, "name", { value: "GetAdvertiserFirstPartySegments" });

            /**
             * Calls GetAdvertiserFirstPartySegments.
             * @function getAdvertiserFirstPartySegments
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IGetAdvertiserFirstPartySegmentsRequest} request GetAdvertiserFirstPartySegmentsRequest message or plain object
             * @returns {Promise<teads.api.GetAdvertiserFirstPartySegmentsResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.QueryService#getAllCustomTargetingReasons}.
             * @memberof teads.api.QueryService
             * @typedef GetAllCustomTargetingReasonsCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.GetAllCustomTargetingReasonsResponse} [response] GetAllCustomTargetingReasonsResponse
             */

            /**
             * Calls GetAllCustomTargetingReasons.
             * @function getAllCustomTargetingReasons
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IGetAllCustomTargetingReasonsRequest} request GetAllCustomTargetingReasonsRequest message or plain object
             * @param {teads.api.QueryService.GetAllCustomTargetingReasonsCallback} callback Node-style callback called with the error, if any, and GetAllCustomTargetingReasonsResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(QueryService.prototype.getAllCustomTargetingReasons = function getAllCustomTargetingReasons(request, callback) {
                return this.rpcCall(getAllCustomTargetingReasons, $root.teads.api.GetAllCustomTargetingReasonsRequest, $root.teads.api.GetAllCustomTargetingReasonsResponse, request, callback);
            }, "name", { value: "GetAllCustomTargetingReasons" });

            /**
             * Calls GetAllCustomTargetingReasons.
             * @function getAllCustomTargetingReasons
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IGetAllCustomTargetingReasonsRequest} request GetAllCustomTargetingReasonsRequest message or plain object
             * @returns {Promise<teads.api.GetAllCustomTargetingReasonsResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.QueryService#getBuyerSeat}.
             * @memberof teads.api.QueryService
             * @typedef GetBuyerSeatCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.GetBuyerSeatResponse} [response] GetBuyerSeatResponse
             */

            /**
             * Calls GetBuyerSeat.
             * @function getBuyerSeat
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IGetBuyerSeatRequest} request GetBuyerSeatRequest message or plain object
             * @param {teads.api.QueryService.GetBuyerSeatCallback} callback Node-style callback called with the error, if any, and GetBuyerSeatResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(QueryService.prototype.getBuyerSeat = function getBuyerSeat(request, callback) {
                return this.rpcCall(getBuyerSeat, $root.teads.api.GetBuyerSeatRequest, $root.teads.api.GetBuyerSeatResponse, request, callback);
            }, "name", { value: "GetBuyerSeat" });

            /**
             * Calls GetBuyerSeat.
             * @function getBuyerSeat
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IGetBuyerSeatRequest} request GetBuyerSeatRequest message or plain object
             * @returns {Promise<teads.api.GetBuyerSeatResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.QueryService#getOffice}.
             * @memberof teads.api.QueryService
             * @typedef GetOfficeCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.GetOfficeResponse} [response] GetOfficeResponse
             */

            /**
             * Calls GetOffice.
             * @function getOffice
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IGetOfficeRequest} request GetOfficeRequest message or plain object
             * @param {teads.api.QueryService.GetOfficeCallback} callback Node-style callback called with the error, if any, and GetOfficeResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(QueryService.prototype.getOffice = function getOffice(request, callback) {
                return this.rpcCall(getOffice, $root.teads.api.GetOfficeRequest, $root.teads.api.GetOfficeResponse, request, callback);
            }, "name", { value: "GetOffice" });

            /**
             * Calls GetOffice.
             * @function getOffice
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IGetOfficeRequest} request GetOfficeRequest message or plain object
             * @returns {Promise<teads.api.GetOfficeResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.QueryService#getSalesforceOpportunity}.
             * @memberof teads.api.QueryService
             * @typedef GetSalesforceOpportunityCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.GetSalesforceOpportunityResponse} [response] GetSalesforceOpportunityResponse
             */

            /**
             * Calls GetSalesforceOpportunity.
             * @function getSalesforceOpportunity
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IGetSalesforceOpportunityRequest} request GetSalesforceOpportunityRequest message or plain object
             * @param {teads.api.QueryService.GetSalesforceOpportunityCallback} callback Node-style callback called with the error, if any, and GetSalesforceOpportunityResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(QueryService.prototype.getSalesforceOpportunity = function getSalesforceOpportunity(request, callback) {
                return this.rpcCall(getSalesforceOpportunity, $root.teads.api.GetSalesforceOpportunityRequest, $root.teads.api.GetSalesforceOpportunityResponse, request, callback);
            }, "name", { value: "GetSalesforceOpportunity" });

            /**
             * Calls GetSalesforceOpportunity.
             * @function getSalesforceOpportunity
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IGetSalesforceOpportunityRequest} request GetSalesforceOpportunityRequest message or plain object
             * @returns {Promise<teads.api.GetSalesforceOpportunityResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.QueryService#listCustomTargetingRulesForCampaign}.
             * @memberof teads.api.QueryService
             * @typedef ListCustomTargetingRulesForCampaignCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.ListCustomTargetingRulesForCampaignResponse} [response] ListCustomTargetingRulesForCampaignResponse
             */

            /**
             * Calls ListCustomTargetingRulesForCampaign.
             * @function listCustomTargetingRulesForCampaign
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IListCustomTargetingRulesForCampaignRequest} request ListCustomTargetingRulesForCampaignRequest message or plain object
             * @param {teads.api.QueryService.ListCustomTargetingRulesForCampaignCallback} callback Node-style callback called with the error, if any, and ListCustomTargetingRulesForCampaignResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(QueryService.prototype.listCustomTargetingRulesForCampaign = function listCustomTargetingRulesForCampaign(request, callback) {
                return this.rpcCall(listCustomTargetingRulesForCampaign, $root.teads.api.ListCustomTargetingRulesForCampaignRequest, $root.teads.api.ListCustomTargetingRulesForCampaignResponse, request, callback);
            }, "name", { value: "ListCustomTargetingRulesForCampaign" });

            /**
             * Calls ListCustomTargetingRulesForCampaign.
             * @function listCustomTargetingRulesForCampaign
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IListCustomTargetingRulesForCampaignRequest} request ListCustomTargetingRulesForCampaignRequest message or plain object
             * @returns {Promise<teads.api.ListCustomTargetingRulesForCampaignResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.QueryService#listOffices}.
             * @memberof teads.api.QueryService
             * @typedef ListOfficesCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.ListOfficesResponse} [response] ListOfficesResponse
             */

            /**
             * Calls ListOffices.
             * @function listOffices
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IListOfficesRequest} request ListOfficesRequest message or plain object
             * @param {teads.api.QueryService.ListOfficesCallback} callback Node-style callback called with the error, if any, and ListOfficesResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(QueryService.prototype.listOffices = function listOffices(request, callback) {
                return this.rpcCall(listOffices, $root.teads.api.ListOfficesRequest, $root.teads.api.ListOfficesResponse, request, callback);
            }, "name", { value: "ListOffices" });

            /**
             * Calls ListOffices.
             * @function listOffices
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.IListOfficesRequest} request ListOfficesRequest message or plain object
             * @returns {Promise<teads.api.ListOfficesResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.QueryService#searchAdvertiserFirstPartySegments}.
             * @memberof teads.api.QueryService
             * @typedef SearchAdvertiserFirstPartySegmentsCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.SearchAdvertiserFirstPartySegmentsResponse} [response] SearchAdvertiserFirstPartySegmentsResponse
             */

            /**
             * Calls SearchAdvertiserFirstPartySegments.
             * @function searchAdvertiserFirstPartySegments
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.ISearchAdvertiserFirstPartySegmentsRequest} request SearchAdvertiserFirstPartySegmentsRequest message or plain object
             * @param {teads.api.QueryService.SearchAdvertiserFirstPartySegmentsCallback} callback Node-style callback called with the error, if any, and SearchAdvertiserFirstPartySegmentsResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(QueryService.prototype.searchAdvertiserFirstPartySegments = function searchAdvertiserFirstPartySegments(request, callback) {
                return this.rpcCall(searchAdvertiserFirstPartySegments, $root.teads.api.SearchAdvertiserFirstPartySegmentsRequest, $root.teads.api.SearchAdvertiserFirstPartySegmentsResponse, request, callback);
            }, "name", { value: "SearchAdvertiserFirstPartySegments" });

            /**
             * Calls SearchAdvertiserFirstPartySegments.
             * @function searchAdvertiserFirstPartySegments
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.ISearchAdvertiserFirstPartySegmentsRequest} request SearchAdvertiserFirstPartySegmentsRequest message or plain object
             * @returns {Promise<teads.api.SearchAdvertiserFirstPartySegmentsResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.QueryService#searchAdvertisersForSeatManagement}.
             * @memberof teads.api.QueryService
             * @typedef SearchAdvertisersForSeatManagementCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.SearchAdvertisersForSeatManagementResponse} [response] SearchAdvertisersForSeatManagementResponse
             */

            /**
             * Calls SearchAdvertisersForSeatManagement.
             * @function searchAdvertisersForSeatManagement
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.ISearchAdvertisersForSeatManagementRequest} request SearchAdvertisersForSeatManagementRequest message or plain object
             * @param {teads.api.QueryService.SearchAdvertisersForSeatManagementCallback} callback Node-style callback called with the error, if any, and SearchAdvertisersForSeatManagementResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(QueryService.prototype.searchAdvertisersForSeatManagement = function searchAdvertisersForSeatManagement(request, callback) {
                return this.rpcCall(searchAdvertisersForSeatManagement, $root.teads.api.SearchAdvertisersForSeatManagementRequest, $root.teads.api.SearchAdvertisersForSeatManagementResponse, request, callback);
            }, "name", { value: "SearchAdvertisersForSeatManagement" });

            /**
             * Calls SearchAdvertisersForSeatManagement.
             * @function searchAdvertisersForSeatManagement
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.ISearchAdvertisersForSeatManagementRequest} request SearchAdvertisersForSeatManagementRequest message or plain object
             * @returns {Promise<teads.api.SearchAdvertisersForSeatManagementResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.QueryService#searchAgenciesForSeatManagement}.
             * @memberof teads.api.QueryService
             * @typedef SearchAgenciesForSeatManagementCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.SearchAgenciesForSeatManagementResponse} [response] SearchAgenciesForSeatManagementResponse
             */

            /**
             * Calls SearchAgenciesForSeatManagement.
             * @function searchAgenciesForSeatManagement
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.ISearchAgenciesForSeatManagementRequest} request SearchAgenciesForSeatManagementRequest message or plain object
             * @param {teads.api.QueryService.SearchAgenciesForSeatManagementCallback} callback Node-style callback called with the error, if any, and SearchAgenciesForSeatManagementResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(QueryService.prototype.searchAgenciesForSeatManagement = function searchAgenciesForSeatManagement(request, callback) {
                return this.rpcCall(searchAgenciesForSeatManagement, $root.teads.api.SearchAgenciesForSeatManagementRequest, $root.teads.api.SearchAgenciesForSeatManagementResponse, request, callback);
            }, "name", { value: "SearchAgenciesForSeatManagement" });

            /**
             * Calls SearchAgenciesForSeatManagement.
             * @function searchAgenciesForSeatManagement
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.ISearchAgenciesForSeatManagementRequest} request SearchAgenciesForSeatManagementRequest message or plain object
             * @returns {Promise<teads.api.SearchAgenciesForSeatManagementResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.QueryService#searchBuyerSeats}.
             * @memberof teads.api.QueryService
             * @typedef SearchBuyerSeatsCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.SearchBuyerSeatsResponse} [response] SearchBuyerSeatsResponse
             */

            /**
             * Calls SearchBuyerSeats.
             * @function searchBuyerSeats
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.ISearchBuyerSeatsRequest} request SearchBuyerSeatsRequest message or plain object
             * @param {teads.api.QueryService.SearchBuyerSeatsCallback} callback Node-style callback called with the error, if any, and SearchBuyerSeatsResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(QueryService.prototype.searchBuyerSeats = function searchBuyerSeats(request, callback) {
                return this.rpcCall(searchBuyerSeats, $root.teads.api.SearchBuyerSeatsRequest, $root.teads.api.SearchBuyerSeatsResponse, request, callback);
            }, "name", { value: "SearchBuyerSeats" });

            /**
             * Calls SearchBuyerSeats.
             * @function searchBuyerSeats
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.ISearchBuyerSeatsRequest} request SearchBuyerSeatsRequest message or plain object
             * @returns {Promise<teads.api.SearchBuyerSeatsResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.QueryService#searchCampaigns}.
             * @memberof teads.api.QueryService
             * @typedef SearchCampaignsCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.SearchCampaignsResponse} [response] SearchCampaignsResponse
             */

            /**
             * Calls SearchCampaigns.
             * @function searchCampaigns
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.ISearchCampaignsRequest} request SearchCampaignsRequest message or plain object
             * @param {teads.api.QueryService.SearchCampaignsCallback} callback Node-style callback called with the error, if any, and SearchCampaignsResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(QueryService.prototype.searchCampaigns = function searchCampaigns(request, callback) {
                return this.rpcCall(searchCampaigns, $root.teads.api.SearchCampaignsRequest, $root.teads.api.SearchCampaignsResponse, request, callback);
            }, "name", { value: "SearchCampaigns" });

            /**
             * Calls SearchCampaigns.
             * @function searchCampaigns
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.ISearchCampaignsRequest} request SearchCampaignsRequest message or plain object
             * @returns {Promise<teads.api.SearchCampaignsResponse>} Promise
             * @variation 2
             */

            /**
             * Callback as used by {@link teads.api.QueryService#searchCampaignsEligibleForManagedServiceMigration}.
             * @memberof teads.api.QueryService
             * @typedef SearchCampaignsEligibleForManagedServiceMigrationCallback
             * @type {function}
             * @param {Error|null} error Error, if any
             * @param {teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse} [response] SearchCampaignsEligibleForManagedServiceMigrationResponse
             */

            /**
             * Calls SearchCampaignsEligibleForManagedServiceMigration.
             * @function searchCampaignsEligibleForManagedServiceMigration
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.ISearchCampaignsEligibleForManagedServiceMigrationRequest} request SearchCampaignsEligibleForManagedServiceMigrationRequest message or plain object
             * @param {teads.api.QueryService.SearchCampaignsEligibleForManagedServiceMigrationCallback} callback Node-style callback called with the error, if any, and SearchCampaignsEligibleForManagedServiceMigrationResponse
             * @returns {undefined}
             * @variation 1
             */
            Object.defineProperty(QueryService.prototype.searchCampaignsEligibleForManagedServiceMigration = function searchCampaignsEligibleForManagedServiceMigration(request, callback) {
                return this.rpcCall(searchCampaignsEligibleForManagedServiceMigration, $root.teads.api.SearchCampaignsEligibleForManagedServiceMigrationRequest, $root.teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse, request, callback);
            }, "name", { value: "SearchCampaignsEligibleForManagedServiceMigration" });

            /**
             * Calls SearchCampaignsEligibleForManagedServiceMigration.
             * @function searchCampaignsEligibleForManagedServiceMigration
             * @memberof teads.api.QueryService
             * @instance
             * @param {teads.api.ISearchCampaignsEligibleForManagedServiceMigrationRequest} request SearchCampaignsEligibleForManagedServiceMigrationRequest message or plain object
             * @returns {Promise<teads.api.SearchCampaignsEligibleForManagedServiceMigrationResponse>} Promise
             * @variation 2
             */

            return QueryService;
        })();

        return api;
    })();

    return teads;
})();

$root.google = (function() {

    /**
     * Namespace google.
     * @exports google
     * @namespace
     */
    var google = {};

    google.protobuf = (function() {

        /**
         * Namespace protobuf.
         * @memberof google
         * @namespace
         */
        var protobuf = {};

        protobuf.Any = (function() {

            /**
             * Properties of an Any.
             * @memberof google.protobuf
             * @interface IAny
             * @property {string|null} [type_url] Any type_url
             * @property {Uint8Array|null} [value] Any value
             */

            /**
             * Constructs a new Any.
             * @memberof google.protobuf
             * @classdesc Represents an Any.
             * @implements IAny
             * @constructor
             * @param {google.protobuf.IAny=} [properties] Properties to set
             */
            function Any(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Any type_url.
             * @member {string} type_url
             * @memberof google.protobuf.Any
             * @instance
             */
            Any.prototype.type_url = "";

            /**
             * Any value.
             * @member {Uint8Array} value
             * @memberof google.protobuf.Any
             * @instance
             */
            Any.prototype.value = $util.newBuffer([]);

            /**
             * Creates a new Any instance using the specified properties.
             * @function create
             * @memberof google.protobuf.Any
             * @static
             * @param {google.protobuf.IAny=} [properties] Properties to set
             * @returns {google.protobuf.Any} Any instance
             */
            Any.create = function create(properties) {
                return new Any(properties);
            };

            /**
             * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.Any
             * @static
             * @param {google.protobuf.IAny} message Any message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Any.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.type_url != null && Object.hasOwnProperty.call(message, "type_url"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.type_url);
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                return writer;
            };

            /**
             * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.Any
             * @static
             * @param {google.protobuf.IAny} message Any message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Any.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an Any message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.Any
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.Any} Any
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Any.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Any();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.type_url = reader.string();
                            break;
                        }
                    case 2: {
                            message.value = reader.bytes();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes an Any message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.Any
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.Any} Any
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Any.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an Any message.
             * @function verify
             * @memberof google.protobuf.Any
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Any.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.type_url != null && message.hasOwnProperty("type_url"))
                    if (!$util.isString(message.type_url))
                        return "type_url: string expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                        return "value: buffer expected";
                return null;
            };

            /**
             * Creates an Any message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.Any
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.Any} Any
             */
            Any.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.Any)
                    return object;
                var message = new $root.google.protobuf.Any();
                if (object.type_url != null)
                    message.type_url = String(object.type_url);
                if (object.value != null)
                    if (typeof object.value === "string")
                        $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                    else if (object.value.length >= 0)
                        message.value = object.value;
                return message;
            };

            /**
             * Creates a plain object from an Any message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.Any
             * @static
             * @param {google.protobuf.Any} message Any
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Any.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    object.type_url = "";
                    if (options.bytes === String)
                        object.value = "";
                    else {
                        object.value = [];
                        if (options.bytes !== Array)
                            object.value = $util.newBuffer(object.value);
                    }
                }
                if (message.type_url != null && message.hasOwnProperty("type_url"))
                    object.type_url = message.type_url;
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                return object;
            };

            /**
             * Converts this Any to JSON.
             * @function toJSON
             * @memberof google.protobuf.Any
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Any.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for Any
             * @function getTypeUrl
             * @memberof google.protobuf.Any
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Any.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/google.protobuf.Any";
            };

            return Any;
        })();

        protobuf.Duration = (function() {

            /**
             * Properties of a Duration.
             * @memberof google.protobuf
             * @interface IDuration
             * @property {number|null} [seconds] Duration seconds
             * @property {number|null} [nanos] Duration nanos
             */

            /**
             * Constructs a new Duration.
             * @memberof google.protobuf
             * @classdesc Represents a Duration.
             * @implements IDuration
             * @constructor
             * @param {google.protobuf.IDuration=} [properties] Properties to set
             */
            function Duration(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Duration seconds.
             * @member {number} seconds
             * @memberof google.protobuf.Duration
             * @instance
             */
            Duration.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Duration nanos.
             * @member {number} nanos
             * @memberof google.protobuf.Duration
             * @instance
             */
            Duration.prototype.nanos = 0;

            /**
             * Creates a new Duration instance using the specified properties.
             * @function create
             * @memberof google.protobuf.Duration
             * @static
             * @param {google.protobuf.IDuration=} [properties] Properties to set
             * @returns {google.protobuf.Duration} Duration instance
             */
            Duration.create = function create(properties) {
                return new Duration(properties);
            };

            /**
             * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.Duration
             * @static
             * @param {google.protobuf.IDuration} message Duration message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Duration.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                return writer;
            };

            /**
             * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.Duration
             * @static
             * @param {google.protobuf.IDuration} message Duration message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Duration.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a Duration message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.Duration
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.Duration} Duration
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Duration.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Duration();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.seconds = reader.int64();
                            break;
                        }
                    case 2: {
                            message.nanos = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a Duration message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.Duration
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.Duration} Duration
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Duration.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a Duration message.
             * @function verify
             * @memberof google.protobuf.Duration
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Duration.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.seconds != null && message.hasOwnProperty("seconds"))
                    if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                        return "seconds: integer|Long expected";
                if (message.nanos != null && message.hasOwnProperty("nanos"))
                    if (!$util.isInteger(message.nanos))
                        return "nanos: integer expected";
                return null;
            };

            /**
             * Creates a Duration message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.Duration
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.Duration} Duration
             */
            Duration.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.Duration)
                    return object;
                var message = new $root.google.protobuf.Duration();
                if (object.seconds != null)
                    if ($util.Long)
                        (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                    else if (typeof object.seconds === "string")
                        message.seconds = parseInt(object.seconds, 10);
                    else if (typeof object.seconds === "number")
                        message.seconds = object.seconds;
                    else if (typeof object.seconds === "object")
                        message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                if (object.nanos != null)
                    message.nanos = object.nanos | 0;
                return message;
            };

            /**
             * Creates a plain object from a Duration message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.Duration
             * @static
             * @param {google.protobuf.Duration} message Duration
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Duration.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seconds = options.longs === String ? "0" : 0;
                    object.nanos = 0;
                }
                if (message.seconds != null && message.hasOwnProperty("seconds"))
                    if (typeof message.seconds === "number")
                        object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                    else
                        object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                if (message.nanos != null && message.hasOwnProperty("nanos"))
                    object.nanos = message.nanos;
                return object;
            };

            /**
             * Converts this Duration to JSON.
             * @function toJSON
             * @memberof google.protobuf.Duration
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Duration.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for Duration
             * @function getTypeUrl
             * @memberof google.protobuf.Duration
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Duration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/google.protobuf.Duration";
            };

            return Duration;
        })();

        protobuf.Timestamp = (function() {

            /**
             * Properties of a Timestamp.
             * @memberof google.protobuf
             * @interface ITimestamp
             * @property {number|null} [seconds] Timestamp seconds
             * @property {number|null} [nanos] Timestamp nanos
             */

            /**
             * Constructs a new Timestamp.
             * @memberof google.protobuf
             * @classdesc Represents a Timestamp.
             * @implements ITimestamp
             * @constructor
             * @param {google.protobuf.ITimestamp=} [properties] Properties to set
             */
            function Timestamp(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Timestamp seconds.
             * @member {number} seconds
             * @memberof google.protobuf.Timestamp
             * @instance
             */
            Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Timestamp nanos.
             * @member {number} nanos
             * @memberof google.protobuf.Timestamp
             * @instance
             */
            Timestamp.prototype.nanos = 0;

            /**
             * Creates a new Timestamp instance using the specified properties.
             * @function create
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {google.protobuf.ITimestamp=} [properties] Properties to set
             * @returns {google.protobuf.Timestamp} Timestamp instance
             */
            Timestamp.create = function create(properties) {
                return new Timestamp(properties);
            };

            /**
             * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Timestamp.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                return writer;
            };

            /**
             * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a Timestamp message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.Timestamp} Timestamp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Timestamp.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.seconds = reader.int64();
                            break;
                        }
                    case 2: {
                            message.nanos = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a Timestamp message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.Timestamp} Timestamp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Timestamp.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a Timestamp message.
             * @function verify
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Timestamp.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.seconds != null && message.hasOwnProperty("seconds"))
                    if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                        return "seconds: integer|Long expected";
                if (message.nanos != null && message.hasOwnProperty("nanos"))
                    if (!$util.isInteger(message.nanos))
                        return "nanos: integer expected";
                return null;
            };

            /**
             * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.Timestamp} Timestamp
             */
            Timestamp.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.Timestamp)
                    return object;
                var message = new $root.google.protobuf.Timestamp();
                if (object.seconds != null)
                    if ($util.Long)
                        (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                    else if (typeof object.seconds === "string")
                        message.seconds = parseInt(object.seconds, 10);
                    else if (typeof object.seconds === "number")
                        message.seconds = object.seconds;
                    else if (typeof object.seconds === "object")
                        message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                if (object.nanos != null)
                    message.nanos = object.nanos | 0;
                return message;
            };

            /**
             * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {google.protobuf.Timestamp} message Timestamp
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Timestamp.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seconds = options.longs === String ? "0" : 0;
                    object.nanos = 0;
                }
                if (message.seconds != null && message.hasOwnProperty("seconds"))
                    if (typeof message.seconds === "number")
                        object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                    else
                        object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                if (message.nanos != null && message.hasOwnProperty("nanos"))
                    object.nanos = message.nanos;
                return object;
            };

            /**
             * Converts this Timestamp to JSON.
             * @function toJSON
             * @memberof google.protobuf.Timestamp
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Timestamp.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for Timestamp
             * @function getTypeUrl
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Timestamp.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/google.protobuf.Timestamp";
            };

            return Timestamp;
        })();

        return protobuf;
    })();

    return google;
})();

module.exports = $root;
