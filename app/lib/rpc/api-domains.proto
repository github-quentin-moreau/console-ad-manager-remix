// Consolidated by protomerge from https://github.com/ebuzzing/service-api-domains/commits/55da5d196816b697a9c12e1424028bb2b43cfa8f
syntax = "proto2";
package teads.api;
import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
option java_multiple_files = true;
// @section Account
message AccountCreatedEvent {
  required AccountId account_id = 1;
  optional TemporaryAccountDetail temporary_account_detail = 3;
  message AccountId {
    required int64 profile_id = 1;
    required int64 entity_id = 2;
  }
  message TemporaryAccountDetail {
    // When set, this indicates that the account was granted together with a request to revoke it in
    // the future. The upcoming revocation is observable through an AccountDeletedEvent.
    required google.protobuf.Duration to_be_revoked_in = 1;
    required string grant_reason = 2;
  }
  reserved 2;
}
// @section Account
message AccountDeletedEvent {
  required AccountId account_id = 1;
  // When set to true, this indicates that the account was granted temporarily
  optional bool was_temporary = 2;
  message AccountId {
    required int64 profile_id = 1;
    required int64 entity_id = 2;
  }
}
// @section Commercial
message AcknowledgeBuyerSeatCreationToSalesforceRequest {
  required SecurityContext security_context = 1;
  required string salesforce_buyer_seat_id = 2;
  required int64 platform_buyer_seat_id = 3;
}
// @section Commercial
message AcknowledgeBuyerSeatCreationToSalesforceResponse {
}
// @section Commercial
message AcknowledgeCampaignSkeletonCreationToSalesforceRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
  required string opportunity_id = 3;
  repeated SalesforceOpportunityLineItem opportunity_line_items = 4;
  message SalesforceOpportunityLineItem {
    required string id = 1;
    required int64 campaign_id = 2;
  }
}
// @section Commercial
message AcknowledgeCampaignSkeletonCreationToSalesforceResponse {
}
// @section Inventory
message ActivateAppsForPublisherRequest {
  required SecurityContext security_context = 1;
  repeated App apps = 2;
  required int64 publisher_id = 3;
  message App {
    required string store_bundle_id = 1;
    required AppPlatform platform = 2;
  }
}
// @section Inventory
message ActivateAppsForPublisherResponse {
}
// @section Ad Experience
message ActivateArticleAvailableForDemosRequest {
  required SecurityContext security_context = 1;
  required int64 article_id = 2;
}
// @section Ad Experience
message ActivateArticleAvailableForDemosResponse {
}
// @section Ad Experience
message ActivateArticlePublisherForDemosRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Ad Experience
message ActivateArticlePublisherForDemosResponse {
}
// @section Ad Experience
message ActivateBrandAssociatedToDemosRequest {
  required SecurityContext security_context = 1;
  required int64 brand_id = 2;
}
// @section Ad Experience
message ActivateBrandAssociatedToDemosResponse {
}
// @section Campaign
message ActivateCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
}
// @section Campaign
message ActivateCampaignResponse {
}
// @section Users Data
message ActivateCookielessCustomAudienceRequest {
  required SecurityContext security_context = 1;
  required int64 audience_id = 2;
}
// @section Users Data
message ActivateCookielessCustomAudienceResponse {
}
// @section Ad Experience
message ActivateCreativeKPISupportedByDemosRequest {
  required SecurityContext security_context = 1;
  required int64 kpi_id = 2;
}
// @section Ad Experience
message ActivateCreativeKPISupportedByDemosResponse {
}
// @section Campaign
message ActivateCreativeRequest {
  required SecurityContext security_context = 1;
  required int64 creative_id = 2;
}
// @section Campaign
message ActivateCreativeResponse {
}
// @section Audience Custom
message ActivateCustomAudienceTemplateRequest {
  required SecurityContext security_context = 1;
  required int64 custom_audience_template_id = 2;
}
// @section Audience Custom
message ActivateCustomAudienceTemplateResponse {
  required int64 custom_audience_template_id = 1;
}
// @section Ad Experience
message ActivateDemoConfigurationForTenantRequest {
  required SecurityContext security_context = 1;
  required uint64 tenant_id = 2;
  required int64 demo_configuration_id = 3;
}
// @section Ad Experience
message ActivateDemoConfigurationForTenantResponse {
}
// @section Ad Experience
message ActivateDemoIABCategoryRequest {
  required SecurityContext security_context = 1;
  required int64 category_id = 2;
}
// @section Ad Experience
message ActivateDemoIABCategoryResponse {
}
// @section Advertiser
message ActivateFeatureForSeatRequest {
  required SecurityContext security_context = 1;
  required int64 seat_id = 2;
  required SeatFeature seat_feature = 3;
}
// @section Advertiser
message ActivateFeatureForSeatResponse {
}
// @section Finance
message ActivateInvoiceEmailNotificationForProfileRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
}
// @section Finance
message ActivateInvoiceEmailNotificationForProfileResponse {
}
// @section Campaign
message ActivateLineItemRequest {
  required SecurityContext security_context = 1;
  required int64 line_item_id = 2;
}
// @section Campaign
message ActivateLineItemResponse {
}
// @section Users Data
message ActivateLookalikeSegmentsRequest {
  required SecurityContext security_context = 1;
  required LookalikeSeed lookalike_seed = 2;
  message LookalikeSeed {
    required string seed_provider = 1;
    required string seed_segment_id_for_provider = 2;
    // Represents countries in ISO-2 format
    repeated string countries_for_seed = 3;
  }
}
// @section Users Data
message ActivateLookalikeSegmentsResponse {
}
// @section Campaign
message ActivateManagedCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
}
// @section Campaign
message ActivateManagedCampaignResponse {
}
// @section Ad Experience
message ActivateMarketSupportedByDemoRequest {
  required SecurityContext security_context = 1;
  required int64 market_id = 2;
}
// @section Ad Experience
message ActivateMarketSupportedByDemoResponse {
}
// @section Mrg Contract
message ActivateMrgContractRequest {
  required SecurityContext security_context = 1;
  required string mrg_contract_uuid = 2;
}
// @section Mrg Contract
message ActivateMrgContractResponse {
}
// @section Campaign
message ActivatePerformanceBannerRequest {
  required SecurityContext security_context = 1;
  oneof target {
    Offices offices = 2;
    Advertisers advertisers = 3;
    Campaigns campaigns = 4;
  }
  message Advertisers {
    repeated int64 advertiser_ids = 1;
    repeated int64 excluded_campaign_ids = 2;
  }
  message Campaigns {
    repeated int64 campaign_ids = 2;
  }
  message Offices {
    repeated int64 office_ids = 1;
    repeated int64 excluded_advertiser_ids = 2;
    repeated int64 excluded_campaign_ids = 3;
  }
}
// @section Campaign
message ActivatePerformanceBannerResponse {
  repeated int64 campaign_ids = 1;
}
// @section Users Data
message ActivatePersonaRequest {
  required SecurityContext security_context = 1;
  required int64 persona_id = 2;
}
// @section Users Data
message ActivatePersonaResponse {
}
// @section Inventory
message ActivatePlacementsRequest {
  required SecurityContext security_context = 1;
  repeated int64 placement_ids = 2;
}
// @section Inventory
message ActivatePlacementsResponse {
}
// @section Account
message ActivateProfileAnonymouslyRequest {
  required int64 profile_id = 1;
}
// @section Account
message ActivateProfileAnonymouslyResponse {
}
// @section Account
message ActivateProfileRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
}
// @section Account
message ActivateProfileResponse {
}
// @section Campaign
message ActivatePublisherDirectSalesCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
}
// @section Campaign
message ActivatePublisherDirectSalesCampaignResponse {
}
// @section Campaign
message ActivatePublisherDirectSalesLineItemRequest {
  required SecurityContext security_context = 1;
  required int64 line_item_id = 2;
}
// @section Campaign
message ActivatePublisherDirectSalesLineItemResponse {
}
// @section Campaign
message ActivatePublisherDirectSalesTagRequest {
  required SecurityContext security_context = 1;
  required int64 tag_id = 2;
}
// @section Campaign
message ActivatePublisherDirectSalesTagResponse {
}
// @section Reachcast
message ActivateReachcastBookingRequest {
  required SecurityContext security_context = 1;
  required int64 booking_id = 2;
}
// @section Reachcast
message ActivateReachcastBookingResponse {
}
// @section Users Segments
message ActivateRemarketingLookbackSegmentsAnonymouslyRequest {
  optional bool dry_run = 1;
  required string hour = 2;
}
// @section Users Segments
message ActivateRemarketingLookbackSegmentsAnonymouslyResponse {
}
// @section Inventory
message ActivateSitesForPublisherRequest {
  required SecurityContext security_context = 1;
  repeated string site_domains = 2;
  required int64 publisher_id = 3;
}
// @section Inventory
message ActivateSitesForPublisherResponse {
}
// @section Ad Experience
message ActivateVerticalSupportedByDemosRequest {
  required SecurityContext security_context = 1;
  required int64 vertical_id = 2;
}
// @section Ad Experience
message ActivateVerticalSupportedByDemosResponse {
}
// @section Users Data
message AddAudienceMappingRequest {
  required SecurityContext security_context = 1;
  required int64 audience_id = 2;
  optional AudienceFlavor audience_flavor = 3;
  // Array of countries on which to apply the mapping
  // The countries are represented by codes from Digital Elements
  // Example: ["6#124","6#840"]
  repeated string countries = 4;
  required DimensionsMapping dimensions_mapping = 5;
  optional AudienceType audience_type = 6;
  optional UsersDataEnvironmentChannel channel = 7;
  message DimensionsMapping {
    repeated string exelate_ids = 1;
    repeated string bluekai_ids = 2;
    repeated string liveramp_ids = 3;
    repeated string emetriq_ids = 4;
    repeated string teads_segments = 5;
    repeated string grapeshot_channels = 6;
    repeated string website_ids = 7;
    repeated string pack_ids = 8;
    repeated string altice_us_ids = 9;
    repeated string altice_fr_ids = 10;
    repeated string zeotap_ids = 11;
    repeated string skp_ids = 12;
    repeated string contextual_ids = 13;
    repeated string retargetly_ids = 14;
  }
}
// @section Users Data
message AddAudienceMappingResponse {
}
// @section Advertiser
message AddEventConversionToAdvertiserRequest {
  required SecurityContext security_context = 1;
  required int64 advertiser_id = 2;
  // Conversion name, not empty, without backslash, double quotes and spaces at the beginning or the end
  required string name = 3;
  required int64 category = 4;
  required string description = 5;
  optional string url_conversion_page = 7;
  optional int64 pixel_id = 8;
  optional int64 creator_seat_id = 9;
  reserved 6;
}
// @section Advertiser
message AddEventConversionToAdvertiserResponse {
  required int64 conversion_pixel_id = 1;
}
// @section Advertiser
message AddFirstPartySegmentToWhitelistForSeatRequest {
  required SecurityContext security_context = 1;
  required AdvertiserFirstPartySegment segment = 2;
  required int64 entity_id = 3;
  message AdvertiserFirstPartySegment {
    required AdvertiserFirstPartySegmentProvider segment_provider = 1;
    required int64 provider_segment_id = 2;
  }
}
// @section Advertiser
message AddFirstPartySegmentToWhitelistForSeatResponse {
}
// @section Brand Safety
message AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest {
  required SecurityContext security_context = 1;
  // buyer_seat_id refers to a seat persisted in teads_connect.seat
  required int64 buyer_seat_id = 2;
  required string segment_code = 3;
}
// @section Brand Safety
message AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse {
}
// @section Advertiser
message AddUrlToAdvertiserEventForBuyerPixelRequest {
  required SecurityContext security_context = 1;
  required int64 buyer_pixel_id = 2;
  required string event_name = 3;
  required string url = 4;
  optional string conversion_name = 5;
  optional UrlMappingMatchType match_type = 6;
  required int64 profile_id = 7;
  required int64 entity_id = 8;
}
// @section Advertiser
message AddUrlToAdvertiserEventForBuyerPixelResponse {
  required int64 url_mapping_id = 1;
  required string url = 2;
}
// @section Advertiser
message AdvertiserTrackingBlocklistUpdatedEvent {
  required TrackingBlocklistStatus status = 2;
  optional string url = 3;
  optional int64 url_checked_advertiser_id = 4;
  optional int64 url_checked_pixel_id = 5;
  reserved 1;
}
// @section Inventory
message AgreeToTermsAndConditionsRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  required int64 profile_id = 3;
  required string accepted_from_url = 4;
  required int64 terms_and_conditions = 5;
  // 2 or 5 letters language codes : FR, EN, ES, EN-US, EN-EU, ...
  required string accepted_language = 6;
}
// @section Inventory
message AgreeToTermsAndConditionsResponse {
}
// @section Users Targeting
message AllowLookalikeSegmentForSeatError {
  repeated Error errors = 1;
  message Error {
    oneof error_type {
      SeatNotFound seat_not_found = 1;
      SeatNotEnabled seat_not_enabled = 2;
      SegmentNotFound segment_not_found = 3;
      SegmentUnavailable segment_unavailable = 4;
      InternalFailure internal_failure = 5;
      LookalikeNotFoundForProvidedSeed lookalike_not_found_for_provided_seed = 6;
    }
  }
  message InternalFailure {
    required string reason = 1;
  }
  message LookalikeNotFoundForProvidedSeed {
    required string reason = 1;
  }
  message SeatNotEnabled {
    required string reason = 1;
  }
  message SeatNotFound {
    required string reason = 1;
  }
  message SegmentNotFound {
    required string reason = 1;
  }
  message SegmentUnavailable {
    required string reason = 1;
  }
}
// @section Users Targeting
message AllowLookalikeSegmentForSeatRequest {
  required SecurityContext security_context = 1;
  required int64 buyer_seat_id = 2;
  required LookalikeSeed lookalike_seed = 3;
  message LookalikeSeed {
    required UsersTargetingLookalikeSeedProvider seed_provider = 1;
    required string seed_segment_id_for_provider = 2;
    // Represents countries in ISO-2 format
    repeated string countries_for_seed = 3;
  }
}
// @section Users Targeting
message AllowLookalikeSegmentForSeatResponse {
}
// @section Users Targeting
message AllowRemarketingSegmentForSeatError {
  repeated Error errors = 1;
  message Error {
    oneof error_type {
      NoSeatFound no_seat_found = 1;
      UnavailableSegment unavailable_segment = 2;
      NoSegmentFound no_segment_found = 3;
      SeatNotEnabled seat_not_enabled = 4;
      InternalFailure internal_failure = 5;
    }
  }
  message InternalFailure {
    required string reason = 1;
  }
  message NoSeatFound {
    required string reason = 1;
  }
  message NoSegmentFound {
    required string reason = 1;
  }
  message SeatNotEnabled {
    required string reason = 1;
  }
  message UnavailableSegment {
    required string reason = 1;
  }
}
// @section Users Targeting
message AllowRemarketingSegmentForSeatRequest {
  required SecurityContext security_context = 1;
  // buyer_seat_id refers to a seat persisted in teads_connect.seat
  required int64 buyer_seat_id = 2;
  required int64 segment_id = 3;
}
// @section Users Targeting
message AllowRemarketingSegmentForSeatResponse {
}
// @section Command Runner
message ApplySubmissionRequest {
  required SecurityContext security_context = 1;
  required string submission_id = 2;
}
// @section Command Runner
message ApplySubmissionResponse {
}
// @section Creatives Approval
message ApproveCreativesForPublisherRequest {
  required SecurityContext security_context = 1;
  repeated ApprovedCreative approved_creatives = 2;
  message ApprovedCreative {
    required DspCampaignId campaign_id = 1;
    required DspCreativeId creative_id = 2;
    required ConnectionId connection_id = 3;
    required PublisherId publisher_id = 4;
    optional string reason = 5;
  }
  message ConnectionId {
    required int64 value = 1;
  }
  message DspCampaignId {
    required string value = 1;
  }
  message DspCreativeId {
    required string value = 1;
  }
  message PublisherId {
    required int64 value = 1;
  }
}
// @section Creatives Approval
message ApproveCreativesForPublisherResponse {
}
// @section Creatives Approval
message ApproveInStreamCreativesWronglyDisapprovedByMoatAnonymouslyRequest {
  optional bool dry_run = 1;
}
// @section Creatives Approval
message ApproveInStreamCreativesWronglyDisapprovedByMoatAnonymouslyResponse {
}
// @section Finance
message ApprovePendingPublisherPaymentSettingChangesForPublisherOnBillingOfficeError {
  oneof error {
    MutationNotLatest mutation_not_latest = 1;
    AlreadyApproved already_approved = 2;
  }
  message AlreadyApproved {
    required int64 approver_profile_id = 1;
  }
  message MutationNotLatest {
  }
}
// @section Finance
message ApprovePendingPublisherPaymentSettingChangesForPublisherOnBillingOfficeRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  required int64 billing_office_id = 3;
  required string mutation_id = 4;
  required string approval_process_description = 5;
}
// @section Finance
message ApprovePendingPublisherPaymentSettingChangesForPublisherOnBillingOfficeResponse {
}
// @section Traffic
message AreDomainsBlacklistedAnonymouslyRequest {
  repeated string domains = 1;
}
// @section Traffic
message AreDomainsBlacklistedAnonymouslyResponse {
  map<string, bool> is_blacklisted_by_domain = 1;
}
// @section Programmatic
message AreInternalConnectionsRequest {
  required SecurityContext security_context = 1;
  repeated ConnectionId connection_ids = 2;
  message ConnectionId {
    required int64 value = 1;
  }
}
// @section Programmatic
message AreInternalConnectionsResponse {
  map<int64, bool> is_internal_by_connection = 1;
}
// @section Finance
message AskForPaymentForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Finance
message AskForPaymentForPublisherResponse {
  // The numbers of the invoices that payment was asked for (status updated from not paid to payment pending)
  repeated string invoice_numbers = 1;
}
// @section Campaign
message AssignCreativesToCampaignLineItemsError {
  repeated Error errors = 1;
  message AssignedCreativeHasNoMatchingPortfolioItem {
    required int64 creative_id = 1;
  }
  message CampaignNotEditable {
  }
  message CampaignNotFound {
  }
  message CampaignNotSelfServed {
  }
  message CreativeNotFound {
    required int64 creative_id = 1;
  }
  message Error {
    oneof error_type {
      CampaignNotFound campaign_not_found = 1;
      CampaignNotSelfServed campaign_not_self_served = 2;
      CampaignNotEditable campaign_not_editable = 3;
      LineItemNotFound line_item_not_found = 4;
      LineItemCampaignMismatch line_item_campaign_mismatch = 5;
      LineItemNotEditable line_item_not_editable = 6;
      LineItemCreativesBelongToMultipleCategories line_item_creatives_belong_to_multiple_categories = 7; // TODO deprecated error, delete message and reserve this field index
      LineItemCreativesTotalDeliveryShareIsNot100Percent line_item_creatives_total_delivery_share_is_not_100_percent = 8;
      CreativeNotFound creative_not_found = 9;
      AssignedCreativeHasNoMatchingPortfolioItem assigned_creative_has_no_matching_portfolio_item = 10;
      LineItemCreativesBelongToDifferentFamilies line_item_creatives_belong_to_different_families = 11;
    }
  }
  message LineItemCampaignMismatch {
    required int64 line_item_id = 1;
  }
  message LineItemCreativesBelongToDifferentFamilies {
    required int64 line_item_id = 1;
  }
  message LineItemCreativesBelongToMultipleCategories {
    required int64 line_item_id = 1;
  }
  message LineItemCreativesTotalDeliveryShareIsNot100Percent {
    required int64 line_item_id = 1;
  }
  message LineItemNotEditable {
    required int64 line_item_id = 1;
  }
  message LineItemNotFound {
    required int64 line_item_id = 1;
  }
}
// @section Campaign
message AssignCreativesToCampaignLineItemsRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  repeated CreativesForLineItem creatives_for_line_items = 3;
  optional bool dry_run = 4 [default = false];
  message AssignedCreative {
    required int64 creative_id = 1;
    required int32 delivery_share = 2;
  }
  message CreativesForLineItem {
    required int64 line_item_id = 1;
    repeated AssignedCreative assigned_creatives = 2;
  }
}
// @section Campaign
message AssignCreativesToCampaignLineItemsResponse {
}
// @section Users Data
message AssignDefaultAudienceMappingRequest {
  required SecurityContext security_context = 1;
  required int64 audience_id = 2;
  optional AudienceFlavor audience_flavor = 3;
  required CountryGroup country_group = 4;
  optional AudienceType audience_type = 5;
  optional UsersDataEnvironmentChannel channel = 6;
  message CountryGroup {
    // As audience mappings are bound to a group of countries, one can only update them for a group of countries that was previously used in AddAudienceMappingRequest
    // The countries are represented by codes from Digital Elements
    // Example: ["6#124","6#840"]
    repeated string countries = 1;
  }
}
// @section Users Data
message AssignDefaultAudienceMappingResponse {
}
// @section Finance
message AssociateDefaultInvoiceRecipientToCampaignAnonymouslyRequest {
  required int64 campaign_id = 1;
  required int64 created_by = 2;
  required int64 owning_seat = 3;
}
// @section Finance
message AssociateDefaultInvoiceRecipientToCampaignAnonymouslyResponse {
}
// @section Finance
message AssociateInvoiceRecipientToCampaignError {
  required Error error = 1;
  message AssociationFailed {
    required string reason = 1;
  }
  message Error {
    oneof error_type {
      UnknownCampaign unknown_campaign = 1;
      UnknownInvoiceRecipient unknown_invoice_recipient = 2;
      NotApprovedInvoiceRecipient not_approved_invoice_recipient = 3;
      AssociationFailed association_failed = 4;
    }
  }
  message NotApprovedInvoiceRecipient {
    required string invoice_recipient_id = 1;
  }
  message UnknownCampaign {
    required int64 campaign_id = 1;
  }
  message UnknownInvoiceRecipient {
    required string invoice_recipient_id = 1;
  }
}
// @section Finance
message AssociateInvoiceRecipientToCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  required string invoice_recipient_id = 3;
}
// @section Finance
message AssociateInvoiceRecipientToCampaignResponse {
}
// @section Campaign
message AssociateLineItemToAbTestRequest {
  required SecurityContext security_context = 1;
  required int64 line_item_id = 2;
  required int64 abtest_id = 3;
  required int64 population_id = 4;
}
// @section Campaign
message AssociateLineItemToAbTestResponse {
}
// @section Users Data
message AudienceMappingUpdatedEvent {
  required int64 audience_public_id = 1;
  required UsersDataEnvironmentChannel channel = 2;
}
// @section Users Data
message AudiencesUpdatedEvent {
  repeated int64 audience_ids = 1;
}
// @section Account
message AuthenticateWithApiTokenAnonymouslyRequest {
  // This field must be a 32 hexadecimal characters string.
  // This constraint can't be exposed as a PGV rule because it conflicts with the sensitive constraint.
  required string token = 1;
}
// @section Account
message AuthenticateWithApiTokenAnonymouslyResponse {
  required int64 profile_id = 1;
  required int64 entity_id = 2;
}
// @section Traffic
message BlacklistDomainRequest {
  required SecurityContext security_context = 1;
  required string domain = 2;
}
// @section Traffic
message BlacklistDomainResponse {
  required int64 blacklisted_domain_id = 1;
}
// @section Advertiser
message BlockTrackingForAdvertiserRequest {
  required SecurityContext security_context = 1;
  oneof source {
    int64 advertiser_id = 2;
    int64 buyer_seat_id = 3;
    int64 buyer_pixel_id = 4;
    string domain = 5;
  }
  required string comment = 6;
  optional UrlChecked url_checked = 8;
  message UrlChecked {
    required string url = 1;
    optional int64 advertiser_id = 2;
    optional int64 buyer_pixel_id = 3;
  }
  reserved 7;
}
// @section Advertiser
message BlockTrackingForAdvertiserResponse {
}
// @section Campaign
message BoostInsertionDeliveryOnWebsiteRequest {
  required SecurityContext security_context = 1;
  required WebsiteId website_id = 2;
  required InsertionId insertion_id = 3;
  message InsertionId {
    required int64 value = 1;
  }
  message WebsiteId {
    required int64 value = 1;
  }
}
// @section Campaign
message BoostInsertionDeliveryOnWebsiteResponse {
}
// @section Advertiser
message BuyerPixelCreatedEvent {
}
// @section Advertiser
message BuyerPixelDeletedEvent {
}
// @section Advertiser
message BuyerPixelRevokedEvent {
  required int64 owner_entity_id = 1;
  required int64 owner_profile_id = 2;
  required int64 revoked_pixel_id = 3;
  required int64 revoked_buyer_seat_id = 4;
}
// @section Advertiser
message BuyerPixelSharedEvent {
  required int64 owner_entity_id = 1;
  required int64 owner_profile_id = 2;
  required int64 shared_pixel_id = 3;
  required int64 shared_buyer_seat_id = 4;
}
// @section Advertiser
message BuyerSeatCreatedEvent {
  required SecurityContext security_context = 1;
  required int64 seat_id = 2;
  oneof buyer_id {
    int64 agency_id = 3;
    int64 advertiser_id = 4;
    int64 office_id = 5;
  }
}
// @section Account
message BuyerSeatNameUpdatedEvent {
  required int64 seat_id = 1;
  required string previous_name = 2;
  required string new_name = 3;
  required int64 profile_id = 4;
}
// @section Finance
message BuyerSeatsSnapshottedIntoRedshiftFinanceEvent {
  required google.protobuf.Timestamp snapshot_date = 1;
}
// @section Campaign Delivery
// Notify a new BE Cache Version file has been snapshot and published
message BuyingEngineCacheVersionSnapshotEvent {
  // The S3 URI of the new BE Cache Version file to save for audit (production cache URIs only)
  // eg. s3://teads-hadoop/buying-engine/caches/insertions-cache/4971a1b0-df31-4136-9dab-199a11d03384
  required string s3_uri = 1;
}
// @section Finance
message CallForInvoicePublisherDirectSalesDealIdBillableRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  required int64 billing_office_id = 3;
  required YearMonth year_month = 4;
  message YearMonth {
    required int32 month = 1;
    required int32 year = 2;
  }
}
// @section Finance
message CallForInvoicePublisherDirectSalesDealIdBillableResponse {
}
// @section Campaign
message CampaignActivatedEvent {
  required int64 entity_id = 1;
  required int64 profile_id = 2;
  required int64 campaign_id = 3;
}
// @section Campaign
message CampaignCreatedEvent {
  required int64 campaign_id = 1;
  optional int64 created_by = 2;
  optional int64 owning_seat = 3;
}
// @section Campaign
message CampaignDeliveryStartedOnWebsiteEvent {
  required int64 campaign_id = 1;
  required int64 website_id = 2;
}
// @section Campaign
message CampaignDeliveryStoppedOnWebsiteEvent {
  required int64 campaign_id = 1;
  required int64 website_id = 2;
}
// @section Campaign
message CampaignDraftCreatedEvent {
  required int64 campaign_id = 1;
}
// @section Campaign
message CampaignDraftEditedEvent {
  required int64 campaign_id = 1;
}
// @section Campaign
message CampaignEditedEvent {
  required int64 campaign_id = 1;
}
// @section Campaign
message CampaignMigratedToManagedServiceEvent {
  required int64 operator_entity_id = 1;
  required int64 operator_profile_id = 2;
  required int64 campaign_id = 3;
}
// @section Campaign
message CampaignSkeletonCreatedEvent {
  required int64 campaign_id = 1;
}
// @section Campaign Setup
message CampaignSnapshottedEvent {
  required int64 campaign_id = 1;
  required CampaignMutationType campaign_mutation_type = 2;
  required CampaignMutationSource campaign_mutation_source = 3;
  required string campaign_data = 4; // serialized campaign data
  required string line_items_data = 5; // serialized insertions data
  required string shadows_data = 6; // serialized shadows data
  required string conversions_data = 7; // serialized conversions data
  required string target_position_data = 8; // serialized target position data
  enum CampaignMutationSource {
    CAMPAIGN_MUTATION_SOURCE_API_CORE = 1;
    CAMPAIGN_MUTATION_SOURCE_API_DOMAINS = 2;
  }
  enum CampaignMutationType {
    CAMPAIGN_MUTATION_TYPE_CREATE = 1;
    CAMPAIGN_MUTATION_TYPE_UPDATE = 2;
  }
}
// @section Campaign
message CampaignStatusUpdatedEvent {
  required int64 entity_id = 1;
  required int64 profile_id = 2;
  required int64 campaign_id = 3;
  required CampaignStatus old_campaign_status = 4;
  required CampaignStatus new_campaign_status = 5;
}
// @section Campaign Support
message CampaignSupportRequestCreatedEvent {
  required int64 support_request_id = 1;
  required int64 campaign_id = 2;
  required int64 profile_id = 3;
  required string description = 4;
  optional int64 office_id = 5;
  optional int64 seat_id = 6;
}
// @section Campaign Support
message CampaignSupportRequestDescriptionUpdatedEvent {
  required int64 support_request_id = 1;
  required int64 campaign_id = 2;
  required int64 profile_id = 3;
  required string old_description = 4;
  required string new_description = 5;
}
// @section Campaign Support
message CampaignSupportRequestStatusUpdatedEvent {
  required int64 support_request_id = 1;
  required int64 campaign_id = 2;
  required CampaignSupportRequestStatus old_status = 3;
  required CampaignSupportRequestStatus new_status = 4;
  required CampaignSupportRequestSource source = 5;
  optional string comment = 6;
  optional int64 profile_id = 7;
}
// @section Campaign Visual Proof
message CampaignVisualProofRequestTrackingCreatedEvent {
  required string request_tracking_uuid = 1;
  required int64 campaign_id = 2;
  required int64 creative_id = 3;
  required int64 requester_profile_id = 4;
  required string website_url = 5;
  required string vast_url = 6;
  required CampaignVisualProofDevice device = 7;
}
// @section Campaign Visual Proof
message CampaignVisualProofRequestTrackingUpdatedEvent {
  // ┌───┐
  // │Nil│
  // └┬─┬┘
  // │┌▽────────┐
  // ││Requested│
  // │└┬─────┬──┘
  // ┌▽─▽───┐┌▽────────┐
  // │Failed││Processed│
  // └──────┘└─────────┘
  // https://arthursonzogni.com/Diagon/#GraphDAG
  required string uuid = 1;
  oneof transition {
    FromNilToRequestedContent from_nil_to_requested = 2;
    FromNilToFailedContent from_nil_to_failed = 3;
    FromRequestedToProcessedThroughAdreformResultContent from_requested_to_processed_through_adreform_result = 4;
    FromRequestedToFailedThroughAdreformResultContent from_requested_to_failed_through_adreform_result = 5;
  }
  message FromNilToFailedContent {
  }
  message FromNilToRequestedContent {
  }
  message FromRequestedToFailedThroughAdreformResultContent {
    required string failure_message = 1;
  }
  message FromRequestedToProcessedThroughAdreformResultContent {
    required string visual_proof_url = 1;
  }
}
// @section Finance
message CampaignsSnapshottedIntoRedshiftFinanceEvent {
  required google.protobuf.Timestamp snapshot_date = 1;
}
// @section Campaign
message CanAccountCreateCampaignRequest {
  required SecurityContext security_context = 1;
  required Account account = 2;
  message Account {
    required int64 entity_id = 1;
    required int64 profile_id = 2;
  }
}
// @section Campaign
message CanAccountCreateCampaignResponse {
  required bool can_create = 1;
}
// @section Campaign Visual Proof
message CanAccountCreateCampaignVisualProofForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  required Account account = 3;
  message Account {
    required int64 profile_id = 1;
    required int64 entity_id = 2;
  }
}
// @section Campaign Visual Proof
message CanAccountCreateCampaignVisualProofForCampaignResponse {
  required bool can_account_create_campaign_visual_proof = 1;
}
// @section Campaign
message CanAccountEditCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  required Account account = 3;
  message Account {
    required int64 entity_id = 1;
    required int64 profile_id = 2;
  }
}
// @section Campaign
message CanAccountEditCampaignResponse {
  required bool can_edit = 1;
}
// @section Campaign
message CanAccountEditLineItemRequest {
  required SecurityContext security_context = 1;
  required int64 line_item_id = 2;
  required Account account = 3;
  message Account {
    required int64 profile_id = 1;
    required int64 entity_id = 2;
  }
}
// @section Campaign
message CanAccountEditLineItemResponse {
  required bool can_edit = 1;
}
// @section Account
message CanAccountManageTrustedUrlsRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
  required int64 entity_id = 3;
}
// @section Account
message CanAccountManageTrustedUrlsResponse {
  required bool can_manage_trusted_urls = 1;
}
// @section Campaign
message CanAccountRequestCampaignActivationRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  required Account account = 3;
  message Account {
    required int64 entity_id = 1;
    required int64 profile_id = 2;
  }
}
// @section Campaign
message CanAccountRequestCampaignActivationResponse {
  required bool can_request_campaign_activation = 1;
}
// @section Account
message CanProfilePerformImpersonationAnonymouslyRequest {
  required int64 profile_id = 1;
}
// @section Account
message CanProfilePerformImpersonationAnonymouslyResponse {
  required bool can_impersonate = 1;
}
// @section Ab Testing
message CancelScheduledAbTestRequest {
  required SecurityContext security_context = 1;
  required int64 ab_test_id = 2;
}
// @section Ab Testing
message CancelScheduledAbTestResponse {
}
// @section Advertiser
message CheckMappedUrlForBuyerPixelRequest {
  required SecurityContext security_context = 1;
  required int64 buyer_pixel_id = 2;
  optional int64 url_mapping_id = 3;
  required string url = 4;
  required UrlMappingMatchType match_type = 5;
}
// @section Advertiser
message CheckMappedUrlForBuyerPixelResponse {
  repeated ConflictedUrl conflicted_urls = 1;
  message AdvertiserEvent {
    required string snippet_name = 1;
    required string display_name = 2;
  }
  message ConflictedUrl {
    required int64 url_mapping_id = 1;
    required string url = 2;
    required AdvertiserEvent event = 3;
  }
}
// @section Account
message ClearPendingConfirmationEmailForProfileRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
}
// @section Account
message ClearPendingConfirmationEmailForProfileResponse {
}
// @section Campaign Support
message CloseCampaignSupportRequestRequest {
  required SecurityContext security_context = 1;
  required int64 support_request_id = 2;
  required int64 profile_id = 4;
}
// @section Campaign Support
message CloseCampaignSupportRequestResponse {
}
// @section Campaign Support
message CompleteCampaignSupportRequestRequest {
  required SecurityContext security_context = 1;
  required int64 support_request_id = 2;
  required string description = 3;
  required int64 profile_id = 4;
}
// @section Campaign Support
message CompleteCampaignSupportRequestResponse {
}
// @section Campaign Support
message CompleteExpiredCampaignSupportRequestsAnonymouslyRequest {
}
// @section Campaign Support
message CompleteExpiredCampaignSupportRequestsAnonymouslyResponse {
}
// @section Users Data
message ComputeAudienceOptimizedDeliveryRulesAnonymouslyRequest {
  repeated RuleWithDeliveryOptions rules_with_delivery_options = 1;
  required RuleOutputFormat rule_output_format = 2;
  message DeliveryOptions {
    required AudiencesAccuracyLevel other_audiences_accuracy_level = 2;
    required AudiencesDeliveryType demographic_audiences_delivery_type = 4;
    reserved 1, 3;
  }
  message RuleWithDeliveryOptions {
    required int64 rule_id = 1;
    required string rule = 2;
    required DeliveryOptions delivery_options = 3;
  }
  enum RuleOutputFormat {
    RULE_OUTPUT_FORMAT_RAW_STRING = 1;
    RULE_OUTPUT_FORMAT_JSON = 2;
  }
}
// @section Users Data
message ComputeAudienceOptimizedDeliveryRulesAnonymouslyResponse {
  map<int64, string> optimized_delivery_rules_by_id = 1;
  reserved 2;
}
// @section Users Data
message ComputeAudienceOptimizedRuleAnonymouslyRequest {
  required string rule = 1;
  optional AudiencesAccuracyLevel other_audiences_accuracy_level = 3;
  optional AudiencesDeliveryType demographic_audiences_delivery_type = 4;
  reserved 2;
}
// @section Users Data
message ComputeAudienceOptimizedRuleAnonymouslyResponse {
  required string audience_optimized_rule = 1;
}
// @section Reachcast
message ComputeBreakdownContextBudgetRequest {
  required SecurityContext security_context = 1;
  required Targeting targeting = 2;
  required google.protobuf.Timestamp start_date = 3;
  required google.protobuf.Timestamp end_date = 4;
  required ReachcastFormatCreativeType creative_type = 5;
  required string timezone = 6;
  required Account account = 7;
  message Account {
    required int32 entity_id = 1;
    required int32 profile_id = 2;
  }
  message Targeting {
    required string country_code = 1;
    required LegalAge legal_age = 2;
    required BrandSafetyType brand_safety = 3;
    optional BrandSuitabilitySegments brand_suitability = 4;
    repeated int64 included_packs = 5;
    repeated string included_websites = 6;
    repeated int64 excluded_packs = 7;
    repeated string excluded_websites = 8;
    message BrandSuitabilitySegments {
      repeated string ias_ids = 1;
      repeated string grapeshot_ids = 2;
      repeated string double_verify_ids = 3;
    }
  }
}
// @section Reachcast
message ComputeBreakdownContextBudgetResponse {
  map<int64, double> budgets_by_contexts = 1; // Subset of Teads contexts
  required string currency = 2;
}
// @section Reachcast
message ComputeBudgetForecastForReachcastRequest {
  required SecurityContext security_context = 1;
  required Targeting targeting = 2;
  required google.protobuf.Timestamp start_date = 3;
  required google.protobuf.Timestamp end_date = 4;
  required ReachcastFormatCreativeType creative_type = 5;
  required string timezone = 6;
  required Account account = 7;
  message Account {
    required int32 entity_id = 1;
    required int32 profile_id = 2;
  }
  message Targeting {
    required string country_code = 1;
    required LegalAge legal_age = 2;
    required BrandSafetyType brand_safety = 3;
    optional BrandSuitabilitySegments brand_suitability = 4;
    repeated int64 included_packs = 5;
    repeated int64 contexts = 6;
    repeated string included_websites = 7;
    repeated int64 excluded_packs = 8;
    repeated string excluded_websites = 9;
    message BrandSuitabilitySegments {
      repeated string ias_ids = 1;
      repeated string grapeshot_ids = 2;
      repeated string double_verify_ids = 3;
    }
  }
}
// @section Reachcast
message ComputeBudgetForecastForReachcastResponse {
  required double total_budget = 1;
  required int64 estimated_delivrable_impressions = 2;
  required string currency = 3;
  required double cpm = 4;
}
// @section Finance
message ComputeMasterServiceAgreementInvoicingAnonymouslyRequest {
}
// @section Finance
message ComputeMasterServiceAgreementInvoicingAnonymouslyResponse {
}
// @section Reporting
message ComputeNextPeriodForScheduledReportAnonymouslyRequest {
  required ReportCategory report_category = 1;
  required google.protobuf.Timestamp at_date = 2;
  required int64 report_preference_id = 3;
}
// @section Reporting
message ComputeNextPeriodForScheduledReportAnonymouslyResponse {
  optional PeriodWithTimezone period = 1;
  message PeriodWithTimezone {
    required google.protobuf.Timestamp reference_date = 1;
    required google.protobuf.Timestamp period_start = 2;
    required google.protobuf.Timestamp period_end = 3;
    required string timezone = 4;
  }
}
// @section Finance
message ConnectionsSnapshottedIntoRedshiftFinanceEvent {
  required google.protobuf.Timestamp snapshot_date = 1;
}
// @section Advertiser
message ConversionApiTokenUpdatedEvent {
}
// @section Advertiser
message ConversionsActivityStatisticsUpdatedEvent {
  repeated int64 conversions_ids = 1;
  required google.protobuf.Timestamp last_activity_date = 2;
}
// @section Users Data
message ConvertAudienceTargetingToTBLAnonymouslyRequest {
  optional GenderTargeting gender_targeting = 1;
  optional AgeTargeting age_targeting = 2;
  repeated AudienceTargeting included_audiences = 3; // Represents blocks
  repeated AudienceTargeting excluded_audiences = 4; // Represents blocks
  optional string other_targeting_tbl_and = 5; // criteria other than audiences, to be concatenated via an `AND` to the provided audience targeting
  message AgeTargeting {
    required AudienceTargetingAgeFrom from = 1;
    required AudienceTargetingAgeTo to = 2;
    reserved 3;
  }
  message AudienceTargeting {
    repeated int64 audience_ids = 1;
  }
  message GenderTargeting {
    required AudienceTargetingGender gender = 1;
    reserved 2;
  }
}
// @section Users Data
message ConvertAudienceTargetingToTBLAnonymouslyResponse {
  required string tbl_string = 1; // targeting rule containing audience criteria potentially in conjunction with other ones
}
// @section Users Data
message ConvertBuyerPersonaMappingToTBLAnonymouslyRequest {
  repeated DimensionsMapping dimensions_mapping = 1;
  optional DimensionsMapping excluded_dimensions_mapping = 2;
  optional UsersDataEnvironmentChannel channel = 4;
  message DimensionsMapping {
    repeated string exelate_ids = 1;
    repeated string bluekai_ids = 2;
    repeated string liveramp_ids = 3;
    repeated string emetriq_ids = 4;
    repeated string audience_ids = 5;
    repeated string grapeshot_channels = 6;
    repeated string skp_ids = 7;
    repeated string zeotap_ids = 8;
    repeated string contextual_ids = 9;
    repeated string retargetly_ids = 10;
    repeated string altice_us_ids = 11;
    repeated string comscore_audience_ids = 12;
    repeated string altice_fr_ids = 13;
    repeated string crossix_ids = 14;
  }
  reserved 3;
}
// @section Users Data
message ConvertBuyerPersonaMappingToTBLAnonymouslyResponse {
  required string tbl_string = 1;
}
// @section Users Data
// Must be a compatible superset of ConvertTBLToManagedServicesTargetingAnonymouslyResponse
message ConvertManagedServicesTargetingToTBLAnonymouslyRequest {
  oneof targeting {
    ListOfListOfRules ands_with_nested_ors = 1; // (a OR b) AND (c OR d)
    ListOfListOfRules ors_with_nested_ands = 2; // (a AND b) OR (c AND d)
  }
  message ListOfListOfRules {
    repeated ListOfRules blocks = 1;
  }
  message ListOfRules {
    repeated Rule rules = 1;
  }
  message Rule {
    required TargetingCriterion criterion = 1;
    required TargetingRuleOperator operator = 2;
    repeated string values = 3;
  }
}
// @section Users Data
message ConvertManagedServicesTargetingToTBLAnonymouslyResponse {
  required string tbl_string = 1;
}
// @section Users Data
message ConvertPersonaMappingToTBLAnonymouslyRequest {
  repeated DimensionsMapping dimensions_mapping = 1;
  optional DimensionsMapping excluded_dimensions_mapping = 2;
  optional UsersDataEnvironmentChannel channel = 3;
  message DimensionsMapping {
    repeated string exelate_ids = 1;
    repeated string bluekai_ids = 2;
    repeated string liveramp_ids = 3;
    repeated string emetriq_ids = 4;
    repeated string teads_segments = 5;
    repeated string altice_us_ids = 6;
    repeated string altice_fr_ids = 7;
    repeated string zeotap_ids = 8;
    repeated string crossix_ids = 9;
    repeated string audience_ids = 10;
    repeated string grapeshot_channels = 11;
    repeated string website_ids = 12;
    repeated string pack_ids = 13;
    repeated string skp_ids = 14;
    repeated string standard_contextual_ids = 15;
    repeated string retargetly_ids = 16;
    repeated string custom_contextual_ids = 17;
    repeated string comscore_audience_ids = 18;
    repeated string comscore_content_language_ids = 19;
    repeated string comscore_genre_ids = 20;
  }
}
// @section Users Data
message ConvertPersonaMappingToTBLAnonymouslyResponse {
  required string tbl_string = 1;
}
// @section Users Data
message ConvertTBLToAudienceTargetingAnonymouslyRequest {
  required string tbl_string = 1;
}
// @section Users Data
message ConvertTBLToAudienceTargetingAnonymouslyResponse {
  optional GenderTargeting gender_targeting = 1;
  optional AgeTargeting age_targeting = 2;
  repeated AudienceTargeting included_audiences = 3; // Represents blocks
  repeated AudienceTargeting excluded_audiences = 4; // Represents blocks
  optional string other_targeting_tbl_and = 5; // rules present in the request TBL targeting criteria other than audiences
  message AgeTargeting {
    required AudienceTargetingAgeFrom from = 1;
    required AudienceTargetingAgeTo to = 2;
    reserved 3;
  }
  message AudienceTargeting {
    repeated int64 audience_ids = 1;
  }
  message GenderTargeting {
    required AudienceTargetingGender gender = 1;
    reserved 2;
  }
}
// @section Users Data
message ConvertTBLToManagedServicesTargetingAnonymouslyRequest {
  required string tbl_string = 1;
}
// @section Users Data
// Must be a compatible subset of ConvertManagedServicesTargetingToTBLAnonymouslyRequest
message ConvertTBLToManagedServicesTargetingAnonymouslyResponse {
  oneof targeting {
    ListOfListOfRules ands_with_nested_ors = 1; // (a OR b) AND (c OR d)
    ListOfListOfRules ors_with_nested_ands = 2; // (a AND b) OR (c AND d)
  }
  message ListOfListOfRules {
    repeated ListOfRules blocks = 1;
  }
  message ListOfRules {
    repeated Rule rules = 1;
  }
  message Rule {
    required TargetingCriterion criterion = 1;
    required TargetingRuleOperator operator = 2;
    repeated string values = 3;
  }
}
// @section Users Data
message ConvertTeadsAudienceMappingToTBLAnonymouslyRequest {
  required int64 audience_id = 1;
  optional AudienceFlavor audience_flavor = 2;
  // Array of countries on which to apply the mapping
  // The countries are represented by codes from Digital Elements
  // Example: ["6#124","6#840"]
  repeated string countries = 3;
  required DimensionsMapping dimensions_mapping = 4;
  required bool is_default_mapping = 5;
  optional AudienceType audience_type = 6;
  optional UsersDataEnvironmentChannel environment_channel = 7;
  message DimensionsMapping {
    repeated string exelate_ids = 1;
    repeated string bluekai_ids = 2;
    repeated string liveramp_ids = 3;
    repeated string emetriq_ids = 4;
    repeated string teads_segments = 5;
    repeated string grapeshot_channels = 6;
    repeated string website_ids = 7;
    repeated string pack_ids = 8;
    repeated string altice_us_ids = 9;
    repeated string altice_fr_ids = 10;
    repeated string zeotap_ids = 11;
    repeated string skp_ids = 12;
    repeated string contextual_ids = 13;
    repeated string retargetly_ids = 14;
  }
}
// @section Users Data
message ConvertTeadsAudienceMappingToTBLAnonymouslyResponse {
  required string tbl_string = 1;
}
// @section Campaign
message CopyCustomTargetingRulesFromCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 source_campaign_id = 2;
  required int64 target_campaign_id = 3;
}
// @section Campaign
message CopyCustomTargetingRulesFromCampaignResponse {
  map<int64, int64> target_rule_ids_by_source_rule_ids = 1;
}
// @section Inventory
message CopyPlacementAdTypeSetupRequest {
  required SecurityContext security_context = 1; // Holds the security context of this request
  required PublisherId publisher_id = 2; // The unique ID of the publisher who owns the placement source and placement targets
  required PlacementId source_placement_id = 3; // The unique ID of the placement source to take adtype's setup from
  repeated PlacementId target_placement_ids = 4; // An array of unique ID of placement targets to copy source adtype's setup to
  message PlacementId {
    required int64 value = 1;
  }
  message PublisherId {
    required int64 value = 1;
  }
}
// @section Inventory
message CopyPlacementAdTypeSetupResponse {
}
// @section Ab Testing
message CreateAbTestDynamicParameterRequest {
  required SecurityContext security_context = 1;
  required string parameter_name = 2;
  required string parameter_value = 3;
  required bool is_deployable = 4;
  optional string service = 5;
}
// @section Ab Testing
message CreateAbTestDynamicParameterResponse {
}
// @section Advertiser
message CreateAdvertiserForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  required string advertiser_name = 3;
}
// @section Advertiser
message CreateAdvertiserForPublisherResponse {
  required int64 advertiser_id = 1;
}
// @section Advertiser
message CreateAgencyForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  required string agency_name = 3;
}
// @section Advertiser
message CreateAgencyForPublisherResponse {
  required int64 agency_id = 1;
}
// @section Account
message CreateApiTokenRequest {
  required SecurityContext security_context = 1;
  optional string description = 2;
  required int64 owner_profile_id = 3;
  required int64 owner_entity_id = 4;
}
// @section Account
message CreateApiTokenResponse {
  required int64 api_token_id = 1;
}
// @section Inventory
message CreateAppsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  repeated App apps = 3;
  message App {
    required string store_bundle_id = 1;
    required AppPlatform platform = 2;
    optional string store_bundle_url = 3;
    required string name = 4;
    optional string technical_bundle_id = 5;
    required string iab_category_code = 6;
    required InventoryTier tier = 7;
    required bool is_mobile = 8;
    required bool is_ctv = 9;
    optional bool is_strategic = 10 [default = false];
    optional bool is_brandsafety_whitelisted = 11 [default = false];
  }
}
// @section Inventory
message CreateAppsForPublisherResponse {
  repeated CreatedApp new_apps = 1;
  repeated CreatedApp updated_apps = 2;
  repeated CreatedApp unmodified_apps = 3;
  message AppId {
    required string store_bundle_id = 1;
    required AppPlatform platform = 2;
  }
  message CreatedApp {
    required AppId app_id = 1;
    repeated int64 publisher_ids = 2;
    required bool is_vetted = 3;
  }
}
// @section Ad Experience
message CreateArticleAvailableForDemosRequest {
  required SecurityContext security_context = 1;
  required Article article = 2;
  message Article {
    required string publisher_name = 1;
    required int64 iab_category_id = 2;
    // ISO 639-1 code: "fr", "en", "es"
    required string language_code = 3;
    // ISO 3166-1 code: "fr", "gb", "es"
    required string country_code = 4;
    required int64 creative_position_id = 5;
    optional string legacy_content_path = 6;
    optional uint64 display_priority = 7;
    optional bool is_staging = 8;
    required string md5_checksum = 9;
  }
}
// @section Ad Experience
message CreateArticleAvailableForDemosResponse {
  required int64 articles_id = 1;
}
// @section Ad Experience
message CreateArticlePublishersForDemosRequest {
  required SecurityContext security_context = 1;
  repeated Publisher publishers = 2;
  message Publisher {
    required string name = 1;
  }
}
// @section Ad Experience
message CreateArticlePublishersForDemosResponse {
  repeated int64 publishers_ids = 1;
}
// @section Campaign
message CreateBrandPulseCampaignRequest {
  required SecurityContext security_context = 1;
  oneof campaign_reference {
    int64 reference_campaign_id = 2;
    string salesforce_opportunity_id = 7;
  }
  required string name = 3;
  required string vast_url = 4;
  repeated Strategy strategies = 5;
  message Strategy {
    required string name = 1;
    required TargetingConfiguration control_targeting_configuration = 2;
    required TargetingConfiguration exposed_targeting_configuration = 3;
    repeated int64 reference_line_item_ids = 4;
    message TargetingConfiguration {
      required int64 conversion_id = 1;
      required int64 remarketing_segment_id = 2;
    }
  }
}
// @section Campaign
message CreateBrandPulseCampaignResponse {
  required int64 brand_pulse_campaign_id = 1;
}
// @section Branding Measurement
message CreateBrandPulseSurveyAnonymouslyRequest {
  required string creative_studio_id = 1;
}
// @section Branding Measurement
message CreateBrandPulseSurveyAnonymouslyResponse {
}
// @section Ad Experience
message CreateBrandsAssociatedToDemosRequest {
  required SecurityContext security_context = 1;
  repeated Brand brands = 2;
  message Brand {
    required string name = 1;
    optional bool is_staging = 2;
  }
}
// @section Ad Experience
message CreateBrandsAssociatedToDemosResponse {
  repeated int64 brand_ids = 1;
}
// @section Users Data
message CreateBuyerCustomAudiencesRequest {
  required SecurityContext security_context = 1;
  repeated CustomAudience custom_audiences = 2;
  message Block {
    optional string name = 1;
    required DimensionsMapping dimensions_mapping = 2;
  }
  message CustomAudience {
    required string name = 1;
    repeated Block blocks = 2;
    optional Block excluded_block = 3;
    // Used for profile/owner association of the persona
    optional int64 profile_id = 4;
    // Used for entity/seat association of the persona
    optional int64 entity_id = 5;
    // Used for advertiser association of the persona
    optional int64 advertiser_id = 6;
    optional int64 worldwide_reach = 7;
    optional UsersDataEnvironmentChannel channel = 8 [default = USERS_DATA_ENVIRONMENT_CHANNEL_WEB];
  }
  message DimensionsMapping {
    repeated string exelate_ids = 1;
    repeated string bluekai_ids = 2;
    repeated string liveramp_ids = 3;
    repeated string emetriq_ids = 4;
    repeated string audience_ids = 5;
    repeated string grapeshot_channels = 6;
    repeated string skp_ids = 7;
    repeated string zeotap_ids = 8;
    repeated string contextual_ids = 9;
    repeated string retargetly_ids = 10;
    repeated string altice_us_ids = 11;
    repeated string comscore_audience_ids = 12;
    repeated string altice_fr_ids = 13;
    repeated string crossix_ids = 14;
  }
}
// @section Users Data
message CreateBuyerCustomAudiencesResponse {
  repeated int64 custom_audience_ids = 1;
}
// @section Account
message CreateBuyerEntityRequest {
  required SecurityContext security_context = 1;
  required int64 office_id = 2;
  oneof buyer_id {
    int64 agency_id = 3;
    int64 advertiser_id = 4;
  }
  optional string entity_name = 5;
}
// @section Account
message CreateBuyerEntityResponse {
  required int64 entity_id = 1;
}
// @section Users Data
message CreateBuyerPersonaRequest {
  required SecurityContext security_context = 1;
  required int64 entity_id = 2;
  required string name = 3;
  repeated Block blocks = 4;
  optional int64 worldwide_reach = 5;
  optional Block excluded_block = 6;
  optional int64 profile_id = 7;
  optional AudienceChannel channel = 9 [default = AUDIENCE_CHANNEL_WEB];
  message Block {
    optional string name = 1;
    required DimensionsMapping dimensions_mapping = 2;
  }
  message DimensionsMapping {
    repeated string exelate_ids = 1;
    repeated string bluekai_ids = 2;
    repeated string liveramp_ids = 3;
    repeated string emetriq_ids = 4;
    repeated string audience_ids = 5;
    repeated string grapeshot_channels = 6;
    repeated string skp_ids = 7;
    repeated string zeotap_ids = 8;
    repeated string contextual_ids = 9;
    repeated string retargetly_ids = 10;
    repeated string altice_us_ids = 11;
    repeated string comscore_audience_ids = 12;
    repeated string altice_fr_ids = 13;
    repeated string crossix_ids = 14;
  }
  reserved 8;
}
// @section Users Data
message CreateBuyerPersonaResponse {
  required int64 persona_id = 1;
}
// @section Users Data
message CreateBuyerPlannedTargetingRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
  required int64 entity_id = 3;
  required string name = 4;
  required Targeting targeting = 5;
  required bool is_cookieless = 6;
  optional int64 ad_opportunities = 7;
  optional int64 teads_ids = 8;
  optional UsersDataEnvironmentChannel channel = 9 [default = USERS_DATA_ENVIRONMENT_CHANNEL_WEB];
  message Targeting {
    repeated RuleDisjunction conjunctions = 1;
    required AudiencesDeliveryType demographic_audiences_delivery_type = 2;
    required AudiencesAccuracyLevel other_audiences_accuracy_level = 3;
    message RuleDisjunction {
      repeated Rule rules = 1;
      message Rule {
        required TargetingCriterion criterion = 1;
        required TargetingRuleOperator operator = 2;
        repeated string values = 3;
      }
    }
  }
}
// @section Users Data
message CreateBuyerPlannedTargetingResponse {
  required int64 planned_targeting_id = 1;
}
// @section Ab Testing
message CreateCampaignAbTestRequest {
  required SecurityContext security_context = 1;
  required string title = 2;
  required int32 split_algorithm_id = 3;
  repeated Population populations = 4;
  message Population {
    required int32 id = 1;
    required string name = 2;
    required int32 size = 3;
  }
}
// @section Ab Testing
message CreateCampaignAbTestResponse {
  required int64 abtest_id = 1;
}
// @section Campaign Setup
message CreateCampaignError {
}
// @section Campaign Setup
message CreateCampaignRequest {
  required SecurityContext security_context = 1;
  required bool dry_run = 2;
  required int64 reserved_id = 3;
  required string name = 4;
  optional string external_integration_code = 5;
  optional string purchase_order_number = 6;
  required int64 advertiser_id = 7;
  required string currency = 8;
  required CampaignBudget budget = 9;
  required string timezone = 10; // full name or identifier (Europe/Paris, GMT-8:00...)
  required FlightDuration flight_duration = 11;
  optional FrequencyCapping frequency_capping = 12;
  required LumenAttentionMeasurement lumen_attention_measurement = 13;
  optional double agency_fee_percent = 14; // only agency seats can use this setting (0 otherwise)
  repeated LineItem line_items = 15;
  message CampaignBudget {
    required double paid_amount = 1;
    optional double free_amount = 2;
    optional DynamicAllocation dynamic_allocation = 3;
    message DynamicAllocation {
      oneof pacing {
        EvenPacing even_pacing = 1;
        ManualPacing manual_pacing = 2;
      }
      message EvenPacing {
      }
      message ManualPacing {
        required double paid_daily_goal = 1;
        optional double free_daily_goal = 2;
      }
    }
  }
  message FlightDuration {
    required google.protobuf.Timestamp start_date = 1;
    required google.protobuf.Timestamp end_date = 2;
  }
  message FrequencyCapping {
    required uint32 number_of_events = 1;
    required Event event = 2;
    required Period period = 3;
    enum Event {
      EVENT_IMPRESSION = 0;
      EVENT_START = 1;
      EVENT_PROGRESS_1 = 2;
      EVENT_PROGRESS_2 = 3;
      EVENT_PROGRESS_3 = 4;
      EVENT_PROGRESS_4 = 5;
      EVENT_PROGRESS_5 = 6;
      EVENT_PROGRESS_6 = 7;
      EVENT_PROGRESS_7 = 8;
      EVENT_PROGRESS_8 = 9;
      EVENT_PROGRESS_9 = 10;
      EVENT_PROGRESS_10 = 11;
      EVENT_PROGRESS_11 = 12;
      EVENT_PROGRESS_12 = 13;
      EVENT_PROGRESS_13 = 14;
      EVENT_PROGRESS_14 = 15;
      EVENT_PROGRESS_15 = 16;
      EVENT_PROGRESS_16 = 17;
      EVENT_PROGRESS_17 = 18;
      EVENT_PROGRESS_18 = 19;
      EVENT_PROGRESS_19 = 20;
      EVENT_PROGRESS_20 = 21;
      EVENT_PROGRESS_21 = 22;
      EVENT_PROGRESS_22 = 23;
      EVENT_PROGRESS_23 = 24;
      EVENT_PROGRESS_24 = 25;
      EVENT_PROGRESS_25 = 26;
      EVENT_PROGRESS_26 = 27;
      EVENT_PROGRESS_27 = 28;
      EVENT_PROGRESS_28 = 29;
      EVENT_PROGRESS_29 = 30;
      EVENT_PROGRESS_30 = 31;
      EVENT_COMPLETE = 32;
      EVENT_BILLABLE = 33;
    }
    enum Period {
      PERIOD_HOUR = 0;
      PERIOD_DAY = 1;
      PERIOD_WEEK = 2;
      PERIOD_MONTH = 3;
      PERIOD_YEAR = 4;
      PERIOD_LIFETIME = 5;
    }
  }
  message LineItem {
    optional int64 line_group_id = 1; // only for campaigns created by Salesforce
    required string name = 2;
    required ChannelType channel_type = 3;
    required bool is_guaranteed = 4;
    required LineItemBudget budget = 5;
    required FlightDuration flight_duration = 6;
    required Scheduling scheduling = 7;
    optional FrequencyCapping frequency_capping = 8;
    required AssignedCreatives assigned_creatives = 9;
    required TargetPosition target_position = 10;
    required Targeting targeting = 11;
    required Billing billing = 12;
    optional AddedValueReason added_value_reason = 13;
    // an optional id that helps the caller to determine which final id was auto-generated in database for a line item
    optional string temporary_id = 14;
    message AssignedCreatives {
      repeated AssignedCreative creatives = 1;
      required bool enable_optimization = 2;
      optional PlayerMode player_mode = 3;
      message AssignedCreative {
        required int64 id = 1;
        required uint32 delivery_share = 2;
      }
      enum PlayerMode {
        PLAYER_MODE_VIEW_TO_START = 0;
        PLAYER_MODE_VIEW_TO_PLAY = 1;
        PLAYER_MODE_VIEW_TO_PLAY_UNTIL = 2;
      }
    }
    message Billing {
      oneof target_objective {
        Branding branding = 1;
        Conversions conversions = 2;
        TrafficAcquisition traffic_acquisition = 3;
      }
      message Branding {
        oneof pricing_model {
          CostPerMille cost_per_mille = 1;
          ViewableCostPerMille viewable_cost_per_mille = 2;
          CostPerCompletedView cost_per_completed_view = 3;
          CostPerView cost_per_view = 4;
        }
        message ClickThroughRateOptimization {
          optional double target_rate = 1;
        }
        message CompleteRateOptimization {
          optional double target_rate = 1;
        }
        message CostPerCompletedView {
          required double price = 1;
          required AuctionType auction_type = 2;
          required BillableEvent billable_event = 3;
          optional double bid_recommendation = 4;
          optional uint32 ad_visibility = 5;
        }
        message CostPerMille {
          required double price = 1;
          required AuctionType auction_type = 2;
          optional double bid_recommendation = 3;
          oneof optimization {
            CompleteRateOptimization complete_rate_optimization = 4;
            ViewabilityRateOptimization viewability_rate_optimization = 5;
            ClickThroughRateOptimization click_through_rate_optimization = 6;
          }
          optional uint32 ad_visibility = 7;
        }
        message CostPerView {
          required double price = 1;
          required AuctionType auction_type = 2;
          required BillableEvent billable_event = 3;
          optional double bid_recommendation = 4;
        }
        message ViewabilityRateOptimization {
          optional double target_rate = 1;
        }
        message ViewableCostPerMille {
          required double price = 1;
          required AuctionType auction_type = 2;
          required BillableEvent billable_event = 3;
          optional double bid_recommendation = 4;
          optional uint32 ad_visibility = 5;
        }
        enum BillableEvent {
          BILLABLE_EVENT_CLICK = 0;
          BILLABLE_EVENT_IMPRESSION = 1;
          BILLABLE_EVENT_START = 2;
          BILLABLE_EVENT_MID_POINT = 3;
          BILLABLE_EVENT_COMPLETE = 4;
          BILLABLE_EVENT_PROGRESS_1 = 5;
          BILLABLE_EVENT_PROGRESS_2 = 6;
          BILLABLE_EVENT_PROGRESS_3 = 7;
          BILLABLE_EVENT_PROGRESS_4 = 8;
          BILLABLE_EVENT_PROGRESS_5 = 9;
          BILLABLE_EVENT_PROGRESS_6 = 10;
          BILLABLE_EVENT_PROGRESS_7 = 11;
          BILLABLE_EVENT_PROGRESS_8 = 12;
          BILLABLE_EVENT_PROGRESS_9 = 13;
          BILLABLE_EVENT_PROGRESS_10 = 14;
          BILLABLE_EVENT_PROGRESS_11 = 15;
          BILLABLE_EVENT_PROGRESS_12 = 16;
          BILLABLE_EVENT_PROGRESS_13 = 17;
          BILLABLE_EVENT_PROGRESS_14 = 18;
          BILLABLE_EVENT_PROGRESS_15 = 19;
          BILLABLE_EVENT_PROGRESS_16 = 20;
          BILLABLE_EVENT_PROGRESS_17 = 21;
          BILLABLE_EVENT_PROGRESS_18 = 22;
          BILLABLE_EVENT_PROGRESS_19 = 23;
          BILLABLE_EVENT_PROGRESS_20 = 24;
          BILLABLE_EVENT_PROGRESS_21 = 25;
          BILLABLE_EVENT_PROGRESS_22 = 26;
          BILLABLE_EVENT_PROGRESS_23 = 27;
          BILLABLE_EVENT_PROGRESS_24 = 28;
          BILLABLE_EVENT_PROGRESS_25 = 29;
          BILLABLE_EVENT_PROGRESS_26 = 30;
          BILLABLE_EVENT_PROGRESS_27 = 31;
          BILLABLE_EVENT_PROGRESS_28 = 32;
          BILLABLE_EVENT_PROGRESS_29 = 33;
          BILLABLE_EVENT_PROGRESS_30 = 34;
        }
      }
      message ConversionLookback {
        required uint64 after_view_in_days = 1;
        required uint64 after_click_in_days = 2;
      }
      message Conversions {
        oneof pricing_model {
          CostPerMille cost_per_mille = 1;
          CostPerClick cost_per_click = 2;
        }
        message ConversionRateOptimization {
          required OptimizedTowardConversion target_conversion = 1;
        }
        message CostPerActionOptimization {
          required double target_cost = 1;
          required OptimizedTowardConversion target_conversion = 2;
        }
        message CostPerClick {
          required double price = 1;
          required AuctionType auction_type = 2;
          oneof optimization {
            ConversionRateOptimization conversion_rate_optimization = 3;
            CostPerActionOptimization cost_per_action_optimization = 4;
          }
        }
        message CostPerMille {
          required double price = 1;
          required AuctionType auction_type = 2;
          oneof optimization {
            ConversionRateOptimization conversion_rate_optimization = 3;
            CostPerActionOptimization cost_per_action_optimization = 4;
          }
        }
        message OptimizedTowardConversion {
          required int64 pixel_id = 1;
          required ConversionType conversion_type = 2;
          required string domain = 3;
          required ConversionLookback lookback = 4;
        }
        enum ConversionType {
          CONVERSION_TYPE_VIEW_CONTENT = 0;
          CONVERSION_TYPE_SEARCH = 1;
          CONVERSION_TYPE_ADD_TO_WISHLIST = 2;
          CONVERSION_TYPE_ADD_TO_CART = 3;
          CONVERSION_TYPE_INITIATE_CHECKOUT = 4;
          CONVERSION_TYPE_LEAD = 5;
          CONVERSION_TYPE_COMPLETE_REGISTRATION = 6;
          CONVERSION_TYPE_PURCHASE = 7;
        }
      }
      message TrafficAcquisition {
        oneof pricing_model {
          CostPerMille cost_per_mille = 1;
          CostPerClick cost_per_click = 2;
        }
        message BounceRateOptimization {
          required double target_rate = 1;
          required OptimizedTowardVisit target_visit = 2;
        }
        message ClickThroughRateOptimization {
          required double target_rate = 1;
          optional OptimizedTowardVisit target_visit = 2;
        }
        message CostPerClick {
          required double price = 1;
          required AuctionType auction_type = 2;
          oneof optimization {
            QualifiedVisitsOptimization qualified_visits_optimization = 3;
            CostPerVisitOptimization cost_per_visit_optimization = 4;
            MinimizeCostPerClickOptimization minimize_cost_per_click_optimization = 5;
            BounceRateOptimization bounce_rate_optimization = 6;
          }
        }
        message CostPerMille {
          required double price = 1;
          required AuctionType auction_type = 2;
          oneof optimization {
            QualifiedVisitsOptimization qualified_visits_optimization = 3;
            CostPerVisitOptimization cost_per_visit_optimization = 4;
            ClickThroughRateOptimization click_through_rate_optimization = 5;
            BounceRateOptimization bounce_rate_optimization = 6;
          }
        }
        message CostPerVisitOptimization {
          required double target_cost = 1;
          required OptimizedTowardVisit target_visit = 2;
        }
        message MinimizeCostPerClickOptimization {
          optional OptimizedTowardVisit target_visit = 1;
        }
        message OptimizedTowardVisit {
          required int64 pixel_id = 1;
          required string domain = 2;
          required ConversionLookback lookback = 3;
        }
        message QualifiedVisitsOptimization {
          required OptimizedTowardVisit target_visit = 1;
        }
      }
      enum AuctionType {
        AUCTION_TYPE_DYNAMIC = 0;
        AUCTION_TYPE_FIXED = 1;
      }
    }
    message LineItemBudget {
      oneof allocation {
        DynamicAllocation dynamic_allocation = 1;
        StaticAllocation static_allocation = 2;
      }
      message DynamicAllocation {
        optional double max_daily_amount = 1;
        required bool can_spend_campaign_free_budget = 2;
      }
      message StaticAllocation {
        required Pacing pacing = 1;
        required bool can_spend_campaign_free_budget = 2;
        required double amount = 3;
        required Period period = 4;
        enum Pacing {
          PACING_EVEN = 0;
          PACING_AHEAD = 1;
          PACING_ASAP = 2;
        }
        enum Period {
          PERIOD_HOUR = 0;
          PERIOD_DAY = 1;
          PERIOD_MONTH = 2;
          PERIOD_YEAR = 3;
          PERIOD_LIFETIME = 4;
        }
      }
    }
    message Scheduling {
      repeated uint32 monday_hours = 1;
      repeated uint32 tuesday_hours = 2;
      repeated uint32 wednesday_hours = 3;
      repeated uint32 thursday_hours = 4;
      repeated uint32 friday_hours = 5;
      repeated uint32 saturday_hours = 6;
      repeated uint32 sunday_hours = 7;
    }
    message Targeting {
      oneof targeting_type {
        Standard standard = 1;
        Advanced advanced = 2;
        Unsupported unsupported = 3;
      }
      message Advanced {
        required int64 id = 1;
        optional bool is_cookieless_criteria_only = 2; // TODO set it required when clients are up to date
      }
      message Standard {
        required TechnologyCriteria technology_criteria = 1;
        required InventoryCriteria inventory_criteria = 2;
        required AudienceCriteria audience_criteria = 3;
        required DemographicAudiencesAccuracy demographic_audiences_accuracy = 4; // applied to ages & genders teads audiences only
        required bool is_cookieless_criteria_only = 5;
        message AudienceCriteria {
          map<string, Relation> locations_relations_by_code = 1;
          required TeadsAudiences teads_audiences = 2;
          repeated int64 custom_audiences_ids = 3;
          map<string, Relation> first_party_audiences_relations_by_id = 4;
          required Languages languages = 5;
          map<uint64, Relation> retargeting_pixels_relations_by_id = 6;
          map<uint64, Relation> remarketing_segments_relations_by_id = 7;
          map<int64, Relation> lookalike_segments_relation_by_ids = 8;
          message Languages {
            oneof provider {
              Grapeshot grapeshot = 1; // web & in-app
              Comscore comscore = 2; // connected TVs
            }
            message Comscore {
              map<uint64, Relation> relations_by_id = 1;
            }
            message Grapeshot {
              map<string, Relation> relations_by_code = 1;
            }
          }
          message TeadsAudiences {
            repeated uint64 genders_ids = 1;
            repeated uint64 ages_ids = 2;
            map<uint64, Membership> audience_memberships_by_id = 3;
            enum Membership {
              MEMBERSHIP_INCLUDED = 0;
              MEMBERSHIP_NARROWED = 1;
              MEMBERSHIP_INCLUDED_AND_NARROWED = 2;
              MEMBERSHIP_EXCLUDED = 3;
            }
          }
        }
        message InventoryCriteria {
          map<uint64, Relation> teads_contextual_relations_by_id = 1;
          required BrandSafety brand_safety = 2;
          required Websites websites = 3;
          map<uint64, Relation> pack_relations_by_id = 4;
          map<string, Relation> app_relations_by_id = 5;
          required BrandSuitability brand_suitability = 6;
          map<string, Relation> domain_relations_by_names = 10;
          message BrandSafety {
            oneof provider {
              Teads teads = 1;
              IntegralAdScience integral_ad_science = 2;
              Grapeshot grapeshot = 3;
              DoubleVerify double_verify = 4;
            }
            message DoubleVerify {
              required uint32 safety_level = 1;
            }
            message Grapeshot {
              required uint32 safety_level = 1;
            }
            message IntegralAdScience {
              required uint32 safety_level = 1;
            }
            message Teads {
              required uint32 safety_level = 1;
            }
          }
          message BrandSuitability {
            repeated uint64 integral_ad_science_ids = 1;
            repeated string grapeshot_ids = 2;
            repeated uint64 double_verify_ids = 3;
          }
          message Websites {
            map<uint64, Relation> relations_by_id = 1;
            map<string, Relation> category_relations_by_code = 2;
            optional Tier tiers = 3;
            enum Tier {
              TIER_PREMIER = 0;
              TIER_SELECT = 1;
              TIER_REACH = 2;
            }
          }
        }
        message TechnologyCriteria {
          map<uint64, Relation> device_type_relations_by_id = 1;
          required MobileDevices mobile_devices = 2;
          map<string, Relation> operating_system_relations_by_name = 3;
          map<string, Relation> browser_relations_by_name = 4;
          map<string, Relation> connection_type_relations_by_name = 5;
          map<string, Relation> internet_service_provider_relations_by_name = 6;
          optional PlatformEnvironment platform_environment = 7;
          message MobileDevices {
            map<string, Relation> carrier_relations_by_name = 1;
            map<string, Relation> model_relations_by_name = 2;
            map<string, Relation> brand_relations_by_name = 3;
            map<string, Relation> category_relations_by_name = 4;
            map<string, Relation> year_relations_by_name = 5;
          }
          enum PlatformEnvironment {
            PLATFORM_ENVIRONMENT_APP = 0;
            PLATFORM_ENVIRONMENT_WEB = 1;
          }
        }
        enum DemographicAudiencesAccuracy {
          DEMOGRAPHIC_AUDIENCES_ACCURACY_ACCURACY = 0;
          DEMOGRAPHIC_AUDIENCES_ACCURACY_STANDARD = 1;
          DEMOGRAPHIC_AUDIENCES_ACCURACY_REACH = 2;
          DEMOGRAPHIC_AUDIENCES_ACCURACY_HIGH_ACCURACY = 3;
        }
        enum Relation {
          RELATION_INCLUDED = 0;
          RELATION_EXCLUDED = 1;
        }
      }
      message Unsupported {
      }
    }
    enum AddedValueReason {
      ADDED_VALUE_REASON_JBP = 0;
      ADDED_VALUE_REASON_AGENCY_DEAL = 1;
      ADDED_VALUE_REASON_MAKE_GOOD = 2;
      ADDED_VALUE_REASON_PRODUCT_TEST = 3;
    }
    enum ChannelType {
      CHANNEL_TYPE_WEB_AND_IN_APP = 0;
      CHANNEL_TYPE_CONNECTED_TV = 1;
      CHANNEL_TYPE_WEB_IN_APP_INSTREAM = 2;
    }
    enum TargetPosition {
      TARGET_POSITION_ALL = 0;
      TARGET_POSITION_IN_READ_ONLY = 1;
      TARGET_POSITION_PRE_ROLL = 2;
      TARGET_POSITION_MID_ROLL = 3;
      TARGET_POSITION_POST_ROLL = 4;
    }
  }
  enum LumenAttentionMeasurement {
    LUMEN_ATTENTION_MEASUREMENT_NONE = 0;
    LUMEN_ATTENTION_MEASUREMENT_SAMPLED = 1;
    LUMEN_ATTENTION_MEASUREMENT_ALWAYS = 2;
  }
}
// @section Campaign Setup
message CreateCampaignResponse {
  required int64 campaign_id = 1;
  repeated int64 created_line_item_ids = 2;
  // a map of auto-generated ids in database for each temporary ids that have been provided by the caller
  map<string, int64> generated_ids_by_temporary_id = 3;
}
// @section Campaign
message CreateCampaignSkeletonWithObjectiveRequest {
  required SecurityContext security_context = 1;
  required int64 owner_profile_id = 2;
  required int64 owner_entity_id = 3;
  required AdvertisingSolutionId advertising_solution_id = 4;
  required CampaignObjective objective = 5;
  optional bool is_created_by_ad_assistant = 6 [default = false];
}
// @section Campaign
message CreateCampaignSkeletonWithObjectiveResponse {
  required int64 campaign_id = 1;
}
// @section Campaign
message CreateCampaignSkeletonsFromSalesforceOpportunityRequest {
  required SecurityContext security_context = 1;
  required string salesforce_opportunity_id = 2;
  repeated CampaignObjective campaign_objectives = 3;
  required int64 seat_entity_id = 4;
  required int64 profile_id = 5;
  optional bool manager_compatibility_mode = 6 [default = false];
  repeated AdvertisingSolutionId advertising_solution_ids = 7;
}
// @section Campaign
message CreateCampaignSkeletonsFromSalesforceOpportunityResponse {
  repeated CreatedCampaign created_campaigns = 1;
  message CreatedCampaign {
    required CampaignObjective campaign_objective = 1;
    required int64 campaign_id = 2;
    repeated LineItemDetail line_item_details = 3;
  }
  message LineItemDetail {
    required string id = 1;
  }
}
// @section Campaign Support
message CreateCampaignSupportRequestForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  required int64 seat_id = 3;
  required int64 office_id = 4;
  required string description = 5;
  required int64 profile_id = 6;
}
// @section Campaign Support
message CreateCampaignSupportRequestForCampaignResponse {
  required int64 support_request_id = 1;
}
// @section Advertiser
message CreateClientSeatForBuyerRequest {
  required SecurityContext security_context = 1;
  required int64 office_id = 2;
  required int64 entity_id = 3;
  oneof buyer_id {
    int64 agency_id = 4;
    int64 advertiser_id = 5;
  }
  required string seat_name = 6;
  required double fee = 7;
  required string salesforce_contract_id = 8;
  repeated string client_emails = 9;
  required string salesforce_seat_id = 10;
  // Used to check that we don't roll back to a previous version during updates
  required int32 salesforce_contract_version = 11;
}
// @section Advertiser
message CreateClientSeatForBuyerResponse {
  required int64 seat_id = 1;
}
// @section Users Data
message CreateContextualSegmentRequest {
  required SecurityContext security_context = 1;
  required string name = 2;
  required ContextualSegmentProvider provider = 3;
  required ContextualSegmentType type = 4;
  optional double cpm_cost_usd = 5;
  optional uint64 parent_contextual_segment_id = 6;
  optional string segment_code_from_provider = 7;
  optional string description = 8;
}
// @section Users Data
message CreateContextualSegmentResponse {
  required uint64 contextual_segment_id = 1;
}
// @section Advertiser
message CreateConversionApiTokenRequest {
  required SecurityContext security_context = 1;
  required int64 buyer_seat_id = 2;
}
// @section Advertiser
message CreateConversionApiTokenResponse {
  required string conversion_api_token = 1;
  required int64 conversion_api_token_id = 2;
  required google.protobuf.Timestamp created_at = 3;
}
// @section Users Data
message CreateCookielessBuyerCustomAudienceRequest {
  required SecurityContext security_context = 1;
  required string name = 2;
  repeated Block blocks = 3;
  optional int64 reach = 5;
  optional int64 ad_opportunities = 6;
  optional string seed_composition_id = 7;
  optional int64 profile_id = 8;
  optional int64 entity_id = 9;
  message Block {
    required DimensionsMapping dimensions_mapping = 1;
  }
  message DimensionsMapping {
    repeated string age_audience_ids = 1;
    repeated string gender_audience_ids = 2;
    repeated string device_type_ids = 3;
    repeated string browsers_ids = 4;
    repeated string device_standardised_name_ids = 5;
    repeated string os_ids = 6;
    repeated string contextual_ids = 7;
    repeated string website_ids = 8;
    repeated string placement_ids = 9;
  }
}
// @section Users Data
message CreateCookielessBuyerCustomAudienceResponse {
  required int64 audience_id = 1;
}
// @section Users Data
message CreateCookielessCustomAudienceRequest {
  required SecurityContext security_context = 1;
  required string name = 2;
  repeated Block blocks = 3;
  optional int64 reach = 5;
  optional int64 ad_opportunities = 6;
  optional string seed_composition_id = 7;
  optional int64 profile_id = 8;
  optional int64 entity_id = 9;
  message Block {
    required DimensionsMapping dimensions_mapping = 1;
  }
  message DimensionsMapping {
    repeated string age_audience_ids = 1;
    repeated string gender_audience_ids = 2;
    repeated string device_type_ids = 3;
    repeated string browsers_ids = 4;
    repeated string device_standardised_name_ids = 5;
    repeated string os_ids = 6;
    repeated string contextual_ids = 7;
    repeated string website_ids = 8;
    repeated string placement_ids = 9;
  }
}
// @section Users Data
message CreateCookielessCustomAudienceResponse {
  required int64 audience_id = 1;
}
// @section Ad Experience
message CreateCreativeKPIsSupportedByDemosRequest {
  required SecurityContext security_context = 1;
  repeated CreativeKPI kpis = 2;
  message CreativeKPI {
    required string name = 1;
    required string description = 2;
  }
}
// @section Ad Experience
message CreateCreativeKPIsSupportedByDemosResponse {
  repeated int64 kpis_ids = 1;
}
// @section Ad Experience
message CreateCreativePositionsSupportedByDemosRequest {
  required SecurityContext security_context = 1;
  repeated CreativePosition positions = 2;
  message CreativePosition {
    required string name = 1;
  }
}
// @section Ad Experience
message CreateCreativePositionsSupportedByDemosResponse {
  repeated int64 positions_ids = 1;
}
// @section Ad Experience
message CreateCreativeSizesSupportedByDemosRequest {
  required SecurityContext security_context = 1;
  repeated CreativeSize sizes = 2;
  message CreativeSize {
    required string name = 1;
  }
}
// @section Ad Experience
message CreateCreativeSizesSupportedByDemosResponse {
  repeated int64 sizes_ids = 1;
}
// @section Ad Experience
message CreateCreativeTypesSupportedByDemosRequest {
  required SecurityContext security_context = 1;
  repeated CreativeType types = 2;
  message CreativeType {
    required string name = 1;
    required string category = 2;
  }
}
// @section Ad Experience
message CreateCreativeTypesSupportedByDemosResponse {
  repeated int64 types_ids = 1;
}
// @section Audience Custom
message CreateCustomAudienceTemplateRequest {
  required SecurityContext security_context = 1;
  required int64 owner_entity_id = 2;
  required string name = 3;
  repeated Block blocks = 4;
  optional Block exclusion_block = 5;
  required AudienceCustomEnvironmentChannel channel = 6;
  required int64 vertical_id = 7;
  // The entity ids of the seats which will be allowed/denied to use the template depending on the value of entity_association_type.
  repeated int64 associated_entity_ids = 9;
  optional AudienceCustomEntityAssociationType entity_association_type = 10;
  optional TaxonomyReach worldwide_reach = 11;
  message Block {
    optional string name = 1;
    required DimensionsMapping dimensions_mapping = 2;
  }
  message DimensionsMapping {
    repeated int64 nielsen_ids = 1;
    repeated int64 oracle_ids = 2;
    repeated int64 liveramp_ids = 3;
    repeated int64 emetriq_ids = 4;
    repeated int64 teads_segments = 5;
    repeated int64 altice_us_ids = 6;
    repeated int64 altice_fr_ids = 7;
    repeated int64 zeotap_ids = 8;
    repeated int64 crossix_ids = 9;
    repeated int64 audience_ids = 10;
    repeated string grapeshot_channels = 11;
    repeated int64 website_ids = 12;
    repeated int64 pack_ids = 13;
    repeated int64 skp_ids = 14;
    repeated int64 standard_contextual_ids = 15;
    repeated int64 retargetly_ids = 16;
    repeated int64 custom_contextual_ids = 17;
    repeated int64 comscore_audience_ids = 18;
    repeated int64 comscore_content_language_ids = 19;
    repeated int64 comscore_genre_ids = 20;
  }
  message TaxonomyReach {
    optional int64 reach = 1;
    optional int64 pageviews = 2;
    optional int64 cookieless_reach = 3;
    optional int64 cookieless_pageviews = 4;
  }
  reserved 8;
}
// @section Audience Custom
message CreateCustomAudienceTemplateResponse {
  required int64 custom_audience_template_id = 1;
  repeated int64 associated_entity_ids = 2;
}
// @section Campaign
message CreateCustomTargetingRuleForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  required string name = 3;
  required string tbl_string = 4;
  required CustomTargetingRuleAudiencesDeliveryType demographic_audiences_delivery_type = 5;
  required CustomTargetingRuleAudiencesAccuracyLevel other_audiences_accuracy_level = 6;
  required bool cookieless_criteria_only = 7;
  required string description = 8;
  required int64 reason_id = 9;
  optional CustomTargetingEnvironmentChannel channel = 10;
}
// @section Campaign
message CreateCustomTargetingRuleForCampaignResponse {
  required int64 rule_id = 1;
}
// @section Exchange Rate
message CreateDailyExchangeRatesAnonymouslyRequest {
  required ExchangeRateSource source = 1;
  required string hour = 2;
  enum ExchangeRateSource {
    // Oanda exchange rate
    EXCHANGE_RATE_SOURCE_OANDA = 0;
    // National Bank of Romania exchange rate
    EXCHANGE_RATE_SOURCE_ROCB = 1;
  }
}
// @section Exchange Rate
message CreateDailyExchangeRatesAnonymouslyResponse {
}
// @section Reporting
message CreateDatamartRequest {
  required SecurityContext security_context = 1;
  required DatamartToCreate datamart = 2;
  optional google.protobuf.Timestamp min_retention_date = 3;
  message DatamartToCreate {
    required int64 datamart_id = 1;
    required int64 template_id = 2;
    required Frequency frequency = 3;
    required Options options = 4;
    required bool company_wide_alerting = 5;
    optional string retention_period = 6;
    optional Filters filters = 7;
    required string name = 8;
    repeated string dimensions = 9;
    repeated string metrics = 10;
    required DatamartStatus status = 11;
    required ReportOutputFormat format = 12;
    message Filters {
      repeated DemandSource demand_sources = 1;
      repeated string ad_types = 2;
      repeated int64 advertiser_ids = 3;
      repeated int64 placement_ids = 4;
      repeated string hb_providers = 5;
    }
    message Options {
      optional string redshift_sort_key = 1;
      optional string redshift_schema = 2;
      optional string redshift_database = 3;
      optional BigQueryTable big_query_table = 8;
      optional ClusteringField big_query_clustering_field = 9;
      message BigQueryTable {
        required string project_id = 1;
        required string dataset = 2;
        required string table = 3;
      }
      message ClusteringField {
        repeated string fields = 1;
      }
    }
  }
}
// @section Reporting
message CreateDatamartResponse {
  optional CreatedDatamart datamart = 1;
  message CreatedDatamart {
    required int64 datamart_id = 1;
    required int64 template_id = 2;
    required Frequency frequency = 3;
    required Options options = 4;
    required bool company_wide_alerting = 5;
    optional string retention_period = 6;
    optional Filters filters = 7;
    required string name = 8;
    repeated string dimensions = 9;
    repeated string metrics = 10;
    required DatamartStatus status = 11;
    required ReportOutputFormat format = 12;
    message Filters {
      repeated DemandSource demand_sources = 1;
      repeated string ad_types = 2;
      repeated int64 advertiser_ids = 3;
      repeated int64 placement_ids = 4;
      repeated string hb_providers = 5;
    }
    message Options {
      optional string redshift_sort_key = 1;
      optional string redshift_schema = 2;
      optional string redshift_database = 3;
      optional BigQueryTable big_query_table = 8;
      optional ClusteringField big_query_clustering_field = 9;
      message BigQueryTable {
        required string project_id = 1;
        required string dataset = 2;
        required string table = 3;
      }
      message ClusteringField {
        repeated string fields = 1;
      }
    }
  }
}
// @section Programmatic
message CreateDealSyncBuyersForDealSyncPlatformRequest {
  required SecurityContext security_context = 1;
  required Platform platform = 2;
  repeated Buyer buyers = 3;
  message Buyer {
    required string external_id = 1;
    required string name = 2;
  }
  enum Platform {
    PLATFORM_UNSPECIFIED = 0;
    PLATFORM_DV360 = 1;
  }
}
// @section Programmatic
message CreateDealSyncBuyersForDealSyncPlatformResponse {
}
// @section Advertiser
message CreateDefaultPixelForAdvertiserWithExistingConversionsRequest {
  required SecurityContext security_context = 1;
  // Self-served seat id for which the default pixel will be created ;
  // could be retrieved in `seat` table using entity id
  required int64 seat_id = 2;
  // Advertiser id which has already existing conversions on managed services platform
  required int64 advertiser_id = 3;
}
// @section Advertiser
message CreateDefaultPixelForAdvertiserWithExistingConversionsResponse {
}
// @section Ad Experience
message CreateDemoConfigurationForTenantError {
  repeated Error errors = 1;
  message Error {
    oneof error_type {
      IncompleteSetup incomplete_setup = 1;
      MissingResource missing_resource = 2;
    }
  }
  message IncompleteSetup {
    required string reason = 1;
    optional uint64 vertical_id = 2;
    optional uint64 creative_kpi_id = 3;
  }
  message MissingResource {
    required string reason = 1;
    required string url = 2;
  }
}
// @section Ad Experience
message CreateDemoConfigurationForTenantRequest {
  required SecurityContext security_context = 1;
  required uint64 tenant_id = 2;
  required Configuration configuration = 3;
  message Configuration {
    optional string title = 1;
    required string vast_url = 2;
    required string thumbnail_url = 3;
    optional string description = 4;
    required uint64 article_id = 5;
    required uint64 creative_type_id = 6;
    required uint64 creative_size_id = 7;
    optional uint64 vertical_id = 9;
    optional uint64 creative_kpi_id = 10;
    optional uint64 brand_id = 11;
    optional uint64 display_priority = 12;
    optional uint64 vertical_display_priority = 13;
    repeated Market markets = 14;
    optional bool is_staging = 15;
  }
  message Market {
    required uint64 market_id = 1;
    optional uint64 display_priority = 2;
  }
}
// @section Ad Experience
message CreateDemoConfigurationForTenantResponse {
  required int64 demo_configuration_id = 1;
}
// @section Ad Experience
message CreateDemoIABCategoriesRequest {
  required SecurityContext security_context = 1;
  repeated Category categories = 2;
  message Category {
    required string name = 1;
  }
}
// @section Ad Experience
message CreateDemoIABCategoriesResponse {
  repeated int64 iab_categories_ids = 1;
}
// @section Account
message CreateEmployeeRequest {
  required SecurityContext security_context = 1;
  required string email = 2;
  required string firstname = 3;
  required string lastname = 4;
  // language_TERRITORY: en_US, fr_FR, es_ES, ...
  required string locale = 5;
  required Division division = 6;
  required Department department = 7;
  enum Department {
    DEPARTMENT_FINANCE = 1;
    DEPARTMENT_DESIGN = 2;
    DEPARTMENT_AD_OPS = 3;
    DEPARTMENT_TECH = 4;
    DEPARTMENT_SALES = 5;
    DEPARTMENT_MARKETING = 6;
    DEPARTMENT_IT = 7;
    DEPARTMENT_SUPPLY = 8;
    DEPARTMENT_HR = 9;
    DEPARTMENT_PRODUCT = 10;
    DEPARTMENT_PROGRAMMATIC = 11;
    DEPARTMENT_HEADQUARTER = 12;
    DEPARTMENT_OFFICE_MANAGER = 13;
  }
  enum Division {
    DIVISION_ARGENTINA = 1;
    DIVISION_AUSTRALIA = 2;
    DIVISION_AUSTRIA = 3;
    DIVISION_BELGIUM = 4;
    DIVISION_BRAZIL = 5;
    DIVISION_CANADA = 6;
    DIVISION_COLOMBIA = 7;
    DIVISION_CZECH_REPUBLIC = 8;
    DIVISION_FRANCE = 9;
    DIVISION_GERMANY = 10;
    DIVISION_HONG_KONG = 11;
    DIVISION_ITALY = 12;
    DIVISION_JAPAN = 13;
    DIVISION_KOREA = 14;
    DIVISION_LUXEMBOURG = 15;
    DIVISION_MIAMI = 16;
    DIVISION_MEXICO = 17;
    DIVISION_MOROCCO = 18;
    DIVISION_NETHERLANDS = 19;
    DIVISION_NEW_ZEALAND = 20;
    DIVISION_PERU = 21;
    DIVISION_POLAND = 22;
    DIVISION_PORTUGAL = 23;
    DIVISION_ROMANIA = 24;
    DIVISION_RUSSIA = 25;
    DIVISION_SINGAPORE = 26;
    DIVISION_SPAIN = 27;
    DIVISION_SWITZERLAND = 28;
    DIVISION_TURKEY = 29;
    DIVISION_UNITED_ARAB_EMIRATES = 30;
    DIVISION_UNITED_KINGDOM = 31;
    DIVISION_UNITED_STATES = 32;
    DIVISION_CHILE = 33;
    DIVISION_TAIWAN = 34;
    DIVISION_INDONESIA = 35;
    DIVISION_SOUTH_AFRICA = 36;
    DIVISION_INDIA = 37;
    DIVISION_SAUDI_ARABIA = 38;
  }
}
// @section Account
message CreateEmployeeResponse {
  required int64 profile_id = 1;
}
// @section Reporting
message CreateExternalApiTokenRequest {
  required SecurityContext security_context = 1;
  required string name = 2;
  required int64 profile_id = 3;
  required int64 entity_id = 4;
}
// @section Reporting
message CreateExternalApiTokenResponse {
  required int64 external_api_token_id = 1;
  required string name = 2;
  required int64 profile_id = 3;
  required int64 entity_id = 4;
  required string token = 5;
  required google.protobuf.Timestamp created_at = 6;
  required google.protobuf.Timestamp updated_at = 7;
}
// @section Advertiser
message CreateInternalAgencySeatForOfficeRequest {
  required SecurityContext security_context = 1;
  required int64 office_id = 2;
}
// @section Advertiser
message CreateInternalAgencySeatForOfficeResponse {
  required int64 seat_id = 1;
}
// @section Advertiser
message CreateInternalSeatForBuyerRequest {
  required SecurityContext security_context = 1;
  required int64 office_id = 2;
  required int64 entity_id = 3;
  oneof buyer_id {
    int64 agency_id = 4;
    int64 advertiser_id = 5;
  }
  required string seat_name = 6;
  required double fee = 7;
  optional string multiple_seats_reason = 8;
}
// @section Advertiser
message CreateInternalSeatForBuyerResponse {
  required int64 seat_id = 1;
}
// @section Advertiser
message CreateIoBuyerSeatForEntityRequest {
  required SecurityContext security_context = 1;
  required int64 office_id = 2;
  required int64 entity_id = 3;
  oneof buyer_id {
    int64 agency_id = 4;
    int64 advertiser_id = 5;
  }
  optional bool can_set_multiple_pixels = 6 [default = false];
  optional double fee = 7 [default = 0.000000];
  optional string seat_name = 8; // defaults to the buyer name
  optional string multiple_seats_reason = 9;
}
// @section Advertiser
message CreateIoBuyerSeatForEntityResponse {
  required int64 seat_id = 1;
}
// @section Users Data
message CreateLookalikeSegmentsRequest {
  required SecurityContext security_context = 1;
  required LookalikeSeed lookalike_seed = 2;
  required string name = 3;
  message LookalikeSeed {
    required string seed_provider = 1;
    required string seed_segment_id_for_provider = 2;
    // Represents countries in ISO-2 format
    repeated string countries_for_seed = 3;
  }
}
// @section Users Data
message CreateLookalikeSegmentsResponse {
  required int64 accuracy_segment_id = 1;
  required int64 standard_segment_id = 2;
  required int64 reach_segment_id = 3;
}
// @section Advertiser
message CreateManagedBuyerSeatForEntityRequest {
  required SecurityContext security_context = 1;
  required int64 office_id = 2;
  required int64 entity_id = 3;
  required MsaType msa_type = 4;
  required double managed_fee = 5;
  oneof buyer_id {
    int64 agency_id = 6;
    int64 advertiser_id = 7;
  }
  required string salesforce_contract_id = 8;
  optional string seat_name = 9; // defaults to the buyer name
  optional string multiple_seats_reason = 10;
}
// @section Advertiser
message CreateManagedBuyerSeatForEntityResponse {
  required int64 seat_id = 1;
}
// @section Ad Experience
message CreateMarketsSupportedByDemoRequest {
  required SecurityContext security_context = 1;
  repeated Market markets = 2;
  message Market {
    required string name = 1;
    required string office = 2;
    optional string description = 3;
    optional bool is_staging = 4;
  }
}
// @section Ad Experience
message CreateMarketsSupportedByDemoResponse {
  repeated int64 markets_ids = 1;
}
// @section Data Science
message CreateModelTrainingRequest {
  required SecurityContext security_context = 1;
  required string description = 2;
  required string model_training_config_id = 3;
  required TrainingSource training_source = 4;
  required Log log = 5;
  required Duration duration = 6;
  required bool model_seeding = 7;
  required int32 training_frequency = 8;
  repeated string parent_jobs = 9;
  repeated ModelQualityRule model_quality_rules = 10;
  message Duration {
    required int32 value = 1;
    required DurationUnit unit = 2;
  }
  message Log {
    required string training_set = 1;
    required string filter = 2;
  }
  message ModelQualityRule {
    required Metric metric = 1;
    required Operator operator = 2;
    required float threshold = 3;
  }
}
// @section Data Science
message CreateModelTrainingResponse {
}
// @section Mrg Contract
message CreateMrgContractRequest {
  required SecurityContext security_context = 1;
  required string name = 2;
  required MrgContractPeriod period = 3;
  repeated int64 publisher_party_ids = 4;
  repeated int64 inventory_ids = 5;
  required bool includes_all_inventory = 6;
  required bool includes_all_new_inventory = 7;
  required MrgContractExclusivity exclusivity = 8;
  optional int32 auto_renewal_period = 9;
  optional google.protobuf.Timestamp renewal_limit_date = 10;
  optional string comment = 11;
  repeated int64 excluded_placements = 12;
  message MrgContractPeriod {
    required google.protobuf.Timestamp start_date = 1;
    required google.protobuf.Timestamp end_date = 2;
  }
}
// @section Mrg Contract
message CreateMrgContractResponse {
  required string mrg_contract_uuid = 1;
}
// @section Account
message CreateOrUpdateAdvertiserFromSalesforceAnonymouslyRequest {
  required string advertiser_salesforce_id = 1;
}
// @section Account
message CreateOrUpdateAdvertiserFromSalesforceAnonymouslyResponse {
  required int64 advertiser_id = 1;
}
// @section Users Data
message CreateOracleFirstPartySegmentRequest {
  required SecurityContext security_context = 1;
  required FirstPartySegment segment = 2;
  message FirstPartySegment {
    required string id = 1;
    required string name = 2;
    optional double price = 3;
    oneof first_party {
      int64 advertiser_id = 4;
      int64 publisher_id = 5;
    }
  }
}
// @section Users Data
message CreateOracleFirstPartySegmentResponse {
}
// @section Inventory
message CreatePackForBuyerRequest {
  required SecurityContext security_context = 1;
  required string name = 2;
  required int64 buyer_id = 3;
  required bool is_self_served = 4;
  repeated int64 app_ids = 5;
  repeated int64 placement_ids = 6;
  repeated int64 site_ids = 7;
}
// @section Inventory
message CreatePackForBuyerResponse {
  required int64 pack_id = 1;
}
// @section Users Data
message CreatePersonaRequest {
  required SecurityContext security_context = 1;
  required string name = 2;
  repeated Block blocks = 3;
  // Used for advertiser association of the persona
  optional int64 advertiser_id = 4;
  optional int64 worldwide_reach = 5;
  optional Block excluded_block = 6;
  optional int64 profile_id = 7;
  optional int64 entity_id = 8;
  optional UsersDataEnvironmentChannel channel = 9 [default = USERS_DATA_ENVIRONMENT_CHANNEL_WEB];
  message Block {
    optional string name = 1;
    required DimensionsMapping dimensions_mapping = 2;
  }
  message DimensionsMapping {
    repeated string exelate_ids = 1;
    repeated string bluekai_ids = 2;
    repeated string liveramp_ids = 3;
    repeated string emetriq_ids = 4;
    repeated string teads_segments = 5;
    repeated string altice_us_ids = 6;
    repeated string altice_fr_ids = 7;
    repeated string zeotap_ids = 8;
    repeated string crossix_ids = 9;
    repeated string audience_ids = 10;
    repeated string grapeshot_channels = 11;
    repeated string website_ids = 12;
    repeated string pack_ids = 13;
    repeated string skp_ids = 14;
    repeated string standard_contextual_ids = 15;
    repeated string retargetly_ids = 16;
    repeated string custom_contextual_ids = 17;
    repeated string comscore_audience_ids = 18;
    repeated string comscore_content_language_ids = 19;
    repeated string comscore_genre_ids = 20;
  }
}
// @section Users Data
message CreatePersonaResponse {
  required int64 persona_id = 1;
}
// @section Advertiser
message CreatePixelForBuyerRequest {
  required SecurityContext security_context = 1;
  required int64 seat_id = 2;
  required string pixel_name = 3;
  required int64 advertiser_id = 5;
  optional bool create_automatically_advertiser_events = 6 [default = false];
  reserved 4;
}
// @section Advertiser
message CreatePixelForBuyerResponse {
  required int64 buyer_pixel_id = 1;
}
// @section Inventory
message CreatePlacementsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  repeated PlacementTemplate placements = 3;
  message PlacementTemplate {
    required bool is_header_bidding = 1;
    required int64 placement_type_id = 2;
    optional PlacementEnvironment environment = 3;
    optional string additional_name = 4;
  }
}
// @section Inventory
message CreatePlacementsForPublisherResponse {
  repeated int64 placement_ids = 1;
}
// @section Inventory
message CreatePlacementsForWebsitesRequest {
  required SecurityContext security_context = 1;
  repeated PlacementTemplate placements = 2;
  repeated int64 website_ids = 3;
  message PlacementTemplate {
    required bool is_header_bidding = 1;
    required int64 placement_type_id = 2;
    optional PlacementEnvironment environment = 3;
    optional string additional_name = 4;
  }
}
// @section Inventory
message CreatePlacementsForWebsitesResponse {
  repeated int64 placement_ids = 1;
}
// @section Ab Testing
message CreatePlatformAbTestRequest {
  required SecurityContext security_context = 1;
  required string title = 2;
  required int32 split_algorithm_id = 3;
  repeated int32 abtest_analysis_ids = 4; // ids of analysis types: exp: control_tower, be_branding...
  repeated Population populations = 5;
  optional string commentary = 6;
  message Population {
    required int32 id = 1;
    required string name = 2;
    required int32 size = 3;
    map<string, string> parameters = 4;
  }
}
// @section Ab Testing
message CreatePlatformAbTestResponse {
  required int64 abtest_id = 1;
}
// @section Account
message CreateProfileForIdentityProviderAnonymouslyRequest {
  required string identity_provider_name = 1;
  required string email = 2;
  required string firstname = 3;
  required string lastname = 4;
  optional string timezone = 5 [default = "Europe/Paris"]; // Europe/Paris, Europe/Berlin, US/Central
}
// @section Account
message CreateProfileForIdentityProviderAnonymouslyResponse {
  required int64 profile_id = 1;
}
// @section Account
message CreateProfileRequest {
  required SecurityContext security_context = 1;
  required string email = 2;
  required string firstname = 3;
  required string lastname = 4;
  // language_TERRITORY: en_US, fr_FR, es_ES, ...
  required string locale = 5;
  repeated Account accounts = 6;
  optional string timezone = 7 [default = "Europe/Paris"]; // Europe/Paris, Europe/Berlin, US/Central
  message Account {
    required int64 entity_id = 1;
    // "Publisher Self-Served", "Teads Innovation", "Innovation feature team Platform"
    repeated string roles = 2;
  }
}
// @section Account
message CreateProfileResponse {
  required int64 profile_id = 1;
}
// @section Campaign
message CreatePublisherDirectSalesCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  required string name = 3;
  // An IAB category code follow the pattern IABx-y
  // where x is the number of the category (from 1-26)
  // and y is the (possible) number of the sub-category (from 1-99)
  // examples : IAB1 , IAB17-39
  required string iab_category_code = 4;
  optional int64 advertiser_id = 5;
  optional int64 agency_id = 6;
  optional bool is_test_campaign = 7;
  optional bool tracked_by_moat = 8;
  // Campaigns can be setup by exposed APIs
  // This external integration code allows
  // to store external parties campaign identifiers
  optional string external_integration_code = 9;
}
// @section Campaign
message CreatePublisherDirectSalesCampaignResponse {
  required int64 campaign_id = 1;
}
// @section Campaign
message CreatePublisherDirectSalesCampaignTagRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  required string name = 3;
  optional int64 advertiser_id = 4;
  optional int64 agency_id = 5;
  required bool has_single_creative_tags_only = 6;
  optional bool tracked_by_moat = 7;
}
// @section Campaign
message CreatePublisherDirectSalesCampaignTagResponse {
  required int64 campaign_tag_id = 1;
}
// @section Campaign
message CreatePublisherDirectSalesCreativeRequest {
  required SecurityContext security_context = 1;
  oneof creative_owner_id {
    int64 campaign_id = 2;
    int64 campaign_tag_id = 9;
  }
  required string creative_name = 3;
  required int64 format_size_id = 4;
  required int64 format_creative_type_id = 5;
  oneof media {
    FirstPartyMedia first_party_media = 6;
    ThirdPartyMedia third_party_media = 7;
  }
  repeated ThirdPartyTracking third_party_trackings = 8;
  required DirectSalesCreativeCreator created_with = 10;
  message FirstPartyMedia {
    required string asset_path = 1;
    optional string click_through_url = 2;
    optional CallToAction call_to_action = 3;
    message CallToAction {
      required DirectSalesCreativeAction action = 1;
      optional int64 countdown = 2;
    }
  }
  message ThirdPartyMedia {
    required string vast_url = 1;
  }
  message ThirdPartyTracking {
    required DirectSalesThirdPartyTrackingEvent tracking_event = 1;
    required string tracking_url = 2;
  }
}
// @section Campaign
message CreatePublisherDirectSalesCreativeResponse {
  required int64 creative_id = 1;
}
// @section Campaign
message CreatePublisherDirectSalesLineItemRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  required string name = 3;
  required Budget budget = 4;
  required Price selling_price = 5;
  optional Capping frequency_capping = 7;
  required Duration flight_duration = 8;
  repeated int64 format_positions_ids = 10;
  optional WeekSchedule schedule = 11;
  optional KpiOptimization kpi_optimization = 12;
  optional string targeting_rule = 13;
  optional FormatSettings format_settings = 14;
  repeated AssignedCreative assigned_creatives = 15;
  // when the line item wins an SSP auction in a header bidding context, this value is sent
  // by Teads' adapter to flag it as a particular deal ID, triggering a custom targeting
  // and/or pacing behavior on ad server side
  optional string header_bidding_deal_id_targeting = 16;
  required CampaignPacing pacing = 17;
  message AssignedCreative {
    required int64 creative_id = 1;
    optional int32 share_of_voice = 2;
  }
  message Budget {
    required double amount = 1;
    required DirectSalesLineItemBudgetPeriod period = 2;
  }
  message Capping {
    required int64 amount = 1;
    required DirectSalesBillableCappingEvent event = 2;
    required DirectSalesLineItemCappingPeriod period = 3;
  }
  message Duration {
    required google.protobuf.Timestamp start_date = 1;
    required google.protobuf.Timestamp end_date = 2;
    required string timezone = 3;
  }
  message FormatSettings {
    required DirectSalesLineItemStartMode start_mode = 1;
    required int32 viewability_threshold = 2;
  }
  message KpiOptimization {
    required DirectSalesLineItemOptimizedKpi kpi = 1;
    optional double threshold = 2;
  }
  message Price {
    required double amount = 1;
    required DirectSalesBillablePriceEvent event = 3;
  }
  message WeekSchedule {
    required DaySchedule monday = 1;
    required DaySchedule tuesday = 2;
    required DaySchedule wednesday = 3;
    required DaySchedule thursday = 4;
    required DaySchedule friday = 5;
    required DaySchedule saturday = 6;
    required DaySchedule sunday = 7;
    message DaySchedule {
      // Array of ints between 0 and 23
      repeated int32 hours = 1;
    }
  }
  reserved 6;
}
// @section Campaign
message CreatePublisherDirectSalesLineItemResponse {
  required int64 line_item_id = 1;
}
// @section Campaign
message CreatePublisherDirectSalesTagRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_tag_id = 2;
  repeated AssignedCreative assigned_creatives = 3;
  required string name = 4;
  optional Price selling_price = 5;
  message AssignedCreative {
    required int64 creative_id = 1;
    // Share of voice must be defined for every creative in the request, or none.
    // If defined, the sum of the share of voice of the creatives in the request must total 100.
    optional int32 share_of_voice = 2;
  }
  message Price {
    required double amount = 1;
    required DirectSalesBillablePriceEvent event = 2;
  }
}
// @section Campaign
message CreatePublisherDirectSalesTagResponse {
  required int64 tag_id = 1;
}
// @section Account
message CreatePublisherTypeSettingValuesRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  repeated PublisherTypeSettingValue publisher_type_setting_values = 3;
  message PublisherTypeSettingValue {
    required string value = 1;
    required int64 publisher_setting_id = 2;
    required int64 publisher_type_setting_id = 3;
  }
}
// @section Account
message CreatePublisherTypeSettingValuesResponse {
  repeated int64 publisher_type_setting_value_ids = 4;
}
// @section Reachcast
message CreateReachcastBookingError {
  repeated Error errors = 1;
  message BookingConflict {
  }
  message Error {
    oneof error_type {
      WrongDates wrong_dates = 1;
      BookingConflict booking_conflict = 2;
    }
  }
  message WrongDates {
    required string description = 1;
  }
}
// @section Reachcast
message CreateReachcastBookingRequest {
  required SecurityContext security_context = 1;
  required string country_code = 2;
  repeated int64 context_ids = 3;
  required google.protobuf.Timestamp start_date = 4;
  required google.protobuf.Timestamp end_date = 5;
  required bool is_draft = 6;
  required string timezone = 7;
  optional int64 campaign_id = 8;
}
// @section Reachcast
message CreateReachcastBookingResponse {
  required int64 booking_id = 1;
}
// @section Users Data
message CreateRemarketingSegmentForBrandPulseRequest {
  required SecurityContext security_context = 1;
  required string name = 2;
  required int64 advertiser_id = 3;
  repeated int64 item_ids = 4;
  required Audience audience = 5;
  optional ItemType item_type = 6;
  enum Audience {
    AUDIENCE_EXPOSED = 0;
    AUDIENCE_CONTROL = 1;
  }
  enum ItemType {
    ITEM_TYPE_LINE_ITEM = 0;
    ITEM_TYPE_CONNECTION = 1;
  }
}
// @section Users Data
message CreateRemarketingSegmentForBrandPulseResponse {
  required int64 segment_id = 1;
}
// @section Retail Media
message CreateRetailerAndSmartlinkConfigurationRequest {
  required SecurityContext security_context = 1;
  required string retailer_name = 2;
  required string cart_redirect_url = 3;
  optional RetailerCMS cms = 4;
  optional string json_configuration = 5;
  optional string locale = 6;
  optional string country = 7;
  required RetailerCartingMode carting_mode = 8;
  required RetailerProductStrategyAllowed product_strategy_allowed = 9;
  optional bool is_pixel = 10;
  required string conf_name = 11;
  repeated Product products = 12;
  optional double total_price = 13;
  required string currency = 14;
  optional string landing_page_url = 15;
  message Product {
    optional string name = 1;
    required string sku = 2;
    required int64 quantity = 3;
    optional double price = 4;
    optional string seller_id = 6;
    reserved 5;
  }
}
// @section Retail Media
message CreateRetailerAndSmartlinkConfigurationResponse {
  required int64 retailer_id = 1;
  required string retailer_name = 2;
  optional string cart_redirect_url = 3;
  optional RetailerCMS cms = 4;
  optional string json_configuration = 5;
  optional string locale = 6;
  optional string country = 7;
  required RetailerCartingMode carting_mode = 8;
  required RetailerProductStrategyAllowed product_strategy_allowed = 9;
  required google.protobuf.Timestamp created_at = 10;
  required google.protobuf.Timestamp updated_at = 11;
  required bool is_pixel = 12;
  required int64 configuration_id = 13;
  required string conf_name = 14;
  repeated Product products = 15;
  optional double total_price = 16;
  required string currency = 17;
  optional string landing_page_url = 18;
  message Product {
    required int64 id = 1;
    optional string name = 2;
    required string sku = 3;
    required int64 quantity = 4;
    optional double price = 5;
    optional string seller_id = 7;
    reserved 6;
  }
}
// @section Retail Media
message CreateRetailerError {
  repeated Error errors = 1;
  message Error {
    oneof error_type {
      RetailerAlreadyExist retailer_already_exist = 1;
    }
  }
  message RetailerAlreadyExist {
    required string reason = 1;
  }
}
// @section Retail Media
message CreateRetailerRequest {
  required SecurityContext security_context = 1;
  required string name = 2;
  required string cart_redirect_url = 3;
  optional RetailerCMS cms = 4;
  optional string json_configuration = 5;
  optional string locale = 6;
  optional string country = 7;
  required RetailerCartingMode carting_mode = 8;
  required RetailerProductStrategyAllowed product_strategy_allowed = 9;
  optional bool is_pixel = 10;
}
// @section Retail Media
message CreateRetailerResponse {
  required int64 retailer_id = 1;
  required string name = 2;
  optional string cart_redirect_url = 3;
  optional RetailerCMS cms = 4;
  optional string json_configuration = 5;
  optional string locale = 6;
  optional string country = 7;
  required RetailerCartingMode carting_mode = 8;
  required RetailerProductStrategyAllowed product_strategy_allowed = 9;
  required google.protobuf.Timestamp created_at = 10;
  required google.protobuf.Timestamp updated_at = 11;
  required bool is_pixel = 12;
}
// @section Retail Media
message CreateRetailerSmartlinkConfigurationError {
  repeated Error errors = 1;
  message ConfigurationNameAlreadyExist {
    required string reason = 1;
  }
  message Error {
    oneof error_type {
      ConfigurationNameAlreadyExist configuration_name_already_exist = 1;
      RetailerNotFound retailer_not_found = 2;
    }
  }
  message RetailerNotFound {
    required string reason = 1;
  }
}
// @section Retail Media
message CreateRetailerSmartlinkConfigurationRequest {
  required SecurityContext security_context = 1;
  required string name = 2;
  required int64 retailer_id = 3;
  repeated Product products = 4;
  optional double total_price = 5;
  required string currency = 6;
  optional string landing_page_url = 7;
  message Product {
    optional string name = 1;
    required string sku = 2;
    required int64 quantity = 3;
    optional double price = 4;
    optional string seller_id = 6;
    reserved 5;
  }
}
// @section Retail Media
message CreateRetailerSmartlinkConfigurationResponse {
  required int64 configuration_id = 1;
  required string name = 2;
  required Retailer retailer = 3;
  repeated Product products = 4;
  optional double total_price = 5;
  required string currency = 6;
  required google.protobuf.Timestamp created_at = 7;
  required google.protobuf.Timestamp updated_at = 8;
  optional string landing_page_url = 9;
  message Product {
    required int64 id = 1;
    optional string name = 2;
    required string sku = 3;
    required int64 quantity = 4;
    optional double price = 5;
    optional string seller_id = 7;
    reserved 6;
  }
  message Retailer {
    required int64 id = 1;
    required string name = 2;
    optional string cart_redirect_url = 3;
    optional RetailerCMS cms = 4;
    optional string json_configuration = 5;
    optional string locale = 6;
    optional string country = 7;
    required RetailerCartingMode carting_mode = 8;
    required RetailerProductStrategyAllowed product_strategy_allowed = 9;
  }
}
// @section Account
message CreateSeatForBuyerRequest {
  required SecurityContext security_context = 1;
  required string salesforce_seat_id = 2;
}
// @section Account
message CreateSeatForBuyerResponse {
  required int64 seat_id = 1;
}
// @section Advertiser
message CreateSelfServedBuyerSeatForEntityRequest {
  required SecurityContext security_context = 1;
  required int64 office_id = 2;
  required int64 entity_id = 3;
  required MsaType msa_type = 4;
  required double platform_fee = 5;
  oneof buyer_id {
    int64 agency_id = 6;
    int64 advertiser_id = 7;
  }
  required string salesforce_contract_id = 8;
  optional string seat_name = 9; // defaults to the buyer name
  optional string multiple_seats_reason = 10;
}
// @section Advertiser
message CreateSelfServedBuyerSeatForEntityResponse {
  required int64 seat_id = 1;
}
// @section Inventory
message CreateSitesForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  repeated Site sites = 3;
  message Site {
    required string domain = 1;
    required string name = 2;
    required InventoryTier tier = 3;
    required string iab_category_code = 4;
    required InventoryType inventory_type = 5;
    optional bool is_strategic = 6 [default = false];
    optional bool is_brandsafety_whitelisted = 7 [default = false];
  }
}
// @section Inventory
message CreateSitesForPublisherResponse {
  repeated CreatedSite new_sites = 1;
  repeated CreatedSite updated_sites = 2;
  repeated CreatedSite unmodified_sites = 3;
  message CreatedSite {
    required string domain = 1;
    repeated int64 publisher_ids = 2;
    required bool is_vetted = 3;
  }
}
// @section Ad Experience
message CreateVerticalsSupportedByDemosRequest {
  required SecurityContext security_context = 1;
  repeated Vertical verticals = 2;
  message Vertical {
    required string name = 1;
    required string full_name = 2;
    optional bool is_staging = 4;
  }
}
// @section Ad Experience
message CreateVerticalsSupportedByDemosResponse {
  repeated int64 verticals_ids = 1;
}
// @section Users Data
message CreateWeatherSegmentRequest {
  required SecurityContext security_context = 1;
  required string name = 2;
  optional double cpm_in_usd = 3;
  optional int64 parent_weather_segment_id = 4;
  optional string segment_code_from_provider = 5;
  optional string description = 6;
  repeated string country_codes = 7; // ISO639-1 codes
}
// @section Users Data
message CreateWeatherSegmentResponse {
  required int64 weather_segment_id = 1;
}
// @section Inventory
message CreateWebsitesForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  repeated Website websites = 3;
  message Website {
    required string name = 1;
    required string domain = 2;
    required int64 category_id = 3;
    required WebsiteTier tier = 4;
  }
}
// @section Inventory
message CreateWebsitesForPublisherResponse {
  repeated int64 website_ids = 1;
}
// @section Traffic
message CreateWhitelistedIPRangesRequest {
  required SecurityContext security_context = 1;
  required string name = 2;
  repeated string cidr_ranges = 3;
}
// @section Traffic
message CreateWhitelistedIPRangesResponse {
  required int64 whitelisted_ip_ranges_id = 1;
}
// @section Campaign
message CreativeActivatedEvent {
  required int64 activator_entity_id = 1;
  required int64 activator_profile_id = 2;
  required int64 creative_id = 3;
}
// @section Campaign
message CreativeAuctionIdNotForwardedEvent {
  repeated int64 creative_ids = 1;
}
// @section Campaign
message CreativeStatusUpdatedEvent {
  required int64 entity_id = 1;
  required int64 profile_id = 2;
  required int64 creative_id = 3;
  required CreativeStatus old_creative_status = 4;
  required CreativeStatus new_creative_status = 5;
}
// @section Finance
message CurrentMonthExchangeRatesProcessedEvent {
  required google.protobuf.Timestamp processed_month = 1;
}
// @section Users Data
message CustomAudienceSharedEvent {
  required int64 owner_profile_id = 1;
  required int64 owner_entity_id = 2;
  required int64 shared_custom_audience_id = 3;
  required int64 shared_buyer_entity_id = 4;
}
// @section Account
message CustomerProfileMigratedToOktaEvent {
  required int64 profile_id = 1;
  required string email = 2;
  required string okta_user_id = 3;
}
// @section Account
message CustomerProfilePasswordMigratedToOktaEvent {
  required int64 profile_id = 1;
}
// @section Inventory
message DeactivateAppsForPublisherRequest {
  required SecurityContext security_context = 1;
  repeated App apps = 2;
  required int64 publisher_id = 3;
  message App {
    required string store_bundle_id = 1;
    required AppPlatform platform = 2;
  }
}
// @section Inventory
message DeactivateAppsForPublisherResponse {
}
// @section Ad Experience
message DeactivateArticleAvailableForDemosRequest {
  required SecurityContext security_context = 1;
  required int64 article_id = 2;
}
// @section Ad Experience
message DeactivateArticleAvailableForDemosResponse {
}
// @section Ad Experience
message DeactivateArticlePublisherForDemosRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Ad Experience
message DeactivateArticlePublisherForDemosResponse {
}
// @section Ad Experience
message DeactivateBrandAssociatedToDemosRequest {
  required SecurityContext security_context = 1;
  required int64 brand_id = 2;
}
// @section Ad Experience
message DeactivateBrandAssociatedToDemosResponse {
}
// @section Campaign
message DeactivateCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
}
// @section Campaign
message DeactivateCampaignResponse {
}
// @section Ad Experience
message DeactivateCreativeKPISupportedByDemosRequest {
  required SecurityContext security_context = 1;
  required int64 kpi_id = 2;
}
// @section Ad Experience
message DeactivateCreativeKPISupportedByDemosResponse {
}
// @section Campaign
message DeactivateCreativeRequest {
  required SecurityContext security_context = 1;
  required int64 creative_id = 2;
}
// @section Campaign
message DeactivateCreativeResponse {
}
// @section Audience Custom
message DeactivateCustomAudienceTemplateRequest {
  required SecurityContext security_context = 1;
  required int64 custom_audience_template_id = 2;
}
// @section Audience Custom
message DeactivateCustomAudienceTemplateResponse {
  required int64 custom_audience_template_id = 1;
}
// @section Ad Experience
message DeactivateDemoConfigurationForTenantRequest {
  required SecurityContext security_context = 1;
  required uint64 tenant_id = 2;
  required int64 demo_configuration_id = 3;
}
// @section Ad Experience
message DeactivateDemoConfigurationForTenantResponse {
}
// @section Ad Experience
message DeactivateDemoIABCategoryRequest {
  required SecurityContext security_context = 1;
  required int64 category_id = 2;
}
// @section Ad Experience
message DeactivateDemoIABCategoryResponse {
}
// @section Advertiser
message DeactivateFeatureForSeatRequest {
  required SecurityContext security_context = 1;
  required int64 seat_id = 2;
  required SeatFeature seat_feature = 3;
}
// @section Advertiser
message DeactivateFeatureForSeatResponse {
}
// @section Finance
message DeactivateInvoiceEmailNotificationForProfileRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
}
// @section Finance
message DeactivateInvoiceEmailNotificationForProfileResponse {
}
// @section Campaign
message DeactivateLineItemRequest {
  required SecurityContext security_context = 1;
  required int64 line_item_id = 2;
}
// @section Campaign
message DeactivateLineItemResponse {
}
// @section Ad Experience
message DeactivateMarketSupportedByDemoRequest {
  required SecurityContext security_context = 1;
  required int64 market_id = 2;
}
// @section Ad Experience
message DeactivateMarketSupportedByDemoResponse {
}
// @section Mrg Contract
message DeactivateMrgContractRequest {
  required SecurityContext security_context = 1;
  required string mrg_contract_uuid = 2;
}
// @section Mrg Contract
message DeactivateMrgContractResponse {
}
// @section Inventory
message DeactivatePlacementsRequest {
  required SecurityContext security_context = 1;
  repeated int64 placement_ids = 2;
}
// @section Inventory
message DeactivatePlacementsResponse {
}
// @section Account
message DeactivateProfileRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
}
// @section Account
message DeactivateProfileResponse {
}
// @section Campaign
message DeactivatePublisherDirectSalesCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
}
// @section Campaign
message DeactivatePublisherDirectSalesCampaignResponse {
}
// @section Campaign
message DeactivatePublisherDirectSalesLineItemRequest {
  required SecurityContext security_context = 1;
  required int64 line_item_id = 2;
}
// @section Campaign
message DeactivatePublisherDirectSalesLineItemResponse {
}
// @section Campaign
message DeactivatePublisherDirectSalesTagRequest {
  required SecurityContext security_context = 1;
  required int64 tag_id = 2;
}
// @section Campaign
message DeactivatePublisherDirectSalesTagResponse {
}
// @section Inventory
message DeactivateSitesForPublisherRequest {
  required SecurityContext security_context = 1;
  repeated string site_domains = 2;
  required int64 publisher_id = 3;
}
// @section Inventory
message DeactivateSitesForPublisherResponse {
}
// @section Ad Experience
message DeactivateVerticalSupportedByDemosRequest {
  required SecurityContext security_context = 1;
  required int64 vertical_id = 2;
}
// @section Ad Experience
message DeactivateVerticalSupportedByDemosResponse {
}
// @section Advertiser
message DefaultPixelCreatedEvent {
  required SecurityContext security_context = 1;
  required int64 buyer_pixel_id = 2;
  required int64 buyer_seat_id = 3;
  required int64 advertiser_id = 4;
}
// @section Account
message DeleteAdvertiserFromSalesforceAnonymouslyRequest {
  required string advertiser_salesforce_id = 1;
}
// @section Account
message DeleteAdvertiserFromSalesforceAnonymouslyResponse {
}
// @section Advertiser
message DeleteAdvertiserRequest {
  required SecurityContext security_context = 1;
  required int64 advertiser_id = 2;
}
// @section Advertiser
message DeleteAdvertiserResponse {
}
// @section Advertiser
message DeleteAgencyRequest {
  required SecurityContext security_context = 1;
  required int64 agency_id = 2;
}
// @section Advertiser
message DeleteAgencyResponse {
}
// @section Campaign
message DeleteCampaignDraftRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
}
// @section Campaign
message DeleteCampaignDraftResponse {
}
// @section Campaign Support
message DeleteCampaignSupportRequestRequest {
  required SecurityContext security_context = 1;
  required int64 support_request_id = 2;
  required int64 profile_id = 3;
}
// @section Campaign Support
message DeleteCampaignSupportRequestResponse {
}
// @section Audience Custom
message DeleteCustomAudienceTemplateRequest {
  required SecurityContext security_context = 1;
  required int64 custom_audience_template_id = 2;
}
// @section Audience Custom
message DeleteCustomAudienceTemplateResponse {
  required int64 custom_audience_template_id = 1;
}
// @section Reporting
message DeleteDatamartRequest {
  required SecurityContext security_context = 1;
  required int64 datamart_id = 2;
}
// @section Reporting
message DeleteDatamartResponse {
}
// @section Reporting
message DeleteExternalApiTokenRequest {
  required SecurityContext security_context = 1;
  required int64 external_api_token_id = 2;
}
// @section Reporting
message DeleteExternalApiTokenResponse {
}
// @section Brand Safety
message DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest {
  required SecurityContext security_context = 1;
  // buyer_seat_id refers to a seat persisted in teads_connect.seat
  required int64 buyer_seat_id = 2;
  repeated string segment_codes = 3;
}
// @section Brand Safety
message DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse {
}
// @section Mrg Contract
message DeleteMrgContractRequest {
  required SecurityContext security_context = 1;
  required string mrg_contract_uuid = 2;
}
// @section Mrg Contract
message DeleteMrgContractResponse {
}
// @section Inventory
message DeletePackForBuyerRequest {
  required SecurityContext security_context = 1;
  required int64 buyer_id = 2;
  required int64 pack_id = 3;
}
// @section Inventory
message DeletePackForBuyerResponse {
}
// @section Inventory
message DeletePackRequest {
  required SecurityContext security_context = 1;
  required int64 pack_id = 2;
}
// @section Inventory
message DeletePackResponse {
}
// @section Inventory
message DeletePreviousPlacementsForAssistedPacksAnonymouslyRequest {
  optional google.protobuf.Timestamp created_before = 1;
}
// @section Inventory
message DeletePreviousPlacementsForAssistedPacksAnonymouslyResponse {
}
// @section Campaign
message DeletePublisherDirectSalesCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
}
// @section Campaign
message DeletePublisherDirectSalesCampaignResponse {
}
// @section Campaign
message DeletePublisherDirectSalesCreativeRequest {
  required SecurityContext security_context = 1;
  required int64 creative_id = 2;
}
// @section Campaign
message DeletePublisherDirectSalesCreativeResponse {
}
// @section Campaign
message DeletePublisherDirectSalesLineItemRequest {
  required SecurityContext security_context = 1;
  required int64 line_item_id = 2;
}
// @section Campaign
message DeletePublisherDirectSalesLineItemResponse {
}
// @section Reachcast
message DeleteReachcastBookingRequest {
  required SecurityContext security_context = 1;
  required int64 booking_id = 2;
}
// @section Reachcast
message DeleteReachcastBookingResponse {
}
// @section Reachcast
message DeleteReachcastLivePlannerCacheAnonymouslyRequest {
}
// @section Reachcast
message DeleteReachcastLivePlannerCacheAnonymouslyResponse {
}
// @section Ab Testing
message DeleteReadyAbTestRequest {
  required SecurityContext security_context = 1;
  required int64 ab_test_id = 2;
}
// @section Ab Testing
message DeleteReadyAbTestResponse {
}
// @section Retail Media
message DeleteRetailerError {
  repeated Error errors = 1;
  message Error {
    oneof error_type {
      IdDoesNotExist retailer_id_does_not_exist = 1;
      RetailerInUse retailer_in_use = 2;
    }
  }
  message IdDoesNotExist {
    required string reason = 1;
  }
  message RetailerInUse {
    required string reason = 1;
  }
}
// @section Retail Media
message DeleteRetailerRequest {
  required SecurityContext security_context = 1;
  required int64 retailer_id = 2;
}
// @section Retail Media
message DeleteRetailerResponse {
}
// @section Retail Media
message DeleteRetailerSmartlinkConfigurationError {
  repeated Error errors = 1;
  message ConfigurationIdNotFound {
    required string reason = 1;
  }
  message Error {
    oneof error_type {
      ConfigurationIdNotFound configuration_id_not_found = 1;
    }
  }
}
// @section Retail Media
message DeleteRetailerSmartlinkConfigurationRequest {
  required SecurityContext security_context = 1;
  required int64 smartlink_configuration_id = 2;
}
// @section Retail Media
message DeleteRetailerSmartlinkConfigurationResponse {
}
// @section Traffic
message DeleteWhitelistedAppBundleIdRequest {
  required SecurityContext security_context = 1;
  required int64 whitelisted_app_bundle_id_id = 2;
}
// @section Traffic
message DeleteWhitelistedAppBundleIdResponse {
}
// @section Traffic
message DeleteWhitelistedDomainRequest {
  required SecurityContext security_context = 1;
  required int64 whitelisted_domain_id = 2;
}
// @section Traffic
message DeleteWhitelistedDomainResponse {
}
// @section Traffic
message DeleteWhitelistedIPRangesRequest {
  required SecurityContext security_context = 1;
  required int64 whitelisted_ip_ranges_id = 2;
}
// @section Traffic
message DeleteWhitelistedIPRangesResponse {
}
// @section Campaign
message DeliverNormallyForCampaignOnWebsiteRequest {
  required SecurityContext security_context = 1;
  required int64 website_id = 2;
  required int64 campaign_id = 3;
}
// @section Campaign
message DeliverNormallyForCampaignOnWebsiteResponse {
}
// @section Campaign
message DeliverNormallyForInsertionOnWebsiteRequest {
  required SecurityContext security_context = 1;
  required WebSiteId website_id = 2;
  required InsertionId insertion_id = 3;
  message InsertionId {
    required int64 value = 1;
  }
  message WebSiteId {
    required int64 value = 1;
  }
}
// @section Campaign
message DeliverNormallyForInsertionOnWebsiteResponse {
}
// @section Ab Testing
message DeployAbTestRequest {
  required SecurityContext security_context = 1;
  required int64 ab_test_id = 2;
  required int32 population_id = 3;
  required string title = 4; // this field is used by sumo logic, which parse this call log and then send notification to #release slack channel
}
// @section Ab Testing
message DeployAbTestResponse {
}
// @section Campaign
message DisableAdCollisionFlagForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
}
// @section Campaign
message DisableAdCollisionFlagForCampaignResponse {
}
// @section Finance
message DisableAutoInvoicingForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
}
// @section Finance
message DisableAutoInvoicingForCampaignResponse {
}
// @section Reporting
message DisableAutoReportRequest {
  required SecurityContext security_context = 1;
  required int64 autoreport_id = 2;
}
// @section Reporting
message DisableAutoReportResponse {
}
// @section Traffic
message DisableBlacklistedDomainRequest {
  required SecurityContext security_context = 1;
  required int64 blacklisted_domain_id = 2;
}
// @section Traffic
message DisableBlacklistedDomainResponse {
}
// @section Advertiser
message DisableBuyerSeatRequest {
  required SecurityContext security_context = 1;
  required int64 seat_id = 2;
}
// @section Advertiser
message DisableBuyerSeatResponse {
}
// @section Campaign
message DisableGuaranteedFlagForLineItemRequest {
  required SecurityContext security_context = 1;
  required int64 line_item_id = 2;
}
// @section Campaign
message DisableGuaranteedFlagForLineItemResponse {
}
// @section Inventory
message DisableHeaderBiddingAutoSizeFlagForPlacementRequest {
  required SecurityContext security_context = 1;
  required int64 placement_id = 2;
}
// @section Inventory
message DisableHeaderBiddingAutoSizeFlagForPlacementResponse {
}
// @section Inventory
message DisableStrategicFlagForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Inventory
message DisableStrategicFlagForPublisherResponse {
}
// @section Users Targeting
message DisallowLookalikeSegmentForSeatError {
  repeated Error errors = 1;
  message Error {
    oneof error_type {
      SharedSegmentNotFound shared_segment_not_found = 1;
      InternalFailure internal_failure = 2;
      LookalikeNotFoundForProvidedSeed lookalike_not_found_for_provided_seed = 3;
    }
  }
  message InternalFailure {
    required string reason = 1;
  }
  message LookalikeNotFoundForProvidedSeed {
    required string reason = 1;
  }
  message SharedSegmentNotFound {
    required string reason = 1;
  }
}
// @section Users Targeting
message DisallowLookalikeSegmentForSeatRequest {
  required SecurityContext security_context = 1;
  required int64 buyer_seat_id = 2;
  required LookalikeSeed lookalike_seed = 3;
  message LookalikeSeed {
    required UsersTargetingLookalikeSeedProvider seed_provider = 1;
    required string seed_segment_id_for_provider = 2;
    // Represents countries in ISO-2 format
    repeated string countries_for_seed = 3;
  }
}
// @section Users Targeting
message DisallowLookalikeSegmentForSeatResponse {
}
// @section Users Targeting
message DisallowRemarketingSegmentForSeatError {
  repeated Error errors = 1;
  message Error {
    oneof error_type {
      NoSeatFound no_seat_found = 1;
      NoSegmentFound no_segment_found = 2;
      InternalFailure internal_failure = 3;
    }
  }
  message InternalFailure {
    required string reason = 1;
  }
  message NoSeatFound {
    required string reason = 1;
  }
  message NoSegmentFound {
    required string reason = 1;
  }
}
// @section Users Targeting
message DisallowRemarketingSegmentForSeatRequest {
  required SecurityContext security_context = 1;
  // buyer_seat_id refers to a seat persisted in teads_connect.seat
  required int64 buyer_seat_id = 2;
  required int64 segment_id = 3;
}
// @section Users Targeting
message DisallowRemarketingSegmentForSeatResponse {
}
// @section Campaign
message DissociateLineItemToAbTestRequest {
  required SecurityContext security_context = 1;
  required int64 line_item_id = 2;
  required int64 abtest_id = 3;
  required int64 population_id = 4;
}
// @section Campaign
message DissociateLineItemToAbTestResponse {
}
// @section Advertiser
message DomainsOfPixelsUpdatedEvent {
  repeated PixelWebsiteDomainWithAdvertiser pixel_website_domains_with_advertiser = 1;
  message PixelWebsiteDomainWithAdvertiser {
    required int64 buyer_pixel_id = 1;
    required string domain = 2;
    required google.protobuf.Timestamp last_activity_date = 3;
  }
}
// @section Campaign
message EnableAdCollisionFlagForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
}
// @section Campaign
message EnableAdCollisionFlagForCampaignResponse {
}
// @section Finance
message EnableAutoInvoicingForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
}
// @section Finance
message EnableAutoInvoicingForCampaignResponse {
}
// @section Advertiser
message EnableBuyerSeatRequest {
  required SecurityContext security_context = 1;
  required int64 seat_id = 2;
}
// @section Advertiser
message EnableBuyerSeatResponse {
}
// @section Campaign
message EnableGuaranteedFlagForLineItemRequest {
  required SecurityContext security_context = 1;
  required int64 line_item_id = 2;
}
// @section Campaign
message EnableGuaranteedFlagForLineItemResponse {
}
// @section Inventory
message EnableHeaderBiddingAutoSizeFlagForPlacementRequest {
  required SecurityContext security_context = 1;
  required int64 placement_id = 2;
}
// @section Inventory
message EnableHeaderBiddingAutoSizeFlagForPlacementResponse {
}
// @section Inventory
message EnableStrategicFlagForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Inventory
message EnableStrategicFlagForPublisherResponse {
}
// @section Advertiser
message EnsureVisitsConversionExistsForBuyerPixelAndDomainRequest {
  required SecurityContext security_context = 1;
  required string url_mapping = 2;
  required int64 buyer_pixel_id = 3;
  required int64 advertiser_id = 4;
  required google.protobuf.Timestamp last_activity_date = 5;
}
// @section Advertiser
message EnsureVisitsConversionExistsForBuyerPixelAndDomainResponse {
}
// @section Reporting
message ExpireTemplateSchedulingAfterDownloadInactivityForSeatRequest {
  required SecurityContext security_context = 1;
  required int64 seat_id = 2;
  required int64 template_id = 3;
  required string filename = 4;
}
// @section Reporting
message ExpireTemplateSchedulingAfterDownloadInactivityForSeatResponse {
  required string report_expiring_url = 1;
}
// @section Advertiser
message ExportEnabledConversionApiTokensToS3AnonymouslyRequest {
}
// @section Advertiser
message ExportEnabledConversionApiTokensToS3AnonymouslyResponse {
}
// @section Campaign
message ExportTrafficAcquisitionLineItemsByOptimizedBuyerPixelDomainAnonymouslyRequest {
}
// @section Campaign
message ExportTrafficAcquisitionLineItemsByOptimizedBuyerPixelDomainAnonymouslyResponse {
}
// @section Account
message FindActiveAccountsForProfileAnonymouslyRequest {
  required int64 profile_id = 2;
}
// @section Account
message FindActiveAccountsForProfileAnonymouslyResponse {
  // Sorted so that the first entry will be the "default" one
  repeated Account accounts = 1;
  message Account {
    required AccountId account_id = 1;
    required AccountType account_type = 2;
    required EntityType entity_type = 3;
  }
  message AccountId {
    required int64 profile_id = 1;
    required int64 entity_id = 2;
  }
}
// @section Account
message FindActiveAccountsForProfileRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
}
// @section Account
message FindActiveAccountsForProfileResponse {
  repeated Account accounts = 1;
  message Account {
    required AccountId account_id = 1;
    required string name = 2;
    required AccountType account_type = 3;
    optional string parent_name = 4;
  }
  message AccountId {
    required int64 profile_id = 1;
    required int64 entity_id = 2;
  }
}
// @section Programmatic
message FindActiveConnectionsForPreAndPostBidFilteringAnalysisRequest {
  required SecurityContext security_context = 1;
  required google.protobuf.Timestamp start_date = 2; // Starting date of the requested period
  required google.protobuf.Timestamp end_date = 3; // Ending date of the requested period
}
// @section Programmatic
message FindActiveConnectionsForPreAndPostBidFilteringAnalysisResponse {
  repeated Connection connections = 1;
  message Connection {
    required int64 id = 1;
    required string name = 2;
  }
}
// @section Inventory
message FindActivePortfolioItemsForPlacementRequest {
  required SecurityContext security_context = 1;
  required int64 placement_id = 2;
}
// @section Inventory
message FindActivePortfolioItemsForPlacementResponse {
  repeated PortfolioItem portfolio_items = 1;
  message PortfolioItem {
    required int64 id = 1;
    required string name = 2;
    required int64 position_id = 3;
    required int64 size_id = 4;
    required int64 creative_type_id = 5;
    required bool is_web_desktop = 6;
    required bool is_web_mobile = 7;
    // If the portfolio item can deliver in AMP (Accelerated Mobile Pages) mobile environment
    required bool is_amp_mobile = 8;
    // If the portfolio item can deliver in FIA (Facebook Instant Articles) mobile environment
    required bool is_fia_mobile = 9;
    required bool is_sdk_mobile = 10;
    required bool is_third_party_web = 11;
  }
}
// @section Inventory
message FindActivePublishersForOfficeRequest {
  required SecurityContext security_context = 1;
  required int64 office_id = 2;
}
// @section Inventory
message FindActivePublishersForOfficeResponse {
  repeated Publisher publishers = 1;
  message Publisher {
    required int64 id = 1;
    required string name = 2;
    required int64 parent_id = 3;
    required string parent_name = 4;
  }
}
// @section Inventory
message FindActivePublishersWithContractTypeForAccountRequest {
  required SecurityContext security_context = 1;
  required AccountId account_id = 2;
  message AccountId {
    required int64 entity_id = 1;
    required int64 profile_id = 2;
  }
}
// @section Inventory
message FindActivePublishersWithContractTypeForAccountResponse {
  repeated PublishersWithContractType publishers = 1;
  message PublishersWithContractType {
    required int64 id = 1;
    required PublisherContractType contract_type = 2;
  }
}
// @section Account
message FindActivePublishersWithLicensesForAccountRequest {
  required SecurityContext security_context = 1;
  required AccountId account_id = 2;
  message AccountId {
    required int64 entity_id = 1;
    required int64 profile_id = 2;
  }
}
// @section Account
message FindActivePublishersWithLicensesForAccountResponse {
  repeated PublishersWithLicenses publishers = 1;
  message PublishersWithLicenses {
    required int64 id = 1;
    required string name = 2;
    required int64 office_id = 3;
    required string office_name = 4;
    required bool is_licensable = 5;
    repeated PublisherLicenseType licenses = 6;
  }
}
// @section Advertiser
message FindAdvertiserEventsForPixelRequest {
  required SecurityContext security_context = 1;
  required int64 pixel_id = 2;
}
// @section Advertiser
message FindAdvertiserEventsForPixelResponse {
  repeated AdvertiserEvent advertiser_events = 1;
  message AdvertiserEvent {
    required string snippet_name = 1;
    required string display_name = 2;
    optional google.protobuf.Timestamp last_activity_date = 3;
    repeated MappedUrl mapped_urls = 4;
    repeated DailyActivity recent_daily_activities = 5;
  }
  message DailyActivity {
    required google.protobuf.Timestamp day = 1;
    required int64 number_of_conversions = 2;
  }
  message MappedUrl {
    required int64 id = 1;
    required string url = 2;
    optional string conversion_name = 3;
    optional UrlMappingMatchType match_type = 4;
    required bool is_trusted = 5;
  }
}
// @section Advertiser
message FindAdvertiserEventsForPixelsRequest {
  required SecurityContext security_context = 1;
  repeated int64 pixel_ids = 2;
}
// @section Advertiser
message FindAdvertiserEventsForPixelsResponse {
  map<int64, AdvertiserEventsList> advertiser_events_by_pixel = 1;
  message AdvertiserEvent {
    required string snippet_name = 1;
    required string display_name = 2;
    optional google.protobuf.Timestamp last_activity_date = 3;
    required bool has_trusted_urls = 4;
  }
  message AdvertiserEventsList {
    repeated AdvertiserEvent events = 1;
  }
}
// @section Account
message FindAdvertiserForEntityRequest {
  required SecurityContext security_context = 1;
  required int64 entity_id = 2;
}
// @section Account
message FindAdvertiserForEntityResponse {
  required int64 advertiser_id = 1;
}
// @section Advertiser
message FindAdvertisersAndPixelsForAgencyRequest {
  required SecurityContext security_context = 1;
  required int64 buyer_seat_id = 2;
}
// @section Advertiser
message FindAdvertisersAndPixelsForAgencyResponse {
  repeated Advertiser advertisers = 1;
  message Advertiser {
    required int64 id = 1;
    required string name = 2;
    repeated BuyerPixel buyer_pixels = 3;
  }
  message BuyerPixel {
    required int64 id = 1;
    required string name = 2;
  }
}
// @section Advertiser
message FindAdvertisersForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Advertiser
message FindAdvertisersForPublisherResponse {
  repeated Advertiser advertisers = 1;
  message Advertiser {
    required int64 id = 1;
    required string name = 2;
  }
}
// @section Advertiser
message FindAdvertisersWhereTrackingIsBlockedAnonymouslyRequest {
  reserved 1;
}
// @section Advertiser
message FindAdvertisersWhereTrackingIsBlockedAnonymouslyResponse {
  repeated int64 advertiser_ids = 1;
  repeated int64 buyer_pixel_ids = 2;
  // At least eTLD+1
  repeated string website_domains = 3;
}
// @section Campaign
message FindAdvertisingSolutionForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
}
// @section Campaign
message FindAdvertisingSolutionForCampaignResponse {
  optional AdvertisingSolutionId advertising_solution_id = 1;
}
// @section Advertiser
message FindAgenciesForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Advertiser
message FindAgenciesForPublisherResponse {
  repeated Agency agencies = 1;
  message Agency {
    required int64 id = 1;
    required string name = 2;
  }
}
// @section Account
message FindAgencyForEntityRequest {
  required SecurityContext security_context = 1;
  required int64 entity_id = 2;
}
// @section Account
message FindAgencyForEntityResponse {
  required int64 agency_id = 1;
}
// @section Publisher Statistics
message FindAllDirectSalesCampaignsStatsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  // The 3-letter currency code defined in ISO 4217
  required string currency = 3;
}
// @section Publisher Statistics
message FindAllDirectSalesCampaignsStatsForPublisherResponse {
  repeated Statistic stats = 1;
  message Statistic {
    required int64 campaing_id = 1;
    required int64 line_item_id = 2;
    required int64 impressions = 3;
    required int64 starts = 4;
    required int64 completes = 5;
    required int64 clicks = 6;
    required double earnings = 7;
    required int64 current_volume = 8;
    required int64 last_24_hours_volume = 9;
  }
}
// @section Inventory
message FindAppsForOfficesRequest {
  required SecurityContext security_context = 1;
  repeated int64 office_ids = 2;
  required Page page = 3;
  // Search on Publisher name or id
  optional string search = 4;
  // Default to active
  optional VettedInventoryStatus status = 5;
}
// @section Inventory
message FindAppsForOfficesResponse {
  repeated App apps = 1;
  required Pagination page = 2;
  message App {
    optional string name = 1;
    required string store_bundle_id = 2;
    optional string store_bundle_url = 3;
    optional string technical_bundle_id = 4;
    required AppPlatform platform = 5;
    optional string iab_category_code = 6;
    optional InventoryTier inventory_tier = 7;
    optional bool is_mobile = 8 [default = false];
    optional bool is_ctv = 9 [default = false];
    optional bool is_strategic = 10 [default = false];
    optional bool is_brandsafety_whitelisted = 11 [default = false];
    required InventoryStatus inventory_status = 12;
    repeated Publisher publishers = 13;
    optional ReviewerProfile reviewer = 14;
    optional string reviewer_comment = 15;
    optional ReviewerProfile followup_reviewer = 16;
    optional string followup_reviewer_comment = 17;
  }
  message Publisher {
    required int64 id = 1;
    optional string name = 2;
    required VettedPublisherInventoryStatus status = 3;
  }
  message ReviewerProfile {
    required int64 id = 1;
    optional string firstname = 2;
    optional string lastname = 3;
    required string email = 4;
  }
}
// @section Inventory
message FindAppsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Inventory
message FindAppsForPublisherResponse {
  repeated App apps = 1;
  message App {
    optional string name = 1;
    required string store_bundle_id = 2;
    optional string store_bundle_url = 3;
    optional string technical_bundle_id = 4;
    required AppPlatform platform = 5;
    optional string iab_category_code = 6;
    optional InventoryTier tier = 7;
    optional bool is_mobile = 8 [default = false];
    optional bool is_ctv = 9 [default = false];
    optional bool is_strategic = 10 [default = false];
    optional bool is_brandsafety_whitelisted = 11 [default = false];
    required InventoryStatus status = 12;
    repeated Publisher other_publishers = 13;
  }
  message Publisher {
    required int64 id = 1;
    optional string name = 2;
  }
}
// @section Finance
message FindAuthorizedOfficesInFinanceAutoBillingSheetForUserRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
  required int64 entity_id = 3;
}
// @section Finance
message FindAuthorizedOfficesInFinanceAutoBillingSheetForUserResponse {
  repeated Office offices = 1;
  message Office {
    required int64 office_id = 1;
    required string office_name = 2;
  }
}
// @section Finance
message FindAuthorizedOfficesInFinanceLegacyReportingForUserRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
  required int64 entity_id = 3;
}
// @section Finance
message FindAuthorizedOfficesInFinanceLegacyReportingForUserResponse {
  repeated Office offices = 1;
  required bool contains_all_offices = 2;
  message Office {
    required int64 office_id = 1;
    required string office_name = 2;
  }
}
// @section Finance
message FindAuthorizedOfficesInFinancePublisherBillableForUserRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
  required int64 entity_id = 3;
}
// @section Finance
message FindAuthorizedOfficesInFinancePublisherBillableForUserResponse {
  repeated Office offices = 1;
  required bool contains_all_offices = 2;
  message Office {
    required int64 office_id = 1;
    required string office_name = 2;
  }
}
// @section Finance
message FindAuthorizedOfficesInFinancePublisherBillableInvoicingForUserRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
  required int64 entity_id = 3;
}
// @section Finance
message FindAuthorizedOfficesInFinancePublisherBillableInvoicingForUserResponse {
  repeated Office offices = 1;
  message Office {
    required int64 office_id = 1;
    required string office_name = 2;
  }
}
// @section Finance
message FindAuthorizedOfficesInFinancePublisherBillableValidationForUserRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
  required int64 entity_id = 3;
}
// @section Finance
message FindAuthorizedOfficesInFinancePublisherBillableValidationForUserResponse {
  repeated Office offices = 1;
  message Office {
    required int64 office_id = 1;
    required string office_name = 2;
  }
}
// @section Finance
message FindAuthorizedOfficesInFinanceReportingForUserRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
  required int64 entity_id = 3;
}
// @section Finance
message FindAuthorizedOfficesInFinanceReportingForUserResponse {
  repeated Office offices = 1;
  message Office {
    required int64 office_id = 1;
    required string office_name = 2;
  }
}
// @section Account
message FindAvailableApplicationsForAccountRequest {
  required SecurityContext security_context = 1;
  required AccountId account_id = 2;
  message AccountId {
    required int64 entity_id = 1;
    required int64 profile_id = 2;
  }
}
// @section Account
message FindAvailableApplicationsForAccountResponse {
  repeated Application applications = 1;
  enum Application {
    APPLICATION_TFP = 1;
    APPLICATION_MANAGER = 2;
    APPLICATION_TAM = 3;
    APPLICATION_STUDIO = 4;
    APPLICATION_CONSOLE = 5;
  }
}
// @section Inventory
message FindAvailableFeeCurrenciesForDirectSalesPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Inventory
message FindAvailableFeeCurrenciesForDirectSalesPublisherResponse {
  repeated string fee_currencies = 1; // The 3-letter currency code defined in ISO 4217
}
// @section Publisher Statistics
message FindAvailableFinanceStatsFiltersForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  required google.protobuf.Timestamp start_date = 3;
  required google.protobuf.Timestamp end_date = 4;
}
// @section Publisher Statistics
message FindAvailableFinanceStatsFiltersForPublisherResponse {
  repeated BuyerType buyer_types = 1;
  repeated DeliveryContext delivery_contexts = 2;
}
// @section Advertiser
message FindBuyerPixelsForAdvertiserRequest {
  required SecurityContext security_context = 1;
  required int64 advertiser_id = 2;
  // Search on Name and Id
  optional string search = 3;
}
// @section Advertiser
message FindBuyerPixelsForAdvertiserResponse {
  repeated BuyerPixelsByEntity buyer_pixels_by_entity = 2;
  message BuyerPixel {
    required int64 id = 1;
    required string name = 2;
    optional google.protobuf.Timestamp last_activity_date = 3;
  }
  message BuyerPixelsByEntity {
    required int64 entity_id = 1;
    required string seat_name = 2;
    repeated BuyerPixel buyer_pixels = 3;
  }
  reserved 1;
}
// @section Advertiser
message FindBuyerSeatForEntityRequest {
  required SecurityContext security_context = 1;
  required int64 entity_id = 2;
}
// @section Advertiser
message FindBuyerSeatForEntityResponse {
  required int64 seat_id = 1;
  required string name = 2;
  required double fee = 3;
  required BuyerSeatStatus status = 4;
  optional string salesforce_contract_id = 5;
  required BuyerServiceLevel service_level = 8;
  optional string salesforce_seat_id = 10;
  repeated SeatFeature activated_seat_settings = 18;
  required bool can_run_internal_test_campaign = 19;
  reserved 6, 7, 9, 11, 12, 13, 14, 15, 16, 17;
}
// @section Advertiser
message FindBuyerSeatForSalesforceSeatRequest {
  required SecurityContext security_context = 1;
  required string salesforce_seat_id = 2;
}
// @section Advertiser
message FindBuyerSeatForSalesforceSeatResponse {
  required int64 seat_id = 1;
  required int64 entity_id = 2;
  required int64 office_id = 3;
  required string name = 4;
  required BuyerSeatType type = 5;
  required BuyerSeatStatus status = 6;
  required BuyerServiceLevel service_level = 7;
  required double fee = 8;
  optional string salesforce_contract_id = 9;
  optional int32 salesforce_contract_version = 10;
}
// @section Campaign
message FindBuyerSeatIdForCampaignAnonymouslyRequest {
  required int64 campaign_id = 1;
}
// @section Campaign
message FindBuyerSeatIdForCampaignAnonymouslyResponse {
  required int64 buyer_seat_id = 1;
}
// @section Advertiser
message FindBuyerSeatPublicInfoForEntityRequest {
  required SecurityContext security_context = 1;
  required int64 entity_id = 2;
}
// @section Advertiser
message FindBuyerSeatPublicInfoForEntityResponse {
  required int64 seat_id = 1;
  required string office_name = 2;
  required string seat_name = 3;
  required BuyerSeatType seat_type = 4;
  optional int64 advertiser_id = 5;
}
// @section Advertiser
message FindBuyerSeatsForEntitiesRequest {
  required SecurityContext security_context = 1;
  repeated int64 entity_ids = 2;
}
// @section Advertiser
message FindBuyerSeatsForEntitiesResponse {
  repeated BuyerSeat buyer_seats = 1;
  message BuyerSeat {
    required int64 seat_id = 1;
    required int64 entity_id = 2;
    required string name = 3;
  }
}
// @section Advertiser
message FindBuyerSeatsWithWhomPixelIsSharedRequest {
  required SecurityContext security_context = 1;
  required int64 pixel_id = 2;
}
// @section Advertiser
message FindBuyerSeatsWithWhomPixelIsSharedResponse {
  repeated BuyerSeat buyer_seats = 1;
  message BuyerSeat {
    required int64 id = 1;
    required string name = 2;
    required BuyerSeatType type = 3;
    optional string office_name = 4;
    required bool is_sharing_revocable = 6;
    required bool is_sharing_read_only = 7;
    reserved 5;
  }
}
// @section Account
message FindBuyersApiTokensForProfileRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
}
// @section Account
message FindBuyersApiTokensForProfileResponse {
  repeated BuyerApiToken api_tokens = 1;
  message BuyerApiToken {
    required int64 api_token_id = 1;
    required string token_prefix = 2;
    optional string name = 3;
    optional bool status = 4;
    required int64 owner_profile_id = 5;
    required int64 owner_entity_id = 6;
    required google.protobuf.Timestamp created_at = 8;
    optional google.protobuf.Timestamp updated_at = 9;
  }
}
// @section Account
message FindBuyersForEntitiesRequest {
  required SecurityContext security_context = 1;
  repeated int64 entity_ids = 2;
}
// @section Account
message FindBuyersForEntitiesResponse {
  map<int64, int64> advertiser_by_entity = 1;
  map<int64, int64> agency_by_entity = 2;
}
// @section Finance
message FindCallForInvoicesForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Finance
message FindCallForInvoicesForPublisherResponse {
  repeated CallForInvoice call_for_invoices = 1;
  message CallForInvoice {
    required double amount_without_vat = 1;
    required double amount_payable = 2;
    // The 3-letter currency code defined in ISO 4217
    required string currency = 3;
    required int64 office_id = 4;
    required PublisherInvoiceCategory category = 5;
    required YearMonth year_month = 6;
    oneof invoicing {
      PublisherInvoiceDeferredReason deferred_reason = 7;
      InvoiceDetail invoice_detail = 8;
    }
  }
  message InvoiceDetail {
    required int64 invoice_id = 1;
    required string invoice_number = 2;
    required PublisherInvoiceStatus invoice_status = 3;
    required google.protobuf.Timestamp status_updated_on = 4;
  }
  message YearMonth {
    required int32 month = 1;
    required int32 year = 2;
  }
}
// @section Campaign
message FindCampaignChangesForDayAnonymouslyRequest {
  // This field is the day for which we want to retrieve the audit entries.
  required google.protobuf.Timestamp day = 1;
}
// @section Campaign
message FindCampaignChangesForDayAnonymouslyResponse {
  repeated Change changes = 1;
  message CampaignAttribute {
    required uint64 campaign_id = 1;
    required CampaignUpdatedAttribute updated_attribute = 2;
  }
  message Change {
    oneof attribute {
      CampaignAttribute campaign_attribute = 1;
      LineItemAttribute line_item_attribute = 2;
    }
    required Action action = 4;
    required google.protobuf.Timestamp timestamp = 5;
    optional int64 profile_id = 6;
    optional string comment = 7;
    oneof new_value {
      bool boolean_value = 8;
      int64 int_value = 9;
      double double_value = 10;
      string string_value = 11;
    }
    reserved 3;
  }
  message LineItemAttribute {
    optional uint64 campaign_id = 1;
    required uint64 line_item_id = 2;
    required LineItemUpdatedAttribute updated_attribute = 3;
  }
  enum Action {
    ACTION_CREATE = 0;
    ACTION_UPDATE = 1;
    ACTION_DELETE = 2;
  }
  enum CampaignUpdatedAttribute {
    CAMPAIGN_UPDATED_ATTRIBUTE_BUDGET = 0;
    CAMPAIGN_UPDATED_ATTRIBUTE_BUDGET_ADVERTISER = 1;
  }
  enum LineItemUpdatedAttribute {
    LINE_ITEM_UPDATED_ATTRIBUTE_BUDGET = 0;
    LINE_ITEM_UPDATED_ATTRIBUTE_PRICE = 1;
    LINE_ITEM_UPDATED_ATTRIBUTE_BUDGET_ADVERTISER = 2;
  }
}
// @section Campaign Support
message FindCampaignSupportRequestStatusChangesForDayAnonymouslyRequest {
  // This field is the day for which we want to retrieve the audit entries.
  required google.protobuf.Timestamp day = 1;
}
// @section Campaign Support
message FindCampaignSupportRequestStatusChangesForDayAnonymouslyResponse {
  repeated CampaignSupportRequestStatusChange status_changes = 1;
  message CampaignSupportRequestStatusChange {
    required uint64 support_request_id = 1;
    required uint64 campaign_id = 2;
    required CampaignSupportRequestStatus old_status = 3;
    required CampaignSupportRequestStatus new_status = 4;
    required CampaignSupportRequestSource source = 5;
    required google.protobuf.Timestamp date = 6;
    optional string comment = 7;
    optional uint64 profile_id = 8;
  }
}
// @section Campaign Support
message FindCampaignSupportRequestsForCampaignRequest {
  required SecurityContext security_context = 1;
  required uint64 campaign_id = 2;
}
// @section Campaign Support
message FindCampaignSupportRequestsForCampaignResponse {
  repeated CampaignSupportRequest support_requests = 1;
  message CampaignSupportRequest {
    required uint64 campaign_id = 1;
    required uint64 support_request_id = 2;
    required uint64 requester_profile_id = 3;
    required string description = 4;
    required CampaignSupportRequestStatus status = 5;
    required google.protobuf.Timestamp created_at = 6;
    optional google.protobuf.Timestamp status_updated_at = 7;
    required uint64 seat_id = 8;
    required RequesterProfile requester_profile = 9;
    required uint32 maximum_processing_duration_in_hours = 10;
  }
  message RequesterProfile {
    required uint64 id = 1;
    required string email = 2;
    optional string firstname = 3;
    optional string lastname = 4;
  }
}
// @section Campaign Support
message FindCampaignSupportRequestsForOfficeRequest {
  required SecurityContext security_context = 1;
  required uint64 office_id = 2;
  optional CampaignSupportRequestStatus status = 3;
}
// @section Campaign Support
message FindCampaignSupportRequestsForOfficeResponse {
  repeated CampaignSupportRequest support_requests = 1;
  message Campaign {
    required uint64 id = 1;
    required string name = 2;
  }
  message CampaignSupportRequest {
    required uint64 campaign_id = 1;
    required uint64 support_request_id = 2;
    required uint64 requester_profile_id = 3;
    required string description = 4;
    required CampaignSupportRequestStatus status = 5;
    required google.protobuf.Timestamp created_at = 6;
    optional google.protobuf.Timestamp status_updated_at = 7;
    required Campaign campaign = 8;
    required RequesterProfile requester_profile = 9;
  }
  message RequesterProfile {
    required uint64 id = 1;
    required string email = 2;
    optional string firstname = 3;
    optional string lastname = 4;
  }
}
// @section Campaign Support
message FindCampaignSupportRequestsForSeatRequest {
  required SecurityContext security_context = 1;
  required uint64 seat_id = 2;
}
// @section Campaign Support
message FindCampaignSupportRequestsForSeatResponse {
  repeated CampaignSupportRequest support_requests = 1;
  message Campaign {
    required uint64 id = 1;
    required string name = 2;
  }
  message CampaignSupportRequest {
    required uint64 campaign_id = 1;
    required uint64 support_request_id = 2;
    required uint64 requester_profile_id = 3;
    required string description = 4;
    required CampaignSupportRequestStatus status = 5;
    required google.protobuf.Timestamp created_at = 6;
    optional google.protobuf.Timestamp status_updated_at = 7;
    required Campaign campaign = 8;
    required RequesterProfile requester_profile = 9;
  }
  message RequesterProfile {
    required uint64 id = 1;
    required string email = 2;
    optional string firstname = 3;
    optional string lastname = 4;
  }
}
// @section Campaign
message FindCampaignsForSalesforceOpportunityAndProfileRequest {
  required SecurityContext security_context = 1;
  required string opportunity_id = 2;
  required CampaignObjective campaign_objective = 3;
  required int64 profile_id = 4;
  optional AdvertisingSolutionId advertising_solution_id = 5;
}
// @section Campaign
message FindCampaignsForSalesforceOpportunityAndProfileResponse {
  repeated CampaignInfo campaigns = 1;
  message CampaignInfo {
    required int64 campaign_id = 1;
    required string campaign_name = 2;
    optional int64 seat_id = 3;
    optional string entity_name = 4;
    required int64 office_id = 5;
    required string office_name = 6;
    repeated CampaignProfilePermission campaign_profile_permissions = 7;
    required double budget = 8;
    optional double free_budget = 9;
    required TimeInterval time_interval = 10;
    repeated InsertionOrderLine insertion_order_lines = 11;
    required bool is_created_by_salesforce = 12;
    optional bool is_moat_unsampled = 13;
  }
  message InsertionOrderLine {
    required int64 id = 1;
    required string name = 2;
    optional string salesforce_opportunity_line_item_id = 3;
    optional double budget = 4;
    optional double free_budget = 5;
    required TimeInterval time_interval = 6;
    optional InsertionOrderLineBillingModel billing_model = 7;
    optional double billing_model_rate = 8;
    optional string billing_event = 9;
    optional InsertionOrderLineAuctionType auction_type = 10;
    optional InsertionOrderLineCreativeTypeFamily creative_type_family = 11;
    optional bool is_guaranteed = 12;
  }
  message TimeInterval {
    required google.protobuf.Timestamp start_date = 1;
    required google.protobuf.Timestamp end_date = 2;
  }
  enum CampaignProfilePermission {
    CAMPAIGN_PROFILE_PERMISSION_VIEW = 1;
    CAMPAIGN_PROFILE_PERMISSION_MANAGE = 2;
  }
}
// @section Campaign
message FindCampaignsForSalesforceOpportunityRequest {
  required SecurityContext security_context = 1;
  required string opportunity_id = 2;
  required CampaignObjective campaign_objective = 3;
  optional AdvertisingSolutionId advertising_solution_id = 4;
}
// @section Campaign
message FindCampaignsForSalesforceOpportunityResponse {
  repeated CampaignInfo campaigns = 1;
  message CampaignInfo {
    required int64 campaign_id = 1;
    required string campaign_name = 2;
    optional int64 seat_id = 3;
    optional string entity_name = 4;
    required int64 office_id = 5;
    required string office_name = 6;
  }
}
// @section Finance
message FindCampaignsWithInvoiceRecipientsForBuyerSeatRequest {
  required SecurityContext security_context = 1;
  required int64 buyer_seat_id = 2;
  optional bool campaigns_without_invoice_recipients_only = 3;
  repeated int64 restricted_advertiser_ids = 4;
}
// @section Finance
message FindCampaignsWithInvoiceRecipientsForBuyerSeatResponse {
  repeated Campaign campaigns = 1;
  message Campaign {
    required int64 id = 1;
    required string name = 2;
    optional CampaignObjective objective = 3;
    optional google.protobuf.Timestamp start_date = 4;
    optional google.protobuf.Timestamp end_date = 5;
    optional InvoiceRecipient invoice_recipient = 6;
  }
  message InvoiceRecipient {
    required string invoice_recipient_id = 1;
    required string name = 2;
    required InvoiceRecipientStatus status = 3;
    optional string address_country_code = 4;
    optional string address_state_code = 5;
  }
  enum CampaignObjective {
    CAMPAIGN_OBJECTIVE_BRANDING = 0;
    CAMPAIGN_OBJECTIVE_TRAFFIC_ACQUISITION = 1;
    CAMPAIGN_OBJECTIVE_CONVERSIONS = 2;
  }
}
// @section Finance
message FindChangesPendingApprovalInPublisherPaymentSettingsForBillingOfficesRequest {
  required SecurityContext security_context = 1;
  repeated int64 billing_office_ids = 2;
  // if true, will return only pending changes if user
  // has manage permission for all offices
  // default to false
  optional bool for_approval = 3;
}
// @section Finance
message FindChangesPendingApprovalInPublisherPaymentSettingsForBillingOfficesResponse {
  repeated ChangesPendingApproval changes_pending_approval = 1;
  message ChangesPendingApproval {
    required int64 publisher_id = 1;
    required int64 billing_office_id = 2;
    // The id of mutations for a single request, can represent changes to several fields
    required string last_mutation_id = 3;
    required google.protobuf.Timestamp pending_since = 4;
    // The profile ids of the users who made the pending changes to payment settings
    repeated int64 author_ids = 5;
    required int64 publisher_office_id = 6;
  }
}
// @section Mrg Contract
message FindCommitmentPeriodsForMrgContractRequest {
  required SecurityContext security_context = 1;
  required string uuid = 2;
}
// @section Mrg Contract
message FindCommitmentPeriodsForMrgContractResponse {
  repeated CommitmentPeriod commitment_periods = 1;
  message CommitmentPeriod {
    required string uuid = 1;
    required google.protobuf.Timestamp start_date = 2;
    required google.protobuf.Timestamp end_date = 3;
  }
}
// @section Account
message FindConnectedPublisherIdsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Account
message FindConnectedPublisherIdsForPublisherResponse {
  repeated int64 connected_publisher_ids = 1;
}
// @section Advertiser
message FindConversionApiTokensForSeatRequest {
  required SecurityContext security_context = 1;
  required int64 buyer_seat_id = 2;
}
// @section Advertiser
message FindConversionApiTokensForSeatResponse {
  repeated ConversionApiToken tokens = 1;
  message ConversionApiToken {
    required string conversion_api_token = 1;
    required int64 conversion_api_token_id = 2;
    required google.protobuf.Timestamp created_at = 3;
  }
}
// @section Campaign
message FindConversionsEnabledForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
}
// @section Campaign
message FindConversionsEnabledForCampaignResponse {
  repeated Insertion insertions = 1;
  message Conversion {
    required int64 conversion_id = 1;
    required int64 lookback_view = 2;
    required int64 lookback_click = 3;
  }
  message Insertion {
    required int64 insertion_id = 1;
    repeated Conversion conversions = 2;
  }
}
// @section Advertiser
message FindConversionsForBuyerRequest {
  required SecurityContext security_context = 1;
  required int64 buyer_seat_id = 2;
  optional int64 advertiser_id = 3;
}
// @section Advertiser
message FindConversionsForBuyerResponse {
  repeated BuyerPixel pixels = 1;
  message BuyerPixel {
    required int64 buyer_pixel_id = 1;
    required string buyer_pixel_name = 2;
    optional google.protobuf.Timestamp last_activity_date = 3;
    repeated Conversion conversions = 4;
    required int64 advertiser_id = 5;
    required bool is_in_tracking_blocklist = 6;
    repeated string blocklisted_domains = 7;
  }
  message Conversion {
    required int64 id = 1;
    required string name = 2;
    required int64 advertiser_id = 3;
    required string advertiser_name = 4;
    required ConversionType type = 5;
    required int64 category = 6;
    optional string url_conversion_page = 7;
    optional google.protobuf.Timestamp last_activity_date = 8;
    repeated string urls = 9;
    optional google.protobuf.Timestamp created_at = 10;
    required Profile author_profile = 11;
    required bool automatically_created = 12;
    required bool is_advertiser_event = 13;
    optional int64 number_of_conversions = 14;
    optional int64 event_order = 15;
  }
  message Profile {
    required int64 id = 1;
    optional string first_name = 2;
    optional string last_name = 3;
  }
}
// @section Publisher Statistics
message FindCreativeStatsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 creative_id = 2;
  required int64 publisher_id = 3;
  required string timezone = 4;
  required google.protobuf.Timestamp start_date = 5;
  required google.protobuf.Timestamp end_date = 6;
  // The 3-letter currency code defined in ISO 4217
  required string currency = 7;
}
// @section Publisher Statistics
message FindCreativeStatsForPublisherResponse {
  repeated Statistic stats = 1;
  message Statistic {
    required google.protobuf.Timestamp time = 1;
    required TimeRange time_range = 2;
    required int64 campaign_id = 3;
    required int64 line_item_id = 4;
    required int64 creative_id = 5;
    required string device = 6;
    required int64 impressions = 7;
    required int64 starts = 8;
    required int64 completes = 9;
    required int64 clicks = 10;
    required double earnings = 11;
    required int64 current_volume = 12;
    optional string page_domain = 13;
    optional string app_bundle_id = 14;
    optional string app_platform = 15;
    optional string app_name = 16;
  }
}
// @section Campaign
message FindCreativesForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
}
// @section Campaign
message FindCreativesForCampaignResponse {
  repeated Creative creatives = 1;
  message Creative {
    required int64 id = 1;
    optional string name = 2;
    required CreativeStatus status = 3;
    optional string vast_url = 4;
  }
}
// @section Campaign Delivery
message FindDeliverableCampaignRulesUsingAudiencesAnonymouslyRequest {
  repeated int64 audience_ids = 1;
}
// @section Campaign Delivery
message FindDeliverableCampaignRulesUsingAudiencesAnonymouslyResponse {
  repeated int64 rule_ids = 1;
}
// @section Programmatic
message FindDeliverableConnectionRulesUsingAudiencesAnonymouslyRequest {
  repeated int64 audience_ids = 1;
}
// @section Programmatic
message FindDeliverableConnectionRulesUsingAudiencesAnonymouslyResponse {
  repeated int64 rule_ids = 1;
}
// @section Users Data
message FindDemographicAudiencesForTargetingAnonymouslyRequest {
  optional AudienceTargetingGender gender = 1;
  optional AudienceTargetingAge age = 2;
  message AudienceTargetingAge {
    required AudienceTargetingAgeFrom from = 1;
    required AudienceTargetingAgeTo to = 2;
  }
}
// @section Users Data
message FindDemographicAudiencesForTargetingAnonymouslyResponse {
  optional int64 gender_audience_id = 1;
  repeated int64 age_audience_ids = 2;
}
// @section Users Data
message FindDemographicAudiencesForTargetingsRequest {
  required SecurityContext security_context = 1;
  repeated AudienceTargetingAge audience_targeting_age_demographics = 2;
  message AudienceTargetingAge {
    required AudienceTargetingAgeFrom from = 1;
    required AudienceTargetingAgeTo to = 2;
  }
}
// @section Users Data
message FindDemographicAudiencesForTargetingsResponse {
  repeated AudienceTargetingAgeResult age_results = 1;
  repeated AudienceTargetingGenderResult gender_results = 2;
  message AudienceTargetingAgeResult {
    required AudienceTargetingAge requested_audience_targeting_demographics = 1;
    repeated int64 age_audience_ids = 2;
    message AudienceTargetingAge {
      required AudienceTargetingAgeFrom from = 1;
      required AudienceTargetingAgeTo to = 2;
    }
  }
  message AudienceTargetingGenderResult {
    required AudienceTargetingGender gender = 1;
    required int64 gender_id = 2;
  }
}
// @section Publisher Statistics
message FindDirectSalesCampaignStatsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  required int64 publisher_id = 3;
  required string timezone = 4;
  required google.protobuf.Timestamp start_date = 5;
  required google.protobuf.Timestamp end_date = 6;
  // The 3-letter currency code defined in ISO 4217
  required string currency = 7;
}
// @section Publisher Statistics
message FindDirectSalesCampaignStatsForPublisherResponse {
  repeated Statistic stats = 1;
  message Statistic {
    required google.protobuf.Timestamp time = 1;
    required TimeRange time_range = 2;
    required int64 campaign_id = 3;
    required int64 line_item_id = 4;
    required int64 creative_id = 5;
    required string device = 6;
    required int64 impressions = 7;
    required int64 starts = 8;
    required int64 completes = 9;
    required int64 clicks = 10;
    required double earnings = 11;
    required int64 current_volume = 12;
    optional string page_domain = 13;
    optional string app_bundle_id = 14;
    optional string app_platform = 15;
    optional string app_name = 16;
  }
}
// @section Account
message FindEntityForBuyerSeatRequest {
  required SecurityContext security_context = 1;
  required int64 buyer_seat_id = 2;
}
// @section Account
message FindEntityForBuyerSeatResponse {
  required int64 entity_id = 1;
}
// @section Publisher Statistics
message FindFinanceAppsAndSitesStatsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  // expected format: Europe/Paris
  required string timezone = 3;
  required google.protobuf.Timestamp start_date = 4;
  required google.protobuf.Timestamp end_date = 5;
  // The 3-letter currency code defined in ISO 4217
  required string currency = 6;
  repeated int32 placement_ids = 7;
  repeated BuyerType buyer_types = 8;
  repeated DeliveryContext delivery_contexts = 9;
  repeated string sites = 10;
  repeated App apps = 11;
  message App {
    required string bundle_id = 1;
    required string platform = 2;
  }
}
// @section Publisher Statistics
message FindFinanceAppsAndSitesStatsForPublisherResponse {
  repeated Statistic stats = 1;
  required TimeRange time_range = 2;
  message App {
    optional string bundle_id = 1;
    optional string platform = 2;
    optional string name = 3;
  }
  message Statistic {
    required google.protobuf.Timestamp time = 1;
    oneof inventory_identifier {
      string site = 2;
      App app = 3;
    }
    required double earnings = 4;
    required double average_cpm = 5;
    required int64 sold_impressions = 6;
    required int64 ad_opportunity_qualified = 7;
    required double fill_rate = 8;
  }
}
// @section Publisher Statistics
message FindFinanceBuyerTypesStatsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  // expected format: Europe/Paris
  required string timezone = 3;
  required google.protobuf.Timestamp start_date = 4;
  required google.protobuf.Timestamp end_date = 5;
  // The 3-letter currency code defined in ISO 4217
  required string currency = 6;
  repeated int32 placement_ids = 7;
  repeated BuyerType buyer_types = 8;
  repeated DeliveryContext delivery_contexts = 9;
  repeated string sites = 10;
  repeated App apps = 11;
  message App {
    required string bundle_id = 1;
    required string platform = 2;
  }
}
// @section Publisher Statistics
message FindFinanceBuyerTypesStatsForPublisherResponse {
  repeated Statistic stats = 1;
  required TimeRange time_range = 2;
  message Statistic {
    required google.protobuf.Timestamp time = 1;
    optional BuyerType buyer_type = 2;
    required double earnings = 3;
    required int64 sold_impressions = 4;
    required int64 ad_opportunity_qualified = 5;
  }
}
// @section Publisher Statistics
message FindFinanceCommitmentsStatsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  // expected format: Europe/Paris
  required string timezone = 3;
  required google.protobuf.Timestamp start_date = 4;
  required google.protobuf.Timestamp end_date = 5;
  // The 3-letter currency code defined in ISO 4217
  required string currency = 6;
  repeated int32 placement_ids = 7;
  repeated BuyerType buyer_types = 8;
  repeated DeliveryContext delivery_contexts = 9;
  repeated string sites = 10;
  repeated App apps = 11;
  message App {
    required string bundle_id = 1;
    required string platform = 2;
  }
}
// @section Publisher Statistics
message FindFinanceCommitmentsStatsForPublisherResponse {
  repeated Statistic stats = 1;
  required TimeRange time_range = 2;
  message Commitment {
    optional string id = 1;
    optional string name = 2;
  }
  message Statistic {
    required google.protobuf.Timestamp time = 1;
    required Commitment commitment = 2;
    required double earnings = 3;
    required int64 sold_impressions = 4;
    required double average_cpm = 5;
  }
}
// @section Publisher Statistics
message FindFinanceCountriesStatsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  // expected format: Europe/Paris
  required string timezone = 3;
  required google.protobuf.Timestamp start_date = 4;
  required google.protobuf.Timestamp end_date = 5;
  // The 3-letter currency code defined in ISO 4217
  required string currency = 6;
  repeated int32 placement_ids = 7;
  repeated BuyerType buyer_types = 8;
  repeated DeliveryContext delivery_contexts = 9;
  repeated string sites = 10;
  repeated App apps = 11;
  message App {
    required string bundle_id = 1;
    required string platform = 2;
  }
}
// @section Publisher Statistics
message FindFinanceCountriesStatsForPublisherResponse {
  repeated Statistic stats = 1;
  required TimeRange time_range = 2;
  message Statistic {
    required google.protobuf.Timestamp time = 1;
    // The 2-letter country code defined in ISO 3166-1 alpha-2
    optional string country = 2;
    required double earnings = 3;
    required double average_cpm = 4;
    required int64 sold_impressions = 5;
    required int64 ad_opportunity_qualified = 6;
    required double fill_rate = 7;
  }
}
// @section Publisher Statistics
message FindFinanceDeliveryContextsStatsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  // expected format: Europe/Paris
  required string timezone = 3;
  required google.protobuf.Timestamp start_date = 4;
  required google.protobuf.Timestamp end_date = 5;
  // The 3-letter currency code defined in ISO 4217
  required string currency = 6;
  repeated int32 placement_ids = 7;
  repeated BuyerType buyer_types = 8;
  repeated DeliveryContext delivery_contexts = 9;
  repeated string sites = 10;
  repeated App apps = 11;
  message App {
    required string bundle_id = 1;
    required string platform = 2;
  }
}
// @section Publisher Statistics
message FindFinanceDeliveryContextsStatsForPublisherResponse {
  repeated Statistic stats = 1;
  required TimeRange time_range = 2;
  message Statistic {
    required google.protobuf.Timestamp time = 1;
    required DeliveryContext delivery_context = 2;
    required double earnings = 3;
    required double average_cpm = 4;
    required int64 sold_impressions = 5;
    required int64 ad_opportunity_qualified = 6;
    required double fill_rate = 7;
  }
}
// @section Publisher Statistics
message FindFinanceDevicesStatsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  // expected format: Europe/Paris
  required string timezone = 3;
  required google.protobuf.Timestamp start_date = 4;
  required google.protobuf.Timestamp end_date = 5;
  // The 3-letter currency code defined in ISO 4217
  required string currency = 6;
  repeated int32 placement_ids = 7;
  repeated BuyerType buyer_types = 8;
  repeated DeliveryContext delivery_contexts = 9;
  repeated string sites = 10;
  repeated App apps = 11;
  message App {
    required string bundle_id = 1;
    required string platform = 2;
  }
}
// @section Publisher Statistics
message FindFinanceDevicesStatsForPublisherResponse {
  repeated Statistic stats = 1;
  required TimeRange time_range = 2;
  message Statistic {
    required google.protobuf.Timestamp time = 1;
    optional string device = 2;
    required double earnings = 3;
    required double average_cpm = 4;
    required int64 sold_impressions = 5;
    required int64 ad_opportunity_qualified = 6;
    required double fill_rate = 7;
  }
}
// @section Publisher Statistics
message FindFinanceEnvironmentsStatsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  // expected format: Europe/Paris
  required string timezone = 3;
  required google.protobuf.Timestamp start_date = 4;
  required google.protobuf.Timestamp end_date = 5;
  // The 3-letter currency code defined in ISO 4217
  required string currency = 6;
  repeated int32 placement_ids = 7;
  repeated BuyerType buyer_types = 8;
  repeated DeliveryContext delivery_contexts = 9;
  repeated string sites = 10;
  repeated App apps = 11;
  message App {
    required string bundle_id = 1;
    required string platform = 2;
  }
}
// @section Publisher Statistics
message FindFinanceEnvironmentsStatsForPublisherResponse {
  repeated Statistic stats = 1;
  required TimeRange time_range = 2;
  message Statistic {
    required google.protobuf.Timestamp time = 1;
    required Environment environment = 2;
    required double earnings = 3;
    required double average_cpm = 4;
    required int64 sold_impressions = 5;
    required int64 ad_opportunity_qualified = 6;
    required double fill_rate = 7;
  }
  enum Environment {
    ENVIRONMENT_DESKTOP_WEB = 0;
    ENVIRONMENT_MOBILE_WEB = 1;
    ENVIRONMENT_MOBILE_WEBVIEW_BROWSER = 2;
    ENVIRONMENT_MOBILE_APP = 3;
    ENVIRONMENT_MOBILE_AMP = 4;
    ENVIRONMENT_DESKTOP_AMP = 5;
    ENVIRONMENT_CTV_APP = 6;
    ENVIRONMENT_OTHER = 7;
  }
}
// @section Publisher Statistics
message FindFinanceFormatPositionsStatsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  // expected format: Europe/Paris
  required string timezone = 3;
  required google.protobuf.Timestamp start_date = 4;
  required google.protobuf.Timestamp end_date = 5;
  // The 3-letter currency code defined in ISO 4217
  required string currency = 6;
  repeated int32 placement_ids = 7;
  repeated BuyerType buyer_types = 8;
  repeated DeliveryContext delivery_contexts = 9;
  repeated string sites = 10;
  repeated App apps = 11;
  message App {
    required string bundle_id = 1;
    required string platform = 2;
  }
}
// @section Publisher Statistics
message FindFinanceFormatPositionsStatsForPublisherResponse {
  repeated Statistic stats = 1;
  required TimeRange time_range = 2;
  message FormatPosition {
    required int32 id = 1;
    optional string name = 2;
  }
  message Statistic {
    required google.protobuf.Timestamp time = 1;
    optional FormatPosition format_position = 2;
    required double earnings = 3;
    required double average_cpm = 4;
    required int64 sold_impressions = 5;
  }
}
// @section Publisher Statistics
message FindFinanceFormatsStatsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  // expected format: Europe/Paris
  required string timezone = 3;
  required google.protobuf.Timestamp start_date = 4;
  required google.protobuf.Timestamp end_date = 5;
  // The 3-letter currency code defined in ISO 4217
  required string currency = 6;
  repeated int32 placement_ids = 7;
  repeated BuyerType buyer_types = 8;
  repeated DeliveryContext delivery_contexts = 9;
  repeated string sites = 10;
  repeated App apps = 11;
  message App {
    required string bundle_id = 1;
    required string platform = 2;
  }
}
// @section Publisher Statistics
message FindFinanceFormatsStatsForPublisherResponse {
  repeated Statistic stats = 1;
  required TimeRange time_range = 2;
  message FormatCreativeTypeFamily {
    required int32 id = 1;
    optional string name = 2;
  }
  message FormatSize {
    required int32 id = 1;
    optional string name = 2;
  }
  message Statistic {
    required google.protobuf.Timestamp time = 1;
    optional FormatSize format_size = 2;
    optional FormatCreativeTypeFamily format_creative_type_family = 3;
    required double earnings = 4;
    required double average_cpm = 5;
    required int64 sold_impressions = 6;
  }
}
// @section Publisher Statistics
message FindFinanceOverviewStatsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  // expected format: Europe/Paris
  required string timezone = 3;
  required google.protobuf.Timestamp start_date = 4;
  required google.protobuf.Timestamp end_date = 5;
  // The 3-letter currency code defined in ISO 4217
  required string currency = 6;
  repeated int32 placement_ids = 7;
  repeated BuyerType buyer_types = 8;
  repeated DeliveryContext delivery_contexts = 9;
  repeated string sites = 10;
  repeated App apps = 11;
  message App {
    required string bundle_id = 1;
    required string platform = 2;
  }
}
// @section Publisher Statistics
message FindFinanceOverviewStatsForPublisherResponse {
  repeated Statistic stats = 1;
  required TimeRange time_range = 2;
  message Statistic {
    required google.protobuf.Timestamp time = 1;
    required double earnings = 2;
    required double average_cpm = 3;
    required int64 sold_impressions = 4;
    required int64 ad_opportunity_qualified = 5;
    required double fill_rate = 6;
  }
}
// @section Finance
message FindFinancePermissionsForProfileRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
}
// @section Finance
message FindFinancePermissionsForProfileResponse {
  required PublisherBillablePermissionSet publisher_billable_permission_set = 1;
  required FinancePermissionSet finance_permission_set = 2;
  required bool can_view_all_offices = 3;
  message FinancePermissionSet {
    required bool can_view_billing_sheet = 1;
    required bool can_view_legacy_reporting = 2;
    required bool can_view_publisher_billable_monitoring = 3;
    required bool can_view_exchange_rates = 4;
    required bool can_manage_exchange_rates = 5;
  }
  message PublisherBillablePermissionSet {
    required bool can_validate = 1;
    required bool can_call_to_invoice = 2;
    required bool can_view = 3;
  }
}
// @section Publisher Statistics
message FindFinancePlacementsStatsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  // expected format: Europe/Paris
  required string timezone = 3;
  required google.protobuf.Timestamp start_date = 4;
  required google.protobuf.Timestamp end_date = 5;
  // The 3-letter currency code defined in ISO 4217
  required string currency = 6;
  repeated int32 placement_ids = 7;
  repeated BuyerType buyer_types = 8;
  repeated DeliveryContext delivery_contexts = 9;
  repeated string sites = 10;
  repeated App apps = 11;
  message App {
    required string bundle_id = 1;
    required string platform = 2;
  }
}
// @section Publisher Statistics
message FindFinancePlacementsStatsForPublisherResponse {
  repeated Statistic stats = 1;
  required TimeRange time_range = 2;
  message Placement {
    required int32 id = 1;
    optional string name = 2;
  }
  message Statistic {
    required google.protobuf.Timestamp time = 1;
    optional Placement placement = 2;
    required double earnings = 3;
    required double average_cpm = 4;
    required int64 sold_impressions = 5;
    required int64 ad_opportunity_qualified = 6;
    required double fill_rate = 7;
  }
}
// @section Publisher Statistics
message FindFinanceStatsTotalsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  required google.protobuf.Timestamp start_date = 3;
  required google.protobuf.Timestamp end_date = 4;
  // The 3-letter currency code defined in ISO 4217
  required string currency = 5;
  repeated int32 placement_ids = 6;
  repeated BuyerType buyer_types = 7;
  repeated DeliveryContext delivery_contexts = 8;
  repeated string sites = 9;
  repeated App apps = 10;
  message App {
    required string bundle_id = 1;
    required string platform = 2;
  }
}
// @section Publisher Statistics
message FindFinanceStatsTotalsForPublisherResponse {
  required double earnings = 2;
  required double average_cpm = 3;
  required int64 sold_impressions = 4;
  required int64 ad_opportunity_qualified = 5;
  required double fill_rate = 6;
  repeated TotalByBuyerType total_by_buyer_types = 7;
  message TotalByBuyerType {
    required BuyerType buyer_type = 1;
    required double earnings = 2;
    required double average_cpm = 3;
    required int64 sold_impressions = 4;
  }
}
// @section Publisher Statistics
message FindFinanceWebsitesStatsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  // expected format: Europe/Paris
  required string timezone = 3;
  required google.protobuf.Timestamp start_date = 4;
  required google.protobuf.Timestamp end_date = 5;
  // The 3-letter currency code defined in ISO 4217
  required string currency = 6;
  repeated int32 placement_ids = 7;
  repeated BuyerType buyer_types = 8;
  repeated DeliveryContext delivery_contexts = 9;
}
// @section Publisher Statistics
message FindFinanceWebsitesStatsForPublisherResponse {
  repeated Statistic stats = 1;
  required TimeRange time_range = 2;
  message Statistic {
    required google.protobuf.Timestamp time = 1;
    required double earnings = 2;
    required double average_cpm = 3;
    required int64 sold_impressions = 4;
    required int64 ad_opportunity_qualified = 5;
    required double fill_rate = 6;
    optional Website website = 7;
  }
  message Website {
    required int64 website_id = 1;
    optional string website_name = 2;
  }
}
// @section Publisher Statistics
message FindFinanceYieldStrategiesStatsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  // expected format: Europe/Paris
  required string timezone = 3;
  required google.protobuf.Timestamp start_date = 4;
  required google.protobuf.Timestamp end_date = 5;
  // The 3-letter currency code defined in ISO 4217
  required string currency = 6;
  repeated int32 placement_ids = 7;
  repeated BuyerType buyer_types = 8;
  repeated DeliveryContext delivery_contexts = 9;
  repeated string sites = 10;
  repeated App apps = 11;
  message App {
    required string bundle_id = 1;
    required string platform = 2;
  }
}
// @section Publisher Statistics
message FindFinanceYieldStrategiesStatsForPublisherResponse {
  repeated Statistic stats = 1;
  required TimeRange time_range = 2;
  message Statistic {
    required google.protobuf.Timestamp time = 1;
    required YieldStrategy yield_strategy = 2;
    required double earnings = 3;
    required double average_cpm = 4;
    required int64 sold_impressions = 5;
  }
  enum YieldStrategy {
    YIELD_STRATEGY_DYNAMIC_CPM = 0;
    YIELD_STRATEGY_FIXED_CPM = 1;
  }
}
// @section Brand Safety
message FindGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest {
  required SecurityContext security_context = 1;
  required int64 buyer_seat_id = 2;
}
// @section Brand Safety
message FindGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse {
  repeated GrapeshotBrandSuitabilitySegment segments = 1;
  message GrapeshotBrandSuitabilitySegment {
    required string segment_code = 1;
    optional string friendly_name = 2;
  }
}
// @section Brand Safety
message FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest {
  required SecurityContext security_context = 1;
  // buyer_seat_ids refers to seats persisted in teads_connect.seat
  repeated int64 buyer_seat_ids = 2;
}
// @section Brand Safety
message FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse {
  repeated GrapeshotBrandSuitabilitySegment segments = 1;
  message GrapeshotBrandSuitabilitySegment {
    required string segment_code = 1;
    optional string friendly_name = 2;
    required bool is_available_to_all_seats = 3;
  }
}
// @section Buying Price
message FindHeaderBiddingFloorPriceForOfficeError {
  repeated Error errors = 1;
  message Error {
    oneof error_type {
      NotFound not_found = 1;
    }
  }
  message NotFound {
    required string reason = 1;
  }
}
// @section Buying Price
message FindHeaderBiddingFloorPriceForOfficeRequest {
  required SecurityContext security_context = 1;
  required int64 office_id = 2;
}
// @section Buying Price
message FindHeaderBiddingFloorPriceForOfficeResponse {
  required HeaderBiddingFloorPrice header_bidding_floor_price = 1;
  message HeaderBiddingFloorPrice {
    required int64 id = 1;
    required string name = 2;
    required double price_cpm = 3;
    // The 3-letter currency code defined in ISO 4217
    required string currency_code = 4;
    required PayoutMode payout_mode = 5;
  }
}
// @section Inventory
message FindInventoryForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Inventory
message FindInventoryForPublisherResponse {
  repeated Inventory inventory = 1;
  message Inventory {
    required int64 id = 1;
    required string name = 2;
    repeated Placement placements = 3;
  }
  message Placement {
    required int64 id = 1;
    required string name = 2;
  }
}
// @section Inventory
message FindInventoryForPublishersAnonymouslyRequest {
  repeated int64 publisher_ids = 1;
}
// @section Inventory
message FindInventoryForPublishersAnonymouslyResponse {
  repeated PublisherInventory publisher_inventory = 1;
  message Inventory {
    required int64 id = 1;
    required string name = 2;
  }
  message PublisherInventory {
    required int64 publisher_id = 1;
    repeated Inventory inventory = 2;
  }
}
// @section Publisher Statistics
message FindInventoryStatsByIdentifierForPublisherRequest {
  required SecurityContext security_context = 1;
  required int32 publisher_id = 2;
  // expected format: Europe/Paris
  required string timezone = 3;
  required google.protobuf.Timestamp start_date = 4;
  required google.protobuf.Timestamp end_date = 5;
  repeated int32 placement_ids = 6;
  // a web domain like lemonde.fr
  repeated string sites = 7;
  // an app is a combination of app.bundleid + app.platform like com.android.myapp - Google
  repeated Apps apps = 8;
  // environment samples: desktopweb, mobileweb, mobilewebviewbrowser... analytics source https://github.com/ebuzzing/service-reporting/blob/master/src/main/scala/tv/teads/reporting/column/dimensions/Publisher.scala#L57
  repeated string environments = 9;
  // devices samples: desktop, smartphone, tablet, ctv, smarttv.... analytics source https://github.com/ebuzzing/service-reporting/blob/master/src/main/scala/tv/teads/reporting/querygen/QueryElementBuilder.scala#L780
  repeated string devices = 10;
  message Apps {
    required string bundle_id = 1;
    required string platform = 2;
  }
}
// @section Publisher Statistics
message FindInventoryStatsByIdentifierForPublisherResponse {
  repeated Stats inventory_stats = 1;
  message Stats {
    // Dimensions
    required string identifier = 1; // can be the content of columns (app_bundleid + app_platform / page_domain / adstxt_checked_url) cf inventory model migration. app & page_domain for the new model and adstxt_checked_url for the current one
    required int32 placement_id = 2;
    // Metrics
    required int64 page_view = 3;
    required int64 compatible = 4;
    required int64 human = 5;
    required int64 slot_visible = 6;
    required int64 brand_safe_or_not_categorizable = 7;
    required int64 not_brand_safe = 8;
    required int64 consent = 9;
    required int64 no_consent = 10;
    required int64 maid_or_not_applicable = 11;
    required int64 no_maid = 12;
    required int64 gdpr_or_not_applicable = 13;
    required int64 no_gdpr = 14;
    required int64 ccpa_or_not_applicable = 15;
    required int64 no_ccpa = 16;
    required int64 compliant = 17;
    required int64 not_compliant = 18;
  }
}
// @section Publisher Statistics
message FindInventoryStatsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int32 publisher_id = 2;
  // expected format: Europe/Paris
  required string timezone = 3;
  required google.protobuf.Timestamp start_date = 4;
  required google.protobuf.Timestamp end_date = 5;
  repeated int32 placement_ids = 6;
  // a web domain like lemonde.fr
  repeated string sites = 7;
  // an app is a combination of app.bundleid + app.platform like com.android.myapp - Google
  repeated App apps = 8;
  // environment samples: desktopweb, mobileweb, mobilewebviewbrowser... analytics source https://github.com/ebuzzing/service-reporting/blob/master/src/main/scala/tv/teads/reporting/column/dimensions/Publisher.scala#L57
  repeated string environments = 9;
  // devices samples: desktop, smartphone, tablet, ctv, smarttv.... analytics source https://github.com/ebuzzing/service-reporting/blob/master/src/main/scala/tv/teads/reporting/querygen/QueryElementBuilder.scala#L780
  repeated string devices = 10;
  message App {
    required string bundle_id = 1;
    required string platform = 2;
  }
}
// @section Publisher Statistics
message FindInventoryStatsForPublisherResponse {
  repeated Stats inventory_stats = 1;
  required TimeRange time_range = 2;
  message Stats {
    required google.protobuf.Timestamp time = 1;
    required int64 page_view = 3;
    required int64 compatible = 4;
    required int64 human = 5;
    required int64 slot_visible = 6;
    required int64 incompatibility_browser = 7;
    required int64 incompatibility_context = 8;
    required int64 incompatibility_format = 9;
    required int64 incompatibility_video = 10;
    required int64 no_slot_content = 11;
    required int64 no_slot_avoid = 12;
    required int64 no_slot_filter = 13;
    required int64 no_slot_image_slot = 14;
    required int64 no_slot_video_article = 15;
    required int64 no_slot_video_slot = 16;
    required int64 no_slot_btf = 17;
    required int64 no_slot_minimum = 18;
    required int64 no_slot_size = 19;
    required int64 no_slot_position = 20;
    required int64 no_slot_selector = 21;
    required int64 placement_capping = 22;
    required int64 gdpr_teads_consent_yes = 23;
    required int64 gdpr_teads_consent_no = 24;
    required int64 gdpr_teads_consent_unknown = 25;
    required int64 gdpr_teads_consent_unknown_amp = 26;
    required int64 gdpr_teads_consent_not_applicable = 27;
    required int64 gdpr_teads_consent_campaign_tag = 28;
    required int64 gdpr_reason_cmp_not_found = 29;
    required int64 gdpr_reason_cmp_not_ready_no_response = 30;
    required int64 gdpr_reason_cmp_not_ready_js_not_loaded = 31;
    required int64 gdpr_reason_cmp_not_ready_no_ping_response = 32;
    required int64 gdpr_reason_unsuccessful_cmp_response = 33;
    required int64 gdpr_reason_cmp_error = 34;
    required int64 gdpr_reason_others = 35;
    required int64 gdpr_reason_applicable_conflict = 36;
    required int64 ccpa_teads_consent_yes = 37;
    required int64 ccpa_teads_consent_no = 38;
    required int64 ccpa_teads_consent_unknown = 39;
    required int64 ccpa_teads_consent_not_applicable = 40;
    required int64 ccpa_teads_consent_campaign_tag = 41;
    required int64 ads_txt_status_ok = 42;
    required int64 ads_txt_status_nok = 43;
    required int64 ads_txt_status_na = 44;
    required int64 ads_txt_status_malformed_tag = 45;
    required int64 ads_txt_status_teads_not_found = 46;
    required int64 ads_txt_status_no_file = 47;
    required int64 ads_txt_status_missing_configuration = 48;
    required int64 quality_ad_opportunity = 49;
    required int64 user_choice_yes = 50;
    required int64 user_choice_no = 51;
    required int64 user_choice_campaign_tag = 52;
    required int64 identification_method_web_cookie = 53;
    required int64 identification_method_web_cookieless = 54;
    required int64 identification_method_in_app_maid = 55;
    required int64 identification_method_in_app_no_maid = 56;
    required int64 identified_user_yes = 57;
    required int64 identified_user_no = 58;
    required int64 user_consent_yes = 59;
    required int64 brand_safety_safe = 60;
    required int64 brand_safety_unsafe = 61;
    required int64 brand_safety_uncat = 62;
    required int64 brand_safety_campaign_tag = 63;
  }
}
// @section Commercial
message FindInvoiceRecipientsForBuyerSeatRequest {
  required SecurityContext security_context = 1;
  required int64 buyer_seat_platform_id = 2;
}
// @section Commercial
message FindInvoiceRecipientsForBuyerSeatResponse {
  repeated InvoiceRecipient invoice_recipients = 1;
  message InvoiceRecipient {
    required string salesforce_id = 1;
    required string name = 2;
    required SalesforceInvoiceRecipientStatus status = 3;
    optional string legal_name = 4;
    optional string vat_number = 5;
    optional string tax_payer_id = 6;
    optional string address_street = 7;
    optional string address_city = 8;
    optional string address_postal_code = 9;
    optional string address_country_code = 10;
    optional string address_state_code = 11;
    required string currency = 12;
    required bool is_factoring = 13;
    required bool is_credit_score_checked = 14;
    optional string external_account_number = 15;
  }
}
// @section Campaign
message FindLineItemAbTestAssociationsForLineItemRequest {
  required SecurityContext security_context = 1;
  required int64 line_item_id = 2;
}
// @section Campaign
message FindLineItemAbTestAssociationsForLineItemResponse {
  repeated LineItemAbTestAssociation line_item_abtest_associations = 1;
  message LineItemAbTestAssociation {
    required int64 line_item_id = 1;
    required int64 abtest_id = 2;
    required int64 population_id = 3;
  }
}
// @section Publisher Statistics
message FindLineItemStatsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 line_item_id = 2;
  required int64 publisher_id = 3;
  required string timezone = 4;
  required google.protobuf.Timestamp start_date = 5;
  required google.protobuf.Timestamp end_date = 6;
  // The 3-letter currency code defined in ISO 4217
  required string currency = 7;
}
// @section Publisher Statistics
message FindLineItemStatsForPublisherResponse {
  repeated Statistic stats = 1;
  message Statistic {
    required google.protobuf.Timestamp time = 1;
    required TimeRange time_range = 2;
    required int64 campaign_id = 3;
    required int64 line_item_id = 4;
    required int64 creative_id = 5;
    required string device = 6;
    required int64 impressions = 7;
    required int64 starts = 8;
    required int64 completes = 9;
    required int64 clicks = 10;
    required double earnings = 11;
    required int64 current_volume = 12;
    optional string page_domain = 13;
    optional string app_bundle_id = 14;
    optional string app_platform = 15;
    optional string app_name = 16;
  }
}
// @section Campaign
message FindLineItemsEligibleForReachcastCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
}
// @section Campaign
message FindLineItemsEligibleForReachcastCampaignResponse {
  repeated LineItem line_items = 1;
  message LineItem {
    required int64 id = 1;
    required string name = 2;
    optional google.protobuf.Timestamp start_date = 3;
    optional google.protobuf.Timestamp end_date = 4;
    required BillingType billing_type = 5;
    optional BillableEvent billable_event = 6;
    optional OptimizationKpi optimization_kpi = 7;
    optional float optimization_kpi_threshold = 8;
    required bool is_guaranteed = 9;
  }
}
// @section Campaign
message FindLineItemsForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
}
// @section Campaign
message FindLineItemsForCampaignResponse {
  repeated LineItem line_items = 1;
  message LineItem {
    required int64 id = 1;
    required string name = 2;
    required int64 insertion_order_line_id = 3;
  }
}
// @section Users Targeting
message FindLookalikeSegmentsForSeatRequest {
  required SecurityContext security_context = 1;
  required int64 buyer_seat_id = 2;
}
// @section Users Targeting
message FindLookalikeSegmentsForSeatResponse {
  repeated Segment segments = 1;
  message Segment {
    required int64 id = 1;
    required bool is_enabled = 2;
    required int64 advertiser_id = 3;
    required string name = 4;
    required Type type = 5;
  }
  enum Type {
    TYPE_REACH = 1;
    TYPE_STANDARD = 2;
    TYPE_ACCURACY = 3;
    TYPE_TARGET_LIFT = 4;
    TYPE_TARGET_REACH = 5;
    TYPE_LAL_THRESHOLD = 6;
  }
}
// @section Mrg Contract
message FindMrgContractsCommitmentsStatsForPeriodRequest {
  required SecurityContext security_context = 1;
  required Period period = 2;
  message Period {
    required google.protobuf.Timestamp day_start = 1;
    required google.protobuf.Timestamp day_end = 2;
  }
}
// @section Mrg Contract
message FindMrgContractsCommitmentsStatsForPeriodResponse {
  repeated Stats commitments_stats = 1;
  message Period {
    required google.protobuf.Timestamp start_date = 1;
    required google.protobuf.Timestamp end_date = 2;
  }
  message PublisherRevenue {
    required double revenue = 1;
    required double revenue_without_demand = 2;
    // The 3-letter currency code defined in ISO 4217
    required string revenue_currency = 3;
    required double revenue_converted_usd = 4;
    required double revenue_without_demand_converted_usd = 5;
  }
  message Stats {
    required string commitment_uuid = 1;
    required int64 delivered_volume = 2;
    required PublisherRevenue publisher_revenue = 3;
    required TeadsTurnover teads_turnover = 4;
    required Period period = 5;
  }
  message TeadsTurnover {
    required double turnover_converted_usd = 1;
  }
}
// @section Mrg Contract
message FindMrgContractsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Mrg Contract
message FindMrgContractsForPublisherResponse {
  repeated MrgContract mrg_contracts = 1;
  message Commitment {
    required string uuid = 1;
    required int64 volume = 2;
    required double revenue = 3;
    // The 3-letter currency code defined in ISO 4217
    required string revenue_currency = 5;
    required Period period = 6;
    required string name = 7;
  }
  message CountryFilter {
    required MrgContractCriterionCountryFilter country_filter = 1;
  }
  message CountryList {
    repeated string countries = 1;
  }
  message Criterion {
    oneof geo {
      // Using the ISO 3166-1 Alpha 2 standard
      CountryList country_list = 1;
      CountryFilter country_filter = 2;
    }
    required MrgContractCriterionEnvironment environment = 3;
    repeated Commitment commitments = 4;
    required MrgContractCriterionBrandSafety brand_safety = 5;
    // Set for contract_version > 1
    optional MrgContractCriterionUserTrackability user_trackability = 6;
  }
  message MrgContract {
    required string uuid = 1;
    required string name = 2;
    required Period period = 3;
    optional int32 auto_renewal_period = 4;
    optional google.protobuf.Timestamp renewal_limit_date = 5;
    repeated int64 publisher_party_ids = 6;
    required MrgContractStatus status = 7;
    required google.protobuf.Timestamp created_at = 9;
    optional MrgContractType contract_type = 10;
    repeated Criterion criteria = 11;
  }
  message Period {
    required google.protobuf.Timestamp start_date = 1;
    required google.protobuf.Timestamp end_date = 2;
  }
}
// @section Account
message FindOfficesForProfileRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
}
// @section Account
message FindOfficesForProfileResponse {
  repeated Office offices = 1;
  message Office {
    required int64 office_id = 1;
    required string office_name = 2;
  }
}
// @section Campaign Support
message FindOpenCampaignSupportRequestForCampaignRequest {
  required SecurityContext security_context = 1;
  required uint64 campaign_id = 2;
}
// @section Campaign Support
message FindOpenCampaignSupportRequestForCampaignResponse {
  required uint64 campaign_id = 1;
  required uint64 support_request_id = 2;
  required uint64 requester_profile_id = 3;
  required string description = 4;
  required CampaignSupportRequestStatus status = 5;
  required google.protobuf.Timestamp created_at = 6;
  optional google.protobuf.Timestamp status_updated_at = 7;
  required uint64 seat_id = 8;
}
// @section Campaign
message FindPacingRateForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  required google.protobuf.Timestamp start_date = 3;
  required google.protobuf.Timestamp end_date = 4;
  required string timezone = 5;
  optional PacingRateDimension pacing_rate_dimension = 6;
}
// @section Campaign
message FindPacingRateForCampaignResponse {
  oneof pacing_rate {
    double campaign_pacing_rate = 1;
    PacingRateRows pacing_rate_rows = 2;
  }
  message PacingRateRow {
    required int64 pacing_rate_dimension_id = 1;
    optional double pacing_rate = 2;
  }
  message PacingRateRows {
    required PacingRateDimension pacing_rate_dimension = 1;
    repeated PacingRateRow pacing_rate_rows = 2;
  }
}
// @section Inventory
message FindPagesForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Inventory
message FindPagesForPublisherResponse {
  repeated Page pages = 1;
  message Page {
    required int64 id = 1;
    required string name = 2;
  }
}
// @section Inventory
message FindPagesForWebsitesRequest {
  required SecurityContext security_context = 1;
  repeated int64 website_ids = 2;
  // Sometimes pages can have multiple slots, this boolean is useful when
  // you want to get only these pages
  required bool only_multi_slot = 3;
}
// @section Inventory
message FindPagesForWebsitesResponse {
  map<string, Pages> pages_by_website = 1;
  message Page {
    required int64 page_id = 1;
    repeated Placement placements = 2;
    required string name = 3;
  }
  message Pages {
    repeated Page pages = 1;
  }
  message Placement {
    required int64 placement_id = 1;
    required string name = 2;
  }
}
// @section Finance
message FindPaymentSettingsPendingApprovalForPublisherAndBillingOfficeRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  required int64 billing_office_id = 3;
}
// @section Finance
message FindPaymentSettingsPendingApprovalForPublisherAndBillingOfficeResponse {
  // Payment settings revision change identifier: optimist lock
  required string mutation_id = 1;
  map<string, string> value_by_payment_settings_key = 2;
}
// @section Inventory
message FindPlacementTypesForProfileRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
}
// @section Inventory
message FindPlacementTypesForProfileResponse {
  repeated PlacementType placement_types = 1;
  message PlacementType {
    required int64 id = 1;
    required string name = 2;
  }
}
// @section Inventory
message FindPlacementsForPacksRequest {
  required SecurityContext security_context = 1;
  repeated int64 pack_ids = 2;
}
// @section Inventory
message FindPlacementsForPacksResponse {
  map<int64, PlacementsForPack> placements_by_pack = 1;
  message PlacementsForPack {
    repeated int64 placement_ids = 1;
    // This value reflects last time a pack was updated, including add/remove placements.
    optional google.protobuf.Timestamp last_update = 2;
  }
}
// @section Inventory
message FindPlacementsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Inventory
message FindPlacementsForPublisherResponse {
  repeated Placement placements = 1;
  message Placement {
    required int64 id = 1;
    required string name = 2;
  }
}
// @section Inventory
message FindPlacementsForWebsitesRequest {
  required SecurityContext security_context = 1;
  repeated int64 website_ids = 2;
}
// @section Inventory
message FindPlacementsForWebsitesResponse {
  repeated Placement placements = 1;
  message Placement {
    required int64 id = 1;
    required string name = 2;
  }
}
// @section Account
message FindProfileForEmailAnonymouslyRequest {
  required string email = 1;
}
// @section Account
message FindProfileForEmailAnonymouslyResponse {
  required int64 profile_id = 1;
  required string email = 2;
  // Sorted so that the first entry will be the "default" one
  repeated Account accounts = 4;
  required ProfileStatus status = 5;
  optional string firstname = 8;
  optional string lastname = 9;
  optional string locale = 10; // language_TERRITORY: en_US, fr_FR, es_ES, ...
  oneof profile_credentials {
    Credentials deprecated_credentials = 11;
    Credentials cognito_credentials = 12;
  }
  message Account {
    required int64 entity_id = 1;
    // "Publisher Self-Served", "Teads Innovation", "Innovation feature team Platform"
    repeated string roles = 2;
    required EntityType entity_type = 3;
  }
  message Credentials {
    optional SAMLCredentials saml_credentials = 6;
    optional PasswordCredentials password_credentials = 7;
  }
  message PasswordCredentials {
    required bool mfa_validation_required = 1;
  }
  message SAMLCredentials {
    required string identity_provider_name = 1;
  }
  reserved 3, 6, 7;
}
// @section Inventory
message FindProfilesEligibleForTemporaryAccountOnPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Inventory
message FindProfilesEligibleForTemporaryAccountOnPublisherResponse {
  repeated int64 profile_ids = 1;
}
// @section Account
message FindProfilesFromEntityIdRequest {
  required SecurityContext security_context = 1;
  required int64 entity_id = 2;
}
// @section Account
message FindProfilesFromEntityIdResponse {
  repeated Profile profiles = 1;
  message Profile {
    required int64 profile_id = 1;
    required string email = 2;
    optional string firstname = 3;
    optional string lastname = 4;
    required bool is_internal_employee = 5;
  }
}
// @section Inventory
message FindProgrammaticFeeRatesForDirectSalesPublishersRequest {
  required SecurityContext security_context = 1;
  repeated int64 publisher_ids = 2;
}
// @section Inventory
message FindProgrammaticFeeRatesForDirectSalesPublishersResponse {
  repeated PublisherProgrammaticFeeRate programmatic_fee_rates = 1;
  message PublisherProgrammaticFeeRate {
    required int64 publisher_id = 1;
    required double rate_percent = 2;
    optional google.protobuf.Timestamp waived_period_start = 3;
    optional google.protobuf.Timestamp waived_period_end = 4;
  }
}
// @section Finance
message FindPublisherDirectSalesDealIdMonthlyBillablesRequest {
  required SecurityContext security_context = 1;
  required YearMonth year_month = 2;
  message YearMonth {
    required int32 month = 1;
    required int32 year = 2;
  }
}
// @section Finance
message FindPublisherDirectSalesDealIdMonthlyBillablesResponse {
  repeated PublisherDirectSalesDealIdBillable billables = 1;
  message Amendment {
    required double publisher_platform_fee_amended = 1;
    required string comment = 2;
    required double publisher_platform_fee_amended_converted_usd = 3;
  }
  message PublisherDirectSalesDealIdBillable {
    required int64 publisher_id = 1;
    required string publisher_name = 2;
    required int64 billing_office_id = 3;
    required string billing_office_name = 4;
    required int64 operator_office_id = 5;
    required string operator_office_name = 6;
    required int64 publisher_billable_volume = 7;
    required string billing_currency = 8;
    required double publisher_platform_fee = 9;
    required double publisher_platform_fee_gross = 10;
    required double dsp_billing_amount = 11;
    required double publisher_platform_fee_converted_usd = 12;
    required double publisher_platform_fee_gross_converted_usd = 13;
    required double dsp_billing_amount_converted_usd = 14;
    optional Amendment amendment = 15;
    required PublisherDirectSalesDealIdBillableStatus status = 16;
    // Only present if billable has been processed by service-finance
    optional PublisherDirectSalesDealIdBillableInvoicingProcessOutcome invoicing_process_outcome = 17;
    optional bool is_duplicate = 18;
  }
  enum PublisherDirectSalesDealIdBillableInvoicingProcessOutcome {
    PUBLISHER_DIRECT_SALES_DEAL_ID_BILLABLE_INVOICING_PROCESS_OUTCOME_INVOICED = 1;
    PUBLISHER_DIRECT_SALES_DEAL_ID_BILLABLE_INVOICING_PROCESS_OUTCOME_DEFERRED_SETTINGS = 2;
    PUBLISHER_DIRECT_SALES_DEAL_ID_BILLABLE_INVOICING_PROCESS_OUTCOME_DEFERRED_AMOUNT = 3;
    PUBLISHER_DIRECT_SALES_DEAL_ID_BILLABLE_INVOICING_PROCESS_OUTCOME_OFF_PLATFORM = 4;
  }
  enum PublisherDirectSalesDealIdBillableStatus {
    PUBLISHER_DIRECT_SALES_DEAL_ID_BILLABLE_STATUS_READY_TO_VALIDATE = 1;
    PUBLISHER_DIRECT_SALES_DEAL_ID_BILLABLE_STATUS_VALIDATED = 2;
    PUBLISHER_DIRECT_SALES_DEAL_ID_BILLABLE_STATUS_CALLED_FOR_INVOICE = 4;
    PUBLISHER_DIRECT_SALES_DEAL_ID_BILLABLE_STATUS_PROCESSED = 5;
    reserved 3;
  }
}
// @section Account
message FindPublishersForOfficeRequest {
  required SecurityContext security_context = 1;
  optional int64 office_id = 2; // to be made required after clients have upgraded;
}
// @section Account
message FindPublishersForOfficeResponse {
  repeated Publisher publishers = 1;
  message Publisher {
    required int64 id = 1;
    required string name = 2;
    required int64 office_id = 3;
    required string office_name = 4;
  }
}
// @section Reporting
message FindRecentReportsForTemplateRequest {
  required SecurityContext security_context = 1;
  required string template_id = 2;
  required int64 entity_id = 3;
}
// @section Reporting
message FindRecentReportsForTemplateResponse {
  repeated Report reports = 1; // most recent comes first
  message Report {
    required string etag = 1;
    required google.protobuf.Timestamp created_at = 2;
    required string name = 3;
    required string expiring_url = 4;
  }
}
// @section Users Targeting
message FindRemarketingSegmentsForSeatRequest {
  required SecurityContext security_context = 1;
  required int64 buyer_seat_id = 2;
}
// @section Users Targeting
message FindRemarketingSegmentsForSeatResponse {
  repeated Segment segments = 1;
  message Segment {
    required int64 id = 1;
    required bool is_enabled = 2;
    required int64 advertiser_id = 3;
    required string name = 4;
  }
}
// @section Advertiser
message FindRevocableSeatsForPixelRequest {
  required SecurityContext security_context = 1;
  required int64 pixel_id = 2;
}
// @section Advertiser
message FindRevocableSeatsForPixelResponse {
  repeated int64 seat_ids = 1;
}
// @section Advertiser
message FindSalesforceBuyerSeatIdForEntityAnonymouslyError {
  required Error error = 1;
  message Error {
    oneof error_type {
      UnknownBuyerSeat unknown_buyer_seat = 1;
      NoSalesforceSeatId no_salesforce_seat_id = 2;
    }
  }
  message NoSalesforceSeatId {
    required int64 entity_id = 1;
  }
  message UnknownBuyerSeat {
    required int64 entity_id = 1;
  }
}
// @section Advertiser
message FindSalesforceBuyerSeatIdForEntityAnonymouslyRequest {
  required int64 entity_id = 1;
}
// @section Advertiser
message FindSalesforceBuyerSeatIdForEntityAnonymouslyResponse {
  required string salesforce_seat_id = 1;
}
// @section Ad Quality
message FindScannedDspCreativesRequest {
  required SecurityContext security_context = 1;
  // The page number is set to 0 if not specified
  // The page size is set to 100 if not specified
  required Page page = 2;
  optional string dsp_creative_id = 3;
  optional string dsp_campaign_id = 4;
  optional int64 connection_id = 5;
}
// @section Ad Quality
message FindScannedDspCreativesResponse {
  repeated ScannedDspCreative scanned_dsp_creatives = 1;
  message ScannedDspCreative {
    required DspCreativeIds dsp_creative = 1;
    repeated string domains_called = 2;
    required int32 outgoing_requests_count = 3;
    required int64 vast_bytes_size = 4;
    optional int32 creative_effective_height = 5;
    optional int32 creative_effective_width = 6;
    optional AdQualityCreativeFormatSize creative_format = 7;
    required google.protobuf.Timestamp scanned_date = 8;
    message DspCreativeIds {
      required string dsp_creative_id = 1;
      required string dsp_campaign_id = 2;
      required int64 connection_id = 3;
    }
  }
}
// @section Users Targeting
message FindSeatsForLookalikeSegmentError {
  repeated Error errors = 1;
  message Error {
    oneof error_type {
      LookalikeNotFoundForProvidedSeed lookalike_not_found_for_provided_seed = 1;
    }
  }
  message LookalikeNotFoundForProvidedSeed {
  }
}
// @section Users Targeting
message FindSeatsForLookalikeSegmentRequest {
  required SecurityContext security_context = 1;
  required LookalikeSeed lookalike_seed = 2;
  message LookalikeSeed {
    required UsersTargetingLookalikeSeedProvider seed_provider = 1;
    required string seed_segment_id_for_provider = 2;
    // Represents countries in ISO-2 format
    repeated string countries_for_seed = 3;
  }
}
// @section Users Targeting
message FindSeatsForLookalikeSegmentResponse {
  repeated BuyerSeat buyer_seats = 1;
  message BuyerSeat {
    // id refers to a seat persisted in teads_connect.seat
    required int64 id = 1;
    required string name = 2;
  }
}
// @section Users Targeting
message FindSeatsForRemarketingSegmentRequest {
  required SecurityContext security_context = 1;
  required int64 segment_id = 2;
}
// @section Users Targeting
message FindSeatsForRemarketingSegmentResponse {
  repeated BuyerSeat buyer_seats = 1;
  message BuyerSeat {
    // id refers to a seat persisted in teads_connect.seat
    required int64 id = 1;
    required string name = 2;
  }
}
// @section Account
message FindSellersForOfficeRequest {
  required SecurityContext security_context = 1;
  required int64 office_id = 2;
}
// @section Account
message FindSellersForOfficeResponse {
  repeated Seller sellers = 1;
  message Seller {
    required int64 profile_id = 1;
    required string email = 2;
    optional string firstname = 3;
    optional string lastname = 4;
  }
}
// @section Commercial
message FindSingleValidInvoiceRecipientForBuyerSeatAnonymouslyRequest {
  required int64 buyer_seat_id = 1;
}
// @section Commercial
message FindSingleValidInvoiceRecipientForBuyerSeatAnonymouslyResponse {
  optional string invoice_recipient_salesforce_id = 1;
}
// @section Inventory
message FindSitesForOfficesRequest {
  required SecurityContext security_context = 1;
  repeated int64 office_ids = 2;
  required Page page = 3;
  // Search on Publisher name or id
  optional string search = 4;
  // Default to active
  optional VettedInventoryStatus status = 5;
}
// @section Inventory
message FindSitesForOfficesResponse {
  repeated Site sites = 1;
  required Pagination page = 2;
  message Publisher {
    required int64 id = 1;
    optional string name = 2;
    required VettedPublisherInventoryStatus status = 3;
  }
  message ReviewerProfile {
    required int64 id = 1;
    optional string firstname = 2;
    optional string lastname = 3;
    required string email = 4;
  }
  message Site {
    required string domain = 1;
    optional string name = 2;
    optional InventoryTier inventory_tier = 3;
    optional string iab_category_code = 4;
    optional InventoryType inventory_type = 5;
    required InventoryStatus inventory_status = 6;
    optional bool is_strategic = 7 [default = false];
    optional bool is_brandsafety_whitelisted = 8 [default = false];
    repeated Publisher publishers = 9;
    optional bool is_mfa = 10;
    optional bool gdi_contains_pfi_segment = 11;
    optional string newsguard_false_content = 12;
    optional string newsguard_score = 13;
    optional string publisher_sources = 14;
    optional string article_content = 15;
    optional string main_traffic_source = 16;
    optional string ads_txt = 17;
    optional ReviewerProfile reviewer = 19;
    optional string reviewer_comment = 20;
    optional ReviewerProfile followup_reviewer = 21;
    optional string followup_reviewer_comment = 22;
    reserved 18;
  }
}
// @section Inventory
message FindSitesForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Inventory
message FindSitesForPublisherResponse {
  repeated Site sites = 1;
  message Publisher {
    required int64 id = 1;
    optional string name = 2;
  }
  message Site {
    required string domain = 1;
    optional string name = 2;
    optional InventoryTier tier = 3;
    optional string iab_category_code = 4;
    optional InventoryType inventory_type = 5;
    required InventoryStatus status = 6;
    optional bool is_strategic = 7 [default = false];
    optional bool is_brandsafety_whitelisted = 8 [default = false];
    repeated Publisher other_publishers = 9;
  }
}
// @section Inventory
message FindSitesForURIsRequest {
  required SecurityContext security_context = 1;
  repeated string website_uris = 2;
}
// @section Inventory
message FindSitesForURIsResponse {
  map<string, int64> site_ids_by_uri = 1;
}
// @section Inventory
message FindTargetedInventoryForPacksRequest {
  required SecurityContext security_context = 1;
  repeated int64 pack_ids = 2;
}
// @section Inventory
message FindTargetedInventoryForPacksResponse {
  map<int64, RelationIds> relation_ids_by_pack = 1;
  message App {
    required string store_bundle_id = 1;
    required string platform = 2;
  }
  message RelationIds {
    // This value reflects last time a pack was updated, including add/remove relations.
    optional google.protobuf.Timestamp updated_at = 1;
    repeated int64 placement_ids = 2;
    repeated App app_bundles = 3;
    repeated string site_domains = 4;
  }
}
// @section Advertiser
message FindTeadsConversionsSegmentsForBuyerRequest {
  required SecurityContext security_context = 1;
  required int64 buyer_seat_id = 2;
  required int64 advertiser_id = 3;
}
// @section Advertiser
message FindTeadsConversionsSegmentsForBuyerResponse {
  repeated BuyerPixel pixels = 1;
  message BuyerPixel {
    required int64 buyer_pixel_id = 1;
    required string buyer_pixel_name = 2;
    repeated Conversion conversions = 3;
  }
  message Conversion {
    required int64 conversion_id = 1;
    required string conversion_name = 2;
    required int64 category = 3;
    optional google.protobuf.Timestamp last_activity_date = 4;
    required int64 segment_id = 5;
    optional int64 event_order = 6;
  }
}
// @section Advertiser
message FindTeadsConversionsSegmentsForPixelRequest {
  required SecurityContext security_context = 1;
  required int64 buyer_pixel_id = 2;
  required int64 advertiser_id = 3;
}
// @section Advertiser
message FindTeadsConversionsSegmentsForPixelResponse {
  repeated Conversion conversions = 1;
  message Conversion {
    required int64 conversion_id = 1;
    required string conversion_name = 2;
    required int64 advertiser_id = 3;
    required string advertiser_name = 4;
    // We construct an advertiser-pixel rule with the conversion id
    required string rule = 5;
    required bool is_advertiser_event = 6;
  }
}
// @section Inventory
message FindTeadsFirstPartyCookieStatsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  required google.protobuf.Timestamp start_date = 3;
  required google.protobuf.Timestamp end_date = 4;
  required Integration integration = 5;
}
// @section Inventory
message FindTeadsFirstPartyCookieStatsForPublisherResponse {
  repeated FindTeadsFirstPartyCookieStatsForPublisherRow teads_first_party_cookie_stats_rows = 1;
  message FindTeadsFirstPartyCookieStatsForPublisherRow {
    optional string page_domain = 1;
    required google.protobuf.Timestamp day = 2;
    required int64 ssp_hydrated_call = 3;
    required int64 teads_first_party_cookie_ssp_hydrated_call = 4;
  }
}
// @section Account
message FindTemporaryAccountsTimeIntervalForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Account
message FindTemporaryAccountsTimeIntervalForPublisherResponse {
  optional TimeInterval temporary_accounts_granted_during = 1;
  message TimeInterval {
    required google.protobuf.Timestamp from = 1;
    required google.protobuf.Timestamp until = 2;
  }
}
// @section Inventory
message FindTermsAndConditionsAgreedForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Inventory
message FindTermsAndConditionsAgreedForPublisherResponse {
  repeated PublisherAgreedTermsAndConditions terms_and_conditions = 1;
  message PublisherAgreedTermsAndConditions {
    optional string profile_firstname = 1;
    optional string profile_lastname = 2;
    required string profile_email = 3;
    required google.protobuf.Timestamp agreement_date = 4;
    required string terms_and_condition_url = 5;
    required string terms_and_condition_name = 6;
  }
}
// @section Inventory
message FindTermsAndConditionsToAgreeToForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Inventory
message FindTermsAndConditionsToAgreeToForPublisherResponse {
  // order is significant - the first element should be agreed to before the second one
  repeated int64 terms_and_conditions = 1;
  required bool ask_for_legitimate_interest = 2;
  repeated string office_languages = 3;
  required string teads_entity_name = 4;
}
// @section Users Insights
message FindUniqueVisitorsNumberForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  required google.protobuf.Timestamp start_date = 3;
  required google.protobuf.Timestamp end_date = 4;
}
// @section Users Insights
message FindUniqueVisitorsNumberForCampaignResponse {
  required int64 unique_visitors_number = 1;
}
// @section Inventory
message FindUnvettedAppsForOfficesRequest {
  required SecurityContext security_context = 1;
  repeated int64 office_ids = 2;
  required Page page = 3;
  // Search on Publisher name or id
  optional string search = 4;
  optional UnvettedInventoryStatus status = 5;
}
// @section Inventory
message FindUnvettedAppsForOfficesResponse {
  repeated App apps = 1;
  required Pagination page = 2;
  message App {
    optional string name = 1;
    optional string store_bundle_id = 2;
    optional string store_bundle_url = 3;
    optional string technical_bundle_id = 4;
    required AppPlatform platform = 5;
    optional string iab_category_code = 6;
    optional InventoryTier inventory_tier = 7;
    optional bool is_mobile = 8 [default = false];
    optional bool is_ctv = 9 [default = false];
    optional bool is_strategic = 10 [default = false];
    optional bool is_brandsafety_whitelisted = 11 [default = false];
    required InventoryStatus inventory_status = 12;
    repeated Publisher publishers = 13;
    optional ReviewerProfile reviewer = 14;
    optional string reviewer_comment = 15;
    optional ReviewerProfile followup_reviewer = 16;
    optional string followup_reviewer_comment = 17;
    optional int64 ad_not_available_inventory_not_vetted = 18;
  }
  message Publisher {
    required int64 id = 1;
    optional string name = 2;
    optional PublisherInventoryStatus status = 3;
  }
  message ReviewerProfile {
    required int64 id = 1;
    optional string firstname = 2;
    optional string lastname = 3;
    required string email = 4;
  }
}
// @section Inventory
message FindUnvettedSitesForOfficesRequest {
  required SecurityContext security_context = 1;
  repeated int64 office_ids = 2;
  required Page page = 3;
  // Search on Publisher name or id
  optional string search = 4;
  optional UnvettedInventoryStatus status = 5;
}
// @section Inventory
message FindUnvettedSitesForOfficesResponse {
  repeated Site sites = 1;
  required Pagination page = 2;
  message Publisher {
    required int64 id = 1;
    optional string name = 2;
    optional PublisherInventoryStatus status = 3;
  }
  message ReviewerProfile {
    required int64 id = 1;
    optional string firstname = 2;
    optional string lastname = 3;
    required string email = 4;
  }
  message Site {
    required string domain = 1;
    optional string name = 2;
    optional InventoryTier inventory_tier = 3;
    optional string iab_category_code = 4;
    optional InventoryType inventory_type = 5;
    required InventoryStatus inventory_status = 6;
    optional bool is_strategic = 7 [default = false];
    optional bool is_brandsafety_whitelisted = 8 [default = false];
    repeated Publisher publishers = 9;
    optional bool is_mfa = 10;
    optional bool gdi_contains_pfi_segment = 11;
    optional string newsguard_false_content = 12;
    optional string newsguard_score = 13;
    optional string publisher_sources = 14;
    optional string article_content = 15;
    optional string main_traffic_source = 16;
    optional string ads_txt = 17;
    optional ReviewerProfile reviewer = 19;
    optional string reviewer_comment = 20;
    optional ReviewerProfile followup_reviewer = 21;
    optional string followup_reviewer_comment = 22;
    optional int64 ad_not_available_inventory_not_vetted = 23;
    reserved 18;
  }
}
// @section Campaign Visual Proof
message FindVisualProofRequestTrackingStatusUpdatesForHourAnonymouslyRequest {
  required string hour = 1;
}
// @section Campaign Visual Proof
message FindVisualProofRequestTrackingStatusUpdatesForHourAnonymouslyResponse {
  repeated RequestTrackingStatusUpdate request_tracking_status_updates = 1;
  message RequestTrackingStatusUpdate {
    required string uuid = 1;
    required google.protobuf.Timestamp update_timestamp = 2;
    required CampaignVisualProofRequestTrackingStatus from = 3;
    required CampaignVisualProofRequestTrackingStatus to = 4;
    required Transition transition = 5;
    optional string visual_proof_url = 6;
    optional bool is_failure = 7;
    optional string failure_description = 8;
  }
  enum Transition {
    TRANSITION_FROM_NIL_TO_REQUESTED = 0;
    TRANSITION_FROM_NIL_TO_FAILED = 1;
    TRANSITION_FROM_REQUESTED_TO_PROCESSED_THROUGH_ADREFORM_RESULT = 2;
    TRANSITION_FROM_REQUESTED_TO_FAILED_THROUGH_ADREFORM_RESULT = 3; // https://github.com/ebuzzing/service-api-domains/blob/master/domains/campaign-visual-proof/campaign-visual-proof-api/src/main/protobuf/events/CampaignVisualProofRequestTrackingUpdatedEvent.proto#L11
  }
}
// @section Campaign Visual Proof
message FindVisualProofRequestTrackingsForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
}
// @section Campaign Visual Proof
message FindVisualProofRequestTrackingsForCampaignResponse {
  repeated RequestTracking request_trackings = 1;
  message RequestTracking {
    required string uuid = 1;
    required int64 creative_id = 2;
    required string website_url = 3;
    required CampaignVisualProofDevice device = 4;
    oneof status {
      RequestTrackingRequested requested = 5;
      RequestTrackingProcessed processed = 6;
      RequestTrackingFailed failed = 8;
    }
    required google.protobuf.Timestamp created_at = 7;
  }
  message RequestTrackingFailed {
  }
  message RequestTrackingProcessed {
    required string visual_proof_url = 1;
    optional string filename = 2;
  }
  message RequestTrackingRequested {
  }
}
// @section Campaign Visual Proof
message FindVisualProofRequestTrackingsForHourAnonymouslyRequest {
  required string hour = 1;
}
// @section Campaign Visual Proof
message FindVisualProofRequestTrackingsForHourAnonymouslyResponse {
  repeated RequestTracking request_trackings = 1;
  message RequestTracking {
    required string uuid = 1;
    required google.protobuf.Timestamp created_at = 2;
    required int64 requester_profile_id = 3;
    required int64 campaign_id = 5;
    required int64 creative_id = 6;
    required string website_url = 7;
    required CampaignVisualProofDevice device = 8;
  }
}
// @section Inventory
message FindWebsitesForURIsRequest {
  required SecurityContext security_context = 1;
  repeated string website_uris = 2;
}
// @section Inventory
message FindWebsitesForURIsResponse {
  map<string, Websites> websites_by_uri = 1;
  message Websites {
    // Array can be empty if website uri does not exist on Teads side
    repeated int64 website_ids = 1;
  }
}
// @section Inventory
message FindWebsitesWithPlacementsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Inventory
message FindWebsitesWithPlacementsForPublisherResponse {
  repeated Website websites = 1;
  message Placement {
    required int64 id = 1;
    optional string name = 2;
    optional int64 page_id = 3;
    required PlacementIntegrationType integration_type = 4;
    // placement_type refers to manager.`format_integration_type`.name field.
    // Possible values could be "in-article" or "infeed native" for example
    optional string placement_type = 5;
    optional string iab_category = 6;
    required PlacementStatus status = 7;
    optional string iab_sub_category = 8;
    optional string label = 9;
    optional string credit = 10;
    optional bool is_header_bidding = 11;
    optional bool is_header_bidding_auto_size = 12;
  }
  message Website {
    required int64 id = 1;
    optional string name = 2;
    optional string domain = 3;
    optional WebsiteTier tier = 4;
    required string iab_category = 5;
    required WebsiteStatus status = 6;
    optional string iab_sub_category = 7;
    optional string app_store_id = 8;
    optional string android_bundle_id = 9;
    optional string ios_bundle_id = 10;
    repeated Placement placements = 11;
    required bool is_generic_for_omnichannel_feature = 12;
  }
  enum PlacementIntegrationType {
    PLACEMENT_INTEGRATION_TYPE_CLASSIC = 1;
    PLACEMENT_INTEGRATION_TYPE_HEADER_BIDDING = 2;
  }
  enum PlacementStatus {
    PLACEMENT_STATUS_ACTIVE = 1;
    PLACEMENT_STATUS_DISABLED = 2;
    PLACEMENT_STATUS_DELETED = 3;
  }
  enum WebsiteStatus {
    WEBSITE_STATUS_ACTIVE = 1;
    WEBSITE_STATUS_DISABLED = 2;
    WEBSITE_STATUS_DELETED = 3;
  }
}
// @section Traffic
message FindWhiteListedIPRangesForIPRequest {
  required SecurityContext security_context = 1;
  required string ip = 2;
}
// @section Traffic
message FindWhiteListedIPRangesForIPResponse {
  repeated WhitelistedIPRanges whitelisted_ip_ranges = 1;
  message IpRange {
    oneof ip_range {
      string cidr = 1; // 94.200.207.58/32
      string wildcard = 2; // 17.*.*.*
    }
  }
  message WhitelistedIPRanges {
    required int64 id = 1;
    required string name = 2;
    repeated IpRange ip_ranges = 3;
    required google.protobuf.Timestamp created = 4;
    required google.protobuf.Timestamp last_updated = 5;
  }
}
// @section Advertiser
message FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest {
  required SecurityContext security_context = 1;
  required int64 entity_id = 2;
}
// @section Advertiser
message FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse {
  repeated AdvertiserFirstPartySegment segments = 1;
  message AdvertiserFirstPartySegment {
    required int64 segment_id = 1;
    required AdvertiserFirstPartySegmentProvider segment_provider = 2;
  }
}
// @section Finance
message GenerateAutoBillingSheetRequest {
  required SecurityContext security_context = 1;
  required YearMonth year_month = 2;
  required int64 office_id = 3;
  // The default behavior (set to true) is to retrieve the file if it has already been generated for these month and office, or save it if it's the first time.
  // If set to false, a temporary file will be generated and sent in the response but will not be saved.
  optional bool must_persist_for_next_run_with_same_parameters = 5 [default = true];
  message YearMonth {
    required int32 month = 1;
    required int32 year = 2;
  }
}
// @section Finance
message GenerateAutoBillingSheetResponse {
  required string report_uri = 1;
}
// @section Finance
message GenerateFinanceReportRequest {
  required SecurityContext security_context = 1;
  required google.protobuf.Timestamp start_date = 2;
  required google.protobuf.Timestamp end_date = 3;
  required FinanceReportTemplate template = 4;
  repeated int64 office_ids = 6;
  // eg: Europe/Paris
  optional string timezone = 7;
}
// @section Finance
message GenerateFinanceReportResponse {
  required string report_uri = 1;
}
// @section Inventory
message GeneratePresignedURLForPublisherLogoUploadRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Inventory
message GeneratePresignedURLForPublisherLogoUploadResponse {
  // command's user MUST only use the provided URL with PNG file using a PUT HTTP request
  required string presigned_url = 1;
}
// @section Programmatic
message GenerateSellersJsonAnonymouslyRequest {
}
// @section Programmatic
// Follow exactly the sellers.json IAB spec
// https://iabtechlab.com/wp-content/uploads/2019/07/Sellers.json_Final.pdf
message GenerateSellersJsonAnonymouslyResponse {
  required string version = 1;
  required string contact_email = 2;
  repeated Identifier identifiers = 3;
  repeated Seller sellers = 4;
  message Identifier {
    required string name = 1;
    required string value = 2;
  }
  message Seller {
    required string seller_id = 1;
    optional int64 is_confidential = 2;
    required string seller_type = 3;
    optional string name = 4;
    optional string domain = 5;
  }
}
// @section Ab Testing
message GetAbTestRequest {
  required SecurityContext security_context = 1;
  required int64 ab_test_id = 2;
}
// @section Ab Testing
message GetAbTestResponse {
  required int64 ab_test_id = 1;
  required string title = 2;
  required AbtestStatus abtest_status = 3;
  required bool is_innovation_ab_test = 4;
  required SplitAlgo split_algo = 5;
  optional google.protobuf.Timestamp start_date = 6;
  optional google.protobuf.Timestamp end_date = 7;
  repeated Population populations = 8;
  repeated Analysis analysis = 9;
  optional string commentary = 10;
  repeated string affected_services = 11;
  message Analysis {
    required int64 id = 1;
    required string name = 2;
    required string description = 3;
    required int32 dashboard_id = 4;
  }
  message Population {
    required int64 id = 1;
    required string name = 2;
    required int32 size = 3;
    map<string, string> parameters = 4;
  }
}
// @section Account
message GetAccountRequest {
  required SecurityContext security_context = 1;
  required AccountId account_id = 2;
  message AccountId {
    required int64 entity_id = 1;
    required int64 profile_id = 2;
  }
}
// @section Account
message GetAccountResponse {
  required string entity_name = 1;
  required AccountType account_type = 2;
  required Profile profile = 3;
  // "Publisher Self-Served", "Teads Innovation", "Innovation feature team Platform"
  repeated string roles = 4;
  // For each permission, the authorized resource types. Example:
  //  "manage" -> ("connection", "placement"),
  //  "view" -> ("connection", "invoice", "mrg-contract", "placement")
  map<string, ResourceTypes> resource_types_by_permission = 5;
  required EntityType entity_type = 6;
  required string entity_currency = 7;
  message Profile {
    required string email = 1;
    optional string firstname = 2;
    optional string lastname = 3;
    required string locale = 4; // language_TERRITORY: en_US, fr_FR, es_ES, ...
    optional string timezone = 5; // Europe/Paris, Europe/Berlin, US/Central, ...
    required ProfileStatus status = 6;
    optional google.protobuf.Timestamp created_at = 7;
  }
  message ResourceTypes {
    repeated string values = 1;
  }
}
// @section Campaign
message GetAcquisitionStatisticsForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  optional string currency = 3; // TODO this field is deprecated, reserve its index once clients are up to date
  optional google.protobuf.Timestamp from = 4;
  optional google.protobuf.Timestamp to = 5;
  required Dimension dimension = 6;
  optional string timezone = 7 [default = "UTC"];
  enum Dimension {
    DIMENSION_LINE_ITEM = 0;
    DIMENSION_CREATIVE = 1;
    DIMENSION_COUNTRY = 2;
    DIMENSION_DEVICE = 3;
    DIMENSION_WEBSITE = 4;
    DIMENSION_DAY = 5;
    DIMENSION_PLACEMENT = 6;
  }
}
// @section Campaign
message GetAcquisitionStatisticsForCampaignResponse {
  oneof stats_by_dimension {
    LongMap stats_by_line_item = 2;
    LongMap stats_by_creative = 3;
    StringMap stats_by_country = 4; // key is the country code (like FR, DE, US, etc or "**" when undetermined)
    StringMap stats_by_device = 5; // key is the device name (or "Unknown" when undetermined)
    StringMap stats_by_website = 6; // key is the website name (or "Unknown" when undetermined)
    StringMap stats_by_day = 7; // key is an ISO 8601 representation of date without time (YYYY-MM-DD)
    StringMap stats_by_placement = 8; // key is the format_integration_typ of the placement (ie in-article, banner, ...)
  }
  message AcquisitionStats {
    required int64 impressions = 1;
    required double impression_click_through_rate = 2;
    required int64 clicks = 3;
    required double effective_cost_per_click = 4;
    required int64 qualified_visits = 5;
    required double share_of_qualified_visits = 6;
    optional double effective_cost_per_visit = 7;
    required double bounce_rate = 9;
    required double average_page_views = 10;
    required double average_time_spent_seconds = 11;
    required double effective_cost_per_mille_impressions = 15;
    required double delivered_budget = 16;
    required int64 post_click_visits = 21;
    required double landing_rate = 23;
    required double turnover = 24;
    optional double revenue_attributable = 25;
    optional double return_on_ad_spend = 26;
    required double effective_cost_per_qualified_visit = 27;
    reserved 8, 12, 13, 14, 17, 18, 19, 20, 22, 28;
  }
  message LongMap {
    map<int64, AcquisitionStats> acquisition_stats_by_dimension = 2;
    optional AcquisitionStats total = 3;
    reserved 1;
  }
  message StringMap {
    map<string, AcquisitionStats> acquisition_stats_by_dimension = 2;
    optional AcquisitionStats total = 3;
    reserved 1;
  }
}
// @section Account
message GetActiveAccountTypeAnonymouslyRequest {
  required AccountId account_id = 1;
  message AccountId {
    required int64 profile_id = 1;
    required int64 entity_id = 2;
  }
}
// @section Account
message GetActiveAccountTypeAnonymouslyResponse {
  required AccountType account_type = 1;
}
// @section Mrg Contract
message GetAdOpportunitiesFunnelForPublisherEcpmContractRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  required string contract_uuid = 3;
  // if the date interval is not specified, we default to the contract dates
  optional google.protobuf.Timestamp from = 4;
  optional google.protobuf.Timestamp to = 5;
  // The 3-letter currency code defined in ISO 4217
  optional string revenue_currency = 6;
}
// @section Mrg Contract
message GetAdOpportunitiesFunnelForPublisherEcpmContractResponse {
  required int64 total_ad_opportunities = 1;
  required int64 total_ad_opportunities_in_commitments = 2;
  required int64 total_ad_opportunities_out_of_commitment = 3;
  required int64 step_1_ad_opportunities_after_direct_sold_filtering = 4;
  required int64 step_2_ad_opportunities_after_website_filtering = 5;
  required int64 step_3_ad_opportunities_after_brand_safety_filtering = 6;
  required int64 step_4_ad_opportunities_after_user_consent_filtering = 7;
  // the ad opportunities that pass all the filters but do not fulfilled the commitment requirements (i.e geoloc, env/device)
  required int64 step_6_ad_opportunities_out_of_commitment = 9;
  repeated CommitmentStats step_6_commitments_stats = 10;
  required int64 step_5_ad_opportunities_after_commitment_criteria_filtering = 11;
  message CommitmentStats {
    required string commitment_uuid = 1;
    required int64 delivered_volume = 2;
    required double revenue = 3;
    required int64 committed_volume = 4;
    required double committed_revenue = 5;
    optional double forecast = 6;
  }
}
// @section Inventory
message GetAdTypeExclusionsForPlacementRequest {
  required SecurityContext security_context = 1;
  required int64 placement_id = 2;
}
// @section Inventory
message GetAdTypeExclusionsForPlacementResponse {
  required Exclusion adtype_exclusion_for_placement_on_desktop = 1;
  required Exclusion adtype_exclusion_for_placement_on_mobile = 2;
  message Exclusion {
    required bool device_is_blocked = 1;
    repeated int64 excluded_creative_type_families = 2;
    repeated int64 excluded_creative_types = 3;
    repeated int64 excluded_format_positions = 4;
    repeated int64 excluded_format_sizes = 5;
  }
}
// @section Users Data
message GetAdvertiserFirstPartySegmentsRequest {
  required SecurityContext security_context = 1;
  repeated Mapping mappings = 2;
  message Mapping {
    required string segment_provider = 1;
    repeated string provider_segment_ids = 2;
  }
}
// @section Users Data
message GetAdvertiserFirstPartySegmentsResponse {
  repeated AdvertiserFirstPartySegment segments = 1;
  message AdvertiserFirstPartySegment {
    required int64 provider_segment_id = 1;
    required string segment_label = 2;
    required string segment_provider = 3;
    optional int64 advertiser_id = 4;
    optional string advertiser_name = 5;
    optional bool is_ctv_usable = 6;
  }
}
// @section Advertiser
message GetAdvertiserInfoRequest {
  required SecurityContext security_context = 1;
  required int64 advertiser_id = 2;
}
// @section Advertiser
message GetAdvertiserInfoResponse {
  required int64 advertiser_id = 1;
  required string name = 2;
}
// @section Advertiser
message GetAdvertisersAnonymouslyRequest {
  repeated int64 advertiser_ids = 1;
}
// @section Advertiser
message GetAdvertisersAnonymouslyResponse {
  repeated Advertiser advertisers = 1;
  message Advertiser {
    required int64 id = 1;
    required string name = 2;
  }
}
// @section Advertiser
message GetAgenciesAnonymouslyRequest {
  repeated int64 agency_ids = 1;
}
// @section Advertiser
message GetAgenciesAnonymouslyResponse {
  repeated Agency agencies = 1;
  message Agency {
    required int64 id = 1;
    required string name = 2;
    required string address = 3;
  }
}
// @section Campaign
message GetAllCustomTargetingReasonsRequest {
  required SecurityContext security_context = 1;
  optional bool active_only = 2 [default = true];
}
// @section Campaign
message GetAllCustomTargetingReasonsResponse {
  repeated Reason reasons = 1;
  message Reason {
    required int64 id = 1;
    required string label = 2;
  }
}
// @section Account
message GetApiTokenRequest {
  required SecurityContext security_context = 1;
  required int64 api_token_id = 2;
}
// @section Account
message GetApiTokenResponse {
  required int64 api_token_id = 1;
  required string token_prefix = 2;
  optional string description = 3;
  required int64 creator_profile_id = 4;
  required int64 owner_profile_id = 5;
  required int64 owner_entity_id = 6;
  optional google.protobuf.Timestamp revoked_at = 7;
  required google.protobuf.Timestamp created_at = 8;
  optional google.protobuf.Timestamp last_used_at = 9;
}
// @section Inventory
message GetAppsRequest {
  required SecurityContext security_context = 1;
  repeated AppId app_ids = 2;
  message AppId {
    required string bundle_id = 1;
    required string platform = 2;
  }
}
// @section Inventory
message GetAppsResponse {
  repeated App apps = 1;
  message App {
    required string bundle_id = 1;
    required string platform = 2;
    optional string name = 3;
  }
}
// @section Branding Measurement
message GetAttentionStatisticsForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  optional google.protobuf.Timestamp from = 3;
  optional google.protobuf.Timestamp to = 4;
  required Dimension dimension = 5;
  enum Dimension {
    DIMENSION_LINE_ITEM = 0;
    DIMENSION_CREATIVE = 1;
    DIMENSION_COUNTRY = 2;
    DIMENSION_DEVICE = 3;
    DIMENSION_WEBSITE_APP = 4;
    DIMENSION_DAY = 5;
  }
}
// @section Branding Measurement
message GetAttentionStatisticsForCampaignResponse {
  oneof stats_by_dimension {
    LongStatsList stats_by_line_item = 1;
    LongStatsList stats_by_creative = 2;
    StringStatsList stats_by_country = 3; // dimension is the country code (like FR, US... or "**" when undetermined)
    StringStatsList stats_by_device = 4; // dimension is the device name (or "Unknown" when undetermined)
    StringStatsList stats_by_website_app = 5; // dimension is the website name | app information (or "Unknown" when undetermined)
    StringStatsList stats_by_day = 6; // dimension is an ISO 8601 representation of date without time (YYYY-MM-DD)
  }
  message LongStats {
    required Stats stats = 1;
    required int64 dimension = 2;
  }
  message LongStatsList {
    repeated LongStats stats = 1;
  }
  message Stats {
    optional int64 advertiser_billable_volume = 1;
    optional double lumen_dwell_time = 2; // in seconds
    optional double lumen_view_time = 3; // in seconds
    optional double turnover_value = 4;
    optional int64 lumen_analyzed_impression = 5;
    optional int64 line_item_id = 6;
    optional double lumen_estimate_viewed_impression = 7;
  }
  message StringStats {
    required Stats stats = 1;
    required string dimension = 2;
  }
  message StringStatsList {
    repeated StringStats stats = 1;
  }
}
// @section Users Data
message GetAudienceByChannelAndTypeRequest {
  required SecurityContext security_context = 1;
  required int64 audience_public_id = 2;
  required AudienceChannel audience_channel = 3;
  required AudienceType audience_type = 4;
}
// @section Users Data
message GetAudienceByChannelAndTypeResponse {
  required int64 audience_public_id = 1;
  required int64 entity_id = 2;
  required string name = 3;
  required AudienceChannel audience_channel = 4;
  required AudienceType audience_type = 5;
  required AudienceStatus status = 6;
  // TBL rule in String format
  optional string tbl_rule = 7;
  repeated Mapping mappings = 8;
  required bool is_cookieless_compliant = 9;
  message DimensionsMapping {
    repeated string exelate_ids = 1;
    repeated string bluekai_ids = 2;
    repeated string liveramp_ids = 3;
    repeated string emetriq_ids = 4;
    repeated string teads_segments = 5;
    repeated string grapeshot_channels = 6;
    repeated string website_ids = 7;
    repeated string pack_ids = 8;
    repeated string altice_us_ids = 9;
    repeated string altice_fr_ids = 10;
    repeated string zeotap_ids = 11;
    repeated string skp_ids = 12;
    repeated string contextual_ids = 13;
    repeated string retargetly_ids = 14;
  }
  message Mapping {
    // The countries are represented by codes from Digital Elements, for example: ["6#124","6#840"]
    // if the array of countries is empty => default mapping
    repeated string countries = 1;
    required DimensionsMapping dimensions_mapping = 2;
  }
}
// @section Users Data
message GetAudienceFeesForDirectSalesPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Users Data
message GetAudienceFeesForDirectSalesPublisherResponse {
  repeated AudienceFee audience_fees = 1;
  message AudienceFee {
    required DirectSalesPublisherAudienceFeeType audience_fee_type = 1;
    // The 3-letter currency code defined in ISO 4217
    required string currency = 2;
    oneof pricing_model {
      Standard standard = 3;
      Waived waived = 4;
      Trial trial = 5;
    }
  }
  message Standard {
    required double value = 1;
  }
  message Trial {
    required google.protobuf.Timestamp trial_period_start = 1;
    required google.protobuf.Timestamp trial_period_end = 2;
  }
  message Waived {
    required double value = 1;
    required google.protobuf.Timestamp waived_period_start = 2;
    optional google.protobuf.Timestamp waived_period_end = 3;
  }
}
// @section Users Data
message GetAudienceRequest {
  required SecurityContext security_context = 1;
  required int64 audience_id = 2;
}
// @section Users Data
message GetAudienceResponse {
  required int64 audience_id = 1;
  required int64 entity_id = 2;
  required string name = 3;
  required AudienceFlavor type = 4;
  required AudienceStatus status = 5;
  optional string rule = 6;
  required AudienceType audience_type = 7;
}
// @section Users Data
message GetAudiencesAnonymouslyRequest {
  repeated int64 audience_ids = 1;
}
// @section Users Data
message GetAudiencesAnonymouslyResponse {
  repeated Audience audiences = 1;
  message Audience {
    required int64 audience_id = 1;
    required AudienceFlavor type = 2;
    optional string rule = 3;
    required google.protobuf.Timestamp last_updated_at = 4;
    required bool restrict_reach_precomputing = 5;
    required AudienceStatus status = 6;
    required AudienceType audience_type = 7;
    required string name = 8;
    optional int64 audience_category_id = 9;
    optional int64 audience_public_id = 10;
  }
}
// @section Campaign
message GetAuditEntriesForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
}
// @section Campaign
message GetAuditEntriesForCampaignResponse {
  repeated Entry entries = 1;
  message Entry {
    required int64 resource_id = 1;
    required google.protobuf.Timestamp event_date = 2;
    optional Profile profile = 3;
    repeated Operation operations = 4;
    oneof resource {
      int64 campaign_id = 5;
      int64 line_item_id = 6;
      int64 creative_id = 7;
    }
  }
  message Operation {
    required UpdatedAttribute updated_attribute = 1;
    optional string old_value = 2;
    optional string new_value = 3;
    required string description = 4;
    required Action action = 5;
  }
  message Profile {
    required int64 id = 1;
    optional string firstname = 2;
    optional string lastname = 3;
    optional string email = 4;
  }
  enum Action {
    ACTION_CREATE = 0;
    ACTION_UPDATE = 1;
    ACTION_DELETE = 2;
  }
  enum UpdatedAttribute {
    UPDATED_ATTRIBUTE_LINE_ITEM_BUDGET = 0;
    UPDATED_ATTRIBUTE_LINE_ITEM_STATUS = 1;
    UPDATED_ATTRIBUTE_LINE_ITEM_OPTIMIZATION_KPI = 2;
    UPDATED_ATTRIBUTE_LINE_ITEM_SELLING_EVENT = 3;
    UPDATED_ATTRIBUTE_LINE_ITEM_SELLING_PRICE = 4;
    UPDATED_ATTRIBUTE_LINE_ITEM_START_DATE = 5;
    UPDATED_ATTRIBUTE_LINE_ITEM_END_DATE = 6;
    UPDATED_ATTRIBUTE_LINE_ITEM_ASAP = 7;
    UPDATED_ATTRIBUTE_LINE_ITEM_PRIORITY = 8;
    UPDATED_ATTRIBUTE_LINE_ITEM_VOLUME_EVENT = 9;
    UPDATED_ATTRIBUTE_LINE_ITEM_VOLUME_PERIOD = 10;
    UPDATED_ATTRIBUTE_LINE_ITEM_VOLUME_STATUS = 11;
    UPDATED_ATTRIBUTE_STATUS = 12;
    UPDATED_ATTRIBUTE_MOAT = 13;
    UPDATED_ATTRIBUTE_LINE_ITEM_OPTIMIZATION_KPI_THRESHOLD = 14;
    UPDATED_ATTRIBUTE_LINE_ITEM_OPTIMIZATION_KPI_TARGET = 15;
    UPDATED_ATTRIBUTE_PACK = 16;
    UPDATED_ATTRIBUTE_CREATIVE_START_DATE = 17;
    UPDATED_ATTRIBUTE_CREATIVE_END_DATE = 18;
    UPDATED_ATTRIBUTE_CREATIVE_VIEWABILITY_PARTNER = 19;
    UPDATED_ATTRIBUTE_TEST = 20;
    UPDATED_ATTRIBUTE_LINE_ITEM_LOOKBACK_CLICK = 21;
    UPDATED_ATTRIBUTE_LINE_ITEM_LOOKBACK_VIEW = 22;
    UPDATED_ATTRIBUTE_LINE_ITEM_ACTIVATION_DATE = 23;
    UPDATED_ATTRIBUTE_LINE_ITEM_CONVERSION_PIXELS = 24;
    UPDATED_ATTRIBUTE_LINE_ITEM_ASSIGNED_CREATIVE = 25;
    UPDATED_ATTRIBUTE_LINE_ITEM_CAPPING = 26;
    UPDATED_ATTRIBUTE_LINE_ITEM_CAPPING_EVENT = 27;
    UPDATED_ATTRIBUTE_LINE_ITEM_CAPPING_PERIOD = 28;
    UPDATED_ATTRIBUTE_LINE_ITEM_RULE = 29;
    UPDATED_ATTRIBUTE_LINE_ITEM_FREE = 30;
    UPDATED_ATTRIBUTE_LINE_ITEM_CONVERSION = 31;
    UPDATED_ATTRIBUTE_LINE_ITEM_PIXEL = 32;
    UPDATED_ATTRIBUTE_LINE_ITEM_PIXEL_URL = 33;
    UPDATED_ATTRIBUTE_LINE_ITEM_ASSIGNED_CREATIVE_DELIVERY_RATE = 34;
    UPDATED_ATTRIBUTE_ACTIVATION_DATE = 35;
    UPDATED_ATTRIBUTE_LINE_ITEM_TIME_INTERVAL = 36;
    UPDATED_ATTRIBUTE_LINE_ITEM_TIME_INTERVAL_EVENT = 37;
    UPDATED_ATTRIBUTE_LINE_ITEM_TIME_INTERVAL_PERIOD = 38;
    UPDATED_ATTRIBUTE_LINE_ITEM_VOLUME = 39;
    UPDATED_ATTRIBUTE_CREATIVE_POOL_RATE = 40;
    UPDATED_ATTRIBUTE_LINE_ITEM_PACING = 41;
    UPDATED_ATTRIBUTE_ADVERTISER = 42;
    UPDATED_ATTRIBUTE_AGENCY = 43;
    UPDATED_ATTRIBUTE_SEAT = 44;
    UPDATED_ATTRIBUTE_NAME = 45;
    UPDATED_ATTRIBUTE_OBJECTIVE = 46;
    UPDATED_ATTRIBUTE_AGENCY_FEE_RATE = 47;
    UPDATED_ATTRIBUTE_CREATIVE_NAME = 48;
    UPDATED_ATTRIBUTE_CREATIVE_EXTERNAL_INTEGRATION_CODE = 49;
    UPDATED_ATTRIBUTE_CREATIVE_TYPE = 50;
    UPDATED_ATTRIBUTE_CREATIVE_SIZE = 51;
    UPDATED_ATTRIBUTE_CREATIVE_JSON = 52;
    UPDATED_ATTRIBUTE_CREATIVE_VIEWABILITY_TAG = 53;
    UPDATED_ATTRIBUTE_CREATIVE_PIXEL_CUSTOMS = 54;
    UPDATED_ATTRIBUTE_EXTERNAL_NAME = 55;
    UPDATED_ATTRIBUTE_EXTERNAL_INTEGRATION_CODE = 56;
    UPDATED_ATTRIBUTE_USES_DYNAMIC_BUDGET_ALLOCATION = 57;
    UPDATED_ATTRIBUTE_CATEGORY = 58;
    UPDATED_ATTRIBUTE_BUDGET = 59;
    UPDATED_ATTRIBUTE_BUDGET_ADVERTISER = 60;
    UPDATED_ATTRIBUTE_ADDED_VALUE_BUDGET = 61;
    UPDATED_ATTRIBUTE_ADDED_VALUE_BUDGET_ADVERTISER = 62;
    UPDATED_ATTRIBUTE_CURRENCY = 63;
    UPDATED_ATTRIBUTE_FLIGHT_START_DATE = 64;
    UPDATED_ATTRIBUTE_FLIGHT_END_DATE = 65;
    UPDATED_ATTRIBUTE_FLIGHT_TIMEZONE = 66;
    UPDATED_ATTRIBUTE_LINE_ITEM_FORMAT_POSITIONS = 67;
    UPDATED_ATTRIBUTE_LINE_ITEM_COOKIELESS_CRITERIA_ONLY = 68;
    UPDATED_ATTRIBUTE_LINE_ITEM_CATEGORY = 69;
    UPDATED_ATTRIBUTE_LINE_ITEM_BILLING_TYPE = 70;
    UPDATED_ATTRIBUTE_LINE_ITEM_START_MODE = 71;
    UPDATED_ATTRIBUTE_LINE_ITEM_MAX_DAILY_BUDGET = 72;
    UPDATED_ATTRIBUTE_LINE_ITEM_PLANNING_MON = 73;
    UPDATED_ATTRIBUTE_LINE_ITEM_PLANNING_TUE = 74;
    UPDATED_ATTRIBUTE_LINE_ITEM_PLANNING_WED = 75;
    UPDATED_ATTRIBUTE_LINE_ITEM_PLANNING_THU = 76;
    UPDATED_ATTRIBUTE_LINE_ITEM_PLANNING_FRI = 77;
    UPDATED_ATTRIBUTE_LINE_ITEM_PLANNING_SAT = 78;
    UPDATED_ATTRIBUTE_LINE_ITEM_PLANNING_SUN = 79;
    UPDATED_ATTRIBUTE_LINE_ITEM_ONLY_ONE_BILLABLE_PER_AUCTION = 80;
    UPDATED_ATTRIBUTE_LINE_ITEM_NAME = 81;
    UPDATED_ATTRIBUTE_CREATIVE_WRAPPED_VAST = 82;
    UPDATED_ATTRIBUTE_LINE_ITEM_BILLING_MODEL_NAME = 83;
    UPDATED_ATTRIBUTE_LINE_ITEM_BILLING_MODEL_OPTIMIZATION_NAME = 84;
    UPDATED_ATTRIBUTE_LINE_ITEM_GUARANTEED_FLAG = 85;
    UPDATED_ATTRIBUTE_LINE_ITEM_MIN_MARGIN = 86;
    UPDATED_ATTRIBUTE_CAMPAIGN_AD_COLLISION_FLAG = 87;
    UPDATED_ATTRIBUTE_CREATIVE_STATUS = 88;
    UPDATED_ATTRIBUTE_CAMPAIGN_DELIVERY_FOR_WEBSITE_FLAG = 89;
    UPDATED_ATTRIBUTE_LINE_ITEM_DELIVERY_FOR_WEBSITE_FLAG = 90;
    UPDATED_ATTRIBUTE_LINE_ITEM_MINIMUM_VISIBILITY_THRESHOLD = 91;
    UPDATED_ATTRIBUTE_CAMPAIGN_PERFORMANCE_REACHCAST_FLAG = 92;
    UPDATED_ATTRIBUTE_CAMPAIGN_MIGRATION_TO_MANAGED_REASON = 93;
    UPDATED_ATTRIBUTE_CAMPAIGN_CAPPING = 94;
    UPDATED_ATTRIBUTE_CAMPAIGN_CAPPING_EVENT = 95;
    UPDATED_ATTRIBUTE_CAMPAIGN_CAPPING_PERIOD = 96;
    UPDATED_ATTRIBUTE_CAMPAIGN_HAS_MANUAL_DAILY_BUDGET = 97;
    UPDATED_ATTRIBUTE_CAMPAIGN_PAID_DAILY_BUDGET = 98;
    UPDATED_ATTRIBUTE_CAMPAIGN_START_DELIVERY_FOR_WEBSITE = 99;
    UPDATED_ATTRIBUTE_CAMPAIGN_STOP_DELIVERY_FOR_WEBSITE = 100;
    UPDATED_ATTRIBUTE_LINE_ITEM_START_DELIVERY_FOR_WEBSITE = 101;
    UPDATED_ATTRIBUTE_LINE_ITEM_STOP_DELIVERY_FOR_WEBSITE = 102;
    UPDATED_ATTRIBUTE_LINE_ITEM_TARGETING = 103;
    UPDATED_ATTRIBUTE_LINE_ITEM_BUDGET_ADVERTISER = 104;
  }
}
// @section Campaign Support
message GetAuditEntriesForCampaignSupportRequestRequest {
  required SecurityContext security_context = 1;
  required uint64 support_request_id = 2;
}
// @section Campaign Support
message GetAuditEntriesForCampaignSupportRequestResponse {
  repeated AuditEvent audit_events = 1;
  message AuditEvent {
    oneof event {
      CampaignSupportRequestCreatedEvent created_event = 1;
      CampaignSupportRequestDescriptionUpdatedEvent description_updated_event = 2;
      CampaignSupportRequestStatusUpdatedEvent status_updated_event = 3;
    }
    required google.protobuf.Timestamp date = 4;
  }
}
// @section Ab Testing
message GetAuditForAbTestRequest {
  required SecurityContext security_context = 1;
  required int64 ab_test_id = 2;
}
// @section Ab Testing
message GetAuditForAbTestResponse {
  repeated AuditEntry audit_entries = 1;
  message Account {
    required int64 profile_id = 1;
    required int64 entity_id = 2;
    optional string first_name = 3;
    optional string last_name = 4;
  }
  message AuditEntry {
    required Action action = 1;
    required google.protobuf.Timestamp date = 2;
    required Account account = 3;
    required string description = 4;
  }
  enum Action {
    ACTION_CREATE_AB_TEST = 1;
    ACTION_START_AB_TEST = 2;
    ACTION_CANCEL_SCHEDULED_AB_TEST_START = 3;
    ACTION_UPDATE_RUNNING_AB_TEST = 4;
    ACTION_DEPLOY_AB_TEST = 5;
    ACTION_STOP_AB_TEST = 6;
  }
}
// @section Mrg Contract
message GetAuditedCommandsForMrgContractRequest {
  required SecurityContext security_context = 1;
  required string mrg_contract_uuid = 2;
}
// @section Mrg Contract
message GetAuditedCommandsForMrgContractResponse {
  repeated AuditedCommand audited_commands = 1;
  message AuditedCommand {
    required google.protobuf.Timestamp date = 1;
    required int64 profile_id = 2;
    required string command = 3;
  }
}
// @section Account
message GetAvailablePaymentModesForPublisherSettingRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_setting_id = 2;
}
// @section Account
message GetAvailablePaymentModesForPublisherSettingResponse {
  repeated PaymentMode payment_modes = 1;
}
// @section Inventory
message GetBankSettingsAuditForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Inventory
message GetBankSettingsAuditForPublisherResponse {
  repeated AuditedBankSettingsChange changes = 1;
  message AuditedBankSettingsChange {
    required google.protobuf.Timestamp date = 1;
    oneof updated_by {
      TeadsAccount teads_account = 2;
      PublisherAccount publisher_account = 3;
    }
    repeated PublisherSettingsUpdate updates = 10;
  }
  message PublisherAccount {
    required int64 profile_id = 1;
    optional string first_name = 2;
    optional string last_name = 3;
  }
  message PublisherSettingsUpdate {
    required string field = 1;
    required string value = 2;
  }
  message TeadsAccount {
    required int64 profile_id = 1;
  }
}
// @section Finance
message GetBillingSettingsByOfficeForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Finance
message GetBillingSettingsByOfficeForPublisherResponse {
  map<int64, BillingSettings> settings_by_office = 1;
  message BillingSettings {
    required string office_name = 1;
    required bool is_payment_off_platform = 2;
  }
}
// @section Inventory
message GetBlockedDemandTypesForPlacementRequest {
  required SecurityContext security_context = 1;
  required int64 placement_id = 2;
}
// @section Inventory
message GetBlockedDemandTypesForPlacementResponse {
  repeated int64 demand_type_ids = 1;
}
// @section Campaign
message GetBrandPulseEligibilityForReferenceCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
}
// @section Campaign
message GetBrandPulseEligibilityForReferenceCampaignResponse {
  required int64 campaign_id = 1;
  required string name = 2;
  required int64 advertiser_id = 3;
  required string advertiser_name = 4;
  required double budget = 5;
  required string currency = 6;
  required google.protobuf.Timestamp start_date = 7;
  required google.protobuf.Timestamp end_date = 8;
  repeated LineItem line_items = 9;
  required BrandPulseEligibility eligibility = 10;
  optional string objective = 11;
  message BrandPulseEligibility {
    required bool does_tbl_contains_or = 1;
    required bool is_campaign_with_different_tbl = 2;
    required bool can_user_access_advertiser_data = 3;
    required bool can_user_manage_campaign = 4;
  }
  message LineItem {
    required int64 line_item_id = 1;
    required string name = 2;
    repeated Creative creatives = 5;
    message Creative {
      required int64 creative_id = 1;
      required string name = 2;
      required MediaType media_type = 3;
      enum MediaType {
        MEDIA_TYPE_VIDEO = 0;
        MEDIA_TYPE_VIEWABLE_DISPLAY = 1;
      }
    }
  }
}
// @section Campaign
message GetBrandPulseEligibilityForSalesforceOpportunityRequest {
  required SecurityContext security_context = 1;
  required string salesforce_opportunity_id = 2;
}
// @section Campaign
message GetBrandPulseEligibilityForSalesforceOpportunityResponse {
  required string salesforce_opportunity_id = 1;
  required string name = 2;
  required int64 advertiser_id = 3;
  required string advertiser_name = 4;
  required double budget = 5;
  required string currency = 6;
  required google.protobuf.Timestamp start_date = 7;
  required google.protobuf.Timestamp end_date = 8;
  repeated Connection connections = 9;
  required BrandPulseEligibility eligibility = 10;
  optional string objective = 11;
  message BrandPulseEligibility {
    required bool does_tbl_contain_or = 1;
    required bool is_opportunity_with_different_tbl = 2;
    required bool can_user_access_advertiser_data = 3;
    required bool can_user_manage_campaign = 4;
  }
  message Connection {
    required int64 connection_id = 1;
    required string name = 2;
    required int64 advertiser_id = 3;
    required string advertiser_name = 4;
  }
}
// @section Account
message GetBuyerAccountRequest {
  required SecurityContext security_context = 1;
  required BuyerAccount buyer_account = 2;
  message BuyerAccount {
    required int64 entity_id = 1;
    required int64 profile_id = 2;
  }
}
// @section Account
message GetBuyerAccountResponse {
  required int64 profile_id = 1;
  required string email = 2;
  optional string locale = 3;
  optional string firstname = 4;
  optional string lastname = 5;
  // must contain only buyer roles of the account (ie buying-interface roles only)
  repeated string buyer_roles = 6;
  optional string timezone = 7;
}
// @section Users Data
message GetBuyerPersonaRequest {
  required SecurityContext security_context = 1;
  required int64 persona_id = 3;
  reserved 2;
}
// @section Users Data
message GetBuyerPersonaResponse {
  required int64 persona_id = 1;
  required string name = 2;
  repeated Block blocks = 3;
  required PersonaStatus status = 4;
  required google.protobuf.Timestamp created_at = 5;
  required google.protobuf.Timestamp updated_at = 6;
  optional Block excluded_block = 7;
  optional AudienceChannel channel = 8;
  optional int64 profile_id = 9;
  optional int64 advertiser_id = 10;
  optional Entity entity = 11;
  optional bool is_cookieless_compliant = 12;
  message Block {
    optional string name = 1;
    required DimensionsMapping dimensions_mapping = 2;
  }
  message DimensionsMapping {
    repeated string exelate_ids = 1;
    repeated string bluekai_ids = 2;
    repeated string liveramp_ids = 3;
    repeated string emetriq_ids = 4;
    repeated string audience_ids = 5;
    repeated string grapeshot_channels = 6;
    repeated string skp_ids = 7;
    repeated string zeotap_ids = 8;
    repeated string contextual_ids = 9;
    repeated string retargetly_ids = 10;
    repeated string altice_us_ids = 11;
    repeated string comscore_audience_ids = 12;
    repeated string altice_fr_ids = 13;
    repeated string crossix_ids = 14;
  }
  message Entity {
    required int64 id = 1;
    required string name = 2;
  }
}
// @section Advertiser
message GetBuyerPixelRequest {
  required SecurityContext security_context = 1;
  required int64 pixel_id = 2;
}
// @section Advertiser
message GetBuyerPixelResponse {
  required string name = 1;
  optional string domain = 2;
  required int64 target_advertiser_id = 3;
  required string target_advertiser_name = 4;
  required bool is_migrated_from_ms = 5;
  required int64 owner_seat_id = 6;
  required string owner_seat_name = 7;
  required SharingMode sharing_mode = 8;
  required bool is_in_tracking_blocklist = 9;
  repeated string blocklisted_domains = 10;
}
// @section Users Data
message GetBuyerPlannedTargetingRequest {
  required SecurityContext security_context = 1;
  required int64 planned_targeting_id = 2;
}
// @section Users Data
message GetBuyerPlannedTargetingResponse {
  required int64 planned_targeting_id = 1;
  required string name = 2;
  required Targeting targeting = 3;
  required bool is_cookieless = 4;
  required google.protobuf.Timestamp created_at = 5;
  required google.protobuf.Timestamp updated_at = 6;
  optional UsersDataEnvironmentChannel channel = 7;
  message Targeting {
    repeated RuleDisjunction conjunctions = 1;
    required AudiencesDeliveryType demographic_audiences_delivery_type = 2;
    required AudiencesAccuracyLevel other_audiences_accuracy_level = 3;
    message RuleDisjunction {
      repeated Rule rules = 1;
      message Rule {
        required TargetingCriterion criterion = 1;
        required TargetingRuleOperator operator = 2;
        repeated string values = 3;
      }
    }
  }
}
// @section Account
message GetBuyerSeatInfoAnonymouslyRequest {
  required int64 seat_id = 1;
}
// @section Account
message GetBuyerSeatInfoAnonymouslyResponse {
  required string seat_name = 1;
  required int64 seat_entity_id = 2;
}
// @section Account
message GetBuyerSeatInfoForBuyerEntityAnonymouslyError {
  repeated Error errors = 1;
  message Error {
    oneof error_type {
      SeatNotFound seat_not_found = 1;
    }
  }
  message SeatNotFound {
  }
}
// @section Account
message GetBuyerSeatInfoForBuyerEntityAnonymouslyRequest {
  required int64 seat_entity_id = 1;
}
// @section Account
message GetBuyerSeatInfoForBuyerEntityAnonymouslyResponse {
  required int64 seat_id = 1;
  required string seat_name = 2;
  required BuyerSeatStatus status = 3;
  enum BuyerSeatStatus {
    BUYER_SEAT_STATUS_ENABLED = 1;
    BUYER_SEAT_STATUS_DISABLED = 2;
    BUYER_SEAT_STATUS_PENDING_CLIENT_INPUT = 3;
    BUYER_SEAT_STATUS_PENDING_TEADS_INPUT = 4;
  }
}
// @section Advertiser
message GetBuyerSeatRequest {
  required SecurityContext security_context = 1;
  required int64 seat_id = 2;
}
// @section Advertiser
message GetBuyerSeatResponse {
  required int64 seat_id = 1;
  required OfficeInfo office = 2;
  required string name = 3;
  required BuyerServiceLevel service_level = 4;
  required BuyerSeatStatus status = 5;
  optional MsaType msa_type = 6;
  required BuyerSeatType type = 7;
  required double fee = 8;
  repeated SeatHistoryItemInfo history_items = 9;
  required google.protobuf.Timestamp created_at = 10;
  required int64 entity_id = 11;
  required BuyerSeatStatusFlag client_msa = 12;
  required BuyerSeatStatusFlag client_billing_details = 13;
  required BuyerSeatStatusFlag teads_finance_approval = 14;
  optional string salesforce_id = 15;
  optional string contract_id = 16;
  oneof buyer_id {
    int64 agency_id = 17;
    int64 advertiser_id = 18;
  }
  optional string salesforce_seat_id = 19;
  message OfficeInfo {
    required int64 office_id = 1;
    required string office_name = 2;
  }
  message Profile {
    required int64 profile_id = 1;
    required string email = 2;
  }
  message SeatHistoryItemInfo {
    required int64 id = 1;
    required int64 seat_id = 2;
    required Profile profile = 3;
    required string resource_name = 4;
    optional string old_value = 5;
    required string new_value = 6;
    required google.protobuf.Timestamp created_at = 7;
  }
}
// @section Campaign
message GetCampaignDetailsRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
}
// @section Campaign
message GetCampaignDetailsResponse {
  required string campaign_name = 1;
  required int64 campaign_id = 2;
  optional Advertiser advertiser = 3;
  required TimeInterval io_time_interval = 4;
  optional CampaignType campaign_type = 5;
  required string timezone = 6;
  required double total_budget = 7;
  optional double total_free_budget = 8;
  // The 3-letter currency code defined in ISO 4217
  required string currency = 9;
  repeated InsertionOrderLine insertion_order_lines = 10;
  repeated LineItem line_items = 11;
  repeated Creative creatives = 12;
  required Objective objective = 13;
  required bool is_dynamic_budget_allocation_enabled = 14;
  optional string salesforce_opportunity_id = 15;
  optional bool is_created_by_salesforce = 16;
  optional bool is_moat_unsampled = 17;
  optional AdvertisingSolutionId advertising_solution_id = 18;
  required bool is_managed = 19; // this field does not have any meaning for Draft Campaign because a draft can be both managed and self-served
  message Advertiser {
    required int64 id = 1;
    required string name = 2;
  }
  message Creative {
    required int64 id = 1;
    required string name = 2;
    optional string format_type_family_name = 3;
    optional string format_type_name = 4;
    optional string format_size_name = 5;
  }
  message InsertionOrderLine {
    required int64 id = 1;
    required string name = 2;
    required TimeInterval time_interval = 3;
    optional int64 booked_volume = 8;
    optional double booked_budget = 9;
    optional string salesforce_opportunity_line_item_id = 10;
    optional int64 booked_free_volume = 11;
    optional double booked_free_budget = 12;
    optional InsertionOrderLineBillingModel billing_model = 13;
    optional double billing_model_rate = 14;
    optional string billing_event = 15;
    optional InsertionOrderLineAuctionType auction_type = 16;
    optional InsertionOrderLineCreativeTypeFamily creative_type_family = 17;
    optional bool is_guaranteed = 18;
  }
  message LineItem {
    required int64 id = 1;
    required string name = 2;
    optional TimeInterval time_interval = 3;
    required string event_gross_rate = 4;
    required BillingModel billing_model = 5;
    required PricingType pricing_type = 6;
    optional int64 is_free = 7;
    optional int64 booked_volume = 8;
    optional double booked_budget = 9;
  }
  message TimeInterval {
    required google.protobuf.Timestamp start_date = 1;
    required google.protobuf.Timestamp end_date = 2;
  }
  enum BillingModel {
    BILLING_MODEL_CPM = 1;
    BILLING_MODEL_VCPM = 2;
    BILLING_MODEL_CPCV = 3;
    BILLING_MODEL_CPC = 4;
    BILLING_MODEL_CPIV = 5;
    BILLING_MODEL_CUSTOM_SECOND = 6;
    BILLING_MODEL_OTHER = 7;
  }
  enum CampaignType {
    CAMPAIGN_TYPE_AGENCY = 1;
    CAMPAIGN_TYPE_MEDIA = 2;
    CAMPAIGN_TYPE_ELITE = 3;
    CAMPAIGN_TYPE_CONNECT = 4;
    CAMPAIGN_TYPE_PERFORMANCE = 5;
  }
  enum Objective {
    OBJECTIVE_TRAFFIC_ACQUISITION = 1;
    OBJECTIVE_BRANDING = 2;
    OBJECTIVE_OTHER = 3;
    OBJECTIVE_CONVERSIONS = 4;
  }
  enum PricingType {
    PRICING_TYPE_DYNAMIC = 1;
    PRICING_TYPE_FIXED = 2;
    PRICING_TYPE_UNKNOWN = 3;
  }
}
// @section Campaign
message GetCampaignNameAnonymouslyRequest {
  required int64 campaign_id = 1;
}
// @section Campaign
message GetCampaignNameAnonymouslyResponse {
  required string campaign_name = 1;
}
// @section Campaign Setup
message GetCampaignRequest {
  required SecurityContext security_context = 1;
  required uint64 campaign_id = 2;
}
// @section Campaign Setup
message GetCampaignResponse {
  required Campaign campaign = 1;
  message AssignedCreatives {
    required CreativeCategory category = 1;
    repeated AssignedCreative creatives = 2;
    required bool enable_optimization = 3;
    required PlayerMode player_mode = 4;
    message AssignedCreative {
      required uint64 id = 1;
      required uint64 delivery_share = 2;
    }
    enum PlayerMode {
      PLAYER_MODE_VIEW_TO_START = 0;
      PLAYER_MODE_VIEW_TO_PLAY = 1;
      PLAYER_MODE_VIEW_TO_PLAY_UNTIL = 2;
    }
  }
  message Billing {
    oneof target_objective {
      Branding branding = 1;
      Conversions conversions = 2;
      TrafficAcquisition traffic_acquisition = 3;
    }
    message Branding {
      oneof pricing_model {
        CostPerMille cost_per_mille = 1;
        ViewableCostPerMille viewable_cost_per_mille = 2;
        CostPerCompletedView cost_per_completed_view = 3;
        CostPerView cost_per_view = 4;
      }
      message ClickThroughRateOptimization {
        optional double target_rate = 1;
      }
      message CompleteRateOptimization {
        optional double target_rate = 1;
      }
      message CostPerCompletedView {
        required double price = 1;
        required AuctionType auction_type = 2;
        required BillableEvent billable_event = 3;
        optional double bid_recommendation = 4;
        optional uint32 ad_visibility = 5;
      }
      message CostPerMille {
        required double price = 1;
        required AuctionType auction_type = 2;
        optional double bid_recommendation = 3;
        oneof optimization {
          CompleteRateOptimization complete_rate_optimization = 4;
          ViewabilityRateOptimization viewability_rate_optimization = 5;
          ClickThroughRateOptimization click_through_rate_optimization = 6;
        }
        optional uint32 ad_visibility = 7;
      }
      message CostPerView {
        required double price = 1;
        required AuctionType auction_type = 2;
        required BillableEvent billable_event = 3;
        optional double bid_recommendation = 4;
      }
      message ViewabilityRateOptimization {
        optional double target_rate = 1;
      }
      message ViewableCostPerMille {
        required double price = 1;
        required AuctionType auction_type = 2;
        required BillableEvent billable_event = 3;
        optional double bid_recommendation = 4;
        optional uint32 ad_visibility = 5;
      }
      enum BillableEvent {
        BILLABLE_EVENT_CLICK = 0;
        BILLABLE_EVENT_IMPRESSION = 1;
        BILLABLE_EVENT_START = 2;
        BILLABLE_EVENT_MID_POINT = 3;
        BILLABLE_EVENT_COMPLETE = 4;
        BILLABLE_EVENT_PROGRESS_1 = 5;
        BILLABLE_EVENT_PROGRESS_2 = 6;
        BILLABLE_EVENT_PROGRESS_3 = 7;
        BILLABLE_EVENT_PROGRESS_4 = 8;
        BILLABLE_EVENT_PROGRESS_5 = 9;
        BILLABLE_EVENT_PROGRESS_6 = 10;
        BILLABLE_EVENT_PROGRESS_7 = 11;
        BILLABLE_EVENT_PROGRESS_8 = 12;
        BILLABLE_EVENT_PROGRESS_9 = 13;
        BILLABLE_EVENT_PROGRESS_10 = 14;
        BILLABLE_EVENT_PROGRESS_11 = 15;
        BILLABLE_EVENT_PROGRESS_12 = 16;
        BILLABLE_EVENT_PROGRESS_13 = 17;
        BILLABLE_EVENT_PROGRESS_14 = 18;
        BILLABLE_EVENT_PROGRESS_15 = 19;
        BILLABLE_EVENT_PROGRESS_16 = 20;
        BILLABLE_EVENT_PROGRESS_17 = 21;
        BILLABLE_EVENT_PROGRESS_18 = 22;
        BILLABLE_EVENT_PROGRESS_19 = 23;
        BILLABLE_EVENT_PROGRESS_20 = 24;
        BILLABLE_EVENT_PROGRESS_21 = 25;
        BILLABLE_EVENT_PROGRESS_22 = 26;
        BILLABLE_EVENT_PROGRESS_23 = 27;
        BILLABLE_EVENT_PROGRESS_24 = 28;
        BILLABLE_EVENT_PROGRESS_25 = 29;
        BILLABLE_EVENT_PROGRESS_26 = 30;
        BILLABLE_EVENT_PROGRESS_27 = 31;
        BILLABLE_EVENT_PROGRESS_28 = 32;
        BILLABLE_EVENT_PROGRESS_29 = 33;
        BILLABLE_EVENT_PROGRESS_30 = 34;
      }
    }
    message ConversionLookback {
      required uint64 after_view_in_days = 1;
      required uint64 after_click_in_days = 2;
    }
    message Conversions {
      oneof pricing_model {
        CostPerMille cost_per_mille = 1;
        CostPerClick cost_per_click = 2;
      }
      message ConversionRateOptimization {
        required OptimizedTowardConversion target_conversion = 1;
      }
      message CostPerActionOptimization {
        required double target_cost = 1;
        required OptimizedTowardConversion target_conversion = 2;
      }
      message CostPerClick {
        required double price = 1;
        required AuctionType auction_type = 2;
        oneof optimization {
          ConversionRateOptimization conversion_rate_optimization = 3;
          CostPerActionOptimization cost_per_action_optimization = 4;
        }
      }
      message CostPerMille {
        required double price = 1;
        required AuctionType auction_type = 2;
        oneof optimization {
          ConversionRateOptimization conversion_rate_optimization = 3;
          CostPerActionOptimization cost_per_action_optimization = 4;
        }
      }
      message OptimizedTowardConversion {
        required uint64 pixel_id = 1;
        required ConversionType conversion_type = 2;
        required string domain = 3;
        required ConversionLookback lookback = 4;
      }
      enum ConversionType {
        CONVERSION_TYPE_VIEW_CONTENT = 0;
        CONVERSION_TYPE_SEARCH = 1;
        CONVERSION_TYPE_ADD_TO_WISHLIST = 2;
        CONVERSION_TYPE_ADD_TO_CART = 3;
        CONVERSION_TYPE_INITIATE_CHECKOUT = 4;
        CONVERSION_TYPE_LEAD = 5;
        CONVERSION_TYPE_COMPLETE_REGISTRATION = 6;
        CONVERSION_TYPE_PURCHASE = 7;
      }
    }
    message TrafficAcquisition {
      oneof pricing_model {
        CostPerMille cost_per_mille = 1;
        CostPerClick cost_per_click = 2;
      }
      message BounceRateOptimization {
        required double target_rate = 1;
        required OptimizedTowardVisit target_visit = 2;
      }
      message ClickThroughRateOptimization {
        required double target_rate = 1;
        optional OptimizedTowardVisit target_visit = 2;
      }
      message CostPerClick {
        required double price = 1;
        required AuctionType auction_type = 2;
        oneof optimization {
          QualifiedVisitsOptimization qualified_visits_optimization = 3;
          CostPerVisitOptimization cost_per_visit_optimization = 4;
          MinimizeCostPerClickOptimization minimize_cost_per_click_optimization = 5;
          BounceRateOptimization bounce_rate_optimization = 6;
        }
      }
      message CostPerMille {
        required double price = 1;
        required AuctionType auction_type = 2;
        oneof optimization {
          QualifiedVisitsOptimization qualified_visits_optimization = 3;
          CostPerVisitOptimization cost_per_visit_optimization = 4;
          ClickThroughRateOptimization click_through_rate_optimization = 5;
          BounceRateOptimization bounce_rate_optimization = 6;
        }
      }
      message CostPerVisitOptimization {
        required double target_cost = 1;
        required OptimizedTowardVisit target_visit = 2;
      }
      message MinimizeCostPerClickOptimization {
        optional OptimizedTowardVisit target_visit = 1;
      }
      message OptimizedTowardVisit {
        required uint64 pixel_id = 1;
        required string domain = 2;
        required ConversionLookback lookback = 3;
      }
      message QualifiedVisitsOptimization {
        required OptimizedTowardVisit target_visit = 1;
      }
    }
    enum AuctionType {
      AUCTION_TYPE_DYNAMIC = 0;
      AUCTION_TYPE_FIXED = 1;
    }
  }
  message Campaign {
    required uint64 id = 1;
    required double agency_fee_percent = 2;
    required CampaignBudget budget = 3;
    required uint64 advertiser_id = 4;
    required uint64 owner_id = 5; // id of the entity that created the campaign
    required CreativeLibrary creative_library = 6;
    required string currency = 7; // 3-letters currency code (ISO-4217)
    required bool is_created_by_salesforce = 8;
    optional string external_integration_code = 9;
    required FlightDuration flight_duration = 10;
    optional FrequencyCapping frequency_capping = 11;
    repeated LineItemOrGroup line_items_and_groups = 12;
    required LumenAttentionMeasurement lumen_attention_measurement = 13;
    required string name = 14;
    required Objective objective = 15;
    required Status status = 16;
    required string timezone = 17; // full name or ID (Europe/Paris, GMT-8:00...)
    required bool is_moat_unsampled = 18;
    required uint64 agency_id = 19;
    required AdvertisingSolutionId advertising_solution_id = 20;
    optional google.protobuf.Timestamp first_activated_at = 21;
    optional string purchase_order_number = 22;
    message LineItemOrGroup {
      oneof either {
        LineItem line_item = 1;
        LineGroup line_group = 2; // only campaigns created by Salesforce have line groups (at the moment)
      }
    }
    enum AdvertisingSolutionId {
      ADVERTISING_SOLUTION_ID_AWARENESS = 1;
      ADVERTISING_SOLUTION_ID_TA_CLICKS = 2;
      ADVERTISING_SOLUTION_ID_TA_VISITS = 3;
      ADVERTISING_SOLUTION_ID_TA_MIXED = 4;
      ADVERTISING_SOLUTION_ID_WEBSITE_CONVERSIONS = 5;
      ADVERTISING_SOLUTION_ID_REACHCAST = 6;
      ADVERTISING_SOLUTION_ID_SEAMLESS_COMMERCE = 7;
      ADVERTISING_SOLUTION_ID_TA_CLICKS_GUARANTEED_CPC = 8;
      ADVERTISING_SOLUTION_ID_TA_VISITS_GUARANTEED_CPC = 9;
    }
    enum LumenAttentionMeasurement {
      LUMEN_ATTENTION_MEASUREMENT_NONE = 0;
      LUMEN_ATTENTION_MEASUREMENT_SAMPLED = 1;
      LUMEN_ATTENTION_MEASUREMENT_ALWAYS = 2;
    }
    enum Objective {
      OBJECTIVE_BRANDING = 0;
      OBJECTIVE_CONVERSIONS = 1;
      OBJECTIVE_TRAFFIC_ACQUISITION = 2;
    }
    enum Status {
      STATUS_ENABLED = 0;
      STATUS_DISABLED = 1;
      STATUS_PENDING = 2;
      STATUS_FINISHED = 3;
    }
  }
  message CampaignBudget {
    required double paid_amount = 1;
    optional double free_amount = 2;
    optional DynamicAllocation dynamic_allocation = 3;
    message DynamicAllocation {
      oneof pacing {
        EvenPacing even_pacing = 1;
        ManualPacing manual_pacing = 2;
      }
      message EvenPacing {
      }
      message ManualPacing {
        required double paid_daily_goal = 1;
        optional double free_daily_goal = 2;
      }
    }
  }
  message CreativeLibrary {
    repeated Creative creatives = 1;
    message Creative {
      required uint64 id = 1;
      required CreativeCategory category = 2;
      required Family family = 3;
      required bool is_compatible_with_connected_tv = 4;
      enum Family {
        FAMILY_VIDEO = 0;
        FAMILY_DISPLAY = 1;
      }
    }
  }
  message FlightDuration {
    required google.protobuf.Timestamp start_date = 1;
    required google.protobuf.Timestamp end_date = 2;
  }
  message FrequencyCapping {
    required uint32 number_of_events = 1;
    required Event event = 2;
    required Period period = 3;
    enum Event {
      EVENT_IMPRESSION = 0;
      EVENT_START = 1;
      EVENT_PROGRESS_1 = 2;
      EVENT_PROGRESS_2 = 3;
      EVENT_PROGRESS_3 = 4;
      EVENT_PROGRESS_4 = 5;
      EVENT_PROGRESS_5 = 6;
      EVENT_PROGRESS_6 = 7;
      EVENT_PROGRESS_7 = 8;
      EVENT_PROGRESS_8 = 9;
      EVENT_PROGRESS_9 = 10;
      EVENT_PROGRESS_10 = 11;
      EVENT_PROGRESS_11 = 12;
      EVENT_PROGRESS_12 = 13;
      EVENT_PROGRESS_13 = 14;
      EVENT_PROGRESS_14 = 15;
      EVENT_PROGRESS_15 = 16;
      EVENT_PROGRESS_16 = 17;
      EVENT_PROGRESS_17 = 18;
      EVENT_PROGRESS_18 = 19;
      EVENT_PROGRESS_19 = 20;
      EVENT_PROGRESS_20 = 21;
      EVENT_PROGRESS_21 = 22;
      EVENT_PROGRESS_22 = 23;
      EVENT_PROGRESS_23 = 24;
      EVENT_PROGRESS_24 = 25;
      EVENT_PROGRESS_25 = 26;
      EVENT_PROGRESS_26 = 27;
      EVENT_PROGRESS_27 = 28;
      EVENT_PROGRESS_28 = 29;
      EVENT_PROGRESS_29 = 30;
      EVENT_PROGRESS_30 = 31;
      EVENT_COMPLETE = 32;
      EVENT_BILLABLE = 33;
    }
    enum Period {
      PERIOD_HOUR = 0;
      PERIOD_DAY = 1;
      PERIOD_WEEK = 2;
      PERIOD_MONTH = 3;
      PERIOD_YEAR = 4;
      PERIOD_LIFETIME = 5;
    }
  }
  message LineGroup {
    required uint64 id = 1;
    repeated LineItem line_items = 2;
    required string name = 3;
  }
  message LineItem {
    required uint64 id = 1;
    required AssignedCreatives assigned_creatives = 2;
    required Billing billing = 3;
    required LineItemBudget budget = 4;
    required ChannelType channel_type = 5;
    required FlightDuration flight_duration = 6;
    optional FrequencyCapping frequency_capping = 7;
    required string name = 8;
    required Status status = 9;
    required Scheduling scheduling = 10;
    required TargetPosition target_position = 11;
    required Targeting targeting = 12;
    optional google.protobuf.Timestamp first_activated_at = 13;
    optional AddedValueReason added_value_reason = 14;
    required google.protobuf.Timestamp created_at = 15;
    enum AddedValueReason {
      ADDED_VALUE_REASON_JBP = 0;
      ADDED_VALUE_REASON_AGENCY_DEAL = 1;
      ADDED_VALUE_REASON_MAKE_GOOD = 2;
      ADDED_VALUE_REASON_PRODUCT_TEST = 3;
    }
    enum ChannelType {
      CHANNEL_TYPE_WEB_AND_IN_APP = 0;
      CHANNEL_TYPE_CONNECTED_TV = 1;
      CHANNEL_TYPE_WEB_IN_APP_INSTREAM = 2;
    }
    enum Status {
      STATUS_ENABLED = 0;
      STATUS_DISABLED = 1;
    }
    enum TargetPosition {
      TARGET_POSITION_ALL = 0;
      TARGET_POSITION_IN_READ_ONLY = 1;
      TARGET_POSITION_PRE_ROLL = 2;
      TARGET_POSITION_MID_ROLL = 3;
      TARGET_POSITION_POST_ROLL = 4;
    }
  }
  message LineItemBudget {
    oneof allocation {
      DynamicAllocation dynamic_allocation = 1;
      StaticAllocation static_allocation = 2;
    }
    message DynamicAllocation {
      optional double max_daily_amount = 1;
      required bool can_spend_campaign_free_budget = 2;
      optional double amount = 3;
    }
    message StaticAllocation {
      required Pacing pacing = 1;
      required bool can_spend_campaign_free_budget = 2;
      required double amount = 3;
      required Period period = 4;
      enum Pacing {
        PACING_EVEN = 0;
        PACING_AHEAD = 1;
        PACING_ASAP = 2;
      }
      enum Period {
        PERIOD_HOUR = 0;
        PERIOD_DAY = 1;
        PERIOD_MONTH = 2;
        PERIOD_YEAR = 3;
        PERIOD_LIFETIME = 4;
      }
    }
  }
  message Scheduling {
    repeated uint32 monday_hours = 1;
    repeated uint32 tuesday_hours = 2;
    repeated uint32 wednesday_hours = 3;
    repeated uint32 thursday_hours = 4;
    repeated uint32 friday_hours = 5;
    repeated uint32 saturday_hours = 6;
    repeated uint32 sunday_hours = 7;
  }
  message Targeting {
    oneof targeting_type {
      Standard standard = 1;
      Advanced advanced = 2;
      Unsupported unsupported = 3;
    }
    message Advanced {
      required uint64 id = 1;
      required bool is_cookieless_criteria_only = 2;
    }
    message Standard {
      required TechnologyCriteria technology_criteria = 1;
      required InventoryCriteria inventory_criteria = 2;
      required AudienceCriteria audience_criteria = 3;
      required DemographicAudiencesAccuracy demographic_audiences_accuracy = 4; // applied to ages & genders teads audiences only
      required bool is_cookieless_criteria_only = 5;
      message AudienceCriteria {
        map<string, Relation> locations_relations_by_code = 1;
        required TeadsAudiences teads_audiences = 2;
        repeated uint64 custom_audiences_ids = 3;
        map<string, Relation> first_party_audiences_relations_by_id = 4;
        required Languages languages = 5;
        map<uint64, Relation> retargeting_pixels_relations_by_id = 6;
        map<uint64, Relation> remarketing_segments_relations_by_id = 7;
        map<int64, Relation> lookalike_segments_relation_by_ids = 8;
        message Languages {
          oneof provider {
            Grapeshot grapeshot = 1; // web & in-app
            Comscore comscore = 2; // connected TVs
          }
          message Comscore {
            map<uint64, Relation> relations_by_id = 1;
          }
          message Grapeshot {
            map<string, Relation> relations_by_code = 1;
          }
        }
        message TeadsAudiences {
          repeated uint64 genders_ids = 1;
          repeated uint64 ages_ids = 2;
          map<uint64, Membership> audience_memberships_by_id = 3;
          enum Membership {
            MEMBERSHIP_INCLUDED = 0;
            MEMBERSHIP_NARROWED = 1;
            MEMBERSHIP_INCLUDED_AND_NARROWED = 2;
            MEMBERSHIP_EXCLUDED = 3;
          }
        }
      }
      message InventoryCriteria {
        map<uint64, Relation> teads_contextual_relations_by_id = 1;
        required BrandSafety brand_safety = 2;
        required Websites websites = 3;
        map<uint64, Relation> pack_relations_by_id = 4;
        map<string, Relation> app_relations_by_id = 5;
        required BrandSuitability brand_suitability = 6;
        map<string, Relation> domain_relations_by_names = 10;
        message BrandSafety {
          oneof provider {
            Teads teads = 1;
            IntegralAdScience integral_ad_science = 2;
            Grapeshot grapeshot = 3;
            DoubleVerify double_verify = 4;
          }
          message DoubleVerify {
            required uint32 safety_level = 1;
          }
          message Grapeshot {
            required uint32 safety_level = 1;
          }
          message IntegralAdScience {
            required uint32 safety_level = 1;
          }
          message Teads {
            required uint32 safety_level = 1;
          }
        }
        message BrandSuitability {
          repeated uint64 integral_ad_science_ids = 1;
          repeated string grapeshot_ids = 2;
          repeated uint64 double_verify_ids = 3;
        }
        message Websites {
          map<uint64, Relation> relations_by_id = 1;
          map<string, Relation> category_relations_by_code = 2;
          optional Tier tiers = 3;
          enum Tier {
            TIER_PREMIER = 0;
            TIER_SELECT = 1;
            TIER_REACH = 2;
          }
        }
      }
      message TechnologyCriteria {
        map<uint64, Relation> device_type_relations_by_id = 1;
        required MobileDevices mobile_devices = 2;
        map<string, Relation> operating_system_relations_by_name = 3;
        map<string, Relation> browser_relations_by_name = 4;
        map<string, Relation> connection_type_relations_by_name = 5;
        map<string, Relation> internet_service_provider_relations_by_name = 6;
        optional PlatformEnvironment platform_environment = 7;
        message MobileDevices {
          map<string, Relation> carrier_relations_by_name = 1;
          map<string, Relation> model_relations_by_name = 2;
          map<string, Relation> brand_relations_by_name = 3;
          map<string, Relation> category_relations_by_name = 4;
          map<string, Relation> year_relations_by_name = 5;
        }
        enum PlatformEnvironment {
          PLATFORM_ENVIRONMENT_APP = 0;
          PLATFORM_ENVIRONMENT_WEB = 1;
        }
      }
      enum DemographicAudiencesAccuracy {
        DEMOGRAPHIC_AUDIENCES_ACCURACY_ACCURACY = 0;
        DEMOGRAPHIC_AUDIENCES_ACCURACY_STANDARD = 1;
        DEMOGRAPHIC_AUDIENCES_ACCURACY_REACH = 2;
        DEMOGRAPHIC_AUDIENCES_ACCURACY_HIGH_ACCURACY = 3;
      }
      enum Relation {
        RELATION_INCLUDED = 0;
        RELATION_EXCLUDED = 1;
      }
    }
    message Unsupported {
    }
  }
  enum CreativeCategory {
    CREATIVE_CATEGORY_CLASSIC = 0;
    CREATIVE_CATEGORY_DISPLAY = 1;
    CREATIVE_CATEGORY_DISPLAY_MID_PAGE_UNIT = 2;
    CREATIVE_CATEGORY_SQUARE = 3;
    CREATIVE_CATEGORY_VERTICAL = 4;
    CREATIVE_CATEGORY_VIEWABLE_DISPLAY = 5;
  }
}
// @section Campaign Support
message GetCampaignSupportRequestRequest {
  required SecurityContext security_context = 1;
  required uint64 support_request_id = 2;
}
// @section Campaign Support
message GetCampaignSupportRequestResponse {
  required uint64 campaign_id = 1;
  required uint64 support_request_id = 2;
  required uint64 requester_profile_id = 3;
  required string description = 4;
  required CampaignSupportRequestStatus status = 5;
  required google.protobuf.Timestamp created_at = 6;
  optional google.protobuf.Timestamp status_updated_at = 7;
}
// @section Campaign
message GetCampaignsLifetimeDeliveryMetricsRequest {
  required SecurityContext security_context = 1;
  required google.protobuf.Timestamp max_end_date = 2;
  repeated int64 office_ids = 4;
  reserved 3;
}
// @section Campaign
message GetCampaignsLifetimeDeliveryMetricsResponse {
  repeated Campaign campaigns = 1;
  optional google.protobuf.Timestamp last_stats_update = 2;
  message Broadcast {
    required google.protobuf.Timestamp start = 1;
    required google.protobuf.Timestamp end = 2;
    required string timezone = 3;
  }
  message Campaign {
    required CampaignId id = 1;
    required string name = 2;
    optional string type = 3;
    required string office = 4;
    required string currency = 5;
    optional Profile adop = 6;
    optional double progress = 7;
    optional Seller seller = 8;
    optional double budget = 9;
    optional double billables = 10;
    optional double completion = 11;
    optional double turnover = 12;
    optional double cogs = 13;
    optional double margin = 14;
    optional double trend_revenue = 15;
    optional double last_24hours_revenue_objective = 16;
    optional double revenue_forecast = 17;
    optional double trend_billable = 18;
    optional double last_24hours_billable_objective = 19;
    optional double billable_forecast = 20;
    optional double ctr = 21;
    optional InsertionOrder io = 22;
    required CampaignStatus status = 23;
    required DeliveryType delivery_type = 24;
    required ProductType product_type = 25;
    optional bool uses_pixel = 26;
    optional string optimization_kpis = 27;
    optional string billable_events = 28;
    optional int64 seat_owner_id = 29;
    optional Broadcast broadcast = 30;
    optional double budget_advertiser = 31;
    optional double budget_delivered = 32;
    optional google.protobuf.Timestamp activated_at = 33;
    optional google.protobuf.Timestamp created_at = 34;
  }
  message CampaignId {
    required int64 value = 1;
  }
  message Insertion {
    required InsertionId id = 1;
    required string name = 2;
    optional Profile operator = 3;
    optional Broadcast broadcast = 4;
    optional double budget = 8;
    optional double billables = 9;
    optional double completion = 10;
    optional double turnover = 11;
    optional double cogs = 12;
    optional double margin = 13;
    optional double trend_revenue = 14;
    optional double last_24hours_revenue_objective = 15;
    optional double revenue_forecast = 16;
    optional double trend_billable = 17;
    optional double last_24hours_billable_objective = 18;
    optional double billable_forecast = 19;
    optional double ctr = 20;
    optional bool is_active = 21;
    optional bool uses_pixel = 22;
    optional string optimization_kpis = 23; // TODO deprecated, reserve this field once client are up to date
    optional string billable_events = 24;
    optional double budget_advertiser = 25;
    optional double budget_delivered = 26;
    optional OptimizationKpi optimization_kpi = 27;
    optional double optimization_kpi_target = 28;
    optional float optimization_kpi_threshold = 29;
    required LineItemStatus status = 30;
    required StartMode start_mode = 31;
  }
  message InsertionId {
    required int64 value = 1;
  }
  message InsertionOrder {
    required InsertionOrderId id = 1;
    required google.protobuf.Timestamp start = 2;
    required string currency = 3;
    repeated InsertionOrderLine iols = 4;
    required string timezone = 5;
  }
  message InsertionOrderId {
    required int64 value = 1;
  }
  message InsertionOrderLine {
    required InsertionOrderLineId id = 1;
    required string name = 2;
    optional double progress = 5;
    optional double budget = 6;
    optional double billables = 7;
    optional double completion = 8;
    optional double turnover = 9;
    optional double cogs = 10;
    optional double margin = 11;
    optional double trend_revenue = 12;
    optional double last_24hours_revenue_objective = 13;
    optional double revenue_forecast = 14;
    optional double trend_billable = 15;
    optional double last_24hours_billable_objective = 16;
    optional double billable_forecast = 17;
    optional double ctr = 18;
    repeated Insertion insertions = 19;
    optional bool uses_pixel = 20;
    optional string optimization_kpis = 21;
    optional string billable_events = 22;
    optional Broadcast broadcast = 23;
    optional double budget_advertiser = 24;
    optional double budget_delivered = 25;
    reserved 3, 4;
    reserved "dt_end", "dt_start";
  }
  message InsertionOrderLineId {
    required int64 value = 1;
  }
  message Profile {
    required ProfileId id = 1;
    required string name = 2;
    required string lastname = 3;
  }
  message ProfileId {
    required int64 value = 1;
  }
  message Seller {
    required SellerId id = 1;
    optional string name = 2;
  }
  message SellerId {
    required int64 value = 1;
  }
  enum DeliveryType {
    DELIVERY_TYPE_MS = 0;
    DELIVERY_TYPE_TAM = 1;
  }
  enum ProductType {
    PRODUCT_TYPE_TRAFFIC_ACQUISITION = 0;
    PRODUCT_TYPE_BRANDING = 1;
    PRODUCT_TYPE_SOCIAL = 2;
    PRODUCT_TYPE_CONVERSIONS = 3;
  }
}
// @section Carbon Footprint
message GetCarbonFootprintMetricsForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  required google.protobuf.Timestamp from = 3;
  required google.protobuf.Timestamp to = 4;
}
// @section Carbon Footprint
message GetCarbonFootprintMetricsForCampaignResponse {
  required Metrics metrics = 1;
  message Metrics {
    // metrics unit of measurement: grams of CO2
    required double total_emissions = 1;
    required double total_emissions_per_mille = 2;
    required double ad_selection_emissions = 3;
    required double creative_distribution_emissions = 4;
    required double media_distribution_emissions = 5;
    required double consumer_device_emissions = 6;
    required double modeled_impressions_percentage = 7;
  }
}
// @section Campaign
message GetConversionsOverallStatisticsForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
}
// @section Campaign
message GetConversionsOverallStatisticsForCampaignResponse {
  map<string, ConversionNameMap> conversion_name_by_conversion_type = 2;
  message ConversionNameMap {
    map<string, Stats> stats_by_conversion_name = 1;
    required string category = 2;
    optional google.protobuf.Timestamp last_activity_date = 3;
    required Stats total = 4;
    optional int64 conversion_id = 5;
  }
  message Stats {
    required double effective_cost_per_action = 4;
    required double conversion_rate_post_click = 5;
    required double conversion_rate_post_view = 6;
    required double revenue_attributable = 7;
    required double return_on_ad_spend = 8;
    required int64 post_click_conversions = 9;
    required int64 post_view_conversions = 10;
    optional double effective_cost_per_action_without_added_value = 11;
    required double conversion_value = 12;
    reserved 1, 2, 3;
  }
  reserved 1;
}
// @section Campaign
message GetConversionsStatisticsForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  optional google.protobuf.Timestamp from = 4;
  optional google.protobuf.Timestamp to = 5;
  required Dimension dimension = 6;
  repeated string conversion_types = 9;
  optional string timezone = 10 [default = "UTC"];
  enum Dimension {
    DIMENSION_LINE_ITEM = 0;
    DIMENSION_CREATIVE = 1;
    DIMENSION_COUNTRY = 2;
    DIMENSION_DEVICE = 3;
    DIMENSION_WEBSITE = 4;
    DIMENSION_DAY = 5;
    DIMENSION_PLACEMENT = 6;
    DIMENSION_CONVERSION_TYPE = 7;
    DIMENSION_ADVERTISER_EVENT = 8;
  }
  reserved 3, 7, 8;
}
// @section Campaign
message GetConversionsStatisticsForCampaignResponse {
  oneof stats_by_dimension {
    LongMap stats_by_line_item = 1;
    LongMap stats_by_creative = 2;
    StringMap stats_by_country = 3; // key is the country code (like FR, US... or "**" when undetermined)
    StringMap stats_by_device = 4; // key is the device name (or "Unknown" when undetermined)
    StringMap stats_by_website = 5; // key is the website name (or "Unknown" when undetermined)
    StringMap stats_by_day = 6; // key is an ISO 8601 representation of date without time (YYYY-MM-DD)
    StringMap stats_by_placement = 7; // key is the format_integration_type of the placement (ie in-article, banner, ...)
    ConversionTypeMap stats_by_conversion_type = 8; // key is the conversion_type related to an advertiser event
    StringMap stats_by_advertiser_event = 9; // key is an advertiser event
  }
  message ConversionTypeMap {
    map<string, StringMap> stats_by_conversion_type = 1; // key is the conversion_name related to a conversion_type
    optional Total total = 2;
  }
  message LongMap {
    map<int64, Stats> stats_by_dimension = 1;
    optional Total total = 2;
  }
  message Stats {
    optional double effective_cost_per_action = 6;
    optional double conversion_rate_post_click = 7;
    required int64 post_click_conversions = 9;
    required int64 post_view_conversions = 10;
    optional double conversion_rate_post_view = 16;
    optional double revenue_attributable = 17;
    reserved 1, 2, 3, 4, 5, 8, 11, 12, 13, 14, 15;
  }
  message StringMap {
    map<string, Stats> stats_by_dimension = 1;
    optional Total total = 2;
  }
  message Total {
    required int64 post_click_conversions = 1;
    required int64 post_view_conversions = 2;
    required double conversion_rate_post_click = 3;
    required double conversion_rate_post_view = 4;
    required double effective_cost_per_action = 5;
    required double revenue_attributable = 6;
  }
}
// @section Users Data
message GetCookielessBuyerCustomAudienceByTargetingRequest {
  required SecurityContext security_context = 1;
  required int64 entity_id = 2;
  repeated Block blocks = 3;
  message Block {
    required DimensionsMapping dimensions_mapping = 1;
  }
  message DimensionsMapping {
    repeated string age_audience_ids = 1;
    repeated string gender_audience_ids = 2;
    repeated string device_type_ids = 3;
    repeated string browsers_ids = 4;
    repeated string device_standardised_name_ids = 5;
    repeated string os_ids = 6;
    repeated string contextual_ids = 7;
    repeated string website_ids = 8;
    repeated string placement_ids = 9;
  }
}
// @section Users Data
message GetCookielessBuyerCustomAudienceByTargetingResponse {
  required int64 audience_id = 1;
  required string audience_name = 2;
}
// @section Users Data
message GetCookielessBuyerCustomAudienceRequest {
  required SecurityContext security_context = 1;
  required int64 audience_id = 2;
}
// @section Users Data
message GetCookielessBuyerCustomAudienceResponse {
  required int64 audience_id = 1;
  required string name = 2;
  repeated DimensionsMapping dimensions_mappings = 3;
  required google.protobuf.Timestamp created_at = 4;
  required google.protobuf.Timestamp updated_at = 5;
  message DimensionItem {
    required string id = 1;
    required string label = 2;
  }
  message DimensionsMapping {
    repeated DimensionItem age_audiences = 1;
    repeated DimensionItem gender_audiences = 2;
    repeated DimensionItem device_types = 3;
    repeated DimensionItem browsers = 4;
    repeated DimensionItem device_standardised_names = 5;
    repeated DimensionItem operating_systems = 6;
    repeated DimensionItem contexts = 7;
    repeated DimensionItem websites = 8;
    repeated DimensionItem placements = 9;
  }
}
// @section Users Data
message GetCookielessCustomAudienceRequest {
  required SecurityContext security_context = 1;
  required int64 audience_id = 2;
}
// @section Users Data
message GetCookielessCustomAudienceResponse {
  required int64 audience_id = 1;
  required string name = 2;
  repeated DimensionsMapping dimensions_mappings = 3;
  required google.protobuf.Timestamp created_at = 4;
  required google.protobuf.Timestamp updated_at = 5;
  required PersonaStatus status = 6;
  message DimensionItem {
    required string id = 1;
    required string label = 2;
  }
  message DimensionsMapping {
    repeated DimensionItem age_audiences = 1;
    repeated DimensionItem gender_audiences = 2;
    repeated DimensionItem device_types = 3;
    repeated DimensionItem browsers = 4;
    repeated DimensionItem device_standardised_names = 5;
    repeated DimensionItem operating_systems = 6;
    repeated DimensionItem contexts = 7;
    repeated DimensionItem websites = 8;
    repeated DimensionItem placements = 9;
  }
}
// @section Creatives Approval
message GetCreativesSubmittedForApprovalRequest {
  required SecurityContext security_context = 1;
  // The page number is set to 0 if not specified
  // The page size is set to 100 if not specified
  required Page page = 2;
}
// @section Creatives Approval
message GetCreativesSubmittedForApprovalResponse {
  repeated CreativeSubmittedForApproval creatives_submitted_for_approval = 1;
  message ConnectionId {
    required int64 value = 1;
  }
  message CreativeSubmittedForApproval {
    required CreativeSubmittedForApprovalId id = 1;
    required PublisherId publisher_id = 2;
    required DspCampaignId campaign_id = 3;
    required DspCreativeId creative_id = 4;
    required ConnectionId connection_id = 5;
    required CreativeApprovalStatus status = 6;
    optional ProfileId approver_id = 7;
    optional string comment = 8;
    optional int32 number_of_bid_responses = 9;
    optional string wigo_url = 10;
    required string publisher_name = 11;
    optional string creative_name = 12;
    optional string campaign_name = 13;
    optional string advertiser_name = 14;
    optional string approver_email = 15;
    required string connection_name = 16;
    optional string approver_name = 17;
    optional google.protobuf.Timestamp created_at = 18;
    optional google.protobuf.Timestamp updated_at = 19;
  }
  message CreativeSubmittedForApprovalId {
    required int64 value = 1;
  }
  message DspCampaignId {
    required string value = 1;
  }
  message DspCreativeId {
    required string value = 1;
  }
  message ProfileId {
    required int64 value = 1;
  }
  message PublisherId {
    required int64 value = 1;
  }
}
// @section Finance
message GetCurrentExchangeRatesToUSDAnonymouslyRequest {
  // When not provided the request fallback on now
  optional google.protobuf.Timestamp at_date = 1;
}
// @section Finance
message GetCurrentExchangeRatesToUSDAnonymouslyResponse {
  map<string, double> rate_by_currency = 1; // ISO-4217 format for currencies
}
// @section Audience Custom
message GetCustomAudienceTemplateForBuyerEntityRequest {
  required SecurityContext security_context = 1;
  required int64 buyer_entity_id = 2;
  required int64 custom_audience_template_id = 3;
}
// @section Audience Custom
message GetCustomAudienceTemplateForBuyerEntityResponse {
  required int64 custom_audience_template_id = 1;
  required Entity owner_entity = 2;
  required string name = 3;
  repeated Block blocks = 4;
  optional Block exclusion_block = 5;
  optional string tbl_rule = 6;
  required AudienceCustomEnvironmentChannel channel = 7;
  required AudienceCustomStatus status = 8;
  required google.protobuf.Timestamp created_at = 9;
  required google.protobuf.Timestamp updated_at = 10;
  required Vertical vertical = 11;
  optional TaxonomyReach worldwide_reach = 13;
  message Block {
    optional string name = 1;
    required DimensionsMapping dimensions_mapping = 2;
  }
  message DimensionsMapping {
    repeated int64 nielsen_ids = 1;
    repeated int64 oracle_ids = 2;
    repeated int64 liveramp_ids = 3;
    repeated int64 emetriq_ids = 4;
    repeated int64 teads_segments = 5;
    repeated int64 altice_us_ids = 6;
    repeated int64 altice_fr_ids = 7;
    repeated int64 zeotap_ids = 8;
    repeated int64 crossix_ids = 9;
    repeated int64 audience_ids = 10;
    repeated string grapeshot_channels = 11;
    repeated int64 website_ids = 12;
    repeated int64 pack_ids = 13;
    repeated int64 skp_ids = 14;
    repeated int64 standard_contextual_ids = 15;
    repeated int64 retargetly_ids = 16;
    repeated int64 custom_contextual_ids = 17;
    repeated int64 comscore_audience_ids = 18;
    repeated int64 comscore_content_language_ids = 19;
    repeated int64 comscore_genre_ids = 20;
  }
  message Entity {
    required int64 id = 1;
    required string name = 2;
  }
  message TaxonomyReach {
    optional int64 reach = 1;
    optional int64 pageviews = 2;
    optional int64 cookieless_reach = 3;
    optional int64 cookieless_pageviews = 4;
  }
  message Vertical {
    required int64 id = 1;
    required string name = 2;
  }
  reserved 12;
}
// @section Audience Custom
message GetCustomAudienceTemplateRequest {
  required SecurityContext security_context = 1;
  required int64 custom_audience_template_id = 2;
}
// @section Audience Custom
message GetCustomAudienceTemplateResponse {
  required int64 custom_audience_template_id = 1;
  required Entity owner_entity = 2;
  required string name = 3;
  repeated Block blocks = 4;
  optional Block exclusion_block = 5;
  optional string tbl_rule = 6;
  required AudienceCustomEnvironmentChannel channel = 7;
  required AudienceCustomStatus status = 8;
  required google.protobuf.Timestamp created_at = 9;
  required google.protobuf.Timestamp updated_at = 10;
  required Vertical vertical = 11;
  // The entity ids of the seats which will be allowed/denied to use the template depending on the value of entity_association_type.
  repeated Entity associated_entities = 13;
  required AudienceCustomEntityAssociationType entity_association_type = 14;
  optional TaxonomyReach worldwide_reach = 15;
  message Block {
    optional string name = 1;
    required DimensionsMapping dimensions_mapping = 2;
  }
  message DimensionsMapping {
    repeated int64 nielsen_ids = 1;
    repeated int64 oracle_ids = 2;
    repeated int64 liveramp_ids = 3;
    repeated int64 emetriq_ids = 4;
    repeated int64 teads_segments = 5;
    repeated int64 altice_us_ids = 6;
    repeated int64 altice_fr_ids = 7;
    repeated int64 zeotap_ids = 8;
    repeated int64 crossix_ids = 9;
    repeated int64 audience_ids = 10;
    repeated string grapeshot_channels = 11;
    repeated int64 website_ids = 12;
    repeated int64 pack_ids = 13;
    repeated int64 skp_ids = 14;
    repeated int64 standard_contextual_ids = 15;
    repeated int64 retargetly_ids = 16;
    repeated int64 custom_contextual_ids = 17;
    repeated int64 comscore_audience_ids = 18;
    repeated int64 comscore_content_language_ids = 19;
    repeated int64 comscore_genre_ids = 20;
  }
  message Entity {
    required int64 id = 1;
    required string name = 2;
  }
  message TaxonomyReach {
    optional int64 reach = 1;
    optional int64 pageviews = 2;
    optional int64 cookieless_reach = 3;
    optional int64 cookieless_pageviews = 4;
  }
  message Vertical {
    required int64 id = 1;
    required string name = 2;
  }
  reserved 12;
}
// @section Campaign
message GetCustomTargetingRuleRequest {
  required SecurityContext security_context = 1;
  required int64 rule_id = 2;
}
// @section Campaign
message GetCustomTargetingRuleResponse {
  required int64 rule_id = 1;
  required string name = 3;
  required string tbl_string = 4;
  required CustomTargetingRuleAudiencesDeliveryType demographic_audiences_delivery_type = 5;
  required CustomTargetingRuleAudiencesAccuracyLevel other_audiences_accuracy_level = 6;
  required bool has_cookieless_criteria_only = 7;
  required string description = 8;
  required Reason reason = 9;
  optional CustomTargetingEnvironmentChannel channel = 10;
  message Reason {
    required int64 id = 1;
    required string label = 2;
  }
}
// @section Campaign
message GetDailyTroubleshootingStatsForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  // if not specified, will return all stats until (end_date | request date time)
  optional google.protobuf.Timestamp start_date = 3;
  // if not specified, will return all stats (from start_date if specified) until now (ie request's date-time)
  optional google.protobuf.Timestamp end_date = 4;
}
// @section Campaign
message GetDailyTroubleshootingStatsForCampaignResponse {
  repeated DailyStats stats = 1;
  message DailyStats {
    required google.protobuf.Timestamp day_start = 1;
    required int64 auctions = 2;
    required int64 be_wins = 3;
    required int64 ssp_wins = 4;
    required int64 eligibility = 5;
    required EligibilityReasons eligibility_reasons = 6;
    required int64 marketplace = 7;
    required MarketplaceReasons marketplace_reasons = 8;
    required int64 pre_bidding = 9;
    required PreBiddingReasons pre_bidding_reasons = 10;
    required int64 others = 11;
  }
  message EligibilityReasons {
    required int64 advertiser_blocked = 1;
    required int64 contextual_and_brand_safety = 2;
    required int64 creative_blocked = 3;
    required int64 device = 4;
    required int64 geolocation = 5;
    required int64 incompatible_ad_type = 6;
    required int64 internet_connection = 7;
    required int64 inventory_targeting = 8;
    required int64 os_and_browser = 9;
    required int64 user = 10;
    required int64 others = 11;
    required int64 gdpr = 12;
    required int64 contextual = 13;
    required int64 website_language_and_brand_safety = 14;
  }
  message MarketplaceReasons {
    required int64 below_floor = 1;
    required int64 competition = 2;
    required int64 competition_same_ad = 3;
  }
  message PreBiddingReasons {
    required int64 broken_creative = 1;
    required int64 broken_placement = 2;
    required int64 capping = 3;
    required int64 day_part = 4;
    required int64 low_optimization_kpi = 5;
    required int64 out_of_budget = 6;
    required int64 pacing = 7;
    required int64 publisher_priority = 8;
    required int64 stop_loss = 9;
    required int64 manual_optimization = 10;
    required int64 dynamic_optimization = 11;
    required int64 others = 12;
  }
}
// @section Campaign
message GetDailyTroubleshootingStatsForLineItemRequest {
  required SecurityContext security_context = 1;
  required int64 line_item_id = 2;
  // if not specified, will return all stats until (end_date | request date time)
  optional google.protobuf.Timestamp start_date = 3;
  // if not specified, will return all stats (from start_date if specified) until now (ie request's date-time)
  optional google.protobuf.Timestamp end_date = 4;
}
// @section Campaign
message GetDailyTroubleshootingStatsForLineItemResponse {
  repeated DailyStats stats = 1;
  message DailyStats {
    required google.protobuf.Timestamp day_start = 1;
    required int64 auctions = 2;
    required int64 be_wins = 3;
    required int64 ssp_wins = 4;
    required int64 eligibility = 5;
    required EligibilityReasons eligibility_reasons = 6;
    required int64 marketplace = 7;
    required MarketplaceReasons marketplace_reasons = 8;
    required int64 pre_bidding = 9;
    required PreBiddingReasons pre_bidding_reasons = 10;
    required int64 others = 11;
  }
  message EligibilityReasons {
    required int64 advertiser_blocked = 1;
    required int64 contextual_and_brand_safety = 2;
    required int64 creative_blocked = 3;
    required int64 device = 4;
    required int64 geolocation = 5;
    required int64 incompatible_ad_type = 6;
    required int64 internet_connection = 7;
    required int64 inventory_targeting = 8;
    required int64 os_and_browser = 9;
    required int64 user = 10;
    required int64 others = 11;
    required int64 gdpr = 12;
    required int64 contextual = 13;
    required int64 website_language_and_brand_safety = 14;
  }
  message MarketplaceReasons {
    required int64 below_floor = 1;
    required int64 competition = 2;
    required int64 competition_same_ad = 3;
  }
  message PreBiddingReasons {
    required int64 broken_creative = 1;
    required int64 broken_placement = 2;
    required int64 capping = 3;
    required int64 day_part = 4;
    required int64 low_optimization_kpi = 5;
    required int64 out_of_budget = 6;
    required int64 pacing = 7;
    required int64 publisher_priority = 8;
    required int64 stop_loss = 9;
    required int64 manual_optimization = 10;
    required int64 dynamic_optimization = 11;
    required int64 others = 12;
  }
}
// @section Reporting
message GetDatamartRequest {
  required SecurityContext security_context = 1;
  required int64 datamart_id = 2;
}
// @section Reporting
message GetDatamartResponse {
  optional GetDatamart datamart = 1;
  message GetDatamart {
    required int64 datamart_id = 1;
    required int64 template_id = 2;
    required Frequency frequency = 3;
    required Options options = 4;
    required bool company_wide_alerting = 5;
    optional string retention_period = 6;
    optional Filters filters = 7;
    required string name = 8;
    repeated string dimensions = 9;
    repeated string metrics = 10;
    required DatamartStatus status = 11;
    required ReportOutputFormat format = 12;
    message Filters {
      repeated DemandSource demand_sources = 1;
      repeated string ad_types = 2;
      repeated int64 advertiser_ids = 3;
      repeated int64 placement_ids = 4;
      optional NoDemandRpmFilter no_demand_rpm = 5 [default = NO_DEMAND_RPM_FILTER_NONE];
      repeated string hb_providers = 6;
      enum NoDemandRpmFilter {
        NO_DEMAND_RPM_FILTER_TRUE = 0;
        NO_DEMAND_RPM_FILTER_FALSE = 1;
        NO_DEMAND_RPM_FILTER_NONE = 2;
      }
    }
    message Options {
      optional string redshift_sort_key = 1;
      optional string redshift_schema = 2;
      optional string redshift_database = 3;
      optional BigQueryTable big_query_table = 8;
      optional ClusteringField big_query_clustering_field = 9;
      message BigQueryTable {
        required string project_id = 1;
        required string dataset = 2;
        required string table = 3;
      }
      message ClusteringField {
        repeated string fields = 1;
      }
    }
  }
}
// @section Programmatic
message GetDealSyncRequest {
  required SecurityContext security_context = 1;
  required string deal_key = 2;
}
// @section Programmatic
message GetDealSyncResponse {
  required ProposalStatus proposal_status = 1;
  required int64 buyer_id = 2;
  enum ProposalStatus {
    PROPOSAL_STATUS_UNSPECIFIED = 0;
    PROPOSAL_STATUS_PENDING = 1;
    PROPOSAL_STATUS_ACCEPTED = 2;
    PROPOSAL_STATUS_DENIED = 3;
  }
}
// @section Campaign
message GetDeliveryMetricsForCampaignsRequest {
  required SecurityContext security_context = 1;
  repeated int64 campaigns_ids = 2;
}
// @section Campaign
message GetDeliveryMetricsForCampaignsResponse {
  map<int64, Stats> stats_by_campaign = 1;
  message Stats {
    required double delivered_budget = 1;
    required DeliveryForecastStatus delivery_forecast_status = 2 [default = DELIVERY_FORECAST_STATUS_NONE];
    optional double delivery_forecast = 3;
    optional int64 impressions = 4;
    optional int64 billable_volume = 5;
    optional double ecpm = 6;
  }
  enum DeliveryForecastStatus {
    DELIVERY_FORECAST_STATUS_NONE = 0;
    DELIVERY_FORECAST_STATUS_UNDER = 1;
    DELIVERY_FORECAST_STATUS_ON_TRACK = 2;
    DELIVERY_FORECAST_STATUS_OVER = 3;
  }
}
// @section Ad Experience
message GetDemoConfigurationForTenantRequest {
  required SecurityContext security_context = 1;
  required uint64 tenant_id = 2;
  required uint64 demo_configuration_id = 3;
}
// @section Ad Experience
message GetDemoConfigurationForTenantResponse {
  optional Configuration configuration = 1;
  message Configuration {
    required uint64 id = 1;
    optional string title = 2;
    required string vast_url = 3;
    required string thumbnail_url = 4;
    optional string description = 5;
    required uint64 article_id = 6;
    required uint64 creative_type_id = 7;
    required string creative_type_name = 8;
    required uint64 creative_size_id = 9;
    required string creative_size_name = 10;
    required uint64 creative_position_id = 11;
    required string creative_position_name = 12;
    optional uint64 vertical_id = 13;
    optional string vertical_name = 14;
    optional uint64 creative_kpi_id = 15;
    optional string creative_kpi_name = 16;
    repeated AdExperienceDevice unsupported_devices = 17;
    required string article_publisher_name = 18;
    required string status = 19;
    optional uint64 brand_id = 20;
    optional string brand_name = 21;
    optional uint64 display_priority = 22;
    optional uint64 vertical_display_priority = 23;
    repeated Market markets = 24;
    optional bool is_staging = 25;
  }
  message Market {
    required uint64 id = 1;
    required uint64 demo_id = 2;
    required uint64 market_id = 3;
    optional uint64 display_priority = 4;
  }
}
// @section Ad Experience
message GetDemosConfigurationsForTenantRequest {
  required SecurityContext security_context = 1;
  required Page page = 2;
  required uint64 tenant_id = 3;
}
// @section Ad Experience
message GetDemosConfigurationsForTenantResponse {
  repeated Configuration configurations = 1;
  message Configuration {
    required uint64 id = 1;
    optional string title = 2;
    required string vast_url = 3;
    required string thumbnail_url = 4;
    optional string description = 5;
    required uint64 article_id = 6;
    required uint64 creative_type_id = 7;
    required string creative_type_name = 8;
    required uint64 creative_size_id = 9;
    required string creative_size_name = 10;
    required uint64 creative_position_id = 11;
    required string creative_position_name = 12;
    optional uint64 vertical_id = 13;
    optional string vertical_name = 14;
    optional uint64 creative_kpi_id = 15;
    optional string creative_kpi_name = 16;
    repeated AdExperienceDevice unsupported_devices = 17;
    required string article_publisher_name = 18;
    required string status = 19;
    optional uint64 brand_id = 20;
    optional string brand_name = 21;
    optional uint64 display_priority = 22;
    optional uint64 vertical_display_priority = 23;
    repeated Market markets = 24;
    optional bool is_staging = 25;
  }
  message Market {
    required uint64 id = 1;
    required uint64 demo_id = 2;
    required uint64 market_id = 3;
    optional uint64 display_priority = 4;
  }
}
// @section Users Data
message GetDomainsForPackRequest {
  required SecurityContext security_context = 1;
  required int64 pack_id = 2;
  required int64 entity_id = 3;
}
// @section Users Data
message GetDomainsForPackResponse {
  repeated string domains = 1;
}
// @section Mrg Contract
message GetEarningStatsForMrgContractRequest {
  required SecurityContext security_context = 1;
  required string uuid = 2;
  required int64 publisher_id = 3;
  // The 3-letter currency code defined in ISO 4217
  required string revenue_currency = 4;
}
// @section Mrg Contract
message GetEarningStatsForMrgContractResponse {
  required string uuid = 1;
  repeated Stat stats = 3;
  message Stat {
    required YearMonth year_month = 1;
    required double delivered_earnings = 2;
  }
  message YearMonth {
    required int32 month = 1;
    required int32 year = 2;
  }
}
// @section Campaign
message GetEncodingStatusForPublisherDirectSalesCreativesRequest {
  required SecurityContext security_context = 1;
  repeated int64 creative_ids = 2;
}
// @section Campaign
message GetEncodingStatusForPublisherDirectSalesCreativesResponse {
  repeated DirectSalesCreativeEncodingDetail encoding_details = 2;
  message DirectSalesCreativeEncodingDetail {
    required int64 creative_id = 1;
    required DirectSalesCreativeEncodingStatus status = 2;
    optional string thumbnail_base_url = 3;
  }
  reserved 1;
}
// @section Finance
message GetExchangeRatesForCurrencyAndPeriodRequest {
  required SecurityContext security_context = 1;
  oneof period {
    Year year = 2;
    YearMonth year_month = 3;
    google.protobuf.Timestamp day = 4;
  }
  required string currency = 5;
  message Year {
    required int32 year = 1;
  }
  message YearMonth {
    required int32 month = 1;
    required Year year = 2;
  }
}
// @section Finance
message GetExchangeRatesForCurrencyAndPeriodResponse {
  repeated CurrencyExchangeRate currency_exchange_rates = 4;
  message CurrencyExchangeRate {
    required string source_currency = 1;
    required string target_currency = 2;
    required double rate = 3;
  }
}
// @section Reporting
message GetExpiringURLForReportRequest {
  required SecurityContext security_context = 1;
  required string filepath = 2;
  required google.protobuf.Duration duration = 3; // 604800s = 7 days, the limit from S3 expiration API
}
// @section Reporting
message GetExpiringURLForReportResponse {
  required string report_signed_url = 1;
}
// @section Reporting
message GetExternalApiTokenRequest {
  required SecurityContext security_context = 1;
  required string token = 2;
}
// @section Reporting
message GetExternalApiTokenResponse {
  optional GetExternalApiToken external_api_token = 1;
  message GetExternalApiToken {
    required int64 external_api_token_id = 1;
    required string name = 2;
    required int64 profile_id = 3;
    required int64 entity_id = 4;
    required string token = 5;
    required google.protobuf.Timestamp created_at = 6;
    optional google.protobuf.Timestamp updated_at = 7;
  }
}
// @section Inventory
message GetFeesAuditForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Inventory
message GetFeesAuditForPublisherResponse {
  repeated AuditedFeeChange audited_fee_changes = 1;
  message AuditedFeeChange {
    required google.protobuf.Timestamp date = 1;
    required int64 profile_id = 2;
    optional CurrencyChange currency_change = 3;
    repeated ProductFeeChange fee_changes = 4;
  }
  message CurrencyChange {
    optional string from = 1;
    required string to = 2;
  }
  message ProductFeeChange {
    required PublisherFeeProductName product_name = 1;
    oneof fee_change {
      PublisherFee fee_deleted = 2;
      PublisherFee fee_added = 3;
      PublisherFeeUpdated fee_updated = 4;
    }
  }
  message PublisherFee {
    oneof pricing_model {
      Standard standard = 1;
      Waived waived = 2;
      Trial trial = 3;
    }
  }
  message PublisherFeeUpdated {
    required PublisherFee from = 1;
    required PublisherFee to = 2;
  }
  message Standard {
    required double value = 1;
    optional Threshold threshold = 2;
  }
  message Threshold {
    required double min_amount_payout = 1;
    required double min_volume = 2;
  }
  message Trial {
    required google.protobuf.Timestamp trial_period_start = 1;
    required google.protobuf.Timestamp trial_period_end = 2;
  }
  message Waived {
    required double value = 1;
    required google.protobuf.Timestamp waived_period_start = 2;
    optional google.protobuf.Timestamp waived_period_end = 3;
    optional Threshold threshold = 4;
  }
}
// @section Inventory
message GetFeesForDirectSalesPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Inventory
message GetFeesForDirectSalesPublisherResponse {
  repeated PublisherFee fees = 1;
  message PublisherFee {
    required PublisherFeeProductName product_name = 1;
    required PublisherFeeValueType value_type = 2;
    // The 3-letter currency code defined in ISO 4217
    required string currency = 3;
    oneof pricing_model {
      Standard standard = 4;
      Waived waived = 5;
      Trial trial = 6;
    }
  }
  message Standard {
    required double value = 1;
    optional Threshold threshold = 2;
  }
  message Threshold {
    required double min_amount_payout = 1;
    required double min_volume = 2;
  }
  message Trial {
    required google.protobuf.Timestamp trial_period_start = 1;
    required google.protobuf.Timestamp trial_period_end = 2;
  }
  message Waived {
    required double value = 1;
    required google.protobuf.Timestamp waived_period_start = 2;
    optional google.protobuf.Timestamp waived_period_end = 3;
    optional Threshold threshold = 4;
  }
}
// @section Finance
message GetFinanceLegacyReportRequest {
  required SecurityContext security_context = 1;
  required int32 year = 2;
  required int32 month = 3;
  required FinanceLegacyReportTemplate report = 4;
  // if no id is provided, return data for all offices, otherwise filter for this office
  optional int64 office_id = 5;
}
// @section Finance
message GetFinanceLegacyReportResponse {
  required string report_uri = 1;
}
// @section Finance
message GetFinanceSettingsForOfficeRequest {
  required SecurityContext security_context = 1;
  required int64 office_id = 2;
}
// @section Finance
message GetFinanceSettingsForOfficeResponse {
  required bool is_payment_off_platform = 1;
}
// @section Account
message GetForeignOfficePublisherTypesForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Account
message GetForeignOfficePublisherTypesForPublisherResponse {
  repeated PublisherType publisher_types = 1;
  message PublisherType {
    required int64 id = 1;
    required string code = 2;
  }
}
// @section Ad Quality
message GetFormatAspectsForConnectionAnonymouslyRequest {
  required int64 connection_id = 1;
}
// @section Ad Quality
message GetFormatAspectsForConnectionAnonymouslyResponse {
  optional AdQualityCreativeFormatType expected_creative_format_type = 1;
  optional AdQualityCreativeFormatSize expected_creative_format = 2;
}
// @section Inventory
message GetFormatPositionsForPlacementRequest {
  required SecurityContext security_context = 1;
  required int64 placement_id = 2;
}
// @section Inventory
message GetFormatPositionsForPlacementResponse {
  repeated int64 format_position_ids = 1;
}
// @section Campaign Support
message GetHasActionableCampaignSupportRequestByCampaignsRequest {
  required SecurityContext security_context = 1;
  repeated uint64 campaign_ids = 2;
}
// @section Campaign Support
message GetHasActionableCampaignSupportRequestByCampaignsResponse {
  map<int64, bool> has_actionable_campaign_support_request_by_campaign_id = 1;
}
// @section Inventory
message GetHydratedPortfolioItemsForBuyerAnonymouslyRequest {
  repeated int64 portfolio_item_ids = 1;
}
// @section Inventory
message GetHydratedPortfolioItemsForBuyerAnonymouslyResponse {
  repeated HydratedPortfolioItem portfolio_items = 1;
  message FormatCreativeType {
    required int64 id = 1;
    required string name = 2;
    required FormatCreativeTypeFamily format_creative_type_family = 3;
  }
  message FormatCreativeTypeFamily {
    required int64 id = 1;
    required string name = 2;
  }
  message FormatPosition {
    required int64 id = 1;
    required string name = 2;
  }
  message FormatSize {
    required int64 id = 1;
    required string name = 2;
  }
  message HydratedPortfolioItem {
    required int64 id = 1;
    required string full_name = 2;
    required string advertiser_display_name = 3;
    required string category_mapping = 4;
    required int64 format_mapping_id = 5;
    required FormatCreativeType format_creative_type = 6;
    required FormatPosition format_position = 7;
    required FormatSize format_size = 8;
  }
}
// @section Commercial
message GetInvoiceRecipientsRequest {
  required SecurityContext security_context = 1;
  repeated string invoice_recipients_ids = 2;
}
// @section Commercial
message GetInvoiceRecipientsResponse {
  repeated InvoiceRecipient invoice_recipients = 1;
  message InvoiceRecipient {
    required string salesforce_id = 1;
    required string name = 2;
    required SalesforceInvoiceRecipientStatus status = 3;
    optional string legal_name = 4;
    optional string vat_number = 5;
    optional string tax_payer_id = 6;
    optional string address_street = 7;
    optional string address_city = 8;
    optional string address_postal_code = 9;
    optional string address_country_code = 10;
    optional string address_state_code = 11;
    required string currency = 12;
    required bool is_factoring = 13;
    required bool is_credit_score_checked = 14;
    optional string external_account_number = 15;
  }
}
// @section Campaign
message GetKpiMetricsForPerformanceCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  required TimeInterval time_interval = 3;
  required string campaign_timezone = 4;
  repeated Dimension dimensions = 5;
  message TimeInterval {
    required google.protobuf.Timestamp start_date = 1;
    required google.protobuf.Timestamp end_date = 2;
  }
  enum Dimension {
    DIMENSION_CREATIVE_ID = 0;
    DIMENSION_LINE_ITEM_ID = 1;
    DIMENSION_DEVICE = 2;
    DIMENSION_DAY = 3;
    DIMENSION_BILLING_MODEL = 4;
    DIMENSION_CREATIVE_KIND = 5;
    DIMENSION_INSERTION_ORDER_LINE_ID = 6;
    DIMENSION_LINE_ITEM_IS_FREE = 7;
    DIMENSION_OPTIMISED_FOR = 8;
  }
}
// @section Campaign
message GetKpiMetricsForPerformanceCampaignResponse {
  repeated PerformanceKpiMetricsRow performance_kpi_metrics_rows = 1;
  message KpiMetrics {
    optional double average_time_spent = 1;
    optional int64 median_time_spent = 2;
    optional double average_page_views = 3;
    optional int64 median_page_views = 4;
    optional double bounce_rate = 5;
    optional int64 visits = 6;
    optional int64 qualified_visits = 8;
    optional double share_of_qualified_visits = 10;
    reserved 7, 9;
  }
  message PerformanceKpiMetricsRow {
    map<string, string> dimension_value_by_dimension_name = 1;
    required KpiMetrics kpi_metrics = 2;
  }
}
// @section Advertiser
message GetLastActivityDateForPixelAnonymouslyRequest {
  required int64 pixel_id = 1;
}
// @section Advertiser
message GetLastActivityDateForPixelAnonymouslyResponse {
  optional google.protobuf.Timestamp last_activity_date = 1;
}
// @section Campaign
message GetLegacyConversionsOverallStatisticsForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
}
// @section Campaign
message GetLegacyConversionsOverallStatisticsForCampaignResponse {
  // All costs are converted in campaign currency
  repeated Stats stats = 1;
  message Stats {
    required string conversion_type = 1;
    required string category = 2;
    required int64 attributed_conversions_count = 3;
    required double effective_cost_per_action = 4;
    required float conversion_rate_post_click = 5;
    required float conversion_rate_post_view = 6;
    required double revenue_attributable = 7;
    required double return_on_ad_spend = 8;
  }
}
// @section Account
message GetLicensesForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Account
message GetLicensesForPublisherResponse {
  repeated PublisherLicense publisher_licenses = 1;
  message PublisherLicense {
    required PublisherLicenseType license_type = 1;
    required bool has_license = 2;
  }
}
// @section Campaign Delivery
message GetLineItemsAnonymouslyRequest {
  repeated int64 line_item_ids = 1;
  required DirectSalesCampaignType campaign_type = 2;
  required bool include_creatives = 3;
  enum DirectSalesCampaignType {
    DIRECT_SALES_CAMPAIGN_TYPE_CAMPAIGN_RTB = 1;
    DIRECT_SALES_CAMPAIGN_TYPE_CAMPAIGN_TAG = 2;
    DIRECT_SALES_CAMPAIGN_TYPE_CAMPAIGN_ALL = 3;
  }
}
// @section Campaign Delivery
message GetLineItemsAnonymouslyResponse {
  repeated LineItem line_items = 1;
  repeated Creative creatives = 2;
  message BigDecimal {
    required string value = 1;
  }
  message BudgetLineItems {
    repeated ThinLineItem actives = 4;
    repeated ThinLineItem inactives = 5;
    reserved 1, 2, 3;
  }
  message Campaign {
    required int64 id = 1;
    required string name = 2;
    optional int64 seat_owner_id = 3;
    repeated FrequencyCapping frequency_cappings = 4;
    optional Type type = 5;
    required Objective objective = 6;
    optional Advertiser advertiser = 7;
    optional int64 agency_id = 8;
    required bool is_production = 9;
    required bool is_filler = 10;
    required bool is_viewability_verified_by_moat = 11;
    optional Budget total_budget = 12;
    optional Budget daily_budget = 13;
    required AdCollisionPolicy ad_collision_policy = 14;
    required string timezone = 15;
    required bool is_charity = 16;
    optional Rate agency_fee_rate = 19;
    optional Rate management_fee_rate = 20;
    required LumenAttentionMeasurement lumen_attention_measurement = 21;
    required bool is_created_by_salesforce = 22;
    required bool uses_dynamic_budget_allocation = 23;
    required bool is_livecast = 24;
    optional AdvertisingSolutionId advertising_solution_id = 25;
    required bool is_fledge = 26;
    message Advertiser {
      required int64 id = 1;
      required string name = 2;
      required bool display_copyright = 3;
      required DeliveryConcentrationPolicy delivery_concentration_policy = 5;
      required bool requires_exclusive_ad_on_screen = 6;
      enum DeliveryConcentrationPolicy {
        DELIVERY_CONCENTRATION_POLICY_DISABLED = 1;
        DELIVERY_CONCENTRATION_POLICY_STANDARD = 2;
        DELIVERY_CONCENTRATION_POLICY_STRICT = 3;
      }
      reserved 4;
    }
    message Budget {
      required BigDecimal paid = 1;
      required BigDecimal free = 2;
    }
    enum AdCollisionPolicy {
      AD_COLLISION_POLICY_NONE = 1;
      AD_COLLISION_POLICY_STANDARD = 2;
      AD_COLLISION_POLICY_STRICT = 3;
    }
    enum AdvertisingSolutionId {
      ADVERTISING_SOLUTION_ID_AWARENESS = 1;
      ADVERTISING_SOLUTION_ID_TA_CLICKS = 2;
      ADVERTISING_SOLUTION_ID_TA_VISITS = 3;
      ADVERTISING_SOLUTION_ID_TA_MIXED = 4;
      ADVERTISING_SOLUTION_ID_WEBSITE_CONVERSIONS = 5;
      ADVERTISING_SOLUTION_ID_SEAMLESS_COMMERCE = 6;
      ADVERTISING_SOLUTION_ID_TA_CLICKS_GUARANTEED_CPC = 7;
      ADVERTISING_SOLUTION_ID_TA_VISITS_GUARANTEED_CPC = 8;
    }
    enum LumenAttentionMeasurement {
      LUMEN_ATTENTION_MEASUREMENT_NONE = 1;
      LUMEN_ATTENTION_MEASUREMENT_SAMPLED = 2;
      LUMEN_ATTENTION_MEASUREMENT_ALWAYS = 3;
    }
    enum Objective {
      OBJECTIVE_BRANDING = 1;
      OBJECTIVE_TRAFFIC_ACQUISITION = 2;
      OBJECTIVE_CONVERSIONS = 3;
    }
    enum Type {
      TYPE_AGENCY = 1;
      TYPE_MEDIA = 2;
      TYPE_ELITE = 3;
      TYPE_CONNECT = 4;
      TYPE_PERFORMANCE = 5;
    }
    reserved 17, 18;
  }
  message Creative {
    required Id id = 1;
    optional string name = 2;
    oneof partial_vast {
      PartialWrapperVast partial_wrapper_vast = 3;
      PartialInLineVast partial_in_line_vast = 4;
    }
    optional string ad_parameters = 5;
    repeated PortfolioItem portfolio_items = 6;
    repeated FormatSizeIdsByDevice format_size_ids_by_device = 7;
    optional int64 default_format_size_id = 8;
    optional string viewability_partner = 9;
    optional string viewability_tag = 10;
    optional google.protobuf.Duration computed_duration = 11;
    optional google.protobuf.Duration declared_duration = 12;
    required bool is_auto_smart6_enabled = 13;
    required CreativeBroadcastPeriod broadcast_period = 14;
    required bool are_domains_parsed = 15;
    repeated string tracking_domains = 16;
    repeated string advertiser_domains = 17;
    optional string targeting_rule = 18;
    required bool is_heavy = 19;
    required Keywords keywords = 20;
    required bool is_url_decoration_compatible = 21;
    required bool is_privacy_compliant = 22;
    optional Variations variations = 24;
    optional string native_assets_uri = 25;
    required Event publisher_billable_event = 26;
    optional Event supply_side_bidding_publisher_billable_event = 27;
    required int64 format_creative_type_id = 28;
    required int64 format_creative_type_family_id = 29;
    required FormatType format_type = 30;
    required bool is_approved_for_authorized_buyers = 31;
    optional NativeAssetsValues native_assets_values = 32;
    repeated AuthorizedBuyersAccount approved_for_authorized_buyers_accounts = 33;
    optional BannerSizes banner_sizes = 34;
    optional CarouselAssets carousel_assets = 35;
    message BannerSizes {
      repeated Size sizes = 1;
    }
    message CarouselAssets {
      required string json = 1;
    }
    message ClickThrough {
      required string url_template = 1;
      optional string id = 2;
    }
    message ClickTracking {
      required string url_template = 1;
      optional string id = 2;
    }
    message CreativeBroadcastPeriod {
      optional google.protobuf.Timestamp start = 1;
      optional google.protobuf.Timestamp end = 2;
    }
    message Event {
      oneof value {
        SimpleEvent simple_event = 1;
        ProgressDurationEvent progress_duration_event = 2;
        ProgressPercentageEvent progress_percentage_event = 3;
        string custom_event = 4;
      }
      message ProgressDurationEvent {
        required int32 duration_in_seconds = 1;
      }
      message ProgressPercentageEvent {
        required int32 percentage = 1;
      }
      enum SimpleEvent {
        SIMPLE_EVENT_CREATIVE_VIEW = 1;
        SIMPLE_EVENT_START = 2;
        SIMPLE_EVENT_FIRST_QUARTILE = 3;
        SIMPLE_EVENT_MIDPOINT = 4;
        SIMPLE_EVENT_THIRD_QUARTILE = 5;
        SIMPLE_EVENT_COMPLETE = 6;
        SIMPLE_EVENT_MUTE = 7;
        SIMPLE_EVENT_UNMUTE = 8;
        SIMPLE_EVENT_PAUSE = 9;
        SIMPLE_EVENT_REWIND = 10;
        SIMPLE_EVENT_RESUME = 11;
        SIMPLE_EVENT_FULLSCREEN = 12;
        SIMPLE_EVENT_EXIT_FULLSCREEN = 13;
        SIMPLE_EVENT_EXPAND = 14;
        SIMPLE_EVENT_COLLAPSE = 15;
        SIMPLE_EVENT_ACCEPT_INVITATION = 16;
        SIMPLE_EVENT_CLOSE = 17;
        SIMPLE_EVENT_SKIP = 18;
        SIMPLE_EVENT_CLICK = 19;
        SIMPLE_EVENT_IMPRESSION = 20;
      }
    }
    message Extension {
      required string type = 1;
      required string value = 2;
    }
    message ExternalTracking {
      required string url_template = 1;
      required Event event = 2;
    }
    message FormatSizeIdsByDevice {
      required Device device = 1;
      repeated int64 format_size_ids = 2;
      enum Device {
        DEVICE_MOBILE_TABLET = 1;
        DEVICE_PERSONAL_COMPUTER = 2;
        DEVICE_CONNECTED_TV = 3;
        DEVICE_PHONE = 4;
        DEVICE_TABLET = 5;
        DEVICE_CONNECTED_DEVICE = 6;
        DEVICE_TOP_BOX = 7;
      }
    }
    message Id {
      required int64 creative_id = 1;
      required int64 line_item_id = 2;
    }
    message Impression {
      required string url_template = 1;
      optional string id = 2;
    }
    message Keywords {
      required bool has_city_name = 1;
      required bool has_country_name = 2;
    }
    message NativeAssetsValues {
      map<string, string> titles_by_keys = 1;
      optional string description = 2;
      required string brand = 3;
      map<string, string> main_image_urls_by_keys = 4;
      optional string logo_url = 5;
      required string link = 6;
      map<string, string> ctas_by_keys = 7;
      required string cta_color = 8;
    }
    message PartialInLineVast {
      repeated ExternalTracking external_trackings = 1;
      repeated Event internal_trackings = 2;
      repeated InternalMediaFile internal_media_files = 3;
      required VideoClicks video_clicks = 4;
      repeated Extension extensions = 5;
      repeated Impression impressions = 6;
      message InternalMediaFile {
        required string value = 1;
        optional string id = 2;
        required Delivery delivery = 3;
        required string type = 4;
        optional int32 bitrate = 5;
        optional int32 min_bitrate = 6;
        optional int32 max_bitrate = 7;
        required int32 width = 8;
        required int32 height = 9;
        optional bool is_scalable = 10;
        optional bool maintain_aspect_ratio = 11;
        optional ApiFramework api_framework = 12;
        optional string codec = 13;
        enum Delivery {
          DELIVERY_STREAMING = 1;
          DELIVERY_PROGRESSIVE = 2;
        }
      }
      message VideoClicks {
        optional ClickThrough click_through = 1;
        repeated ClickTracking click_trackings = 2;
      }
    }
    message PartialWrapperVast {
      repeated ExternalTracking external_trackings = 1;
      repeated Event internal_trackings = 2;
      repeated ExternalMediaFile external_media_files = 3;
      required string tag_uri_template = 4;
      repeated ClickTracking click_trackings = 5;
      repeated Extension extensions = 6;
      repeated Impression impressions = 7;
      optional string studio_creative_id = 8;
      optional string click_through_url_override = 9;
      message ExternalMediaFile {
        required string type = 1;
        optional int32 bitrate = 2;
        required int32 width = 3;
        required int32 height = 4;
        optional ApiFramework api_framework = 5;
      }
    }
    message PortfolioItem {
      required int64 id = 1;
      required int64 format_position_id = 2;
      optional int64 format_size_id = 3;
      optional int32 format_position_priority = 5;
      reserved 4, 6, 7, 8;
    }
    message Size {
      required int32 width = 1;
      required int32 height = 2;
    }
    message Variations {
      repeated string image_ids = 1;
      repeated string call_to_action_ids = 2;
      repeated string headline_ids = 3;
    }
    enum ApiFramework {
      API_FRAMEWORK_VPAID = 1;
    }
    enum AuthorizedBuyersAccount {
      AUTHORIZED_BUYERS_ACCOUNT_GLOBAL = 1;
      AUTHORIZED_BUYERS_ACCOUNT_BRAZIL = 2;
      AUTHORIZED_BUYERS_ACCOUNT_FLEDGE = 3;
    }
    enum FormatType {
      FORMAT_TYPE_DISPLAY = 1;
      FORMAT_TYPE_VIDEO = 2;
    }
    reserved 23;
  }
  message Currency {
    // The 3-letter currency code defined in ISO 4217
    required string value = 1;
  }
  message FrequencyCapping {
    required int32 limit = 1;
    required string event = 2;
    required Period period = 3;
    required bool is_cross_device = 4;
  }
  message LineItem {
    required int64 id = 1;
    optional string name = 2;
    required Campaign campaign = 3;
    oneof entity {
      Publisher publisher = 4;
      Office office = 5;
    }
    repeated AssignedCreative assigned_creatives = 6;
    required BroadcastPeriod broadcast_period = 7;
    optional WeekSchedule week_schedule = 8;
    required BusinessModel business_model = 9;
    required Budget budget = 10;
    required BigDecimal billable_price = 11;
    required Currency currency = 12;
    optional Margin min_margin = 13;
    repeated FrequencyCapping frequency_cappings = 17;
    required string timezone = 18;
    required Pacing pacing = 19;
    required bool ignore_delivery_share = 20;
    required StartMode start_mode = 22;
    required VirtualBillablePriceFactors virtual_billable_price_factors = 25;
    required IabCategory iab_category = 26;
    optional GhostLineItem ghost_line_item = 27;
    optional Rate platform_fee_rate = 28;
    repeated ConversionPixel conversion_pixels = 29;
    optional PrimaryConversionPixel primary_conversion_pixel = 30;
    optional DataRevenuesRateCard data_revenues_rate_card = 31;
    optional string self_served_publisher_header_bidding_deal_id_targeting = 32;
    required InventoryCookiesOption inventory_cookies_option = 33;
    required bool cookieless_criteria_only = 34;
    required bool is_brand_pulse = 35;
    optional string non_inlined_targeting_rule = 36;
    required DemandType demand_type = 37;
    required bool is_smoothed = 38;
    repeated AbTestPopulation ab_test_populations = 39;
    message AbTestPopulation {
      required int64 ab_test_id = 1;
      required int64 population_id = 2;
    }
    message AssignedCreative {
      required int64 creative_id = 1;
      required int64 delivery_share = 2;
    }
    message BroadcastPeriod {
      required google.protobuf.Timestamp start = 1;
      required google.protobuf.Timestamp end = 2;
    }
    message Budget {
      required BigDecimal amount = 1;
      required AllocationPeriod allocation_period = 2;
      enum AllocationPeriod {
        ALLOCATION_PERIOD_LINE_ITEM_DURATION = 1;
        ALLOCATION_PERIOD_DAY = 2;
      }
    }
    message BusinessModel {
      required BillableEventStrategy billable_event_strategy = 1;
      required BillingType billing_type = 2;
      required bool is_guaranteed = 3;
      oneof optimization_kpi {
        ThresholdKpi click_through_rate = 4;
        ThresholdKpi view_through_rate = 5;
        ThresholdKpi moat_viewable = 6;
        ThresholdKpi conversion_rate = 7;
        TargetKpi cost_per_action = 8;
        ThresholdKpi qualified_visits = 9;
      }
      required bool is_free = 11;
      message BillableEventStrategy {
        oneof billable_event {
          SimpleBillableEvent simple_event = 1;
          ProgressBillableEvent progress_event = 2;
        }
        required bool bill_duplicated_billable_events = 3;
        message ProgressBillableEvent {
          required int32 duration_in_seconds = 1;
        }
        enum SimpleBillableEvent {
          SIMPLE_BILLABLE_EVENT_START = 1;
          SIMPLE_BILLABLE_EVENT_IMPRESSION = 2;
          SIMPLE_BILLABLE_EVENT_FIRST_QUARTILE = 3;
          SIMPLE_BILLABLE_EVENT_MIDPOINT = 4;
          SIMPLE_BILLABLE_EVENT_THIRD_QUARTILE = 5;
          SIMPLE_BILLABLE_EVENT_COMPLETE = 6;
          SIMPLE_BILLABLE_EVENT_CLICK = 7;
          reserved 8;
        }
      }
      message TargetKpi {
        required BigDecimal target = 1;
        required Currency currency = 2;
        required bool has_adjustment_factor = 3;
      }
      message ThresholdKpi {
        required double threshold = 1;
        required bool has_adjustment_factor = 2;
      }
      enum BillingType {
        BILLING_TYPE_FIXED_PRICE = 1;
        BILLING_TYPE_DYNAMIC_PRICE = 3;
        reserved 2;
      }
      reserved 10;
    }
    message ConversionPixel {
      required int64 id = 1;
      required int32 conversion_category_id = 2;
      required int32 post_view_lookback_window_in_days = 3;
      required int32 post_click_lookback_window_in_days = 4;
      required bool is_primary = 5;
      required int32 last_24_hours_conversion_count = 6;
      required bool is_visit = 7;
    }
    message DataRevenuesRateCard {
      optional BigDecimal minimum_cost_per_mille = 1;
      required BigDecimal standard_cost_per_mille = 2;
      required Currency currency = 3;
    }
    message GhostLineItem {
      required int64 ab_test_id = 1;
      repeated int32 exposed_population_ids = 2;
      optional string control_pixel_url_template = 3;
      optional string exposed_pixel_url_template = 4;
    }
    message IabCategory {
      required int64 id = 1;
      required string iab_category_code = 2;
    }
    message Office {
      required int64 id = 1;
      required Margin min_margin_cost_per_view = 2;
      required Margin min_margin_cost_per_mille = 3;
      required Margin min_margin_cost_per_click = 4;
      required Margin min_margin_cost_per_action = 5;
      required Margin max_margin_cost_per_action = 6;
      required double publisher_virtual_cost_international_penalty_factor = 7;
      required Margin max_margin_cost_per_view = 10;
      required Margin max_margin_cost_per_mille = 11;
      required Margin min_margin_conversion = 12;
      required Margin max_margin_conversion = 13;
      required Margin min_margin_ctv = 14;
      required Margin max_margin_ctv = 15;
      required Margin min_margin_instream = 16;
      required Margin max_margin_instream = 17;
      required Margin min_margin_ta_clicks = 18;
      required Margin max_margin_ta_clicks = 19;
      required Margin min_margin_ta_clicks_guaranteed_cpc = 20;
      required Margin max_margin_ta_clicks_guaranteed_cpc = 21;
      required Margin min_margin_ta_visits_guaranteed_cpc = 22;
      required Margin max_margin_ta_visits_guaranteed_cpc = 23;
      reserved 8, 9;
    }
    message PrimaryConversionPixel {
      required string name = 1;
      required bool is_auto_generated = 2;
    }
    message Publisher {
      required int64 id = 1;
    }
    message VirtualBillablePriceFactors {
      required double base_factor = 1;
      map<int64, double> factor_by_website_id = 2;
    }
    message WeekSchedule {
      required DaySchedule monday = 1;
      required DaySchedule tuesday = 2;
      required DaySchedule wednesday = 3;
      required DaySchedule thursday = 4;
      required DaySchedule friday = 5;
      required DaySchedule saturday = 6;
      required DaySchedule sunday = 7;
      message DaySchedule {
        repeated Hour hours = 1;
        message Hour {
          required int32 value = 1;
        }
      }
    }
    enum InventoryCookiesOption {
      INVENTORY_COOKIES_OPTION_ALL = 1;
      INVENTORY_COOKIES_OPTION_COOKIELESS_ONLY = 2;
      INVENTORY_COOKIES_OPTION_COOKIE_BASED_ONLY = 3;
    }
    enum Pacing {
      PACING_ASAP = 1;
      PACING_EVEN = 2;
      PACING_AHEAD = 3;
    }
    enum StartMode {
      START_MODE_VIEW_TO_PLAY = 1;
      START_MODE_VIEW_TO_START = 2;
      START_MODE_VIEW_TO_PLAY_UNTIL = 4;
      reserved 3;
    }
    reserved 14, 15, 16, 21, 23, 24;
  }
  message Margin {
    required double value = 1;
  }
  message Rate {
    required double value = 1;
  }
  message ThinCampaign {
    required int64 id = 1;
    optional Campaign.Type type = 2;
    optional Campaign.Budget total_budget = 3;
    optional Campaign.Budget daily_budget = 4;
    required string timezone = 5;
    required Campaign.Objective objective = 6;
    optional int64 seat_owner_id = 7;
    optional int64 advertiser_id = 8;
    required bool is_created_by_salesforce = 9;
    required bool uses_dynamic_budget_allocation = 10;
    required bool is_livecast = 11;
    required bool is_filler = 12;
    required bool is_production = 14;
  }
  message ThinLineItem {
    required int64 id = 1;
    required ThinCampaign campaign = 2;
    required string timezone = 3;
    required LineItem.BroadcastPeriod broadcast_period = 4;
    required LineItem.Budget budget = 5;
    required Currency currency = 6;
    required LineItem.Pacing pacing = 7;
    required int64 entity_id = 8;
    optional LineItem.WeekSchedule week_schedule = 9;
    required LineItem.BusinessModel.BillingType billing_type = 10;
    required bool is_guaranteed = 11;
    required bool is_free = 12;
    required DemandType demand_type = 13;
  }
  message ThinLineItems {
    repeated ThinLineItem thin_line_items = 1;
  }
  message UnfilteredLineItem {
    required int64 id = 1;
    optional int64 advertiser_id = 2;
  }
  message UnfilteredLineItems {
    repeated UnfilteredLineItem unfiltered_line_items = 1;
  }
  enum DemandType {
    DEMAND_TYPE_GUARANTEED = 1;
    DEMAND_TYPE_UNGUARANTEED = 2;
    DEMAND_TYPE_PERFORMANCE = 3;
    DEMAND_TYPE_SELF_SERVED = 4;
  }
  enum Period {
    PERIOD_HOUR = 1;
    PERIOD_DAY = 2;
    PERIOD_WEEK = 3;
    PERIOD_MONTH = 4;
    PERIOD_ALL = 5;
  }
}
// @section Advertiser
message GetManagedServicesPixelMigrationStateForAdvertiserRequest {
  required SecurityContext security_context = 1;
  required int64 advertiser_id = 2;
}
// @section Advertiser
message GetManagedServicesPixelMigrationStateForAdvertiserResponse {
  repeated InternalAgencySeat internal_agencies = 4;
  optional PixelOwner pixel_owner = 5;
  message InternalAgencySeat {
    required int64 seat_id = 1;
    required string seat_name = 2;
    required PixelMigrationStatus migration_status = 3;
  }
  message PixelOwner {
    required int64 entity_id = 1;
    required string seat_name = 2;
    required int64 seat_id = 3;
    optional string office_name = 4;
  }
  enum PixelMigrationStatus {
    PIXEL_MIGRATION_STATUS_ALLOWED = 1;
    PIXEL_MIGRATION_STATUS_MIGRATED = 2;
    PIXEL_MIGRATION_STATUS_BLOCKED = 3;
  }
  reserved 1, 2, 3;
}
// @section Data Science
message GetModelTrainingSspPredictorMetadataRequest {
  required SecurityContext security_context = 1;
  required string model_training_config_id = 2;
}
// @section Data Science
message GetModelTrainingSspPredictorMetadataResponse {
  required string schema_reference = 1;
  required int32 max_optimal_hours = 2;
  required int32 max_validity_hours = 3;
  required PredictorType predictor_type = 4;
}
// @section Mrg Contract
message GetMrgContractRequest {
  required SecurityContext security_context = 1;
  required string uuid = 2;
}
// @section Mrg Contract
message GetMrgContractResponse {
  required string uuid = 1;
  required string name = 2;
  repeated int64 publisher_party_ids = 3;
  required Period period = 4;
  required bool includes_all_inventory = 5;
  required bool includes_all_new_inventory = 6;
  required MrgContractExclusivity exclusivity = 7;
  optional int32 auto_renewal_period = 8;
  optional google.protobuf.Timestamp renewal_limit_date = 9;
  optional string comment = 10;
  repeated int64 inventory_ids = 11;
  optional TeadsCommitmentInfo teads_commitment_info = 12;
  repeated CommitmentPeriod commitment_periods = 13;
  optional PublisherCommitmentInfo publisher_commitment_info = 14;
  repeated CommitmentCriterion commitment_criteria = 15;
  required MrgContractStatus status = 16;
  map<int64, ExcludedPlacements> excluded_placements_by_inventory_id = 17;
  required int64 version = 18;
  message Commitment {
    required string uuid = 1;
    required PublisherCommitment publisher_commitment = 2;
    required TeadsCommitment teads_commitment = 3;
    required string period_uuid = 4;
  }
  message CommitmentCriterion {
    oneof geo {
      // Using the ISO 3166-1 Alpha 2 standard
      CountryList country_list = 1;
      CountryFilter country_filter = 2;
    }
    required MrgContractCriterionEnvironment environment = 3;
    repeated Commitment commitments = 4;
    required MrgContractCriterionBrandSafety brand_safety = 5;
    // Set for contract_version > 1
    optional MrgContractCriterionUserTrackability user_trackability = 6;
  }
  message CommitmentPeriod {
    required string uuid = 1;
    required google.protobuf.Timestamp start_date = 2;
    required google.protobuf.Timestamp end_date = 3;
  }
  message CountryFilter {
    required MrgContractCriterionCountryFilter country_filter = 1;
  }
  message CountryList {
    repeated string countries = 1;
  }
  message ExcludedPlacements {
    repeated int64 placement_ids = 1;
  }
  message Period {
    required google.protobuf.Timestamp start_date = 1;
    required google.protobuf.Timestamp end_date = 2;
  }
  message PublisherCommitment {
    required int64 volume = 1;
  }
  message PublisherCommitmentInfo {
    required bool includes_brand_unsafe_content = 2;
    required float opportunity_quarterly_rollover = 5;
    required MrgContractSmoothingFrequency smoothing_frequency = 6;
    required MrgContractType contract_type = 7;
    required MrgContractDirectSoldDeliveryToInclude direct_sold_delivery_to_include = 8;
    required MrgContractNonUserConsentDeliveryToInclude non_user_consent_delivery_to_include = 9;
    reserved 4;
  }
  message TeadsCommitment {
    // The 3-letter currency code defined in ISO 4217
    required string currency = 1;
    required double revenue = 2;
  }
  message TeadsCommitmentInfo {
    required MrgContractRevenuePeriod revenue_period = 1;
    required int32 revenue_quarterly_rollover = 2;
    required bool allow_overshoot_per_line = 3;
  }
}
// @section Campaign
message GetNameForCampaignsRequest {
  required SecurityContext security_context = 1;
  repeated int64 campaign_ids = 2;
}
// @section Campaign
message GetNameForCampaignsResponse {
  map<int64, string> names_by_campaign_id = 1;
}
// @section Ab Testing
message GetNextAbTestBudgetSplitIdRequest {
  required SecurityContext security_context = 1;
}
// @section Ab Testing
message GetNextAbTestBudgetSplitIdResponse {
  required int64 next_id = 1;
}
// @section Account
message GetOfficeAnonymouslyRequest {
  required int64 office_id = 1;
}
// @section Account
message GetOfficeAnonymouslyResponse {
  required int64 office_id = 1;
  required string office_name = 2;
}
// @section Account
message GetOfficeForAccountRequest {
  required SecurityContext security_context = 1;
  required Account account = 2;
  message Account {
    required int64 entity_id = 1;
    required int64 profile_id = 2;
  }
}
// @section Account
message GetOfficeForAccountResponse {
  required int64 office_id = 1;
  required string office_name = 2;
}
// @section Account
message GetOfficeForEntityRequest {
  required SecurityContext security_context = 1;
  required int64 entity_id = 2;
}
// @section Account
message GetOfficeForEntityResponse {
  required int64 office_id = 1;
  required string office_name = 2;
  optional string office_address = 3;
}
// @section Account
message GetOfficeRequest {
  required SecurityContext security_context = 1;
  required int64 office_id = 2;
}
// @section Account
message GetOfficeResponse {
  required int64 office_id = 1;
  required string office_name = 2;
  optional string office_address = 3;
}
// @section Campaign
message GetOptimizationStatisticsForLineItemsRequest {
  required SecurityContext security_context = 1;
  repeated int64 line_items_ids = 2;
  optional Sort sort = 3;
  // The page number is set to 0 if not specified
  // The page size is set to 100 if not specified
  required Page page = 4;
  optional string search = 5;
  optional int64 campaign_id = 6;
  message Sort {
    optional SortCriterion criterion = 1 [default = SORT_CRITERION_WEBSITE_DOMAIN];
    optional SortDirection direction = 2 [default = SORT_DIRECTION_DESC];
  }
  enum SortCriterion {
    SORT_CRITERION_WEBSITE_NAME = 1;
    SORT_CRITERION_IS_DELIVERING = 2;
    SORT_CRITERION_IMPRESSIONS = 3;
    SORT_CRITERION_CLICK_THROUGH_RATE = 4;
    SORT_CRITERION_EFFECTIVE_COST_PER_MILLE = 5;
    SORT_CRITERION_CLICKS = 6;
    SORT_CRITERION_EFFECTIVE_COST_PER_CLICK = 7;
    SORT_CRITERION_VISITS = 8;
    SORT_CRITERION_EFFECTIVE_COST_PER_ACTION = 9;
    SORT_CRITERION_CONVERSION_RATE = 10; // FIXME rename it "SORT_CRITERION_LANDING_RATE"
    SORT_CRITERION_BOUNCE_RATE = 11;
    SORT_CRITERION_AVG_PAGE_VIEWS = 12;
    SORT_CRITERION_AVG_SESSION_DURATION = 13;
    SORT_CRITERION_WEBSITE_DOMAIN = 14;
    SORT_CRITERION_QUALIFIED_VISITS = 15;
    SORT_CRITERION_WEBSITE_OR_APP = 16;
  }
  enum SortDirection {
    SORT_DIRECTION_ASC = 1;
    SORT_DIRECTION_DESC = 2;
  }
}
// @section Campaign
message GetOptimizationStatisticsForLineItemsResponse {
  map<int64, StatsForLineItem> stats_by_line_item = 1;
  message Stats {
    required int64 website_id = 1;
    optional string website_name = 2;
    required bool website_is_delivering = 3;
    optional string website_domain = 4;
    required uint32 impressions = 5;
    optional double click_through_rate = 6;
    optional double effective_cost_per_mille = 7;
    required uint32 clicks = 8;
    optional double effective_cost_per_click = 9;
    required uint32 visits = 10;
    optional double effective_cost_per_action = 11;
    optional double conversion_rate = 12; // FIXME rename it "landing_rate"
    optional double bounce_rate = 13;
    optional double avg_page_views = 14;
    optional double avg_session_duration = 15;
    optional double spent = 16;
    required uint32 qualified_visits = 17;
    optional bool is_publisher_network = 18;
    required string website_or_app = 19;
  }
  message StatsForLineItem {
    repeated Stats stats = 1;
    required uint32 total = 2;
  }
}
// @section Users Data
message GetPacksDomainsAnonymouslyRequest {
  repeated int64 pack_ids = 1;
}
// @section Users Data
message GetPacksDomainsAnonymouslyResponse {
  repeated PackDomains pack_domains = 1;
  message PackDomains {
    required int64 pack_id = 1;
    repeated string domains = 2;
  }
}
// @section Inventory
message GetPacksRequest {
  required SecurityContext security_context = 1;
  repeated int64 pack_ids = 2;
}
// @section Inventory
message GetPacksResponse {
  repeated Pack packs = 1;
  message Pack {
    required int64 id = 1;
    required string name = 2;
  }
}
// @section Campaign
message GetPerformanceCampaignInfoRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
}
// @section Campaign
message GetPerformanceCampaignInfoResponse {
  required string name = 1;
  required int64 advertiser_id = 2;
  optional google.protobuf.Timestamp start_date = 3;
  optional google.protobuf.Timestamp end_date = 4;
}
// @section Users Data
message GetPersonaRequest {
  required SecurityContext security_context = 1;
  required int64 persona_id = 2;
}
// @section Users Data
message GetPersonaResponse {
  required int64 persona_id = 1;
  required string name = 2;
  repeated Block blocks = 3;
  required PersonaStatus status = 4;
  required google.protobuf.Timestamp created_at = 5;
  required google.protobuf.Timestamp updated_at = 6;
  optional int64 creator_profile_id = 7;
  optional int64 advertiser_id = 8;
  optional Block excluded_block = 9;
  optional UsersDataEnvironmentChannel channel = 10;
  message Block {
    optional string name = 1;
    required DimensionsMapping dimensions_mapping = 2;
  }
  message DimensionsMapping {
    repeated string exelate_ids = 1;
    repeated string bluekai_ids = 2;
    repeated string liveramp_ids = 3;
    repeated string emetriq_ids = 4;
    repeated string teads_segments = 5;
    repeated string altice_us_ids = 6;
    repeated string altice_fr_ids = 7;
    repeated string zeotap_ids = 8;
    repeated string crossix_ids = 9;
    repeated string audience_ids = 10;
    repeated string grapeshot_channels = 11;
    repeated string website_ids = 12;
    repeated string pack_ids = 13;
    repeated string skp_ids = 14;
    repeated string standard_contextual_ids = 15;
    repeated string retargetly_ids = 16;
    repeated string custom_contextual_ids = 17;
    repeated string comscore_audience_ids = 18;
    repeated string comscore_content_language_ids = 19;
    repeated string comscore_genre_ids = 20;
  }
}
// @section Inventory
message GetPlacementInfoRequest {
  required SecurityContext security_context = 1;
  required int64 placement_id = 2;
}
// @section Inventory
message GetPlacementInfoResponse {
  required int64 placement_id = 1;
  required string placement_name = 2;
  required int64 publisher_id = 3;
  required string publisher_name = 4;
  required int64 inventory_id = 5;
  required string inventory_name = 6;
  required string inventory_domain = 7;
  required int32 percentage_of_auctions_skipped = 8;
}
// @section Inventory
message GetPlacementsRequest {
  required SecurityContext security_context = 1;
  repeated int64 placement_ids = 2;
}
// @section Inventory
message GetPlacementsResponse {
  repeated Placement placements = 1;
  message Placement {
    required int64 id = 1;
    required string name = 2;
  }
}
// @section Programmatic
message GetPreAndPostBidFilteringStatisticsForConnectionsRequest {
  required SecurityContext security_context = 1;
  required google.protobuf.Timestamp start_date = 2; // Starting date of the requested period
  required google.protobuf.Timestamp end_date = 3; // Ending date of the requested period
  repeated int64 connection_ids = 4; // One or more requested connection IDs
}
// @section Programmatic
message GetPreAndPostBidFilteringStatisticsForConnectionsResponse {
  repeated PeriodStatisticsByConnection filtering_statistics_for_connections = 1;
  message DailyStatistics {
    required google.protobuf.Timestamp day = 1;
    repeated FilteringReason statistics = 2;
  }
  message FilteringReason {
    required string category = 1;
    required string name = 2;
    required int64 count = 3;
  }
  message PeriodStatisticsByConnection {
    required int64 connection_id = 1;
    repeated DailyStatistics daily_statistics = 2;
  }
}
// @section Account
message GetProfileAnonymouslyRequest {
  required int64 profile_id = 2;
}
// @section Account
message GetProfileAnonymouslyResponse {
  required string email = 1;
  optional string firstname = 2;
  optional string lastname = 3;
  optional string locale = 4; // language_TERRITORY: en_US, fr_FR, es_ES, ...
  optional string timezone = 5; // Europe/Paris, Europe/Berlin, US/Central, ...
  required ProfileStatus status = 6;
  repeated Account accounts = 7;
  message Account {
    required int64 entity_id = 1;
    // "Publisher Self-Served", "Teads Innovation", "Innovation feature team Platform"
    repeated string roles = 2;
  }
}
// @section Account
message GetProfileRequest {
  required SecurityContext security_context = 1;
  oneof profile_identifier {
    int64 profile_id = 2;
    string email = 3;
  }
}
// @section Account
message GetProfileResponse {
  required string email = 1;
  optional string firstname = 2;
  optional string lastname = 3;
  optional string locale = 4; // language_TERRITORY: en_US, fr_FR, es_ES, ...
  optional string timezone = 5; // Europe/Paris, Europe/Berlin, US/Central, ...
  required ProfileStatus status = 6;
  repeated Account accounts = 7;
  optional string new_email_pending_confirmation = 8;
  optional int64 preferred_entity_id = 9;
  required int64 profile_id = 10;
  required bool is_internal_employee = 11;
  message Account {
    required int64 entity_id = 1;
    // "Publisher Self-Served", "Teads Innovation", "Innovation feature team Platform"
    repeated string roles = 2;
    required string name = 3;
    required AccountType type = 4;
    required EntityStatus status = 5;
  }
}
// @section Account
message GetProfilesAnonymouslyRequest {
  repeated int64 profile_ids = 1;
}
// @section Account
message GetProfilesAnonymouslyResponse {
  repeated Profile profiles = 1;
  message Profile {
    required int64 profile_id = 1;
    required string email = 2;
    optional string firstname = 3;
    optional string lastname = 4;
    optional bool is_internal_employee = 6;
    reserved 5;
  }
}
// @section Account
message GetProfilesRequest {
  required SecurityContext security_context = 1;
  repeated int64 profile_ids = 2;
}
// @section Account
message GetProfilesResponse {
  repeated Profile profiles = 1;
  message Profile {
    required int64 profile_id = 1;
    required string email = 2;
    optional string firstname = 3;
    optional string lastname = 4;
    required bool is_internal_employee = 5;
  }
}
// @section Campaign
message GetProgressReportMetricsForBrandingCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  required TimeInterval time_interval = 3;
  repeated Dimension dimensions = 4;
  required string timezone = 5;
  // The 3-letter currency code defined in ISO 4217
  required string currency = 6;
  message TimeInterval {
    required google.protobuf.Timestamp start_date = 1;
    required google.protobuf.Timestamp end_date = 2;
  }
  enum Dimension {
    DIMENSION_CREATIVE_ID = 0;
    DIMENSION_LINE_ITEM_ID = 1;
    DIMENSION_DEVICE = 2;
    DIMENSION_DAY = 3;
    DIMENSION_BILLING_MODEL = 4;
    DIMENSION_CREATIVE_KIND = 5;
    DIMENSION_INSERTION_ORDER_LINE_ID = 6;
    DIMENSION_LINE_ITEM_IS_FREE = 7;
  }
}
// @section Campaign
message GetProgressReportMetricsForBrandingCampaignResponse {
  repeated CampaignProgressReportRow campaign_progress_report_rows = 1;
  message CampaignProgressReportRow {
    map<string, string> dimension_value_by_dimension_name = 1;
    required Metrics metrics = 2;
  }
  message Metrics {
    optional int64 impression = 1;
    optional int64 advertiser_billable_volume = 2;
    optional int64 first_quartile = 3;
    optional int64 mid_point = 4;
    optional int64 third_quartile = 5;
    optional int64 complete = 6;
    optional int64 click = 7;
    optional double budget_delivered_value = 8;
    optional double click_through_rate = 9;
    optional double view_through_rate = 10;
    optional double moat_view_rate_video = 11;
    optional double moat_view_rate_display = 12;
    optional double turnover_value = 15;
    optional double ecpm = 16;
    optional double evcpm = 17;
    optional double ecpcv = 18;
    optional double clearing_price = 19;
    optional double moat_inview_time_rate = 20;
    optional int64 start = 21;
    optional double moat_viewability_rate = 22;
    optional int64 cookieless_impression = 23;
    reserved 13, 14;
  }
}
// @section Campaign
message GetProgressReportMetricsForPerformanceCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  required TimeInterval time_interval = 3;
  repeated Dimension dimensions = 4;
  required string timezone = 5;
  // The 3-letter currency code defined in ISO 4217
  required string currency = 6;
  message TimeInterval {
    required google.protobuf.Timestamp start_date = 1;
    required google.protobuf.Timestamp end_date = 2;
  }
  enum Dimension {
    DIMENSION_CREATIVE_ID = 0;
    DIMENSION_LINE_ITEM_ID = 1;
    DIMENSION_CONVERSION_TYPE = 2;
    DIMENSION_DEVICE = 3;
    DIMENSION_DAY = 4;
    DIMENSION_BILLING_MODEL = 5;
    DIMENSION_INSERTION_ORDER_LINE_ID = 6;
    DIMENSION_LINE_ITEM_IS_FREE = 7;
    DIMENSION_CONVERSION_NAME = 8;
    DIMENSION_CONVERSION_IS_OPTIMIZED = 9;
  }
}
// @section Campaign
message GetProgressReportMetricsForPerformanceCampaignResponse {
  repeated CampaignProgressReportRow campaign_progress_report_rows = 1;
  message CampaignProgressReportRow {
    map<string, string> dimension_value_by_dimension_name = 1;
    required Metrics metrics = 2;
  }
  message Metrics {
    optional int64 post_click_conversion = 1;
    optional int64 post_view_conversion = 2;
    optional int64 impression = 3;
    optional double click_through_rate = 4;
    optional int64 click = 5;
    optional double ecpm = 6;
    optional double ecpc = 7;
    optional double turnover_value = 8;
    optional double budget_delivered_value = 9;
    optional double revenue_attributable = 10;
  }
}
// @section Campaign
message GetPublisherDirectSalesCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
}
// @section Campaign
message GetPublisherDirectSalesCampaignResponse {
  required int64 campaign_id = 1;
  required int64 publisher_id = 2;
  optional string name = 3;
  optional string iab_category_code = 4;
  repeated Creative creatives = 5;
  repeated LineItem line_items = 6;
  optional int64 advertiser_id = 7;
  optional int64 agency_id = 8;
  optional bool is_test_campaign = 9;
  optional bool tracked_by_moat = 10;
  required DirectSalesCampaignStatus status = 11;
  optional google.protobuf.Timestamp activated_at = 12;
  message Creative {
    required int64 creative_id = 2;
    optional string name = 3;
    optional int64 format_size_id = 4;
    optional int64 format_creative_type_id = 5;
    oneof media {
      FirstPartyMedia first_party_media = 6;
      ThirdPartyMedia third_party_media = 7;
    }
    repeated ThirdPartyTracking third_party_trackings = 8;
    required DirectSalesCreativeCreator created_with = 9;
    required bool is_blocked = 10;
    message FirstPartyMedia {
      required string asset_path = 1;
      optional string click_through_url = 2;
      optional CallToAction call_to_action = 3;
      optional DirectSalesCreativeEncodingStatus encoding_status = 4;
      optional string thumbnail_base_url = 5;
      message CallToAction {
        required DirectSalesCreativeAction action = 1;
        optional int64 countdown = 2;
      }
    }
    message ThirdPartyMedia {
      required string vast_url = 1;
    }
    message ThirdPartyTracking {
      required DirectSalesThirdPartyTrackingEvent tracking_event = 1;
      required string tracking_url = 2;
    }
  }
  message LineItem {
    required int64 line_item_id = 1;
    optional string name = 2;
    required Budget budget = 3;
    required Price selling_price = 4;
    optional string currency = 5;
    required Capping frequency_capping = 7;
    required Duration flight_duration = 8;
    optional WeekSchedule schedule = 9;
    repeated int64 format_positions_ids = 11;
    optional KpiOptimization kpi_optimization = 12;
    optional string targeting_rule = 13;
    optional FormatSettings format_settings = 14;
    repeated AssignedCreative assigned_creatives = 15;
    required DirectSalesLineItemStatus status = 16;
    required bool uses_be = 17;
    required bool can_demo = 18;
    // when the line item wins an SSP auction in a header bidding context, this value is sent
    // by Teads' adapter to flag it as a particular deal ID, triggering a custom targeting
    // and/or pacing behavior on ad server side
    optional string header_bidding_deal_id_targeting = 19;
    required CampaignPacing pacing = 20;
    message AssignedCreative {
      required int64 creative_id = 1;
      optional int32 share_of_voice = 2;
    }
    message Budget {
      optional double amount = 1;
      optional DirectSalesLineItemBudgetPeriod period = 2;
    }
    message Capping {
      optional int64 amount = 1;
      optional DirectSalesBillableCappingEvent event = 2;
      optional DirectSalesLineItemCappingPeriod period = 3;
    }
    message Duration {
      optional google.protobuf.Timestamp start_date = 1;
      optional google.protobuf.Timestamp end_date = 2;
      optional string timezone = 3;
    }
    message FormatSettings {
      required DirectSalesLineItemStartMode start_mode = 1;
      required int32 viewability_threshold = 2;
    }
    message KpiOptimization {
      required DirectSalesLineItemOptimizedKpi kpi = 1;
      optional double threshold = 2;
    }
    message Price {
      optional double amount = 1;
      optional DirectSalesBillablePriceEvent event = 3;
    }
    message WeekSchedule {
      required DaySchedule monday = 1;
      required DaySchedule tuesday = 2;
      required DaySchedule wednesday = 3;
      required DaySchedule thursday = 4;
      required DaySchedule friday = 5;
      required DaySchedule saturday = 6;
      required DaySchedule sunday = 7;
      message DaySchedule {
        // Array of ints between 0 and 23
        repeated int32 hours = 1;
      }
    }
    reserved 6;
  }
  reserved 13;
}
// @section Campaign
message GetPublisherDirectSalesCampaignTagRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_tag_id = 2;
}
// @section Campaign
message GetPublisherDirectSalesCampaignTagResponse {
  required int64 campaign_tag_id = 1;
  required int64 publisher_id = 2;
  optional string name = 3;
  repeated Creative creatives = 4;
  repeated Tag tags = 5;
  optional int64 advertiser_id = 6;
  optional int64 agency_id = 7;
  required DirectSalesCampaignStatus status = 8;
  optional google.protobuf.Timestamp activated_at = 9;
  required bool has_single_creative_tags_only = 11;
  optional bool tracked_by_moat = 12;
  message Creative {
    required int64 creative_id = 1;
    optional string name = 2;
    optional int64 format_size_id = 3;
    optional int64 format_creative_type_id = 4;
    oneof media {
      FirstPartyMedia first_party_media = 5;
      ThirdPartyMedia third_party_media = 6;
    }
    repeated ThirdPartyTracking third_party_trackings = 7;
    required DirectSalesCreativeCreator created_with = 8;
    required bool is_blocked = 9;
    message FirstPartyMedia {
      required string asset_path = 1;
      optional string click_through_url = 2;
      optional CallToAction call_to_action = 3;
      optional DirectSalesCreativeEncodingStatus encoding_status = 4;
      optional string thumbnail_base_url = 5;
      message CallToAction {
        required DirectSalesCreativeAction action = 1;
        optional int64 countdown = 2;
      }
    }
    message ThirdPartyMedia {
      required string vast_url = 1;
    }
    message ThirdPartyTracking {
      required DirectSalesThirdPartyTrackingEvent tracking_event = 1;
      required string tracking_url = 2;
    }
  }
  message Price {
    required double amount = 1;
    required DirectSalesBillablePriceEvent event = 2;
  }
  message Tag {
    required int64 tag_id = 1;
    repeated AssignedCreative assigned_creatives = 2;
    required DirectSalesTagStatus status = 3;
    required string name = 4;
    optional Price selling_price = 5;
    required bool can_demo = 6;
    message AssignedCreative {
      required int64 creative_id = 1;
      optional int32 share_of_voice = 2;
    }
  }
  reserved 10;
}
// @section Finance
message GetPublisherDirectSalesDealIdValidatedBillablesRequest {
  required SecurityContext security_context = 1;
  required int64 billing_office_id = 2;
  reserved 3;
  reserved "publisher_id";
}
// @section Finance
message GetPublisherDirectSalesDealIdValidatedBillablesResponse {
  repeated PublisherDirectSalesDealIdValidatedBillable billables = 1;
  message PublisherDirectSalesDealIdValidatedBillable {
    required int64 billable_id = 1;
    required YearMonth year_month = 2;
    required int64 publisher_id = 3;
    required string publisher_name = 4;
    required int64 billing_office_id = 5;
    required string billing_office_name = 6;
    required int64 operator_office_id = 7;
    required string operator_office_name = 8;
    required int64 publisher_billable_volume = 9;
    required string billing_currency = 10;
    required double publisher_platform_fee = 11;
    required double dsp_billing_amount = 12;
    required double dsp_billing_amount_converted_usd = 13;
    required double publisher_platform_fee_converted_usd = 14;
  }
  message YearMonth {
    required int32 month = 1;
    required int32 year = 2;
  }
}
// @section Inventory
message GetPublisherInfoRequest {
  required SecurityContext security_context = 1;
  required PublisherId publisher_id = 2;
  message PublisherId {
    required int64 value = 1;
  }
}
// @section Inventory
message GetPublisherInfoResponse {
  required PublisherId id = 1;
  required string name = 2;
  required PublisherType publisher_type = 3;
  required string currency = 4;
  required int64 parent_id = 5;
  required string parent_name = 6;
  required bool accept_header_bidding = 7;
  message PublisherId {
    required int64 value = 1;
  }
}
// @section Account
message GetPublisherSettingsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Account
message GetPublisherSettingsForPublisherResponse {
  repeated PublisherSetting publisher_settings = 1;
  message BankCountry {
    required int64 id = 1;
    required string country_code = 2;
    required string country_label = 3;
    required bool is_sepa_zone = 4;
  }
  message BillingOffice {
    required int64 id = 1;
    required string name = 2;
    // The 3-letter currency code defined in ISO 4217
    required string currency = 3;
  }
  message PublisherSetting {
    required int64 id = 1;
    optional PaymentMode payment_mode = 2;
    optional string paypal_email = 3;
    optional BillingSource billing_source = 4;
    required BillingOffice billing_office = 5;
    optional BankCountry bank_country = 6;
    optional PublisherType publisher_type = 7;
  }
  message PublisherType {
    required int64 id = 1;
    required string code = 2;
    required bool is_foreign = 3;
  }
  enum BillingSource {
    BILLING_SOURCE_UNKNOWN = 0;
    BILLING_SOURCE_LOCAL = 1;
    BILLING_SOURCE_FOREIGN = 2;
  }
}
// @section Account
message GetPublisherTypesForOfficesRequest {
  required SecurityContext security_context = 1;
  repeated int64 office_ids = 2;
}
// @section Account
message GetPublisherTypesForOfficesResponse {
  repeated PublisherType publisher_types = 1;
  message PublisherType {
    required int64 id = 1;
    required string code = 2;
  }
}
// @section Campaign
message GetQualifiedVisitCriteriaAnonymouslyRequest {
}
// @section Campaign
message GetQualifiedVisitCriteriaAnonymouslyResponse {
  required int64 min_page_views = 1;
  required int64 min_time_spent = 2;
}
// @section Reachcast
message GetReachcastFeasibilityRequest {
  required SecurityContext security_context = 1;
  required Targeting targeting = 2;
  required Account account = 3;
  message Account {
    required int32 entity_id = 1;
    required int32 profile_id = 2;
  }
  message Targeting {
    required string country_code = 1;
    required LegalAge legal_age = 2;
    required BrandSafetyType brand_safety = 3;
    optional BrandSuitabilitySegments brand_suitability = 4;
    repeated int64 included_packs = 5;
    repeated string included_websites = 6;
    repeated int64 excluded_packs = 7;
    repeated string excluded_websites = 8;
    message BrandSuitabilitySegments {
      repeated string ias_ids = 1;
      repeated string grapeshot_ids = 2;
      repeated string double_verify_ids = 3;
    }
  }
}
// @section Reachcast
message GetReachcastFeasibilityResponse {
  required ReachcastFeasibility reachcast_feasibility = 1;
  enum ReachcastFeasibility {
    REACHCAST_FEASIBILITY_IMPOSSIBLE = 0;
    REACHCAST_FEASIBILITY_PREMIUM = 1;
    REACHCAST_FEASIBILITY_STANDARD = 2;
  }
}
// @section Advertiser
message GetRecentActivityForBuyerPixelsRequest {
  required SecurityContext security_context = 1;
  repeated int64 buyer_pixel_ids = 2;
}
// @section Advertiser
message GetRecentActivityForBuyerPixelsResponse {
  map<int64, PixelActivity> activity_by_pixel = 1;
  message DailyActivity {
    required google.protobuf.Timestamp day = 1;
    required uint32 number_of_conversions = 2;
    required uint32 number_of_attributed_conversions = 3;
  }
  message PixelActivity {
    repeated DailyActivity recent_days = 1; // ordered by day asc
    optional google.protobuf.Timestamp last_activity_date = 2;
  }
}
// @section Account
message GetRestrictedCurrenciesForEntityRequest {
  required SecurityContext security_context = 1;
  required int64 entity_id = 2;
}
// @section Account
message GetRestrictedCurrenciesForEntityResponse {
  repeated RestrictedCurrency restricted_currencies = 1;
  message RestrictedCurrency {
    required bool is_selling = 1; // A currency is either a selling currency or a buying currency
    required bool is_default = 2; // means it's the default currency for this entity
    required string currency = 3;
  }
}
// @section Account
message GetRightsForAccountAnonymouslyRequest {
  required AccountId account_id = 1;
  optional bool inherit_rights_from_parent_entities = 2;
  message AccountId {
    required int64 profile_id = 1;
    required int64 entity_id = 2;
  }
}
// @section Account
message GetRightsForAccountAnonymouslyResponse {
  // For each permission, the authorized resource types. Example:
  //  "manage" -> ("connection", "placement"),
  //  "view" -> ("connection", "invoice", "mrg-contract", "placement")
  map<string, ResourceTypes> resource_types_by_permission = 1;
  message ResourceTypes {
    repeated string values = 1;
  }
}
// @section Commercial
message GetSalesforceAdvertiserAnonymouslyRequest {
  required string advertiser_salesforce_id = 1;
}
// @section Commercial
message GetSalesforceAdvertiserAnonymouslyResponse {
  required string advertiser_salesforce_id = 1;
  required string advertiser_name = 2;
  // platform id of the category
  required int64 iab_category_id = 3;
  required bool is_business_holder = 4;
  optional int64 advertiser_id = 5;
  optional int64 advertiser_parent_id = 6;
}
// @section Advertiser
message GetSalesforceAdvertiserRequest {
  required SecurityContext security_context = 1;
  required int64 advertiser_id = 2;
}
// @section Advertiser
message GetSalesforceAdvertiserResponse {
  required int64 advertiser_id = 1;
  repeated int64 entity_ids = 2;
  required string name = 3;
}
// @section Advertiser
message GetSalesforceAgencyRequest {
  required SecurityContext security_context = 1;
  required int64 agency_id = 2;
}
// @section Advertiser
message GetSalesforceAgencyResponse {
  required int64 agency_id = 1;
  repeated int64 entity_ids = 2;
  required string name = 3;
}
// @section Commercial
message GetSalesforceBuyerSeatError {
  required Error error = 1;
  message Error {
    oneof error_type {
      UnknownSalesforceSeat unknown_salesforce_seat_id = 1;
    }
  }
  message UnknownSalesforceSeat {
    required string salesforce_seat_id = 1;
  }
}
// @section Commercial
message GetSalesforceBuyerSeatRequest {
  required SecurityContext security_context = 1;
  required string salesforce_buyer_seat_id = 2;
}
// @section Commercial
message GetSalesforceBuyerSeatResponse {
  required string salesforce_buyer_seat_id = 1;
  optional int64 buyer_seat_id = 2;
  required int64 office_id = 3;
  optional string salesforce_contract_id = 4;
  required bool can_campaign_go_live = 5;
  required bool is_active = 6;
  optional double platform_fee = 7;
  required SalesforceBuyerType buyer_type = 8;
  required int64 buyer_id = 9;
  required string name = 10;
  repeated InvoiceRecipient invoice_recipients = 11;
  // The Salesforce Buyer ID is the ID for an Agency or an Advertiser on SFDC. The validation rule for AGENCY is the same as for ADVERTISER
  required string salesforce_buyer_id = 12;
  optional SalesforceContractServiceLevel contract_service_level = 13;
  optional SalesforceContractSignatureType contract_signature_type = 14;
  message InvoiceRecipient {
    required string salesforce_id = 1;
    required string name = 2;
    required SalesforceInvoiceRecipientStatus status = 3;
    optional string legal_name = 4;
    optional string vat_number = 5;
    optional string tax_payer_id = 6;
    optional string address_street = 7;
    optional string address_city = 8;
    optional string address_postal_code = 9;
    optional string address_country_code = 10;
    optional string address_state_code = 11;
    required string currency = 12;
    required bool is_factoring = 13;
    required bool is_credit_score_checked = 14;
    optional string external_account_number = 15;
  }
  enum SalesforceContractServiceLevel {
    SALESFORCE_CONTRACT_SERVICE_LEVEL_SELF_SERVED = 1;
    SALESFORCE_CONTRACT_SERVICE_LEVEL_MANAGED = 2;
  }
  enum SalesforceContractSignatureType {
    SALESFORCE_CONTRACT_SIGNATURE_TYPE_DIGITAL = 1;
    SALESFORCE_CONTRACT_SIGNATURE_TYPE_PAPER = 2;
    SALESFORCE_CONTRACT_SIGNATURE_TYPE_UNDEFINED = 3;
  }
}
// @section Commercial
message GetSalesforceOpportunityRequest {
  required SecurityContext security_context = 1;
  required string opportunity_id = 2;
}
// @section Commercial
message GetSalesforceOpportunityResponse {
  required string opportunity_id = 1;
  required string name = 2;
  required int64 agency_id = 3;
  required int64 advertiser_id = 4;
  required int64 office_id = 6;
  // The 3-letter currency code defined in ISO 4217
  required string opportunity_currency = 7;
  // JDK TimeZones compatible with TimeZone.getTimeZone
  required string opportunity_timezone = 8;
  required string invoice_reference_number = 15;
  // platform id of the category
  required int64 iab_category_id = 16;
  repeated SalesforceOpportunityLineItem opportunity_line_items = 17;
  required bool can_be_synchronized = 19;
  optional string advertiser_name = 20;
  optional string agency_name = 21;
  required string seller_email = 22;
  optional bool is_moat_unsampled = 23 [default = false];
  optional Version version = 24 [default = VERSION_LEGACY_MANAGED];
  message SalesforceOpportunityLineItem {
    required string id = 1;
    required string name = 2;
    required Objective objective = 3;
    required google.protobuf.Timestamp start_date = 4;
    required google.protobuf.Timestamp end_date = 5;
    required double budget = 6;
    required int64 billable_volume = 7;
    required double free_budget = 8;
    required int64 free_billable_volume = 9;
    required string salesforce_geo = 10;
    optional string salesforce_creatives = 11;
    optional BillingModel billing_model = 12;
    optional double billing_model_rate = 13;
    optional string billing_event = 14;
    optional AuctionType auction_type = 15;
    optional CreativeTypeFamily creative_type_family = 16;
    optional bool is_guaranteed = 17;
    required AdvertisingSolutionId advertising_solution_id = 18;
  }
  enum AdvertisingSolutionId {
    ADVERTISING_SOLUTION_ID_AWARENESS = 1;
    ADVERTISING_SOLUTION_ID_TA_CLICKS = 2;
    ADVERTISING_SOLUTION_ID_TA_VISITS = 3;
    ADVERTISING_SOLUTION_ID_TA_MIXED = 4;
    ADVERTISING_SOLUTION_ID_WEBSITE_CONVERSIONS = 5;
    ADVERTISING_SOLUTION_ID_SEAMLESS_COMMERCE = 6;
    ADVERTISING_SOLUTION_ID_TA_CLICKS_GUARANTEED_CPC = 7;
    ADVERTISING_SOLUTION_ID_TA_VISITS_GUARANTEED_CPC = 8;
  }
  enum AuctionType {
    AUCTION_TYPE_FIXED = 1;
    AUCTION_TYPE_DYNAMIC = 2;
  }
  enum BillingModel {
    BILLING_MODEL_CPM = 1;
    BILLING_MODEL_VCPM = 2;
    BILLING_MODEL_CPCV = 3;
    BILLING_MODEL_CPC = 4;
    BILLING_MODEL_CPV = 5;
  }
  enum CreativeTypeFamily {
    CREATIVE_TYPE_FAMILY_VIDEO = 1;
    CREATIVE_TYPE_FAMILY_DISPLAY = 2;
  }
  enum Objective {
    OBJECTIVE_TRAFFIC_ACQUISITION = 1;
    OBJECTIVE_BRANDING = 2;
    OBJECTIVE_CONVERSIONS = 3;
  }
  enum Version {
    VERSION_LEGACY_MANAGED = 1;
    VERSION_TAM_V1 = 2;
    VERSION_TAM_V2 = 3;
  }
  reserved 5, 18;
}
// @section Users Data
message GetSegmentsByTargetingDimensionRequest {
  required SecurityContext security_context = 1;
  required TargetingContext targeting_context = 2;
  repeated Mapping mappings = 3;
  optional bool includes_first_party = 4 [default = false];
  message Mapping {
    required TargetingDimension dimension = 1;
    repeated string ids = 2;
  }
  message TargetingContext {
    repeated string countries = 1; // ISO 3166-1 alpha-2 (2 letters) codes
    optional bool is_self_served = 2 [default = false];
    optional bool is_ctv = 3 [default = false];
    optional int64 entity_id = 4;
  }
}
// @section Users Data
message GetSegmentsByTargetingDimensionResponse {
  repeated Mapping mappings = 1;
  message Mapping {
    required TargetingDimension dimension = 1;
    required string dimension_label = 2;
    repeated Segment values = 3;
  }
  message Segment {
    required string id = 1;
    required string label = 2;
    required int64 reach = 3;
    optional int64 pageviews = 4;
    optional int64 cookieless_reach = 5;
    optional int64 cookieless_pageviews = 6;
  }
}
// @section Users Data
message GetSegmentsForLookalikeRequest {
  required SecurityContext security_context = 1;
  required LookalikeSeed lookalike_seed = 2;
  message LookalikeSeed {
    required string seed_provider = 1;
    required string seed_segment_id_for_provider = 2;
    // Represents countries in ISO-2 format
    repeated string countries_for_seed = 3;
  }
}
// @section Users Data
message GetSegmentsForLookalikeResponse {
  required LookalikeSegment accuracy = 1;
  required LookalikeSegment standard = 2;
  required LookalikeSegment reach = 3;
  message LookalikeSegment {
    required uint64 id = 1;
    optional double lift = 2; // set only when the lookalike is in the USABLE state
    map<string, uint64> reach_by_country = 3; // filled only when the lookalike is in the USABLE state
  }
}
// @section Campaign
message GetSellerOfficeForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
}
// @section Campaign
message GetSellerOfficeForCampaignResponse {
  required int64 office_id = 1;
}
// @section Account
message GetSettingsForPublisherTypeRequest {
  required SecurityContext security_context = 1;
  required int32 publisher_type_id = 2;
}
// @section Account
message GetSettingsForPublisherTypeResponse {
  repeated Field settings = 1;
  message Field {
    required int32 id = 1;
    required bool mandatory = 2;
    required string code = 3;
    required PublisherSettingsFieldType field_type = 4;
    required int32 field_max_size = 5;
    required int32 weight = 6;
    optional string field_validation_rule = 7;
    optional PublisherSettingsFieldCategory category = 8;
  }
}
// @section Creative
message GetStarredCreativeFoldersForAccountRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
  required int64 entity_id = 3;
  required Page page = 4;
  required Sort sort = 5;
  message Sort {
    required SortDirection direction = 1;
    required SortField field = 2;
  }
  enum SortField {
    SORT_FIELD_NAME = 1;
    SORT_FIELD_CREATOR_NAME = 2;
    SORT_FIELD_CREATED_AT = 3;
  }
}
// @section Creative
message GetStarredCreativeFoldersForAccountResponse {
  repeated StarredFolder creative_folder_tree_nodes = 1;
  required int32 total = 2;
  required int32 index = 3;
  message StarredFolder {
    required int64 creative_folder_tree_node_id = 1;
    required string name = 2;
    required google.protobuf.Timestamp created_at = 4;
    optional int64 creator_profile_id = 5;
    optional string creator_name = 6;
    required FolderTreeNodeType creative_folder_tree_node_type = 7;
  }
}
// @section Creative
message GetStarredCreativeFoldersForCreativeFolderTreeNodeRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
  required int64 entity_id = 3;
  optional int64 creative_folder_tree_node_id = 4;
}
// @section Creative
message GetStarredCreativeFoldersForCreativeFolderTreeNodeResponse {
  repeated int64 creative_folder_tree_node_ids = 1;
}
// @section Creative
message GetStarredCreativeFoldersForCreativeFoldersRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
  required int64 entity_id = 3;
  repeated int64 creative_folder_tree_node_ids = 4;
}
// @section Creative
message GetStarredCreativeFoldersForCreativeFoldersResponse {
  repeated StarredFolder starred_folders = 1;
  message StarredFolder {
    required int64 creative_folder_tree_node_id = 1;
    required string name = 2;
    required google.protobuf.Timestamp created_at = 4;
    optional int64 creator_profile_id = 5;
    optional string creator_name = 6;
    required FolderTreeNodeType creative_folder_tree_node_type = 7;
  }
}
// @section Campaign Support
message GetStartedCampaignSupportRequestForCampaignRequest {
  required SecurityContext security_context = 1;
  required uint64 campaign_id = 2;
}
// @section Campaign Support
message GetStartedCampaignSupportRequestForCampaignResponse {
  required uint64 campaign_id = 1;
  required uint64 support_request_id = 2;
  required uint64 requester_profile_id = 3;
  required string description = 4;
  required CampaignSupportRequestStatus status = 5;
  required google.protobuf.Timestamp created_at = 6;
  optional google.protobuf.Timestamp status_updated_at = 7;
}
// @section Command Runner
message GetSubmissionRequest {
  required SecurityContext security_context = 1;
  required string submission_id = 2;
}
// @section Command Runner
message GetSubmissionResponse {
  required string submission_id = 1;
  required google.protobuf.Any command_request = 2;
  required google.protobuf.Timestamp submitted = 3;
  oneof command_response {
    CommandResponseSucceded command_response_succeeded = 4;
  }
  optional google.protobuf.Timestamp applied = 5;
  message CommandResponseSucceded {
    required google.protobuf.Any command_response_succeeded_value = 1;
  }
}
// @section Users Segments
message GetTeadsSegmentsAnonymouslyError {
  required SegmentsNotFound segments_not_found_error = 1;
  message SegmentsNotFound {
    repeated uint32 segment_internal_codes = 1;
  }
}
// @section Users Segments
message GetTeadsSegmentsAnonymouslyRequest {
  repeated uint32 segment_internal_codes = 1;
}
// @section Users Segments
message GetTeadsSegmentsAnonymouslyResponse {
  repeated TeadsSegment teads_segments = 1;
  message TeadsSegment {
    required uint32 internal_code = 1;
    required string name = 2;
    required Category category = 3;
    optional string segment_id = 4;
    optional uint32 advertiser_id = 5;
  }
  enum Category {
    CATEGORY_DAR_OPTIMIZED = 1;
    CATEGORY_INTEREST = 2;
    CATEGORY_PREDICTIVE_SEGMENT = 3;
    CATEGORY_TEADS_INTEREST_PUBLISHERS = 4;
    CATEGORY_REMARKETING = 5;
    CATEGORY_UNKNOWN = 6;
  }
}
// @section Campaign Setup
message GetTeadsSegmentsForCampaignRequest {
  required SecurityContext security_context = 1;
  required uint64 campaign_id = 2;
}
// @section Campaign Setup
message GetTeadsSegmentsForCampaignResponse {
  repeated TeadsSegment teads_segments = 1;
  message TeadsSegment {
    required uint32 internal_code = 1;
    required string name = 2;
    required Category category = 3;
    optional string segment_id = 4;
    optional uint32 advertiser_id = 5;
  }
  enum Category {
    CATEGORY_DAR_OPTIMIZED = 1;
    CATEGORY_INTEREST = 2;
    CATEGORY_PREDICTIVE_SEGMENT = 3;
    CATEGORY_TEADS_INTEREST_PUBLISHERS = 4;
    CATEGORY_REMARKETING = 5;
    CATEGORY_UNKNOWN = 6;
  }
}
// @section Account
message GetTemporaryAccountsAuditForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Account
message GetTemporaryAccountsAuditForPublisherResponse {
  repeated AuditRecord audit_records = 1;
  message AuditRecord {
    required google.protobuf.Timestamp date = 1;
    oneof event {
      GrantAuditEvent grant_audit_event = 2;
      RevokeAuditEvent revoke_audit_event = 3;
    }
  }
  message GrantAuditEvent {
    required Profile operator = 1;
    repeated Profile target_profiles = 2;
    required string reason = 3;
  }
  message Profile {
    required int64 profile_id = 1;
    optional string first_name = 2;
    optional string last_name = 3;
    required string email = 4;
  }
  message RevokeAuditEvent {
    optional Profile operator = 1;
  }
}
// @section Inventory
message GetTfpFeaturesForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Inventory
message GetTfpFeaturesForPublisherResponse {
  repeated TfpFeature features = 1;
}
// @section Campaign
message GetTypeForDirectSalesCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 direct_sales_campaign_id = 2;
}
// @section Campaign
message GetTypeForDirectSalesCampaignResponse {
  required DirectSalesCampaignType direct_sales_campaign_type = 1;
}
// @section Campaign
message GetVastUrlsForCreativeRequest {
  required SecurityContext security_context = 1;
  required int64 creative_id = 2;
}
// @section Campaign
message GetVastUrlsForCreativeResponse {
  optional string wrapped_vast_url = 1;
  repeated string vast_preview_urls = 2;
}
// @section Inventory
message GetVirtualCostRatiosForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Inventory
message GetVirtualCostRatiosForPublisherResponse {
  required int32 publisher_virtual_cost_ratio_for_desktop = 1;
  required int32 publisher_virtual_cost_ratio_for_mobile = 2;
  // can be empty, list of websites/app (aka inventory) overriding the VCR set at publisher level
  repeated PublisherInventoryVirtualCostRatiosOverride publisher_inventory_overrides = 3;
  // can be empty, list of placement ignoring all VCRs
  repeated int64 placement_ids_ignoring_virtual_cost_ratios = 4;
  message PublisherInventoryVirtualCostRatiosOverride {
    required int64 inventory_id = 1;
    // current VCR set at publisher inventory level for desktop
    required int32 virtual_cost_ratio_for_desktop = 2;
    // current VCR set at publisher inventory level for mobile
    required int32 virtual_cost_ratio_for_mobile = 3;
    // actual VCR is VCR on publisher * VCR on publisher inventory
    required int32 actual_virtual_cost_ratio_for_desktop = 4;
    // actual VCR is VCR on publisher * VCR on publisher inventory
    required int32 actual_virtual_cost_ratio_for_mobile = 5;
  }
}
// @section Campaign Visual Proof
message GetVisualProofOptionsForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
}
// @section Campaign Visual Proof
message GetVisualProofOptionsForCampaignResponse {
  map<int64, VisualProofOption> visual_proof_option_by_creative_id = 1;
  message VisualProofApplicable {
    required CampaignVisualProofDevice recommended_device = 1;
    required string recommended_website_url = 2;
    repeated WebsiteDelivery website_delivery_options = 3;
  }
  message VisualProofNotApplicable {
  }
  message VisualProofOption {
    oneof option {
      VisualProofApplicable applicable_option = 1;
      VisualProofNotApplicable not_applicable_option = 2;
    }
  }
  message WebsiteDelivery {
    required string website_url = 1;
  }
}
// @section Mrg Contract
message GetVolumeStatsForMrgContractRequest {
  required SecurityContext security_context = 1;
  required string uuid = 2;
  required int64 publisher_id = 3;
}
// @section Mrg Contract
message GetVolumeStatsForMrgContractResponse {
  required string uuid = 1;
  repeated Stat stats = 3;
  message Stat {
    required google.protobuf.Timestamp quarter = 1;
    required int64 delivered_volume = 3;
    required int64 committed_volume = 4;
    // Represents a linear projection of the volume over the quarter
    optional double forecast = 5;
  }
}
// @section Inventory
message GetWebsitesByURIRequest {
  required SecurityContext security_context = 1;
  repeated int64 website_ids = 2;
}
// @section Inventory
message GetWebsitesByURIResponse {
  map<string, Websites> websites_by_uri = 1;
  message Websites {
    repeated int64 website_ids = 1;
  }
}
// @section Inventory
message GetWebsitesRequest {
  required SecurityContext security_context = 1;
  repeated int64 website_ids = 2;
}
// @section Inventory
message GetWebsitesResponse {
  repeated Website websites = 1;
  message Website {
    required int64 website_id = 1;
    required string website_name = 2;
    required WebsiteStatus website_status = 3;
  }
}
// @section Reporting
message GrantAccessToBuyerReportingForProfileAnonymouslyRequest {
  required int64 profile_id = 1;
  required string report_id = 2;
}
// @section Reporting
message GrantAccessToBuyerReportingForProfileAnonymouslyResponse {
  required string access_token = 1;
}
// @section Reporting
message GrantAccessToPublisherReportingForProfileAnonymouslyRequest {
  required int64 profile_id = 1;
  required string report_id = 2;
  repeated int64 entity_ids = 3;
}
// @section Reporting
message GrantAccessToPublisherReportingForProfileAnonymouslyResponse {
  required string access_token = 1;
}
// @section Account
message GrantAdminRoleForBuyerRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
  required int64 entity_id = 3;
}
// @section Account
message GrantAdminRoleForBuyerResponse {
}
// @section Account
message GrantRolesForAccountRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
  required int64 entity_id = 3;
  // "Publisher Self-Served", "Teads Innovation", "Innovation feature team Platform"
  repeated string roles = 4;
  // a reason describing why these roles are granted
  optional string reason = 5;
}
// @section Account
message GrantRolesForAccountResponse {
}
// @section Account
message GrantTemporaryAccountsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  // Deprecated, will be removed in next PR
  optional string role = 3;
  repeated int64 office_profile_ids = 4;
  required string reason = 5;
  repeated string roles = 6;
}
// @section Account
message GrantTemporaryAccountsForPublisherResponse {
}
// @section Campaign Support
message HasOpenCampaignSupportRequestForCampaignsRequest {
  required SecurityContext security_context = 1;
  repeated uint64 campaign_ids = 2;
}
// @section Campaign Support
message HasOpenCampaignSupportRequestForCampaignsResponse {
  map<uint64, bool> has_open_campaign_support_request_by_campaign_id = 1;
}
// @section Reporting
message HasProfileAccessToDatamartsConsoleRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
}
// @section Reporting
message HasProfileAccessToDatamartsConsoleResponse {
  required bool is_datamarts_console_user = 1;
}
// @section Commons
message HealthCheckAnonymouslyRequest {
}
// @section Commons
message HealthCheckAnonymouslyResponse {
}
// @section Ad Quality
message HeavyCreativeEvent {
  required string creative_id = 1;
  required int32 heavy_network_interventions_count = 2;
  required int32 heavy_cpu_interventions_count = 3;
  required int32 impressions_count = 4;
  required google.protobuf.Duration snapshot_time_frame = 5;
}
// @section Inventory
message ImportVettedSitesFromCsvRequest {
  required SecurityContext security_context = 1;
  repeated string csv_names = 2;
}
// @section Inventory
message ImportVettedSitesFromCsvResponse {
  required int64 created_sites_count = 1;
}
// @section Advertiser
message InactivePixelDetectedEvent {
  required int64 buyer_pixel_id = 1;
}
// @section Users Targeting
message InlineZonesInRuleAnonymouslyRequest {
  required string rule = 1;
}
// @section Users Targeting
message InlineZonesInRuleAnonymouslyResponse {
  required string inlined_rule = 1;
}
// @section Users Targeting
message InlineZonesInRuleRequest {
  required SecurityContext security_context = 1;
  required string rule = 2;
}
// @section Users Targeting
message InlineZonesInRuleResponse {
  required string inlined_rule = 1;
}
// @section Finance
message InvalidatePublisherTypeForPublisherOnBillingOfficeRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  required int64 billing_office_id = 3;
}
// @section Finance
message InvalidatePublisherTypeForPublisherOnBillingOfficeResponse {
}
// @section Account
message IsEntityAnOfficeRequest {
  required SecurityContext security_context = 1;
  required int64 entity_id = 2;
}
// @section Account
message IsEntityAnOfficeResponse {
  required bool is_office = 1;
}
// @section Finance
message IsInvoiceEmailNotificationActivatedForProfileRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
}
// @section Finance
message IsInvoiceEmailNotificationActivatedForProfileResponse {
  required bool is_invoice_email_notification_activated = 1;
}
// @section Account
message IsProfileALegacyFinanceUserRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
}
// @section Account
message IsProfileALegacyFinanceUserResponse {
  required bool is_finance_user = 1;
}
// @section Account
message IsProfileAPublisherManagerRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
}
// @section Account
message IsProfileAPublisherManagerResponse {
  required bool is_publisher_manager = 1;
}
// @section Account
message IsProfileAnInnovationUserRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
}
// @section Account
message IsProfileAnInnovationUserResponse {
  required bool is_innovation_user = 1;
}
// @section Account
message IsPublisherAcceptingHeaderBiddingRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Account
message IsPublisherAcceptingHeaderBiddingResponse {
  required bool is_accepting_header_bidding = 1;
}
// @section Finance
message LastCompletedMonthOfConnectionBillablesProcessedEvent {
  required google.protobuf.Timestamp processed_month = 1;
}
// @section Finance
message LastCompletedMonthOfLineItemBillablesProcessedEvent {
  required google.protobuf.Timestamp processed_month = 1;
}
// @section Finance
message LastCompletedMonthOfLineItemBillablesUploadedEvent {
  required google.protobuf.Timestamp processed_month = 1;
}
// @section Account
message LicensesForDirectSalesPublisherChangedEvent {
  required int64 publisher_id = 1;
  repeated PublisherLicense licenses_changed = 2;
  message PublisherLicense {
    required PublisherLicenseType license_type = 1;
    required bool activated = 2;
  }
}
// @section Campaign
message LineItemAssignedCreativesChangedEvent {
  required int64 line_item_id = 1;
  required LineItemCategory category = 2;
  required int64 format_id = 3;
  repeated AssignedCreative assigned_creatives = 4;
  message AssignedCreative {
    required int64 creative_id = 1;
    required int32 delivery_share = 2;
  }
}
// @section Campaign
message LineItemBillingChangedEvent {
  required int64 line_item_id = 1;
  required BillingType billing_type = 2;
  optional Optimization optimization = 3;
  required Price price = 4;
  optional ConversionFunnel conversion_funnel = 5;
  required StartMode start_mode = 6;
  optional int64 campaign_id = 7;
  required BillingModel billing_model = 8;
  message ConversionFunnel {
    repeated int64 conversion_ids = 1;
    required int32 lookback_click = 2;
    required int32 lookback_view = 3;
  }
  message Optimization {
    optional OptimizationKpi kpi = 1;
    optional float kpi_threshold = 2;
    optional double kpi_target = 3;
    optional Visit visit = 4;
    optional SecondaryConversion secondary_conversion = 5;
    message SecondaryConversion {
      required int64 id = 1;
      required int32 lookback_click = 2;
      required int32 lookback_view = 3;
    }
    message Visit {
      required int64 id = 1;
      required int32 lookback_click = 2;
      required int32 lookback_view = 3;
    }
  }
  message Price {
    required BillableEvent billable_event = 1;
    required double amount_in_campaign_currency = 2;
    required bool only_one_billable_per_auction = 3;
    optional double bid_recommendation_in_campaign_currency = 4;
  }
  enum BillingModel {
    BILLING_MODEL_COST_PER_VIEW = 1;
    BILLING_MODEL_COST_PER_COMPLETED_VIEW = 2;
    BILLING_MODEL_VIEWABLE_COST_PER_MILLE = 3;
    BILLING_MODEL_COST_PER_MILLE = 4;
    BILLING_MODEL_COST_PER_CLICK = 5;
  }
}
// @section Campaign
message LineItemCreatedEvent {
  required int64 campaign_id = 1;
  required int64 insertion_order_id = 2;
  required int64 billable_volume = 3;
  required bool campaign_has_dynamic_budget_allocation = 4;
  required string name = 5;
  required LineItemBudgetPeriod budget_period = 6;
  optional double budget = 7;
  required FlightDuration flight_duration = 8;
  optional FrequencyCapping capping = 9;
  required LineItemPacing pacing = 10;
  required WeekSchedule schedule = 11;
  optional LineItemPlatformType line_item_type = 12 [default = LINE_ITEM_PLATFORM_TYPE_WEB_INAPP];
  optional int64 line_item_id = 13;
  message FlightDuration {
    required string timezone = 5;
    required google.protobuf.Timestamp start_date = 6;
    required google.protobuf.Timestamp end_date = 7;
  }
  message FrequencyCapping {
    required uint32 amount = 1;
    required LineItemFrequencyCappingEvent event = 2;
    required LineItemFrequencyCappingPeriod period = 3;
  }
  message WeekSchedule {
    required DaySchedule monday = 1;
    required DaySchedule tuesday = 2;
    required DaySchedule wednesday = 3;
    required DaySchedule thursday = 4;
    required DaySchedule friday = 5;
    required DaySchedule saturday = 6;
    required DaySchedule sunday = 7;
    message DaySchedule {
      repeated int32 hours = 1;
    }
  }
}
// @section Campaign
message LineItemDeliveryBoostedOnWebsiteEvent {
  required int64 line_item_id = 1;
  required int64 website_id = 2;
}
// @section Campaign
message LineItemDeliverySlowedDownOnWebsiteEvent {
  required int64 line_item_id = 1;
  required int64 website_id = 2;
}
// @section Campaign
message LineItemDeliveryStartedOnWebsiteEvent {
  required int64 line_item_id = 1;
  required int64 website_id = 2;
}
// @section Campaign
message LineItemDeliveryStoppedOnWebsiteEvent {
  required int64 line_item_id = 1;
  required int64 website_id = 2;
}
// @section Campaign
message LineItemStatusUpdatedEvent {
  required int64 entity_id = 1;
  required int64 profile_id = 2;
  required int64 line_item_id = 3;
  required LineItemStatus old_line_item_status = 4;
  required LineItemStatus new_line_item_status = 5;
}
// @section Campaign
message LineItemTargetingChangedEvent {
  required int64 line_item_id = 1;
  oneof targeting {
    StandardTargeting standard_targeting = 2;
    CustomTargeting custom_targeting = 3;
  }
  message CustomTargeting {
    required int64 rule_id = 1;
  }
  message StandardTargeting {
    required string rule_tbl = 1;
    required bool is_cookieless = 2;
    optional TargetingDemographicAudiencesAccuracyLevel demographic_audiences_accuracy_level = 3 [
      default = TARGETING_DEMOGRAPHIC_AUDIENCES_ACCURACY_LEVEL_STANDARD
    ];
  }
}
// @section Campaign
message LineItemUpdatedEvent {
  required int64 campaign_id = 1;
  required int64 insertion_order_id = 2;
  required int64 billable_volume = 3;
  required bool campaign_has_dynamic_budget_allocation = 4;
  required int64 line_item_id = 5;
  required string name = 6;
  required LineItemBudgetPeriod budget_period = 7;
  optional double budget = 8;
  required FlightDuration flight_duration = 9;
  optional FrequencyCapping capping = 10;
  required LineItemPacing pacing = 11;
  required WeekSchedule schedule = 12;
  required LineItemStatus status = 13;
  message FlightDuration {
    required string timezone = 5;
    required google.protobuf.Timestamp start_date = 6;
    required google.protobuf.Timestamp end_date = 7;
  }
  message FrequencyCapping {
    required uint32 amount = 1;
    required LineItemFrequencyCappingEvent event = 2;
    required LineItemFrequencyCappingPeriod period = 3;
  }
  message WeekSchedule {
    required DaySchedule monday = 1;
    required DaySchedule tuesday = 2;
    required DaySchedule wednesday = 3;
    required DaySchedule thursday = 4;
    required DaySchedule friday = 5;
    required DaySchedule saturday = 6;
    required DaySchedule sunday = 7;
    message DaySchedule {
      repeated int32 hours = 1;
    }
  }
}
// @section Ab Testing
message ListAbTestsAnalysisTypesRequest {
  required SecurityContext security_context = 1;
}
// @section Ab Testing
message ListAbTestsAnalysisTypesResponse {
  repeated AnalysisType analysis_types = 1;
  message AnalysisType {
    required int64 id = 1;
    required string name = 2;
  }
}
// @section Ab Testing
message ListAbTestsDynamicParameterServicesRequest {
  required SecurityContext security_context = 1;
}
// @section Ab Testing
message ListAbTestsDynamicParameterServicesResponse {
  repeated Service services = 1;
  message Service {
    required int64 id = 1;
    required string name = 2;
  }
}
// @section Ab Testing
message ListAbTestsDynamicParametersAnonymouslyRequest {
}
// @section Ab Testing
message ListAbTestsDynamicParametersAnonymouslyResponse {
  repeated DynamicParameter dynamic_parameters = 1;
  message DynamicParameter {
    required string name = 1; // the name of the dynamic parameter, example: be.prioritized_insertions, be.margin.vcpm ...
    required string value = 2; // the value of the dynamic parameter, example: [], cpm, ...
    repeated int64 used_by_ab_test_ids = 3;
    required string service = 4;
  }
}
// @section Ab Testing
message ListAbTestsDynamicParametersRequest {
  required SecurityContext security_context = 1;
}
// @section Ab Testing
message ListAbTestsDynamicParametersResponse {
  repeated DynamicParameter dynamic_parameters = 1;
  message DynamicParameter {
    required string name = 1; // the name of the dynamic parameter, example: be.prioritized_insertions, be.margin.vcpm ...
    required string value = 2; // the value of the dynamic parameter, example: [], cpm, ...
    repeated int64 used_by_ab_test_ids = 3;
    required string service = 4;
  }
}
// @section Ab Testing
message ListAbTestsRequest {
  required SecurityContext security_context = 1;
}
// @section Ab Testing
message ListAbTestsResponse {
  repeated AbTest abtests = 1;
  message AbTest {
    required int64 id = 1;
    required string title = 2;
    required AbtestStatus abtest_status = 3;
    required bool is_innovation_ab_test = 4;
    required SplitAlgo split_algo = 5;
    optional google.protobuf.Timestamp start_date = 6;
    optional google.protobuf.Timestamp end_date = 7;
    repeated string affected_services = 8;
  }
}
// @section Ab Testing
message ListActiveAbTestsAnonymouslyRequest {
}
// @section Ab Testing
message ListActiveAbTestsAnonymouslyResponse {
  repeated AbTest abtests = 1;
  message AbTest {
    required int64 id = 1;
    required string title = 2;
    required AbtestStatus abtest_status = 3;
    required bool is_innovation_ab_test = 4;
    required SplitAlgo split_algo = 5;
    optional google.protobuf.Timestamp start_date = 6;
    optional google.protobuf.Timestamp end_date = 7;
    repeated Population populations = 8;
  }
  message Population {
    required int64 id = 1;
    required string name = 2;
    required int32 size = 3;
    map<string, string> parameters = 4;
  }
}
// @section Users Data
message ListActiveAudiencesWithAveragePriceAnonymouslyRequest {
}
// @section Users Data
message ListActiveAudiencesWithAveragePriceAnonymouslyResponse {
  repeated Audience audiences = 1;
  message Audience {
    required int64 id = 1;
    required double average_price_cpm = 2;
  }
}
// @section Inventory
message ListActiveCreativeTypeFamiliesRequest {
  required SecurityContext security_context = 1;
}
// @section Inventory
message ListActiveCreativeTypeFamiliesResponse {
  repeated CreativeTypeFamily creative_type_families = 1;
  message CreativeTypeFamily {
    required int64 id = 1;
    required string name = 2;
  }
}
// @section Inventory
message ListActiveCreativeTypesRequest {
  required SecurityContext security_context = 1;
}
// @section Inventory
message ListActiveCreativeTypesResponse {
  repeated CreativeType creative_types = 1;
  message CreativeType {
    required int64 id = 1;
    required int64 creative_type_family_id = 2;
    required string name = 3;
  }
}
// @section Inventory
message ListActiveFormatPositionsRequest {
  required SecurityContext security_context = 1;
}
// @section Inventory
message ListActiveFormatPositionsResponse {
  repeated FormatPosition format_positions = 1;
  message FormatPosition {
    required int64 id = 1;
    required string name = 2;
  }
}
// @section Inventory
message ListActiveFormatSizesRequest {
  required SecurityContext security_context = 1;
}
// @section Inventory
message ListActiveFormatSizesResponse {
  repeated FormatSize format_sizes = 1;
  message FormatSize {
    required int64 id = 1;
    required string name = 2;
  }
}
// @section Inventory
message ListActivePlacementTypesAnonymouslyRequest {
}
// @section Inventory
message ListActivePlacementTypesAnonymouslyResponse {
  repeated PlacementType placement_types = 1;
  message PlacementType {
    required int64 id = 1;
    required string name = 2;
  }
}
// @section Inventory
message ListActivePublishersWithContractTypeAnonymouslyRequest {
}
// @section Inventory
message ListActivePublishersWithContractTypeAnonymouslyResponse {
  repeated PublishersWithContractType publishers = 1;
  message PublishersWithContractType {
    required int64 id = 1;
    required PublisherContractType contract_type = 2;
  }
}
// @section Retail Media
message ListActiveRetailerSmartlinkConfigurationAnonymouslyRequest {
}
// @section Retail Media
message ListActiveRetailerSmartlinkConfigurationAnonymouslyResponse {
  repeated ConfigurationItem configurations = 1;
  message ConfigurationItem {
    required int64 id = 1;
    required string name = 2;
    required Retailer retailer = 3;
    repeated Product products = 4;
    optional double total_price = 5;
    required string currency = 6;
    optional string landing_page_url = 7;
    message Product {
      required int64 id = 1;
      optional string name = 2;
      required string sku = 3;
      required int64 quantity = 4;
      optional double price = 5;
      optional string seller_id = 7;
      reserved 6;
    }
    message Retailer {
      required int64 id = 1;
      required string name = 2;
      optional string cart_redirect_url = 3;
      optional RetailerCMS cms = 4;
      optional string json_configuration = 5;
      optional string locale = 6;
      optional string country = 7;
      required RetailerCartingMode carting_mode = 8;
      required RetailerProductStrategyAllowed product_strategy_allowed = 9;
      required bool is_pixel = 10;
    }
  }
}
// @section Users Data
message ListActiveStandardContextualSegmentsAsTreeAnonymouslyRequest {
  // The page number is set to 0 if not specified
  // If no page size is specified, all elements are returned
  required Page page = 1;
}
// @section Users Data
message ListActiveStandardContextualSegmentsAsTreeAnonymouslyResponse {
  repeated ContextualSegment segments = 1;
  message ContextualSegment {
    required int64 id = 1;
    required string name = 2;
    repeated ContextualSegment subsegments = 3;
    optional string description = 4;
    repeated string languages = 5;
  }
}
// @section Campaign
message ListAdvancedTargetingAnonymouslyRequest {
  required Page page = 1;
}
// @section Campaign
message ListAdvancedTargetingAnonymouslyResponse {
  repeated AdvancedTargeting advanced_targetings = 1;
  message AdvancedTargeting {
    required int64 rule_id = 1;
    required int64 campaign_id = 2;
    required google.protobuf.Timestamp created_at = 3;
    required string teads_boolean_language = 4;
    required string reason_label = 5;
    required string description = 6;
    optional CustomTargetingEnvironmentChannel channel = 7;
  }
}
// @section Advertiser
message ListAdvertiserEventsAnonymouslyRequest {
}
// @section Advertiser
message ListAdvertiserEventsAnonymouslyResponse {
  repeated AdvertiserEvent advertiser_events = 1;
  message AdvertiserEvent {
    required int64 id = 1;
    required string name = 2;
    required int64 buyer_pixel_id = 3;
    repeated string urls = 4;
  }
}
// @section Advertiser
message ListAdvertisersForIndexingRequest {
  required SecurityContext security_context = 1;
  required Page page = 2;
}
// @section Advertiser
message ListAdvertisersForIndexingResponse {
  repeated Advertiser advertisers = 1;
  message Advertiser {
    required int64 id = 1;
    required string name = 2;
  }
}
// @section Campaign
message ListAdvertisingSolutionsRequest {
  required SecurityContext security_context = 1;
}
// @section Campaign
message ListAdvertisingSolutionsResponse {
  repeated AdvertisingSolution advertising_solutions = 1;
  message AdvertisingSolution {
    required AdvertisingSolutionId id = 1;
    required string label = 2;
    required string description = 3;
    required Objective objective = 4;
    required FunnelLevel funnel_level = 5;
  }
  enum FunnelLevel {
    FUNNEL_LEVEL_UPPER = 0;
    FUNNEL_LEVEL_MIDDLE = 1;
    FUNNEL_LEVEL_LOWER = 2;
  }
  enum Objective {
    OBJECTIVE_BRANDING = 0;
    OBJECTIVE_TRAFFIC_ACQUISITION = 1;
    OBJECTIVE_CONVERSIONS = 2;
  }
}
// @section Account
message ListAllApiTokensRequest {
  required SecurityContext security_context = 1;
}
// @section Account
message ListAllApiTokensResponse {
  repeated ApiToken api_tokens = 1;
  message ApiToken {
    required int64 api_token_id = 1;
    required string token_prefix = 2;
    optional string description = 3;
    required int64 creator_profile_id = 4;
    required int64 owner_profile_id = 5;
    required int64 owner_entity_id = 6;
    optional google.protobuf.Timestamp revoked_at = 7;
    required google.protobuf.Timestamp created_at = 8;
    optional google.protobuf.Timestamp last_used_at = 9;
  }
}
// @section Account
message ListAllPublishersAnonymouslyRequest {
}
// @section Account
message ListAllPublishersAnonymouslyResponse {
  repeated Publisher publishers = 1;
  message Publisher {
    required int64 id = 1;
    required string name = 2;
    required int64 office_id = 3;
    required string office_name = 4;
  }
}
// @section Inventory
message ListAppBundleIdsWithPacksAnonymouslyRequest {
}
// @section Inventory
message ListAppBundleIdsWithPacksAnonymouslyResponse {
  repeated AppBundleIdsWithPackIds apps_with_pack_ids = 1;
  message AppBundleIdsWithPackIds {
    repeated int64 pack_ids = 2;
    required string store_bundle_id = 3;
    required string platform = 4;
    reserved 1;
  }
}
// @section Inventory
message ListAppsAnonymouslyRequest {
}
// @section Inventory
message ListAppsAnonymouslyResponse {
  repeated App apps = 1;
  message App {
    required int64 id = 1;
    required string store_bundle_id = 2;
    optional string store_bundle_url = 3;
    optional string technical_bundle_id = 4;
    optional string name = 5;
    optional AppPlatform platform = 6;
    optional InventoryTier tier = 7;
    optional string iab_category_code = 8;
    optional bool is_strategic = 9;
    optional bool is_brandsafety_whitelisted = 10;
    optional bool is_mobile = 11;
    optional bool is_ctv = 12;
    optional google.protobuf.Timestamp last_activity = 13;
    repeated int64 pack_ids = 14;
    repeated int64 publisher_ids = 15;
    required bool is_vetted = 16;
    required InventoryStatus status = 17;
    required google.protobuf.Timestamp created_at = 18;
    required google.protobuf.Timestamp updated_at = 19;
  }
}
// @section Ad Experience
message ListArticlePublishersForDemosRequest {
  required SecurityContext security_context = 1;
}
// @section Ad Experience
message ListArticlePublishersForDemosResponse {
  repeated Publisher publishers = 1;
  message Publisher {
    required uint64 id = 1;
    required string name = 2;
    required string status = 3;
  }
}
// @section Ad Experience
message ListArticlesAvailableForDemosRequest {
  required SecurityContext security_context = 1;
  required Page page = 2;
}
// @section Ad Experience
message ListArticlesAvailableForDemosResponse {
  repeated Article articles = 1;
  message Article {
    required uint64 id = 1;
    required uint64 publisher_id = 2;
    required string publisher_name = 3;
    required uint64 iab_category_id = 4;
    required string iab_category_name = 5;
    // ISO 639-1 code: "fr", "en", "es"
    required string language_code = 6;
    // ISO 639-1 name: "French", "English", "Spanish"
    required string language_name = 7;
    // ISO 3166-1 code: "fr", "gb", "es"
    required string country_code = 8;
    // ISO 3166-1 name: "France", "United Kingdom of Great Britain and Northern Ireland", "Spain"
    required string country_name = 9;
    required uint64 creative_position_id = 10;
    required string creative_position_name = 11;
    required string content_uri = 12;
    required string status = 13;
    optional uint64 display_priority = 14;
    optional bool is_staging = 15;
    required string md5_checksum = 16;
  }
}
// @section Users Data
message ListAudienceMappingsByChannelAnonymouslyRequest {
}
// @section Users Data
message ListAudienceMappingsByChannelAnonymouslyResponse {
  // Key: Environment Channel (e.g.: web, ctv, inapp)
  map<string, MappingByCountry> mapping_by_channel = 1;
  message AudienceList {
    repeated int64 audience_ids = 1;
  }
  message MappingByCountry {
    // Key: Digital Elements country code (e.g.: "6#840")
    map<string, MappingByCriterion> mapping_by_country = 1;
  }
  message MappingByCriterion {
    // Key: Criterion (e.g.: bluekai)
    map<string, MappingBySegment> mapping_by_criterion = 1;
  }
  message MappingBySegment {
    // Key: Segment ID
    map<int64, AudienceList> audiences_by_segment = 1;
  }
}
// @section Traffic
message ListBlacklistedDomainsRequest {
  required SecurityContext security_context = 1;
  // The page index is set to 0 if not specified
  // The page size is set to 100 if not specified
  required Page page = 2;
}
// @section Traffic
message ListBlacklistedDomainsResponse {
  repeated BlacklistedDomain blacklisted_domains = 1;
  message BlacklistedDomain {
    required int64 id = 1;
    required string domain = 2;
    required string provider = 3;
    required google.protobuf.Timestamp created_at = 4;
    required BlacklistedDomainStatus status = 5;
  }
}
// @section Ad Experience
message ListBrandsAssociatedToDemosRequest {
  required SecurityContext security_context = 1;
}
// @section Ad Experience
message ListBrandsAssociatedToDemosResponse {
  repeated Brand brands = 1;
  message Brand {
    required uint64 id = 1;
    required string name = 2;
    required string status = 3;
    optional bool is_staging = 4;
  }
}
// @section Account
message ListBuyerSeatManagementInfoForEntitiesRequest {
  required SecurityContext security_context = 1;
  repeated int64 entity_ids = 2;
}
// @section Account
message ListBuyerSeatManagementInfoForEntitiesResponse {
  map<int64, SeatInfo> info_by_seat = 1;
  message SeatInfo {
    required UsersCount users_count = 1;
    required bool existing_seat_member = 2;
  }
  message UsersCount {
    required uint32 buyer_admin = 1;
    required uint32 buyer_reporting_admin = 2;
    required uint32 buyer_user = 3;
    required uint32 buyer_reporting_user = 4;
  }
}
// @section Advertiser
message ListBuyerSeatsAnonymouslyRequest {
  // The page number is set to 0 if not specified
  // The page size is set to 100 if not specified
  required Page page = 1;
}
// @section Advertiser
message ListBuyerSeatsAnonymouslyResponse {
  repeated BuyerSeat seats = 1;
  message BuyerSeat {
    required int64 id = 1;
    required string name = 2;
    required int64 entity_id = 3;
  }
}
// @section Campaign Support
message ListCampaignSupportRequestCustomProcessingDurationsRequest {
  required SecurityContext security_context = 1;
}
// @section Campaign Support
message ListCampaignSupportRequestCustomProcessingDurationsResponse {
  repeated CustomProcessingDuration custom_processing_durations = 1;
  message CustomProcessingDuration {
    required uint64 entity_id = 1;
    required uint32 duration = 2;
    required uint64 profile_id = 3;
    required google.protobuf.Timestamp created_at = 4;
    optional google.protobuf.Timestamp updated_at = 5;
  }
}
// @section Campaign Support
message ListCampaignSupportRequestsForReportingAnonymouslyRequest {
}
// @section Campaign Support
message ListCampaignSupportRequestsForReportingAnonymouslyResponse {
  repeated CampaignSupportRequest support_requests = 1;
  message CampaignSupportRequest {
    required uint64 support_request_id = 1;
    required uint64 campaign_id = 2;
    required uint64 requester_profile_id = 3;
    required string description = 4;
    required CampaignSupportRequestStatus status = 5;
    required google.protobuf.Timestamp created_at = 6;
    optional google.protobuf.Timestamp status_updated_at = 7;
  }
}
// @section Campaign
message ListCampaignsAnonymouslyRequest {
  // The page number is set to 0 if not specified
  // The page size is set to 1000 if not specified
  required Page page = 1;
}
// @section Campaign
message ListCampaignsAnonymouslyResponse {
  repeated Campaign campaigns = 1;
  message Campaign {
    required int64 campaign_id = 1;
    required string campaign_name = 2;
    optional int64 seller_profile_id = 3;
    optional int64 advertiser_id = 4;
    optional int64 agency_id = 5;
    optional int64 operator_profile_id = 6;
    optional string external_name = 7;
    optional string salesforce_opportunity_id = 8;
    optional bool is_self_served = 9;
    optional InsertionOrder insertion_order = 10;
    repeated LineItem line_items = 11;
    required bool is_test = 12;
    optional string external_integration_code = 13;
    optional int64 seat_entity_id = 14;
    optional bool uses_dynamic_budget_allocation = 15;
    optional ServiceType service_type = 16;
    optional string purchase_order_number = 17;
  }
  message InsertionOrder {
    required int64 insertion_order_id = 1;
    required string category_label = 2;
    required string number = 3;
    required double budget = 4;
    // The 3-letter currency code defined in ISO 4217
    required string currency = 5;
    required int64 billable_volume = 6;
    required double free_budget = 7;
    required int64 free_billable_volume = 8;
    required google.protobuf.Timestamp start_date = 9;
    required google.protobuf.Timestamp end_date = 10;
    required string timezone = 11;
    repeated InsertionOrderLine insertion_order_lines = 12;
  }
  message InsertionOrderLine {
    required int64 insertion_order_line_id = 1;
    required string insertion_order_line_name = 2;
    required string product_name = 3;
    required double budget = 4;
    required int64 billable_volume = 5;
    required double free_budget = 6;
    required int64 free_billable_volume = 7;
    required google.protobuf.Timestamp start_date = 8;
    required google.protobuf.Timestamp end_date = 9;
    required string timezone = 10;
    optional string external_name = 11;
    optional string salesforce_product_id = 12;
  }
  message LineItem {
    required int64 line_item_id = 1;
    required string line_item_name = 2;
    optional google.protobuf.Timestamp start_date = 3;
    optional google.protobuf.Timestamp end_date = 4;
    optional string timezone = 5;
    required LineItemType type = 6;
    required LineItemBillingType billing_type = 7;
    optional int64 operator_profile_id = 8;
    optional double budget = 9;
    optional LineItemResearch research = 10;
    optional LineItemTransactionMethod transaction_method = 11;
    required float platform_fee_rate = 12;
    optional int64 insertion_order_line_id = 13;
    // The tracking event we use to bill the advertiser, for example a value can be "impression" which means that the advertiser is billed each time a video appears on a website
    optional string advertiser_billing_event = 14;
    // As it's a financial value, we keep the price as "int" to avoid lack of precision that could appear with "double".
    // To retrieve the unit price : price_per_100k/100000
    optional int64 price_per_100k = 15;
    // The 3-letter currency code defined in ISO 4217
    optional string currency = 16;
    required PricingType pricing_type = 17;
    required bool is_guaranteed = 18;
  }
  enum PricingType {
    PRICING_TYPE_DYNAMIC = 1;
    PRICING_TYPE_FIXED = 2;
    PRICING_TYPE_UNKNOWN = 3;
  }
  enum ServiceType {
    SERVICE_TYPE_UNCATEGORIZED = 1;
    SERVICE_TYPE_SELF_SERVED = 2;
    SERVICE_TYPE_MANAGED_NON_COMPLIANT_CLIENT_DRAFT = 3;
    SERVICE_TYPE_MANAGED_NON_COMPLIANT_CLIENT_PRE_AND_POST_EDITION = 4;
    SERVICE_TYPE_MANAGED_NON_COMPLIANT_CLIENT_EDIT = 5;
    SERVICE_TYPE_MANAGED = 6;
    SERVICE_TYPE_ASSISTED_POST_GO_LIVE = 7;
    SERVICE_TYPE_ASSISTED_PRE_POST_GO_LIVE = 8;
    SERVICE_TYPE_ASSISTED_PRE_GO_LIVE = 9;
  }
}
// @section Campaign
message ListCampaignsForIndexingRequest {
  required SecurityContext security_context = 1;
  required google.protobuf.Timestamp updated_after = 2;
  required Page page = 3;
}
// @section Campaign
message ListCampaignsForIndexingResponse {
  repeated Campaign campaigns = 1;
  message Campaign {
    required int64 id = 1;
    required string name = 2;
    required CampaignStatus status = 3;
    optional CampaignType ad_type = 4;
    optional string advertiser_name = 5;
    required string office_name = 6;
    optional string operator_first_name = 7;
    optional string operator_last_name = 8;
    optional google.protobuf.Timestamp start_date = 9;
    optional google.protobuf.Timestamp end_date = 10;
    repeated int64 viewable_by_entity_ids = 11;
    optional string agency_name = 12;
  }
  enum CampaignType {
    CAMPAIGN_TYPE_AGENCY = 0;
    CAMPAIGN_TYPE_MEDIA = 1;
    CAMPAIGN_TYPE_ELITE = 2;
    CAMPAIGN_TYPE_CONNECT = 3;
    CAMPAIGN_TYPE_PERFORMANCE = 4;
  }
}
// @section Finance
message ListCampaignsWithInvoiceRecipientAnonymouslyRequest {
}
// @section Finance
message ListCampaignsWithInvoiceRecipientAnonymouslyResponse {
  repeated CampaignWithInvoiceRecipient campaigns_with_invoice_recipient = 1;
  message CampaignWithInvoiceRecipient {
    required uint64 campaign_id = 1;
    required string invoice_recipient_id = 2;
  }
}
// @section Users Data
message ListCategoriesWithAudiencesAsBuyerRequest {
  required SecurityContext security_context = 1;
  optional bool includes_age_gender = 2 [default = true];
  optional bool only_restricted = 3 [default = true];
  // Represents countries in ISO-2 format that must be specified in the response
  // Can be empty, in which case only the worldwide reach would be specified
  repeated string countries_for_reach = 4;
  optional bool only_cookieless_compliant = 5 [default = false];
  optional bool only_performance_compliant = 6 [default = false];
  optional AudienceChannel channel = 7 [default = AUDIENCE_CHANNEL_WEB];
}
// @section Users Data
message ListCategoriesWithAudiencesAsBuyerResponse {
  repeated Category categories_with_audiences = 1;
  message Audience {
    required int64 id = 1;
    required int64 deprecated_id = 2; // legacy STANDARD flavor id that should not be used anymore but can be found in existing rules
    required string name = 3;
    map<string, uint64> reach_by_country = 4; // legacy reach, please use reach_and_pageviews_with_cookieless_by_country
    map<string, ReachAndPageviewsWithCookieless> reach_and_pageviews_with_cookieless_by_country = 5;
    optional bool is_cookieless_compliant = 6;
  }
  message Category {
    required int64 id = 1;
    required string name = 2;
    repeated SubCategory sub_categories = 3;
  }
  message ReachAndPageviewsWithCookieless {
    required uint64 reach = 1;
    required uint64 pageviews = 2;
    required uint64 cookieless_reach = 3;
    required uint64 cookieless_pageviews = 4;
  }
  message SubCategory {
    required int64 id = 1;
    required string name = 2;
    repeated Audience audiences = 3;
  }
}
// @section Users Data
message ListCategoriesWithAudiencesAsPublisherRequest {
  required SecurityContext security_context = 1;
  optional bool include_age_gender = 2 [default = true];
}
// @section Users Data
message ListCategoriesWithAudiencesAsPublisherResponse {
  repeated Category categories_with_audiences = 1;
  message Audience {
    required int64 id = 1;
    required string name = 2;
    required AudienceFlavor type = 3;
    required AudienceType audience_type = 4;
  }
  message Category {
    required int64 id = 1;
    required string name = 2;
    repeated SubCategory sub_categories = 3;
  }
  message SubCategory {
    required int64 id = 1;
    required string name = 2;
    repeated Audience audiences = 3;
  }
}
// @section Users Data
message ListCategoriesWithAudiencesRequest {
  required SecurityContext security_context = 1;
  optional bool includes_age_gender = 2 [default = true];
}
// @section Users Data
message ListCategoriesWithAudiencesResponse {
  repeated Category categories_with_audiences = 1;
  message Audience {
    required int64 id = 1;
    required string name = 2;
    required AudienceFlavor type = 3;
    required AudienceType audience_type = 4;
  }
  message Category {
    required string name = 1;
    repeated SubCategory sub_categories = 2;
    required int64 id = 3;
  }
  message SubCategory {
    required string name = 1;
    repeated Audience audiences = 2;
    required int64 id = 3;
  }
}
// @section Users Data
message ListComscoreIdsAndCodesAnonymouslyRequest {
}
// @section Users Data
message ListComscoreIdsAndCodesAnonymouslyResponse {
  repeated SegmentWithIdAndCode segments = 1;
  message SegmentWithIdAndCode {
    required uint64 id = 1;
    required string code = 2;
  }
}
// @section Programmatic
message ListConnectionWithDeliveryCountersAnonymouslyRequest {
}
// @section Programmatic
message ListConnectionWithDeliveryCountersAnonymouslyResponse {
  map<int64, EventDeliveryCounters> delivery_counters_by_connection = 1;
  message EventDeliveryCounters {
    repeated string volumes = 1;
    repeated string cappings = 2;
    repeated string time_intervals = 3;
    required bool is_programmatic_guaranteed = 4;
  }
}
// @section Programmatic
message ListConnectionsAnonymouslyRequest {
  // The page number is set to 0 if not specified
  // The page size is set to 1000 if not specified
  required Page page = 1;
}
// @section Programmatic
message ListConnectionsAnonymouslyResponse {
  repeated Connection connections = 1;
  message Connection {
    required int64 id = 1;
    required int64 ad_source_id = 2;
    required string ad_source_name = 3;
    optional BusinessRtbType business_rtb_type = 4;
    optional int64 campaign_operator_id = 5;
    optional int64 seller_profile_id = 6;
    optional google.protobuf.Timestamp start_date = 7;
    optional google.protobuf.Timestamp end_date = 8;
    optional string timezone = 9;
    optional int64 agency_id = 10;
    optional int64 advertiser_id = 11;
    required string name = 12;
    required bool is_for_studio_creative = 13;
    optional bool is_strategic = 14;
    required bool is_always_on = 15;
    optional string salesforce_opportunity_id = 16;
    optional string salesforce_product_id = 17;
    required bool is_test = 18;
    optional PricingType pricing_type = 19;
    optional AdvertiserBillingEvent advertiser_billing_event = 20;
    optional int64 price_per_100k = 21;
    optional string currency = 22;
  }
  enum AdvertiserBillingEvent {
    ADVERTISER_BILLING_EVENT_IMPRESSION = 1;
  }
  enum BusinessRtbType {
    BUSINESS_RTB_TYPE_DEAL_ID = 1;
    BUSINESS_RTB_TYPE_DEAL_OPEN_EXCHANGE = 2;
  }
  enum PricingType {
    PRICING_TYPE_FIXED = 1;
    PRICING_TYPE_DYNAMIC = 2;
    PRICING_TYPE_UNKNOWN = 3;
  }
}
// @section Programmatic
message ListConnectionsDeliverableNowForDataRevenuesComputationAnonymouslyRequest {
}
// @section Programmatic
message ListConnectionsDeliverableNowForDataRevenuesComputationAnonymouslyResponse {
  repeated Connection connections = 1;
  message Connection {
    required int64 connection_id = 1;
    required BuyerType buyer_type = 2;
    repeated int64 audience_ids = 3;
    optional int64 advertiser_id = 4;
    optional int64 office_id = 5;
    // Digital elements representation (ie "5#250" for France)
    repeated string targeted_locations = 6;
  }
  enum BuyerType {
    BUYER_TYPE_TEADS = 1;
    BUYER_TYPE_PUBLISHER = 2;
  }
}
// @section Users Segments
message ListContextualCTVSegmentsRequest {
  required SecurityContext security_context = 1;
  // Represents countries in ISO-2 format that must be specified in the response
  // Can be empty, in which case only the worldwide reach would be specified
  repeated string countries_for_reach = 2;
}
// @section Users Segments
message ListContextualCTVSegmentsResponse {
  repeated ContextualCTVSegment segments = 1;
  message ContextualCTVSegment {
    required int64 id = 1;
    required string name = 2;
    optional double cpm_in_usd = 3;
    optional string segment_code_from_provider = 4;
    required bool is_active = 5;
    optional string description = 6;
    optional ContextualCtvSegmentUsage usage = 7;
    map<string, ReachAndPageviews> reach_and_pageviews_by_country = 8;
    optional bool is_available = 9;
  }
  message ReachAndPageviews {
    required int64 reach = 1;
    required int64 pageviews = 2;
  }
}
// @section Users Data
message ListContextualSegmentsAnonymouslyRequest {
}
// @section Users Data
message ListContextualSegmentsAnonymouslyResponse {
  repeated ContextualSegment segments = 1;
  message ContextualSegment {
    required uint64 id = 1;
    required ContextualSegmentProvider provider = 2;
    required string segment_code_from_provider = 3;
    required double cpm_cost_usd = 4;
    repeated SegmentCodeForProvider inherited_segment_codes = 5;
  }
  message SegmentCodeForProvider {
    required ContextualSegmentProvider provider = 1;
    required string segment_code = 2;
  }
}
// @section Users Data
message ListContextualSegmentsByCodeAnonymouslyRequest {
}
// @section Users Data
message ListContextualSegmentsByCodeAnonymouslyResponse {
  map<string, ListOfContextualSegment> segments_with_cost_by_code = 1;
  repeated ContextualMapping contextual_mappings = 2;
  message ContextualMapping {
    required string code = 1;
    required string provider = 2;
    repeated ContextualSegment segments = 3;
    optional uint64 id = 4;
    optional string bid_request_field = 5;
  }
  message ContextualSegment {
    required uint64 id = 1;
    required double cpm_cost_usd = 2;
  }
  message ListOfContextualSegment {
    repeated ContextualSegment segments = 1;
  }
}
// @section Users Data
message ListContextualSegmentsWithReachAndPageviewsAsBuyerRequest {
  required SecurityContext security_context = 1;
  // Represents countries in ISO-2 format that must be specified in the response
  // Can be empty, in which case only the worldwide reach would be specified
  repeated string countries_for_reach = 2;
}
// @section Users Data
message ListContextualSegmentsWithReachAndPageviewsAsBuyerResponse {
  repeated ContextualSegment segments = 1;
  message ContextualSegment {
    required uint64 id = 1;
    required string name = 2;
    required ContextualSegmentProvider provider = 3;
    required ContextualSegmentType type = 4;
    optional double cpm_cost_usd = 5;
    optional uint64 parent_contextual_segment_id = 6;
    optional string segment_code_from_provider = 7;
    map<string, ReachAndPageviews> reach_and_pageviews_by_country = 8;
    optional string description = 9;
    repeated string languages = 10; // ISO639-1 codes
  }
  message ReachAndPageviews {
    required uint64 reach = 1;
    required uint64 pageviews = 2;
  }
}
// @section Users Data
message ListContextualSegmentsWithReachAndPageviewsRequest {
  required SecurityContext security_context = 1;
  // Represents countries in ISO-2 format that must be specified in the response
  // Can be empty, in which case only the worldwide reach would be specified
  repeated string countries_for_reach = 2;
}
// @section Users Data
message ListContextualSegmentsWithReachAndPageviewsResponse {
  repeated ContextualSegment segments = 1;
  message ContextualSegment {
    required uint64 id = 1;
    required string name = 2;
    required ContextualSegmentProvider provider = 3;
    required ContextualSegmentType type = 4;
    optional double cpm_cost_usd = 5;
    optional uint64 parent_contextual_segment_id = 6;
    optional string segment_code_from_provider = 7;
    map<string, ReachAndPageviews> reach_and_pageviews_by_country = 8;
    required bool active = 9;
    optional string description = 10;
    repeated string languages = 11; // ISO639-1 codes
    optional bool is_available = 12;
  }
  message ReachAndPageviews {
    required uint64 reach = 1;
    required uint64 pageviews = 2;
  }
}
// @section Ad Experience
message ListCountriesAssociatedToPublishersArticlesRequest {
  required SecurityContext security_context = 1;
}
// @section Ad Experience
message ListCountriesAssociatedToPublishersArticlesResponse {
  repeated Country countries = 1;
  message Country {
    // ISO 3166-1 code: "fr", "gb", "es"
    required string code = 1;
    // ISO 3166-1 name: "France", "United Kingdom of Great Britain and Northern Ireland", "Spain"
    required string name = 2;
  }
}
// @section Users Data
message ListCountriesWithEnoughReachForLookalikeSeedRequest {
  required SecurityContext security_context = 1;
  required LookalikeDataProvider segment_provider = 2;
  required string segment_id_for_provider = 3;
}
// @section Users Data
message ListCountriesWithEnoughReachForLookalikeSeedResponse {
  map<string, uint64> reach_by_country = 1; // filled with countries (ISO-2) above 10k reach
}
// @section Ad Experience
message ListCreativeKPIsSupportedByDemosRequest {
  required SecurityContext security_context = 1;
}
// @section Ad Experience
message ListCreativeKPIsSupportedByDemosResponse {
  repeated CreativeKPI kpis = 1;
  message CreativeKPI {
    required uint64 id = 1;
    required string name = 2;
    required string description = 3;
    required string status = 4;
  }
}
// @section Ad Experience
message ListCreativePositionsSupportedByDemosRequest {
  required SecurityContext security_context = 1;
}
// @section Ad Experience
message ListCreativePositionsSupportedByDemosResponse {
  repeated CreativePosition positions = 1;
  message CreativePosition {
    required uint64 id = 1;
    required string name = 2;
  }
}
// @section Ad Experience
message ListCreativeSizesSupportedByDemosRequest {
  required SecurityContext security_context = 1;
}
// @section Ad Experience
message ListCreativeSizesSupportedByDemosResponse {
  repeated CreativeSize sizes = 1;
  message CreativeSize {
    required uint64 id = 1;
    required string name = 2;
  }
}
// @section Ad Experience
message ListCreativeTypesSupportedByDemosRequest {
  required SecurityContext security_context = 1;
}
// @section Ad Experience
message ListCreativeTypesSupportedByDemosResponse {
  repeated CreativeType types = 1;
  message CreativeType {
    required uint64 id = 1;
    required string name = 2;
    required string category = 3;
  }
}
// @section Creatives Approval
message ListCreativesReviewedForPublisherAnonymouslyRequest {
}
// @section Creatives Approval
message ListCreativesReviewedForPublisherAnonymouslyResponse {
  repeated CreativeReviewedForPublisher creatives = 1;
  message CreativeReviewedForPublisher {
    required int64 publisher_id = 1;
    required int64 connection_id = 2;
    required string campaign_id = 3;
    required string creative_id = 4;
    required Review review = 5;
  }
  // We do not want to use CreativeApprovalStatus defined in creatives-approval.proto because
  // the pending status is not a valid value in this case
  enum Review {
    REVIEW_APPROVED = 1;
    REVIEW_REJECTED = 2;
  }
}
// @section Advertiser
message ListCreativesWhereAttributionIsExpectedAnonymouslyRequest {
}
// @section Advertiser
message ListCreativesWhereAttributionIsExpectedAnonymouslyResponse {
  repeated Creative creatives = 1;
  message Creative {
    required int64 id = 1;
    required string landing_domain = 2; // eTLD+1 of the landing url
  }
}
// @section Campaign
message ListCustomTargetingRulesForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
}
// @section Campaign
message ListCustomTargetingRulesForCampaignResponse {
  repeated Rule rules = 1;
  message Reason {
    required int64 id = 1;
    required string label = 2;
  }
  message Rule {
    required int64 id = 1;
    required string name = 3;
    required string tbl_string = 4;
    required CustomTargetingRuleAudiencesDeliveryType demographic_audiences_delivery_type = 5;
    required CustomTargetingRuleAudiencesAccuracyLevel other_audiences_accuracy_level = 6;
    required bool cookieless_criteria_only = 7;
    required string description = 8;
    required Reason reason = 9;
    optional CustomTargetingEnvironmentChannel channel = 10;
  }
}
// @section Users Data
message ListDARSegmentsAnonymouslyRequest {
}
// @section Users Data
message ListDARSegmentsAnonymouslyResponse {
  repeated DARSegment segments = 1;
  message DARSegment {
    required int64 id = 1;
    required string name = 2;
  }
}
// @section Users Data
message ListDARSegmentsByEstimatorAnonymouslyRequest {
}
// @section Users Data
message ListDARSegmentsByEstimatorAnonymouslyResponse {
  // key is the estimator alias (prod-be-user-clustering-2020-02-28)
  map<string, DARSegmentsMappings> segments_by_estimator = 1;
  message DARSegmentsMapping {
    required string country = 1; // Country code (FR, BE, US...)
    required Device device = 2;
    required bool contextual = 3;
    required int32 cluster_id = 4;
    repeated int32 segment_ids = 5;
  }
  message DARSegmentsMappings {
    repeated DARSegmentsMapping values = 1;
  }
  enum Device {
    DEVICE_DESKTOP = 0;
    DEVICE_MOBILE = 1;
  }
}
// @section Reporting
message ListDatamartsRequest {
  required SecurityContext security_context = 1;
}
// @section Reporting
message ListDatamartsResponse {
  repeated ListDatamartItem datamarts = 1;
  message ListDatamartItem {
    required int64 datamart_id = 1;
    required int64 template_id = 2;
    required Frequency frequency = 3;
    required Options options = 4;
    required bool company_wide_alerting = 5;
    optional string retention_period = 6;
    optional Filters filters = 7;
    required string name = 8;
    repeated string dimensions = 9;
    repeated string metrics = 10;
    required DatamartStatus status = 11;
    required ReportOutputFormat format = 12;
    message Filters {
      repeated DemandSource demand_sources = 1;
      repeated string ad_types = 2;
      repeated int64 advertiser_ids = 3;
      repeated int64 placement_ids = 4;
      repeated string hb_providers = 5;
    }
    message Options {
      optional string redshift_sort_key = 1;
      optional string redshift_schema = 2;
      optional string redshift_database = 3;
      optional BigQueryTable big_query_table = 8;
      optional ClusteringField big_query_clustering_field = 9;
      message BigQueryTable {
        required string project_id = 1;
        required string dataset = 2;
        required string table = 3;
      }
      message ClusteringField {
        repeated string fields = 1;
      }
    }
  }
}
// @section Programmatic
message ListDealSyncPlatformsByAdSourceIdRequest {
  required SecurityContext security_context = 1;
}
// @section Programmatic
message ListDealSyncPlatformsByAdSourceIdResponse {
  map<int64, PlatformWithBuyers> platforms_with_buyers_by_ad_source_id = 1;
  message Buyer {
    required int64 id = 1; // internal id of the buyer in the deal_sync_buyer table
    required string external_id = 2; // id of the buyer on the DSP platform
    required string name = 3;
  }
  message PlatformWithBuyers {
    required Platform platform = 1;
    repeated Buyer buyers = 2;
  }
  enum Platform {
    PLATFORM_UNSPECIFIED = 0;
    PLATFORM_DV360 = 1;
  }
}
// @section Programmatic
message ListDemandTypesRequest {
  required SecurityContext security_context = 1;
}
// @section Programmatic
message ListDemandTypesResponse {
  repeated DemandTypeInfo demand_types = 1;
  message DemandTypeInfo {
    required DemandType id = 1;
    required string description = 2;
  }
}
// @section Ad Experience
message ListDemoIABCategoriesRequest {
  required SecurityContext security_context = 1;
}
// @section Ad Experience
message ListDemoIABCategoriesResponse {
  repeated Category categories = 1;
  message Category {
    required uint64 id = 1;
    required string name = 2;
    required string status = 3;
  }
}
// @section Users Data
message ListDirectSalesPublisherAudienceFeesAnonymouslyRequest {
}
// @section Users Data
message ListDirectSalesPublisherAudienceFeesAnonymouslyResponse {
  repeated AudienceFee audience_fees = 1;
  message AudienceFee {
    required int64 publisher_id = 1;
    required DirectSalesPublisherAudienceFeeType audience_fee_type = 2;
    // The 3-letter currency code defined in ISO 4217
    required string currency = 3;
    oneof pricing_model {
      Standard standard = 4;
      Waived waived = 5;
      Trial trial = 6;
    }
  }
  message Standard {
    required double value = 1;
  }
  message Trial {
    required google.protobuf.Timestamp trial_period_start = 1;
    required google.protobuf.Timestamp trial_period_end = 2;
  }
  message Waived {
    required double value = 1;
    required google.protobuf.Timestamp waived_period_start = 2;
    optional google.protobuf.Timestamp waived_period_end = 3;
  }
}
// @section Account
message ListEntitiesRequest {
  required SecurityContext security_context = 1;
}
// @section Account
message ListEntitiesResponse {
  repeated Entity entities = 1;
  message Entity {
    required int64 id = 1;
    required string name = 2;
    required EntityType type = 3;
    required EntityStatus status = 4;
  }
}
// @section Account
message ListEntitiesUsableWithApiTokenRequest {
  required SecurityContext security_context = 1;
}
// @section Account
message ListEntitiesUsableWithApiTokenResponse {
  repeated Entity entities = 1;
  message Entity {
    required int64 id = 1;
    required string name = 2;
    required int64 parent_id = 3;
    required string parent_name = 4;
    required EntityType type = 5;
  }
}
// @section Advertiser
message ListEventConversionsForAdvertiserRequest {
  required SecurityContext security_context = 1;
  required int64 advertiser_id = 2;
}
// @section Advertiser
message ListEventConversionsForAdvertiserResponse {
  repeated EventConversion event_pixels = 1;
  message EventConversion {
    required int64 id = 1;
    required string name = 2;
    required int64 category = 3;
    required string description = 4;
    optional string url_conversion_page = 6;
    optional google.protobuf.Timestamp created_at = 7;
    optional google.protobuf.Timestamp updated_at = 8;
    required Profile author_profile = 9;
    optional Office office = 10;
    optional google.protobuf.Timestamp last_activity_date = 11;
    optional int64 nb_different_urls = 12;
    optional PixelType pixel_type = 13;
    optional int64 buyer_pixel_id = 15;
    reserved 5, 14;
  }
  message Office {
    required int64 id = 1;
    required string name = 2;
    optional string country_code = 3;
  }
  message Profile {
    required int64 id = 1;
    optional string first_name = 2;
    optional string last_name = 3;
  }
}
// @section Inventory
message ListFormatSizeAndCreativeTypeFamilyByPortfolioItemAssociationsRequest {
  required SecurityContext security_context = 1;
}
// @section Inventory
message ListFormatSizeAndCreativeTypeFamilyByPortfolioItemAssociationsResponse {
  repeated FormatSizeAndCreativeTypeFamilyAssociation format_size_and_creative_type_family_associations = 1;
  message FormatCreativeTypeFamily {
    required int64 id = 1;
    required string name = 2;
    required FormatCreativeTypeFamilyStatus status = 3;
  }
  message FormatSize {
    required int64 id = 1;
    required string name = 2;
    required FormatSizeStatus status = 3;
  }
  message FormatSizeAndCreativeTypeFamilyAssociation {
    required FormatSize format_size = 1;
    required FormatCreativeTypeFamily format_creative_type_family = 2;
  }
  enum FormatCreativeTypeFamilyStatus {
    FORMAT_CREATIVE_TYPE_FAMILY_STATUS_ENABLED = 1;
    FORMAT_CREATIVE_TYPE_FAMILY_STATUS_DISABLED = 2;
    FORMAT_CREATIVE_TYPE_FAMILY_STATUS_DELETED = 3;
  }
  enum FormatSizeStatus {
    FORMAT_SIZE_STATUS_ENABLED = 1;
    FORMAT_SIZE_STATUS_DISABLED = 2;
    FORMAT_SIZE_STATUS_DELETED = 3;
  }
}
// @section Users Data
message ListGlobalReachByCountryAnonymouslyRequest {
}
// @section Users Data
message ListGlobalReachByCountryAnonymouslyResponse {
  map<string, ReachAndPageviewsWithCookieless> global_reach_by_country = 1; // keys are countries (ISO-2) or * for Worldwide
  message ReachAndPageviewsWithCookieless {
    required uint64 reach = 1;
    required uint64 pageviews = 2;
    required uint64 cookieless_reach = 3;
    required uint64 cookieless_pageviews = 4;
  }
}
// @section Campaign
message ListIabCategoriesRequest {
  required SecurityContext security_context = 1;
}
// @section Campaign
message ListIabCategoriesResponse {
  repeated IabCategory iab_categories = 1;
  message IabCategory {
    required string code = 1;
    required string label = 2;
    required int64 category_id = 3;
    optional int64 parent_category_id = 4;
  }
}
// @section Account
message ListInternalAgencySeatsRequest {
  required SecurityContext security_context = 1;
}
// @section Account
message ListInternalAgencySeatsResponse {
  repeated InternalAgencySeat internal_agency_seats = 1;
  message InternalAgencySeat {
    required int64 seat_id = 1;
    required int64 entity_id = 2;
    required string name = 3;
  }
}
// @section Ad Experience
message ListLanguagesAssociatedToPublishersArticlesRequest {
  required SecurityContext security_context = 1;
}
// @section Ad Experience
message ListLanguagesAssociatedToPublishersArticlesResponse {
  repeated Language languages = 1;
  message Language {
    // ISO 639-1 code: "fr", "en", "es"
    required string code = 1;
    // ISO 639-1 name: "French", "English", "Spanish"
    required string name = 2;
  }
}
// @section Campaign
message ListLineItemAbTestAssociationsRequest {
  required SecurityContext security_context = 1;
}
// @section Campaign
message ListLineItemAbTestAssociationsResponse {
  repeated LineItemAbTestAssociation line_item_abtest_associations = 1;
  message LineItemAbTestAssociation {
    required int64 line_item_id = 1;
    required int64 abtest_id = 2;
    required int64 population_id = 3;
  }
}
// @section Campaign
message ListLineItemsDeliverableNowForDataRevenuesComputationAnonymouslyRequest {
}
// @section Campaign
message ListLineItemsDeliverableNowForDataRevenuesComputationAnonymouslyResponse {
  repeated LineItem line_items = 1;
  message LineItem {
    required int64 line_item_id = 1;
    required BuyerType buyer_type = 2;
    repeated int64 audience_ids = 3;
    optional int64 advertiser_id = 4;
    optional int64 office_id = 5;
    optional int64 seat_owner_id = 6;
    // Digital elements representation (ie "5#250" for France)
    repeated string targeted_locations = 7;
  }
  enum BuyerType {
    BUYER_TYPE_TEADS = 1;
    BUYER_TYPE_PUBLISHER = 2;
    BUYER_TYPE_ADVERTISER_OR_AGENCY = 3;
  }
}
// @section Advertiser
message ListLineItemsWhereAttributionIsExpectedAnonymouslyRequest {
}
// @section Advertiser
message ListLineItemsWhereAttributionIsExpectedAnonymouslyResponse {
  repeated LineItem line_items = 1;
  message LineItem {
    required int64 id = 1;
    optional google.protobuf.Timestamp post_view_attribution_expected_until = 2;
    optional google.protobuf.Timestamp post_click_attribution_expected_until = 3;
  }
}
// @section Users Data
message ListLookalikesRequest {
  required SecurityContext security_context = 1;
}
// @section Users Data
message ListLookalikesResponse {
  repeated Lookalike lookalikes = 1;
  message Lookalike {
    required string name = 1;
    required LookalikeStatus status = 2;
    required string seed_provider = 3;
    required string seed_segment_id_for_provider = 4;
    // Represents countries in ISO-2 format
    repeated string countries_for_seed = 5;
    optional google.protobuf.Timestamp last_activated = 6;
    optional google.protobuf.Timestamp last_segments_generation = 7;
    optional int64 advertiser_id = 8;
  }
  enum LookalikeStatus {
    // lookalike has just been created or re-activated after a period of no usage for delivery - a job will automatically (re)generate the segments and move it to USABLE upon completion
    LOOKALIKE_STATUS_PENDING_SEGMENTS_GENERATION = 1;
    // segments data is fresh and can be used for targeting - will transition to EXPIRED if not actively used for delivery in the near future
    LOOKALIKE_STATUS_USABLE = 2;
    // segments are no longer refreshed and cannot be used for delivery right away - will transition to PENDING_SEGMENTS_GENERATION as soon as it's re-activated (i.e. actively used for targeting)
    LOOKALIKE_STATUS_EXPIRED = 3;
  }
}
// @section Ad Experience
message ListMarketsSupportedByDemoRequest {
  required SecurityContext security_context = 1;
}
// @section Ad Experience
message ListMarketsSupportedByDemoResponse {
  repeated Market markets = 1;
  message Market {
    required uint64 id = 1;
    required string name = 2;
    required string office = 3;
    optional string description = 4;
    required string status = 5;
    optional bool is_staging = 6;
  }
}
// @section Advertiser
message ListMigratedPixelByAdvertiserAnonymouslyRequest {
}
// @section Advertiser
message ListMigratedPixelByAdvertiserAnonymouslyResponse {
  map<int64, int64> pixel_id_by_advertiser_id = 1;
}
// @section Data Science
message ListModelTrainingsAnonymouslyRequest {
}
// @section Data Science
message ListModelTrainingsAnonymouslyResponse {
  repeated ModelTraining model_trainings = 1;
  message Duration {
    required int32 value = 1;
    required DurationUnit unit = 2;
  }
  message Job {
    required int64 id = 1;
    required string name = 2;
    required string level = 3;
    required int64 min_step = 4;
    required string category_name = 5;
  }
  message Log {
    required string training_set = 1;
    required string filter = 2;
  }
  message ModelQualityRule {
    required Metric metric = 1;
    required Operator operator = 2;
    required float threshold = 3;
  }
  message ModelTraining {
    required int64 id = 1;
    required string description = 2;
    required string model_training_config_id = 3;
    required TrainingSource training_source = 5;
    required Log log = 6;
    required Duration duration = 7;
    required bool model_seeding = 8;
    required int32 training_frequency = 9;
    repeated Job parent_jobs = 10;
    required TrainingState training_state = 11;
    repeated ModelQualityRule model_quality_rules = 12;
    reserved 4;
  }
}
// @section Mrg Contract
message ListMrgCommitmentsForReportingAnonymouslyRequest {
}
// @section Mrg Contract
message ListMrgCommitmentsForReportingAnonymouslyResponse {
  repeated CommitmentWithContractInfo commitments_with_contract_info = 1;
  message CommitmentWithContractInfo {
    required string contract_uuid = 1;
    required string contract_name = 2;
    required MrgContractType contract_type = 5;
    repeated int64 publishers_ids = 6;
    required bool includes_brand_unsafe_content = 7;
    required MrgContractStatus status = 9;
    required string commitment_uuid = 10;
    required PublisherCommitment publisher_commitment = 11;
    required TeadsCommitment teads_commitment = 12;
    required string commitment_name = 13;
    required MrgContractCriterionBrandSafety criterion_brand_safety = 14;
    required Period commitment_period = 15;
    required MrgContractNonUserConsentDeliveryToInclude non_user_consent_delivery_to_include = 16;
    message Period {
      required google.protobuf.Timestamp start_date = 1;
      required google.protobuf.Timestamp end_date = 2;
      required string uuid = 3;
    }
    reserved 8;
  }
  message PublisherCommitment {
    required int64 volume = 1;
  }
  message TeadsCommitment {
    // The 3-letter currency code defined in ISO 4217
    required string currency = 1;
    required double revenue = 2;
  }
}
// @section Mrg Contract
message ListMrgContractEligiblePublishersRequest {
  required SecurityContext security_context = 1;
}
// @section Mrg Contract
message ListMrgContractEligiblePublishersResponse {
  repeated Publisher publishers = 1;
  message Publisher {
    required int64 id = 1;
    required string name = 2;
    required int64 parent_id = 3;
    required string parent_name = 4;
  }
}
// @section Mrg Contract
message ListMrgContractEnvironmentGroupsRequest {
  required SecurityContext security_context = 1;
  required MrgContractEnvironmentType environment_type = 2;
}
// @section Mrg Contract
message ListMrgContractEnvironmentGroupsResponse {
  repeated EnvironmentGroup environment_groups = 1;
  message EnvironmentGroup {
    required string uuid = 1;
    required string name = 2;
  }
}
// @section Mrg Contract
message ListMrgContractGeoCriteriaApplicableCountriesRequest {
  required SecurityContext security_context = 1;
}
// @section Mrg Contract
message ListMrgContractGeoCriteriaApplicableCountriesResponse {
  repeated Country countries = 1;
  message Continent {
    required string abbreviation = 1;
    required string name = 2;
  }
  message Country {
    required string name = 1;
    required string code = 2;
    required Continent continent = 3;
  }
}
// @section Mrg Contract
message ListMrgContractsCommitmentsStatsRequest {
  required SecurityContext security_context = 1;
}
// @section Mrg Contract
message ListMrgContractsCommitmentsStatsResponse {
  repeated Stats commitments_stats = 1;
  message Period {
    required google.protobuf.Timestamp start_date = 1;
    required google.protobuf.Timestamp end_date = 2;
  }
  message PublisherRevenue {
    required double revenue = 1;
    required double revenue_without_demand = 2;
    // The 3-letter currency code defined in ISO 4217
    required string revenue_currency = 3;
    required double revenue_converted_usd = 4;
    required double revenue_without_demand_converted_usd = 5;
  }
  message Stats {
    required string commitment_uuid = 1;
    required int64 delivered_volume = 2;
    required PublisherRevenue publisher_revenue = 3;
    required TeadsTurnover teads_turnover = 4;
    required Period period = 5;
  }
  message TeadsTurnover {
    required double turnover_converted_usd = 1;
  }
}
// @section Mrg Contract
message ListMrgContractsForReportingAnonymouslyRequest {
}
// @section Mrg Contract
message ListMrgContractsForReportingAnonymouslyResponse {
  repeated MrgContract mrg_contracts = 1;
  message Commitment {
    required string commitment_uuid = 1;
    required PublisherCommitment publisher_commitment = 2;
    required TeadsCommitment teads_commitment = 3;
    required string name = 4;
    required MrgContractCriterionBrandSafety criterion_brand_safety = 5;
    required Period period = 6;
    // Set for contract_version > 1
    optional MrgContractCriterionUserTrackability criterion_user_trackability = 7;
    message Period {
      required google.protobuf.Timestamp start_date = 1;
      required google.protobuf.Timestamp end_date = 2;
      required string uuid = 3;
    }
  }
  message MrgContract {
    required string uuid = 1;
    required string name = 2;
    repeated Commitment commitments = 4;
    required MrgContractType contract_type = 5;
    repeated int64 publishers_ids = 6;
    required bool includes_brand_unsafe_content = 7;
    required MrgContractStatus status = 9;
    required MrgContractExclusivity exclusivity = 10;
    required MrgContractNonUserConsentDeliveryToInclude non_user_consent_delivery_to_include = 11;
    reserved 8;
  }
  message PublisherCommitment {
    required int64 volume = 1;
  }
  message TeadsCommitment {
    // The 3-letter currency code defined in ISO 4217
    required string currency = 1;
    required double revenue = 2;
  }
}
// @section Mrg Contract
message ListMrgContractsRequest {
  required SecurityContext security_context = 1;
}
// @section Mrg Contract
message ListMrgContractsResponse {
  repeated MrgContract mrg_contracts = 1;
  message Commitment {
    required string uuid = 1;
    required int64 volume = 2;
    required double revenue = 3;
    // The 3-letter currency code defined in ISO 4217
    required string revenue_currency = 5;
    required Period period = 6;
    required string name = 7;
  }
  message CountryFilter {
    required MrgContractCriterionCountryFilter country_filter = 1;
  }
  message CountryList {
    repeated string countries = 1;
  }
  message Criterion {
    oneof geo {
      // Using the ISO 3166-1 Alpha 2 standard
      CountryList country_list = 1;
      CountryFilter country_filter = 2;
    }
    required MrgContractCriterionEnvironment environment = 3;
    repeated Commitment commitments = 4;
    required MrgContractCriterionBrandSafety brand_safety = 5;
    // Set for contract_version > 1
    optional MrgContractCriterionUserTrackability user_trackability = 6;
  }
  message MrgContract {
    required string uuid = 1;
    required string name = 2;
    required Period period = 3;
    optional int32 auto_renewal_period = 4;
    optional google.protobuf.Timestamp renewal_limit_date = 5;
    repeated int64 publisher_party_ids = 6;
    required MrgContractStatus status = 7;
    required google.protobuf.Timestamp created_at = 9;
    optional MrgContractType contract_type = 10;
    repeated Criterion criteria = 11;
  }
  message Period {
    required google.protobuf.Timestamp start_date = 1;
    required google.protobuf.Timestamp end_date = 2;
  }
}
// @section Mrg Contract
message ListMrgContractsWithCommitmentsApplicableNowAnonymouslyRequest {
}
// @section Mrg Contract
message ListMrgContractsWithCommitmentsApplicableNowAnonymouslyResponse {
  repeated MrgContract mrg_contracts = 1;
  message Commitment {
    required string commitment_uuid = 1;
    required MrgContractCriterionEnvironment criterion_environment = 2;
    required int64 volume = 3;
    // The cost of the inventory committed, expressed as a Cost Per Mille, with 2 digits precision for the decimal part.
    required double cost = 4;
    // The 3-letter currency code defined in ISO 4217
    required string currency = 5;
    oneof countries_filter {
      Countries included_country_codes = 6;
      Countries excluded_country_codes = 7;
    }
    required Period period = 8;
    required MrgContractCriterionBrandSafety criterion_brand_safety = 9;
    // Set for contract_version > 1
    required MrgContractCriterionUserTrackability criterion_user_trackability = 10;
    message Countries {
      // Using the ISO 3166-1 Alpha 2 standard
      repeated string codes = 1;
    }
    message Period {
      required google.protobuf.Timestamp start_date = 1;
      required google.protobuf.Timestamp end_date = 2;
    }
  }
  message ExcludedPlacements {
    repeated int64 placement_ids = 1;
  }
  message MrgContract {
    required string contract_uuid = 1;
    repeated int64 inventory_ids = 2;
    required GdprFiltering gdpr_filtering = 3;
    required bool includes_brand_unsafe_content = 4;
    repeated Commitment commitments_applicable_now = 6;
    required MrgContractType contract_type = 7;
    repeated int64 publishers_ids = 8;
    map<string, ExcludedPlacements> excluded_placements_by_inventory_id = 9;
    required MrgContractDirectSoldDeliveryToInclude direct_sold_delivery_to_include = 10;
    required bool includes_inapp_delivery_without_device_id = 11;
  }
  enum GdprFiltering {
    // Opportunities where the user did not gave explicit consent are not taken into account
    GDPR_FILTERING_EXPLICIT_CONSENT_MUST_BE_GRANTED = 1;
    // All opportunities are taken into account, no matter whether the user gave his consent or not
    GDPR_FILTERING_NONE = 2;
  }
}
// @section Users Targeting
message ListNielsenDarScoreAnonymouslyRequest {
}
// @section Users Targeting
message ListNielsenDarScoreAnonymouslyResponse {
  repeated NielsenDARScoredCluster nielsen_dar_scored_clusters = 1;
  repeated NielsenDARMonitoredSegment nielsen_dar_monitored_segments = 2;
  message CountryCode {
    required string value = 1;
  }
  message NielsenCampaignId {
    required string value = 1;
  }
  message NielsenDARMonitoredSegment {
    required CountryCode country_code = 1;
    required MonitoredSegments monitored_segments = 2;
    message MonitoredSegments {
      required int64 projection_id = 1;
      required SamplingInfo sampling_info = 2;
    }
  }
  message NielsenDARScoredCluster {
    required SamplingKey sampling_key = 1;
    required SamplingInfo sampling_info = 2;
    message ClusteringEstimatorHash {
      oneof clustering_estimator_hash {
        int32 user_based = 1;
        int32 context_based = 2;
      }
    }
    message SamplingKey {
      required ClusteringEstimatorHash clustering_estimator_hash = 1;
      required int32 cluster_id = 2;
      required CountryCode country_code = 3;
      required DeviceType device_type = 4;
    }
  }
  message SamplingInfo {
    repeated NielsenCampaignId nielsen_campaign_ids = 1;
    required SamplingRate sampling_rate = 2;
  }
  message SamplingRate {
    required double value = 1;
  }
  enum DeviceType {
    DEVICE_TYPE_PERSONAL_COMPUTER = 1;
    DEVICE_TYPE_PHONE = 2;
  }
}
// @section Account
message ListOfficesAnonymouslyRequest {
}
// @section Account
message ListOfficesAnonymouslyResponse {
  repeated ListOffice offices = 1;
  message ListOffice {
    required int64 office_id = 1;
    required string office_name = 2;
  }
}
// @section Account
message ListOfficesRequest {
  required SecurityContext security_context = 1;
}
// @section Account
message ListOfficesResponse {
  repeated ListOffice offices = 1;
  message ListOffice {
    required int64 office_id = 1;
    required string office_name = 2;
  }
}
// @section Users Data
message ListPacksDomainsAnonymouslyRequest {
  optional Page page = 1;
}
// @section Users Data
message ListPacksDomainsAnonymouslyResponse {
  repeated PackDomains pack_domains = 1;
  message PackDomains {
    required int64 pack_id = 1;
    repeated string domains = 2;
  }
}
// @section Advertiser
message ListPixelCategoriesRequest {
  required SecurityContext security_context = 1;
}
// @section Advertiser
message ListPixelCategoriesResponse {
  repeated PixelCategoryInfo infos = 1;
  message PixelCategoryInfo {
    required int64 id = 1;
    required string description = 2;
  }
}
// @section Advertiser
message ListPixelsWhereAttributionIsExpectedAnonymouslyRequest {
}
// @section Advertiser
message ListPixelsWhereAttributionIsExpectedAnonymouslyResponse {
  repeated Pixel pixels = 1;
  message Conversion {
    required string type = 1;
    required int64 category_id = 2;
    repeated string urls = 3;
    required google.protobuf.Timestamp attribution_expected_until = 4;
  }
  message Pixel {
    required int64 id = 1;
    repeated Conversion conversions = 2;
  }
}
// @section Inventory
message ListPlacementsRequest {
  required SecurityContext security_context = 1;
  repeated int64 placement_ids = 2;
}
// @section Inventory
message ListPlacementsResponse {
  repeated PlacementInfo placement_infos = 1;
  message PlacementInfo {
    required int64 placement_id = 1;
    required string placement_name = 2;
    required int64 publisher_id = 3;
    required string publisher_name = 4;
    required int64 inventory_id = 5;
    required string inventory_name = 6;
    required string inventory_domain = 7;
    required int32 percentage_of_auctions_skipped = 8;
  }
}
// @section Users Data
message ListPlannedTargetingsAnonymouslyRequest {
}
// @section Users Data
message ListPlannedTargetingsAnonymouslyResponse {
  repeated PlannedTargeting planned_targetings = 1;
  message PlannedTargeting {
    required int64 id = 1;
    required string name = 2;
    required PlanStatus status = 3;
    required int64 profile_id = 4;
    required int64 entity_id = 5;
    required bool is_cookieless = 6;
    required google.protobuf.Timestamp created_at = 7;
    required google.protobuf.Timestamp updated_at = 8;
    optional UsersDataEnvironmentChannel channel = 9;
    required string tbl = 10;
  }
  enum PlanStatus {
    PLAN_STATUS_ENABLED = 1;
    PLAN_STATUS_DISABLED = 2;
    PLAN_STATUS_DELETED = 3;
  }
}
// @section Inventory
message ListPortfolioItemsRequest {
  required SecurityContext security_context = 1;
}
// @section Inventory
message ListPortfolioItemsResponse {
  repeated PortfolioItem portfolio_items = 1;
  message PortfolioItem {
    required int64 id = 1;
    required string name = 2;
    required PortfolioItemStatus status = 3;
    required int64 position_id = 4;
    required int64 size_id = 5;
    required int64 creative_type_id = 6;
    required bool is_web_desktop = 7;
    required bool is_web_mobile = 8;
    // If the portfolio item can deliver in AMP (Accelerated Mobile Pages) mobile environment
    required bool is_amp_mobile = 9;
    // If the portfolio item can deliver in FIA (Facebook Instant Articles) mobile environment
    required bool is_fia_mobile = 10;
    required bool is_sdk_mobile = 11;
    required bool is_third_party_web = 12;
  }
}
// @section Campaign
message ListPositionsCompatibleWithCreativeTypeAndSizeRequest {
  required SecurityContext security_context = 1;
  required int64 format_size_id = 2;
  required int64 format_creative_type_id = 3;
}
// @section Campaign
message ListPositionsCompatibleWithCreativeTypeAndSizeResponse {
  repeated Position format_positions = 1;
  message Position {
    required int64 format_position_id = 1;
    required string format_position_name = 2;
  }
}
// @section User Privacy
message ListPrivacyCompliantDomainsAnonymouslyRequest {
}
// @section User Privacy
message ListPrivacyCompliantDomainsAnonymouslyResponse {
  repeated string domains = 1;
}
// @section Account
message ListProfilesRequest {
  required SecurityContext security_context = 1;
}
// @section Account
message ListProfilesResponse {
  repeated Profile profiles = 1;
  message Account {
    required Entity entity = 1;
    // "Publisher Self-Served", "Teads Innovation", "Innovation feature team Platform"
    repeated string roles = 2;
  }
  message Entity {
    required int64 id = 1;
    required string name = 2;
    required EntityType type = 3;
    optional Entity parent = 4;
  }
  message Profile {
    required int64 profile_id = 1;
    required string email = 2;
    required ProfileStatus status = 3;
    repeated Account accounts = 4;
    optional string firstname = 5;
    optional string lastname = 6;
    optional string new_email_pending_confirmation = 7;
  }
}
// @section Programmatic
message ListProgrammaticMarginsAnonymouslyRequest {
}
// @section Programmatic
message ListProgrammaticMarginsAnonymouslyResponse {
  repeated ProgrammaticMargin programmatic_margins = 1;
  message ProgrammaticMargin {
    oneof source {
      int64 seller_office_id = 1;
      int64 connection_id = 2;
      int64 publisher_id = 3;
    }
    required int64 margin_id = 4;
    required double min_margin = 5;
    required double max_margin = 6;
  }
}
// @section Users Segments
message ListProviderSegmentTaxonomyAnonymouslyRequest {
}
// @section Users Segments
message ListProviderSegmentTaxonomyAnonymouslyResponse {
  repeated ProviderSegmentTaxonomy provider_segment_taxonomies = 1;
  message BigDecimal {
    required string value = 1;
  }
  message Cost {
    required BigDecimal cost_per_mille = 1;
    repeated FormatType format_types = 2;
    repeated BillableRegion billable_regions = 3;
  }
  message ProviderSegmentTaxonomy {
    required int64 segment_id = 1;
    required Provider provider = 2;
    required Seller seller = 3;
    repeated Cost costs = 4;
    required string currency = 5;
  }
  enum BillableRegion {
    BILLABLE_REGION_AFRICA = 1;
    BILLABLE_REGION_OCEANIA = 2;
    BILLABLE_REGION_ASIA = 3;
    BILLABLE_REGION_EUROPE = 4;
    BILLABLE_REGION_NORTH_AMERICA = 5;
    BILLABLE_REGION_SOUTH_AMERICA = 6;
  }
  enum FormatType {
    FORMAT_TYPE_CTV = 1;
    FORMAT_TYPE_DISPLAY = 2;
    FORMAT_TYPE_VIDEO = 3;
  }
  enum Provider {
    PROVIDER_ADELAIDE = 1;
    PROVIDER_AUDIENCE = 2;
    PROVIDER_AUDIENCE_PARTNER = 3;
    PROVIDER_BLUEKAI = 4;
    PROVIDER_GRAPESHOT = 5;
    PROVIDER_COMSCORE = 6;
    PROVIDER_EMETRIQ = 7;
    PROVIDER_EXELATE = 8;
    PROVIDER_IBM = 9;
    PROVIDER_LIVERAMP = 10;
    PROVIDER_LOOKALIKE = 11;
    PROVIDER_NEUSTAR = 12;
    PROVIDER_RETARGETLY = 13;
    PROVIDER_SALESFORCE = 14;
    PROVIDER_SKP = 15;
    PROVIDER_TEADS = 16;
  }
  enum Seller {
    SELLER_ADVERTISER_PIXEL = 1;
    SELLER_ADELAIDE = 2;
    SELLER_ALTICE_FRANCE = 3;
    SELLER_AUDIENCE = 4;
    SELLER_AUDIENCE_PARTNER = 5;
    SELLER_BLUEKAI = 6;
    SELLER_COMSCORE = 7;
    SELLER_EMETRIQ = 8;
    SELLER_EXELATE = 9;
    SELLER_GRAPESHOT = 10;
    SELLER_IBM = 11;
    SELLER_LIVE_RAMP = 12;
    SELLER_LOOKALIKE = 13;
    SELLER_NEUSTAR = 14;
    SELLER_RETARGETELY = 15;
    SELLER_SALES_FORCE = 16;
    SELLER_SKP = 17;
    SELLER_TEADS = 18;
    SELLER_TEADS_PACK = 19;
    SELLER_ZEOTAP = 20;
  }
}
// @section Inventory
message ListPublisherContractTypeByActivePlacementsAnonymouslyRequest {
}
// @section Inventory
message ListPublisherContractTypeByActivePlacementsAnonymouslyResponse {
  map<int64, PublisherContractType> contract_type_by_placement = 1;
}
// @section Inventory
message ListPublisherFeesAnonymouslyRequest {
}
// @section Inventory
message ListPublisherFeesAnonymouslyResponse {
  repeated PublisherFee publisher_fees = 1;
  message PublisherFee {
    required int64 id_publisher = 1;
    required PublisherFeeProductName product_name = 2;
    required double value = 3;
    required PublisherFeeValueType value_type = 4;
    required bool has_threshold = 5;
    optional double threshold_min_amount_payout = 6;
    optional double threshold_min_volume = 7;
    optional google.protobuf.Timestamp waved_fee_period_start = 8;
    optional google.protobuf.Timestamp waved_fee_period_end = 9;
  }
}
// @section Inventory
message ListPublisherInventoryAppsAnonymouslyRequest {
}
// @section Inventory
message ListPublisherInventoryAppsAnonymouslyResponse {
  repeated App apps = 1;
  message App {
    required int64 id = 1;
    required string name = 2;
    optional string android_bundle_id = 3;
    optional string app_store_id = 4;
    optional string app_store_country_code = 5;
  }
}
// @section Inventory
message ListPublisherInventoryWebsitesAnonymouslyRequest {
}
// @section Inventory
message ListPublisherInventoryWebsitesAnonymouslyResponse {
  repeated Website websites = 1;
  message Website {
    required int64 id = 1;
    required string name = 2;
    required string domain = 3;
  }
}
// @section Inventory
message ListPublisherTierByPublisherAnonymouslyRequest {
}
// @section Inventory
message ListPublisherTierByPublisherAnonymouslyResponse {
  map<int64, PublisherTierInfo> publisher_tier_info_by_publisher = 1;
  message PublisherTierInfo {
    required string publisher_name = 1;
    required PublisherTier publisher_tier = 2;
  }
}
// @section Finance
message ListPublishersPaymentSettingsChangesAnonymouslyRequest {
}
// @section Finance
message ListPublishersPaymentSettingsChangesAnonymouslyResponse {
  repeated PublisherPaymentSettingsChange publishers_payment_settings_changes = 1;
  message PublisherPaymentSettingsChange {
    required int64 billing_office_id = 1;
    required int64 publisher_id = 2;
    required google.protobuf.Timestamp last_mutation_at = 3;
    optional google.protobuf.Timestamp approved_at = 4;
    optional string approval_process_description = 5;
    optional int64 approver_id = 6;
  }
}
// @section Inventory
message ListPublishersWithAcceptedCookielessTermsAndConditionsAnonymouslyRequest {
}
// @section Inventory
message ListPublishersWithAcceptedCookielessTermsAndConditionsAnonymouslyResponse {
  repeated int64 publisher_ids = 1;
}
// @section Inventory
message ListPublishersWithActiveInventoryAnonymouslyRequest {
}
// @section Inventory
message ListPublishersWithActiveInventoryAnonymouslyResponse {
  repeated Publisher publishers = 1;
  message Publisher {
    required int64 id = 1;
    required string name = 2;
    optional string legal_domain = 3;
    required PublisherVisibility publisher_visibility = 4;
    required SupplyChainRole supply_chain_role = 5;
    required RelationType relation_type = 6;
  }
  enum PublisherVisibility {
    PUBLISHER_VISIBILITY_NON_CONFIDENTIAL = 0; // Publisher for which we can communicate on any legal information (name, domain, ...)
    PUBLISHER_VISIBILITY_CONFIDENTIAL = 1; // Publisher for which we can only communicate on the id and the supply chain role
    PUBLISHER_VISIBILITY_INTERNAL = 2; // Publisher for which we can't communicate on any legal information
  }
  enum RelationType {
    RELATION_TYPE_DIRECT = 0;
    RELATION_TYPE_RESELLER = 1;
  }
  enum SupplyChainRole {
    SUPPLY_CHAIN_ROLE_PUBLISHER = 0;
    SUPPLY_CHAIN_ROLE_INTERMEDIARY = 1;
    SUPPLY_CHAIN_ROLE_BOTH = 2;
  }
}
// @section Users Data
message ListQuarantinedSegmentsRequest {
  required SecurityContext security_context = 1;
}
// @section Users Data
message ListQuarantinedSegmentsResponse {
  repeated QuarantinedSegment quarantined_segments = 1;
  message QuarantinedSegment {
    required string id = 1;
    required QuarantineProvider provider = 2;
    required string name = 3;
    optional double price = 4;
    oneof first_party {
      int64 advertiser_id = 5;
      int64 publisher_id = 6;
    }
    required bool is_crm = 7;
    optional bool blocked_on_self_served = 8 [default = false];
    optional google.protobuf.Timestamp created_at = 9;
  }
}
// @section Commons
message ListRPCsAnonymouslyRequest {
}
// @section Commons
message ListRPCsAnonymouslyResponse {
  repeated RPC rpcs = 1;
  message RPC {
    required string fully_qualified_name = 1; // teads.api.CommandService.AcknowledgeCampaignSkeletonCreationToSalesforce
    required string name = 2; // AcknowledgeCampaignSkeletonCreationToSalesforce
    required string service_name = 3; // CommandService
  }
}
// @section Reachcast
message ListReachcastContextsRequest {
  required SecurityContext security_context = 1;
}
// @section Reachcast
message ListReachcastContextsResponse {
  repeated Context contexts = 1;
  message Context {
    required int64 id = 1;
    required string name = 2;
    required ContextType type = 3;
  }
  enum ContextType {
    CONTEXT_TYPE_STANDARD = 0;
    CONTEXT_TYPE_SEASONAL = 1;
  }
}
// @section Reachcast
message ListReachcastCountriesRequest {
  required SecurityContext security_context = 1;
}
// @section Reachcast
message ListReachcastCountriesResponse {
  repeated Country countries = 1;
  message Country {
    required string iso_code = 1;
    required string name = 2;
  }
}
// @section Account
message ListResourceTypesRequest {
  required SecurityContext security_context = 1;
}
// @section Account
message ListResourceTypesResponse {
  // "connection", "invoice", "placement"
  repeated string resource_types = 1;
}
// @section Retail Media
message ListRetailerSmartlinkConfigurationsAnonymouslyRequest {
}
// @section Retail Media
message ListRetailerSmartlinkConfigurationsAnonymouslyResponse {
  repeated ConfigurationItem configurations = 1;
  message ConfigurationItem {
    required int64 id = 1;
    required string name = 2;
    required Retailer retailer = 3;
    repeated Product products = 4;
    required RetailerSmartlinkConfigurationStatus status = 5;
    optional double total_price = 6;
    required string currency = 7;
    required google.protobuf.Timestamp created_at = 8;
    required google.protobuf.Timestamp updated_at = 9;
    optional string landing_page_url = 10;
    message Product {
      required int64 id = 1;
      optional string name = 2;
      required string sku = 3;
      required int64 quantity = 4;
      required RetailerSmartlinkConfigurationProductStatus status = 5;
      optional double price = 6;
      optional string seller_id = 8;
      reserved 7;
    }
    message Retailer {
      required int64 id = 1;
      required string name = 2;
      optional string cart_redirect_url = 3;
      optional RetailerCMS cms = 4;
      optional string json_configuration = 5;
      required RetailerStatus status = 6;
      optional string locale = 7;
      optional string country = 8;
      required RetailerCartingMode carting_mode = 9;
      required RetailerProductStrategyAllowed product_strategy_allowed = 10;
      required bool is_pixel = 11;
    }
  }
}
// @section Retail Media
message ListRetailersAnonymouslyRequest {
}
// @section Retail Media
message ListRetailersAnonymouslyResponse {
  repeated Retailers retailers = 1;
  message Retailers {
    required int64 id = 1;
    required string name = 2;
    optional string cart_redirect_url = 3;
    optional RetailerCMS cms = 4;
    optional string json_configuration = 5;
    required RetailerStatus status = 6;
    optional string locale = 7;
    optional string country = 8;
    required RetailerCartingMode carting_mode = 9;
    required RetailerProductStrategyAllowed product_strategy_allowed = 10;
    required google.protobuf.Timestamp created_at = 11;
    required google.protobuf.Timestamp updated_at = 12;
    required bool is_pixel = 13;
  }
}
// @section Account
message ListRolesRequest {
  required SecurityContext security_context = 1;
}
// @section Account
message ListRolesResponse {
  // "Publisher Self-Served", "Teads Innovation", "Innovation feature team Platform"
  repeated string roles = 1;
  map<string, PermissionsByResources> permissions_by_role = 2;
  message PermissionsByResources {
    // Tells for each resource what is the permission granted to the role.
    // Example: "connection" -> "manage", "invoice" -> "view", "placement" -> "manage"
    map<string, string> permissions_by_resource_type = 3;
  }
}
// @section Users Data
message ListSeedCompositionIdsForComputingAnonymouslyRequest {
}
// @section Users Data
message ListSeedCompositionIdsForComputingAnonymouslyResponse {
  repeated string seed_composition_ids = 1;
}
// @section Inventory
message ListSitesAnonymouslyRequest {
}
// @section Inventory
message ListSitesAnonymouslyResponse {
  repeated Site sites = 1;
  message Site {
    required int64 id = 1;
    required string domain = 2;
    optional string name = 3;
    optional InventoryTier tier = 4;
    optional InventoryType inventory_type = 5;
    optional string iab_category_code = 6;
    optional bool is_strategic = 7;
    optional bool is_brandsafety_whitelisted = 8;
    optional google.protobuf.Timestamp last_activity = 9;
    repeated int64 pack_ids = 10;
    repeated int64 publisher_ids = 11;
    required bool is_vetted = 12;
    required InventoryStatus status = 13;
    required google.protobuf.Timestamp created_at = 14;
    required google.protobuf.Timestamp updated_at = 15;
    optional bool is_mfa = 16;
    optional bool gdi_contains_pfi_segment = 17;
    optional string newsguard_false_content = 18;
    optional string newsguard_score = 19;
    optional string publisher_sources = 20;
    optional string article_content = 21;
    optional string main_traffic_source = 22;
    optional string ads_txt = 23;
    optional int64 reviewer_id = 24;
    optional string reviewer_comment = 25;
    optional int64 followup_reviewer_id = 26;
    optional string followup_reviewer_comment = 27;
  }
}
// @section Data Science
message ListSspPredictorSchemaReferencesRequest {
  required SecurityContext security_context = 1;
}
// @section Data Science
message ListSspPredictorSchemaReferencesResponse {
  repeated string schema_references = 1;
}
// @section Command Runner
message ListSubmissionsRequest {
  required SecurityContext security_context = 1;
  required Page page = 2;
}
// @section Command Runner
message ListSubmissionsResponse {
  repeated Submission submissions = 1;
  message Submission {
    required string submission_id = 1;
    required string command_name = 2;
    required google.protobuf.Timestamp submitted = 3;
  }
}
// @section Users Data
message ListTeadsCookielessSegmentsAnonymouslyRequest {
}
// @section Users Data
message ListTeadsCookielessSegmentsAnonymouslyResponse {
  repeated CookielessSegment segments = 1;
  message CookielessSegment {
    required int64 id = 1;
  }
}
// @section Campaign
message ListTimezonesSupportedOnPublisherDirectSalesLineItemRequest {
  required SecurityContext security_context = 1;
}
// @section Campaign
message ListTimezonesSupportedOnPublisherDirectSalesLineItemResponse {
  repeated Timezone timezones = 1;
  message Timezone {
    required string code = 1; // i.e "Asia/Dubai"
  }
}
// @section Users Targeting
message ListTimezonesSupportedOnTamAnonymouslyRequest {
}
// @section Users Targeting
message ListTimezonesSupportedOnTamAnonymouslyResponse {
  repeated Timezone timezones = 1;
  message Timezone {
    optional string country_code = 1;
    required string name = 2;
    optional TimezoneType type = 3 [default = TIMEZONE_TYPE_COUNTRY];
  }
  enum TimezoneType {
    TIMEZONE_TYPE_OFFSET = 0;
    TIMEZONE_TYPE_COUNTRY = 1;
  }
}
// @section Inventory
message ListTopPublishersByMonetizationScorePerOfficeAnonymouslyRequest {
  optional int32 max_publishers_per_office = 1 [default = 10];
}
// @section Inventory
message ListTopPublishersByMonetizationScorePerOfficeAnonymouslyResponse {
  repeated Office offices = 1;
  message Office {
    required int64 id = 1;
    // Monetization score is based on delivery data from the last 15 days
    repeated PublisherWithMonetizationScore top_publishers = 2;
  }
  message PublisherWithMonetizationScore {
    required int64 id = 1;
    required string name = 2;
    required double monetization_score = 3;
    required int64 revenue = 4;
  }
}
// @section Campaign
message ListTrafficAcquisitionLineItemsByOptimizedBuyerPixelDomainAnonymouslyRequest {
}
// @section Campaign
message ListTrafficAcquisitionLineItemsByOptimizedBuyerPixelDomainAnonymouslyResponse {
  map<string, LineItems> line_items_by_buyer_pixel_domain = 1;
  message Creative {
    required int64 id = 1;
    required string name = 2;
  }
  message LineItem {
    required int64 id = 1;
    required string name = 2;
    repeated Creative creatives = 3;
  }
  message LineItems {
    repeated LineItem line_items = 1;
  }
}
// @section Advertiser
message ListUrlBasedConversionsForAdvertiserRequest {
  required SecurityContext security_context = 1;
  required int64 advertiser_id = 2;
}
// @section Advertiser
message ListUrlBasedConversionsForAdvertiserResponse {
  repeated UrlBasedConversion url_based_conversions = 1;
  message Office {
    required int64 id = 1;
    required string name = 2;
    optional string country_code = 3;
  }
  message Profile {
    required int64 id = 1;
    optional string first_name = 2;
    optional string last_name = 3;
  }
  message UrlBasedConversion {
    required int64 id = 1;
    required string name = 2;
    repeated string urls_mapping = 3;
    required int64 category = 4;
    required string description = 5;
    optional string url_conversion_page = 7;
    required google.protobuf.Timestamp created_at = 8;
    required Profile author_profile = 9;
    required Office office = 10;
    optional google.protobuf.Timestamp last_activity_date = 11;
    optional int64 nb_different_urls = 12;
    optional PixelType pixel_type = 13;
    required bool automatically_created = 14;
    optional int64 buyer_pixel_id = 16;
    reserved 6, 15;
  }
}
// @section Ad Experience
message ListVerticalsSupportedByDemosRequest {
  required SecurityContext security_context = 1;
}
// @section Ad Experience
message ListVerticalsSupportedByDemosResponse {
  repeated Vertical verticals = 1;
  message Vertical {
    required uint64 id = 1;
    required string name = 2;
    required string full_name = 3;
    required string status = 4;
    optional bool is_staging = 5;
  }
}
// @section Inventory
message ListVettedAndRejectedAppsAnonymouslyRequest {
}
// @section Inventory
message ListVettedAndRejectedAppsAnonymouslyResponse {
  repeated VettedOrRejectedApp vetted_and_rejected_apps = 1;
  message VettedOrRejectedApp {
    required int64 id = 1;
    required string store_bundle_id = 2;
    required AppPlatform platform = 3;
    required bool is_rejected = 4;
    optional string technical_bundle_id = 5;
    optional InventoryTier tier = 6;
    optional string iab_category_code = 7;
    repeated int64 pack_ids = 8;
    repeated int64 authorized_publisher_ids = 9;
    repeated int64 rejected_publisher_ids = 10;
  }
}
// @section Inventory
message ListVettedAndRejectedSitesAnonymouslyRequest {
}
// @section Inventory
message ListVettedAndRejectedSitesAnonymouslyResponse {
  repeated VettedOrRejectedSite vetted_and_rejected_sites = 1;
  message VettedOrRejectedSite {
    required int64 id = 1;
    required string domain = 2;
    required bool is_rejected = 3;
    optional InventoryTier tier = 4;
    optional string iab_category_code = 5;
    repeated int64 pack_ids = 6;
    repeated int64 authorized_publisher_ids = 7;
    repeated int64 rejected_publisher_ids = 8;
  }
}
// @section Inventory
message ListVettedAppsAnonymouslyRequest {
}
// @section Inventory
message ListVettedAppsAnonymouslyResponse {
  repeated VettedApp vetted_apps = 1;
  message VettedApp {
    required int64 id = 1;
    required string store_bundle_id = 2;
    optional string store_bundle_url = 3;
    optional string technical_bundle_id = 4;
    required string name = 5;
    required AppPlatform platform = 6;
    required InventoryTier tier = 7;
    required string iab_category_code = 8;
    required bool is_strategic = 9;
    required bool is_brandsafety_whitelisted = 10;
    required bool is_mobile = 11;
    required bool is_ctv = 12;
    optional google.protobuf.Timestamp last_activity = 13;
    repeated int64 pack_ids = 14;
  }
}
// @section Inventory
message ListVettedSitesAnonymouslyRequest {
}
// @section Inventory
message ListVettedSitesAnonymouslyResponse {
  repeated VettedSite vetted_sites = 1;
  message VettedSite {
    required int64 id = 1;
    required string domain = 2;
    required string name = 3;
    required InventoryTier tier = 4;
    required InventoryType inventory_type = 5;
    required string iab_category_code = 6;
    required bool is_strategic = 7;
    required bool is_brandsafety_whitelisted = 8;
    optional google.protobuf.Timestamp last_activity = 9;
    repeated int64 pack_ids = 10;
  }
}
// @section Users Data
message ListWeatherSegmentsRequest {
  required SecurityContext security_context = 1;
}
// @section Users Data
message ListWeatherSegmentsResponse {
  repeated WeatherSegment segments = 1;
  message WeatherSegment {
    required int64 id = 1;
    required string name = 2;
    optional double cpm_in_usd = 3;
    optional int64 parent_weather_segment_id = 4;
    optional string segment_code_from_provider = 5;
    required bool is_active = 6;
    optional string description = 7;
    repeated string country_codes = 8; // ISO639-1 codes
    optional bool is_available = 9;
  }
}
// @section Traffic
message ListWhitelistedDomainsRequest {
  required SecurityContext security_context = 1;
  // The page index is set to 0 if not specified
  // The page size is set to 100 if not specified
  required Page page = 2;
}
// @section Traffic
message ListWhitelistedDomainsResponse {
  repeated WhitelistedDomain whitelisted_domains = 1;
  message WhitelistedDomain {
    required int64 id = 1;
    required string name = 2;
    required string domain_or_app_bundle_id = 3;
    required google.protobuf.Timestamp created_at = 4;
    required google.protobuf.Timestamp updated_at = 5;
  }
}
// @section Users Targeting
message ListZonesAnonymouslyRequest {
}
// @section Users Targeting
message ListZonesAnonymouslyResponse {
  repeated Zone zones = 1;
  message Zone {
    required int64 id = 1;
    required string name = 2;
    repeated string locations = 3; // Digital Elements location values
  }
}
// @section Finance
message LoadLastCompletedMonthOfLineItemBillablesAnonymouslyRequest {
}
// @section Finance
message LoadLastCompletedMonthOfLineItemBillablesAnonymouslyResponse {
}
// @section Data Science
message LoadModelTrainingRequest {
  required SecurityContext security_context = 1;
  required TrainingSource training_source = 2;
  required string model_training_config_id = 3;
  optional SspPredictorMetadata ssp_predictor_metadata = 4;
  message SspPredictorMetadata {
    required string schema_reference = 1;
    required int32 max_optimal_hours = 2;
    required int32 max_validity_hours = 3;
    required PredictorType predictor_type = 4;
  }
}
// @section Data Science
message LoadModelTrainingResponse {
}
// @section Finance
message LoadPriceAnalysisForBusinessIntelligenceAnonymouslyRequest {
  required string files_directory_name = 2;
  required google.protobuf.Timestamp last_processed_date_of_month = 3;
  reserved 1;
}
// @section Finance
message LoadPriceAnalysisForBusinessIntelligenceAnonymouslyResponse {
}
// @section Campaign
message LoadTrackingCampaignsDataForBusinessIntelligenceAnonymouslyRequest {
}
// @section Campaign
message LoadTrackingCampaignsDataForBusinessIntelligenceAnonymouslyResponse {
}
// @section Campaign Setup
message LogCampaignSnapshotRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  required CampaignMutationType campaign_mutation_type = 3;
  enum CampaignMutationType {
    CAMPAIGN_MUTATION_TYPE_CREATE = 1;
    CAMPAIGN_MUTATION_TYPE_UPDATE = 2;
  }
}
// @section Campaign Setup
message LogCampaignSnapshotResponse {
}
// @section Reporting
message LogEndReportRequest {
  required SecurityContext security_context = 1;
  required string uuid = 2;
  required ReportStatus status = 3;
  required google.protobuf.Timestamp end = 4;
  optional string reason = 5;
  optional string url = 6;
}
// @section Reporting
message LogEndReportResponse {
}
// @section Reporting
message LogStartReportRequest {
  required SecurityContext security_context = 1;
  repeated string dimensions = 2;
  repeated string metrics = 3;
  repeated ReportFilter filters = 4;
  required string uuid = 5;
  optional int64 template_id = 6;
  optional ReportPeriod date = 7;
  required ReportOutputFormat format = 8;
  required google.protobuf.Timestamp start = 9;
  required ReportOptions options = 10;
  optional Frequency frequency = 11;
  required int64 profile_id = 12;
  required int64 entity_id = 13;
  optional string client_name = 14;
  optional string source = 15;
  optional string user_agent = 16;
  message ReportFilter {
    required string name = 1;
    repeated string values = 2;
  }
  message ReportOptions {
    optional bool sync = 1;
    optional bool test = 2;
    optional ReportProcessingMode reporting_mode = 3;
    optional bool uv_metrics = 4;
    optional string redshift_sort_key = 5;
    optional string redshift_schema = 6;
    optional string redshift_database = 7;
    optional string redshift_archive = 8;
    optional string callback_url = 9;
    optional string remapping_collection = 10;
    optional string s3_target_directory = 11;
    optional ScheduledReportOptions scheduled_report = 12;
  }
  message ReportPeriod {
    required google.protobuf.Timestamp start = 1;
    required google.protobuf.Timestamp end = 2;
    required string timezone = 3;
  }
  message ScheduledReportOptions {
    required int64 preference_id = 1;
    required google.protobuf.Timestamp reference_date = 2;
    required ReportCategory category = 3;
  }
}
// @section Reporting
message LogStartReportResponse {
}
// @section Ab Testing
message MarkAbTestDynamicParameterAsObsoleteRequest {
  required SecurityContext security_context = 1;
  required string parameter_name = 2;
}
// @section Ab Testing
message MarkAbTestDynamicParameterAsObsoleteResponse {
}
// @section Advertiser
message MarkClientBillingDetailsFilledForSeatRequest {
  required SecurityContext security_context = 1;
  required int64 seat_id = 2;
}
// @section Advertiser
message MarkClientBillingDetailsFilledForSeatResponse {
  required BuyerSeatStatus seat_status = 1;
}
// @section Advertiser
message MarkClientMsaFilledForSeatRequest {
  required SecurityContext security_context = 1;
  required int64 seat_id = 2;
  required int64 msa_version_id = 3;
}
// @section Advertiser
message MarkClientMsaFilledForSeatResponse {
  required BuyerSeatStatus seat_status = 1;
}
// @section Creative
message MarkCreativeFolderAsStarredForAccountRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
  required int64 entity_id = 3;
  required int64 creative_folder_tree_node_id = 4;
}
// @section Creative
message MarkCreativeFolderAsStarredForAccountResponse {
}
// @section Advertiser
message MarkMappedUrlAsTrustedRequest {
  required SecurityContext security_context = 1;
  required int64 url_id = 2;
  required bool is_trusted = 3;
}
// @section Advertiser
message MarkMappedUrlAsTrustedResponse {
}
// @section Finance
message MarkPublisherDirectSalesDealIdValidatedBillablesAsProcessedRequest {
  required SecurityContext security_context = 1;
  repeated ValidatedBillableId validated_billable_ids = 2;
  message ValidatedBillableId {
    required int64 publisher_id = 1;
    required int64 billing_office_id = 2;
    required YearMonth year_month = 3;
  }
  message YearMonth {
    required int32 month = 1;
    required int32 year = 2;
  }
}
// @section Finance
message MarkPublisherDirectSalesDealIdValidatedBillablesAsProcessedResponse {
}
// @section Reporting
message MarkScheduledReportAsCompletedForReferenceDateAnonymouslyRequest {
  required ReportCategory report_category = 1;
  required int64 report_preference_id = 2;
  required google.protobuf.Timestamp reference_date = 3;
}
// @section Reporting
message MarkScheduledReportAsCompletedForReferenceDateAnonymouslyResponse {
}
// @section Advertiser
message MarkTeadsFinanceApprovalFilledForSeatRequest {
  required SecurityContext security_context = 1;
  required int64 seat_id = 2;
}
// @section Advertiser
message MarkTeadsFinanceApprovalFilledForSeatResponse {
  required BuyerSeatStatus seat_status = 1;
}
// @section Finance
message MasterServiceAgreementInvoicingComputedEvent {
  required google.protobuf.Timestamp year_month = 1;
}
// @section Campaign
message MigrateCampaignToManagedServiceRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  required CampaignMigrationReason reason = 3;
  optional string details = 4;
}
// @section Campaign
message MigrateCampaignToManagedServiceResponse {
}
// @section Account
message MigrateCustomerProfileToOktaRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
}
// @section Account
message MigrateCustomerProfileToOktaResponse {
  required string okta_user_id = 1;
}
// @section Buying Price
message MigrateHeaderBiddingFloorPricesForOfficesRequest {
  required SecurityContext security_context = 1;
  repeated int64 office_ids = 2;
}
// @section Buying Price
message MigrateHeaderBiddingFloorPricesForOfficesResponse {
}
// @section Advertiser
message MigrateManagedServicesConversionsToBuyerPixelForAdvertiserRequest {
  required SecurityContext security_context = 1;
  // Pixel to which conversions will be attached
  required int64 buyer_pixel_id = 2;
  // Seat to which conversions will be attached
  required int64 buyer_seat_id = 3;
  // Advertiser id which has already existing conversions on managed services platform;
  // Will be used to retrieve managed conversions that need to be recreated in self served
  required int64 advertiser_id = 4;
}
// @section Advertiser
message MigrateManagedServicesConversionsToBuyerPixelForAdvertiserResponse {
}
// @section Finance
message NoDemandBillablesDataProcessedEvent {
  required google.protobuf.Timestamp processed_month = 1;
}
// @section Notification
message NotifyEventAnonymouslyRequest {
  repeated Recipient recipients = 1;
  required string message = 2;
  message Recipient {
    oneof channel {
      Slack slack = 1;
    }
    message Slack {
      required string channel_id = 1;
      required App app = 2;
      enum App {
        APP_TAM_ANNOUNCER = 1;
      }
    }
  }
}
// @section Notification
message NotifyEventAnonymouslyResponse {
}
// @section Commons
message Page {
  optional int32 index = 1 [default = 0];
  optional int32 size = 2;
}
// @section Commons
message Pagination {
  required int32 index = 1;
  required int32 size = 2;
  required int32 total_elements = 3;
  required int32 total_pages = 4;
}
// @section Advertiser
message PixelFirstActivityReceivedEvent {
  required int64 buyer_pixel_id = 1;
}
// @section Finance
message PlatformDataForFinanceConsolidationPreparedEvent {
  required google.protobuf.Timestamp processed_year_month = 1;
}
// @section Finance
message PrepareLastCompletedMonthOfPlatformDataForFinanceConsolidationAnonymouslyRequest {
}
// @section Finance
message PrepareLastCompletedMonthOfPlatformDataForFinanceConsolidationAnonymouslyResponse {
}
// @section Finance
message PrepareSalesforceSnapshotsAnonymouslyRequest {
}
// @section Finance
message PrepareSalesforceSnapshotsAnonymouslyResponse {
}
// @section Finance
message PreviewFinanceReportRequest {
  required SecurityContext security_context = 1;
  required google.protobuf.Timestamp start_date = 2;
  required google.protobuf.Timestamp end_date = 3;
  required FinanceReportTemplate template = 4;
  repeated int64 office_ids = 6;
}
// @section Finance
message PreviewFinanceReportResponse {
  required Row headers = 1;
  repeated Row values = 2;
  message Cell {
    required string key = 1;
    required string value = 2;
  }
  message Row {
    repeated Cell cells = 1;
  }
}
// @section Finance
message PriceAnalysisLoadedIntoBqEvent {
  required google.protobuf.Timestamp load_date = 1;
}
// @section Finance
message ProcessCurrentMonthExchangeRatesAnonymouslyRequest {
}
// @section Finance
message ProcessCurrentMonthExchangeRatesAnonymouslyResponse {
}
// @section Finance
message ProcessLastCompletedMonthOfConnectionBillablesAnonymouslyRequest {
}
// @section Finance
message ProcessLastCompletedMonthOfConnectionBillablesAnonymouslyResponse {
}
// @section Finance
message ProcessLastCompletedMonthOfNoDemandBillablesAnonymouslyRequest {
}
// @section Finance
message ProcessLastCompletedMonthOfNoDemandBillablesAnonymouslyResponse {
}
// @section Account
message ProfileActivatedEvent {
  required int64 profile_id = 1;
}
// @section Account
message ProfileAttributesChangedEvent {
  required int64 profile_id = 1;
  required PreviousValues previous_values = 2;
  required NewValues new_values = 3;
  message NewValues {
    required string firstname = 1;
    required string lastname = 2;
    required string locale = 3; // language_TERRITORY: en_US, fr_FR, es_ES, ...
    optional string timezone = 4; // Europe/Paris, Europe/Berlin, US/Central
  }
  message PreviousValues {
    optional string firstname = 1;
    optional string lastname = 2;
    required string locale = 3; // language_TERRITORY: en_US, fr_FR, es_ES, ...
    optional string timezone = 4; // Europe/Paris, Europe/Berlin, US/Central
  }
}
// @section Account
message ProfileCreatedEvent {
  required int64 profile_id = 1;
  required string email = 2;
  required string firstname = 3;
  required string lastname = 4;
  // language_TERRITORY: en_US, fr_FR, es_ES, ...
  required string locale = 5;
  optional string identity_provider_name = 6;
  required string timezone = 7; // Europe/Paris, Europe/Berlin, US/Central
}
// @section Account
message ProfileDeactivatedEvent {
  required int64 profile_id = 1;
}
// @section Account
message ProfileDeletedEvent {
  required int64 profile_id = 1;
}
// @section Account
message ProfileEmailChangedEvent {
  required int64 profile_id = 1;
  required string previous_email = 2;
  required string new_email = 3;
}
// @section Account
message ProfilePendingConfirmationEmailResetEvent {
  required int64 profile_id = 1;
}
// @section Account
message ProfileSuccessfullyAuthenticatedEvent {
  required int64 profile_id = 1;
  required string email = 2;
}
// @section Campaign
message PublishCampaignEventRequest {
  required SecurityContext security_context = 1;
  oneof event {
    CampaignDraftEditedEvent campaign_draft_edited_event = 2;
    CampaignEditedEvent campaign_edited_event = 3;
    CampaignDraftCreatedEvent campaign_draft_created_event = 4;
    CampaignCreatedEvent campaign_created_event = 5;
  }
}
// @section Campaign
message PublishCampaignEventResponse {
}
// @section Ad Experience
message PublishDemosConfigurationsForTenantRequest {
  required SecurityContext security_context = 1;
  required uint64 tenant_id = 2;
}
// @section Ad Experience
message PublishDemosConfigurationsForTenantResponse {
}
// @section Advertiser
message PublishEventAnonymouslyRequest {
  oneof event {
    InactivePixelDetectedEvent inactive_pixel_detected_event = 2;
  }
  reserved 1;
}
// @section Advertiser
message PublishEventAnonymouslyResponse {
}
// @section Creative
message PublishStudioCreativeEventRequest {
  required SecurityContext security_context = 1;
  required StudioCreativeChangedEvent studio_creative_changed_event = 2;
}
// @section Creative
message PublishStudioCreativeEventResponse {
}
// @section Finance
message PublisherDirectSalesDealIdBillableValidatedEvent {
  required int64 validator_profile_id = 1;
  required string billable_office_name = 2;
  required string billable_publisher_name = 3;
}
// @section Finance
message PublishersSnapshottedIntoRedshiftFinanceEvent {
  required google.protobuf.Timestamp snapshot_date = 1;
}
// @section Creatives Approval
message PurgeOldestCreativesApprobationRequest {
  required SecurityContext security_context = 1;
}
// @section Creatives Approval
message PurgeOldestCreativesApprobationResponse {
  required int32 purged_creatives_approval = 1;
}
// @section Account
message ReactivateApiTokenRequest {
  required SecurityContext security_context = 1;
  required int64 api_token_id = 2;
}
// @section Account
message ReactivateApiTokenResponse {
}
// @section Data Science
message ReactivateModelTrainingRequest {
  required SecurityContext security_context = 1;
  required TrainingSource training_source = 2;
  required string model_training_config_id = 3;
}
// @section Data Science
message ReactivateModelTrainingResponse {
}
// @section Campaign Delivery
message RefreshCampaignsDeliveryRulesAnonymouslyRequest {
  // Allows to reprocess rules from a specific date
  optional google.protobuf.Timestamp force_refresh_for_rules_updated_after = 1;
}
// @section Campaign Delivery
message RefreshCampaignsDeliveryRulesAnonymouslyResponse {
}
// @section Programmatic
message RefreshConnectionsDeliveryRulesAnonymouslyRequest {
  // Allows to reprocess rules from a specific date
  optional google.protobuf.Timestamp force_refresh_for_rules_updated_after = 1;
}
// @section Programmatic
message RefreshConnectionsDeliveryRulesAnonymouslyResponse {
}
// @section Users Data
message RefreshLineItemsAndConnectionsDataRevenuesAnonymouslyRequest {
}
// @section Users Data
message RefreshLineItemsAndConnectionsDataRevenuesAnonymouslyResponse {
}
// @section Inventory
message RefreshPacksAssociatedDomainsPlacementsAnonymouslyRequest {
}
// @section Inventory
message RefreshPacksAssociatedDomainsPlacementsAnonymouslyResponse {
}
// @section Inventory
message RefreshViewabilityExclusionPacksAnonymouslyRequest {
}
// @section Inventory
message RefreshViewabilityExclusionPacksAnonymouslyResponse {
}
// @section Ad Quality
message RegisterCreativeScanResultsForCreativeAnonymouslyRequest {
  oneof creative {
    TeadsHostedCreative teads_hosted_creative = 1;
    DspCreative dsp_creative = 2;
  }
  repeated string domains_called = 3;
  required int32 outgoing_requests_count = 4;
  // the size in bytes of the creative assets
  required int32 creative_assets_size = 5;
  // the height is measured in pixel
  required int32 effective_creative_height = 6;
  // the width is measured in pixel
  required int32 effective_creative_width = 7;
  optional AdQualityCreativeFormatSize effective_creative_format_size = 8;
  optional AdQualityCreativeFormatSize expected_creative_format_size = 9;
  required bool is_impression_event_emitted = 10;
  optional string advertiser_domain = 11;
  optional string saved_vast_url = 12;
  repeated CookieReport cookie_reports = 13;
  optional google.protobuf.Duration declared_creative_duration = 14;
  optional google.protobuf.Duration measured_creative_duration = 15;
  optional bool is_studio_creative = 16;
  optional AdQualityCreativeScanRegion scan_region = 17;
  optional Mediafile selected_mediafile = 18;
  repeated Mediafile supported_mediafiles = 19;
  optional bool has_expected_format_size = 20;
  optional int64 studio_creative_id = 21;
  optional AdQualityScanType scan_type = 22;
  optional string scan_version = 23;
  optional int32 device_type = 24;
  message CookieReport {
    required string name = 1;
    required string value = 2;
    required string domain = 3;
    optional string originated_domain = 4;
    oneof ttl {
      SessionCookie session_cookie = 5;
      PermanentCookie permanent_cookie = 6;
    }
  }
  message DspCreative {
    required string creative_id = 1;
    required string campaign_id = 2;
    required int64 connection_id = 3;
  }
  message Mediafile {
    required string media_type = 1;
    optional int32 bitrate = 2;
    required int32 width = 3;
    required int32 height = 4;
    optional string id = 5;
    optional AdQualityMediafileApiFramework api_framework = 6;
  }
  message PermanentCookie {
    required google.protobuf.Duration duration = 1;
  }
  message SessionCookie {
  }
  message TeadsHostedCreative {
    required int64 creative_id = 1;
    required int64 line_item_id = 2;
    required int64 campaign_id = 3;
  }
  enum AdQualityMediafileApiFramework {
    AD_QUALITY_MEDIAFILE_API_FRAMEWORK_VPAID = 0;
  }
  enum AdQualityScanType {
    AD_QUALITY_SCAN_TYPE_ON_DEMAND = 0;
    AD_QUALITY_SCAN_TYPE_PRIVACY = 1;
    AD_QUALITY_SCAN_TYPE_PROGRAMMATIC = 2;
    AD_QUALITY_SCAN_TYPE_TEADS_HOSTED = 3;
  }
}
// @section Ad Quality
message RegisterCreativeScanResultsForCreativeAnonymouslyResponse {
}
// @section Account
message RegisterSuccessfulAuthenticationForProfileAnonymouslyRequest {
  required int64 profile_id = 1;
}
// @section Account
message RegisterSuccessfulAuthenticationForProfileAnonymouslyResponse {
}
// @section Account
message RegisterSuccessfulPasswordMigrationToOktaForCustomerProfileAnonymouslyRequest {
  required int64 profile_id = 1;
}
// @section Account
message RegisterSuccessfulPasswordMigrationToOktaForCustomerProfileAnonymouslyResponse {
}
// @section Ad Quality
message RegisterUnderperformingCreativesFromDeliveryAnonymouslyRequest {
  optional int32 heavy_ad_interventions_over_impressions_percentage_threshold = 1 [default = 10];
  optional int32 impressions_count_threshold = 2 [default = 10];
  optional google.protobuf.Timestamp to = 3;
  optional google.protobuf.Duration duration = 4;
}
// @section Ad Quality
message RegisterUnderperformingCreativesFromDeliveryAnonymouslyResponse {
  required int32 underperforming_creatives_count = 1;
}
// @section Creatives Approval
message RejectCreativesForPublisherRequest {
  required SecurityContext security_context = 1;
  repeated RejectedCreative rejected_creatives = 2;
  message ConnectionId {
    required int64 value = 1;
  }
  message DspCampaignId {
    required string value = 1;
  }
  message DspCreativeId {
    required string value = 1;
  }
  message PublisherId {
    required int64 value = 1;
  }
  message RejectedCreative {
    required DspCampaignId campaign_id = 1;
    required DspCreativeId creative_id = 2;
    required ConnectionId connection_id = 3;
    required PublisherId publisher_id = 4;
    optional string reason = 5;
  }
}
// @section Creatives Approval
message RejectCreativesForPublisherResponse {
}
// @section Users Data
message RemoveBuyerPersonaRequest {
  required SecurityContext security_context = 1;
  required int64 persona_id = 2;
}
// @section Users Data
message RemoveBuyerPersonaResponse {
}
// @section Advertiser
message RemoveBuyerPixelRequest {
  required SecurityContext security_context = 1;
  required int64 buyer_pixel_id = 2;
}
// @section Advertiser
message RemoveBuyerPixelResponse {
}
// @section Users Data
message RemoveBuyerPlannedTargetingRequest {
  required SecurityContext security_context = 1;
  required int64 planned_targeting_id = 2;
}
// @section Users Data
message RemoveBuyerPlannedTargetingResponse {
}
// @section Users Data
message RemoveContextualSegmentRequest {
  required SecurityContext security_context = 1;
  required uint64 contextual_segment_id = 2;
}
// @section Users Data
message RemoveContextualSegmentResponse {
}
// @section Advertiser
message RemoveConversionAndAttachedUrlsForBuyerPixelRequest {
  required SecurityContext security_context = 1;
  required int64 buyer_pixel_id = 2;
  required int64 conversion_id = 3;
}
// @section Advertiser
message RemoveConversionAndAttachedUrlsForBuyerPixelResponse {
}
// @section Advertiser
message RemoveFirstPartySegmentFromWhitelistForSeatRequest {
  required SecurityContext security_context = 1;
  required AdvertiserFirstPartySegment segment = 2;
  required int64 entity_id = 3;
  message AdvertiserFirstPartySegment {
    required AdvertiserFirstPartySegmentProvider segment_provider = 1;
    required int64 provider_segment_id = 2;
  }
}
// @section Advertiser
message RemoveFirstPartySegmentFromWhitelistForSeatResponse {
}
// @section Users Data
message RemovePersonaRequest {
  required SecurityContext security_context = 1;
  required int64 persona_id = 2;
}
// @section Users Data
message RemovePersonaResponse {
}
// @section Advertiser
message RemoveUrlFromAdvertiserEventForBuyerPixelRequest {
  required SecurityContext security_context = 1;
  required int64 buyer_pixel_id = 2;
  required int64 url_mapping_id = 3;
}
// @section Advertiser
message RemoveUrlFromAdvertiserEventForBuyerPixelResponse {
}
// @section Users Data
message RemoveWeatherSegmentRequest {
  required SecurityContext security_context = 1;
  required int64 weather_segment_id = 2;
}
// @section Users Data
message RemoveWeatherSegmentResponse {
}
// @section Advertiser
message RenameAdvertiserRequest {
  required SecurityContext security_context = 1;
  required int64 advertiser_id = 2;
  required string advertiser_name = 3;
}
// @section Advertiser
message RenameAdvertiserResponse {
}
// @section Advertiser
message RenameAgencyRequest {
  required SecurityContext security_context = 1;
  required int64 agency_id = 2;
  required string agency_name = 3;
}
// @section Advertiser
message RenameAgencyResponse {
}
// @section Campaign Support
message ReopenCampaignSupportRequestRequest {
  required SecurityContext security_context = 1;
  required int64 support_request_id = 2;
  required string description = 3;
  required int64 profile_id = 4;
}
// @section Campaign Support
message ReopenCampaignSupportRequestResponse {
}
// @section Users Data
message ReprocessAudiencePerSegmentAndCountryMappingsAnonymouslyRequest {
  oneof audiences {
    AllAudiences all = 1;
    AudiencePublicIds public_ids = 2;
    Incremental incremental = 3;
  }
  message AllAudiences {
  }
  message AudiencePublicIds {
    repeated int64 ids = 1;
  }
  message Incremental {
  }
}
// @section Users Data
message ReprocessAudiencePerSegmentAndCountryMappingsAnonymouslyResponse {
}
// @section Campaign Visual Proof
message RequestScreenshotForCreativeRequest {
  required SecurityContext security_context = 1;
  required int64 requester_profile_id = 2;
  required int64 campaign_id = 3;
  required int64 creative_id = 4;
  required string website_url = 5;
  required CampaignVisualProofDevice device = 6;
}
// @section Campaign Visual Proof
message RequestScreenshotForCreativeResponse {
  required string request_tracking_uuid = 1;
  optional Failure with_immediate_failure = 2;
  message Failure {
    required int64 code = 1;
    required string message = 2;
  }
}
// @section Campaign
message RequestScreenshotsForPublisherDirectSalesLineItemRequest {
  required SecurityContext security_context = 1;
  required int64 line_item_id = 2;
  required int64 recipient_profile_id = 3;
}
// @section Campaign
message RequestScreenshotsForPublisherDirectSalesLineItemResponse {
}
// @section Inventory
message ResetAllVirtualCostRatiosForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Inventory
message ResetAllVirtualCostRatiosForPublisherResponse {
}
// @section Campaign Support
message ResetCampaignSupportRequestCustomProcessingDurationForEntityRequest {
  required SecurityContext security_context = 1;
  required int64 entity_id = 2;
  required int64 profile_id = 3;
}
// @section Campaign Support
message ResetCampaignSupportRequestCustomProcessingDurationForEntityResponse {
}
// @section Programmatic
message ResetMarginExceptionForConnectionRequest {
  required SecurityContext security_context = 1;
  required int64 connection_id = 2;
}
// @section Programmatic
message ResetMarginExceptionForConnectionResponse {
}
// @section Account
message RevokeAdminRoleForBuyerRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
  required int64 entity_id = 3;
}
// @section Account
message RevokeAdminRoleForBuyerResponse {
}
// @section Account
message RevokeAllPublisherTemporaryAccountsAnonymouslyRequest {
}
// @section Account
message RevokeAllPublisherTemporaryAccountsAnonymouslyResponse {
}
// @section Account
message RevokeApiTokenRequest {
  required SecurityContext security_context = 1;
  required int64 api_token_id = 2;
}
// @section Account
message RevokeApiTokenResponse {
}
// @section Advertiser
message RevokeBuyerPixelSharedWithBuyerRequest {
  required SecurityContext security_context = 1;
  required int64 buyer_pixel_id = 2;
  required int64 buyer_seat_id = 3;
}
// @section Advertiser
message RevokeBuyerPixelSharedWithBuyerResponse {
}
// @section Advertiser
message RevokeConversionApiTokenRequest {
  required SecurityContext security_context = 1;
  required int64 conversion_api_token_id = 2;
}
// @section Advertiser
message RevokeConversionApiTokenResponse {
}
// @section Account
message RevokeRolesForAccountRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
  // when empty, the profile is revoked from all entities and status is set to disabled
  optional int64 entity_id = 3;
  // when empty and entity is set, the profile is detached from the targeted entity and status remains untouched
  // when empty and entity is empty too, the profile is detached from all entities and status is set to deleted
  repeated string roles = 4;
}
// @section Account
message RevokeRolesForAccountResponse {
}
// @section Account
message RevokeTemporaryAccountsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
}
// @section Account
message RevokeTemporaryAccountsForPublisherResponse {
}
// @section Account
message RolesGrantedEvent {
  required AccountId account_id = 1;
  // "Publisher Self-Served", "Teads Innovation", "Innovation feature team Platform"
  repeated string roles = 4;
  // a reason describing why these roles were granted
  optional string reason = 5;
  message AccountId {
    required int64 profile_id = 1;
    required int64 entity_id = 2;
  }
}
// @section Account
message RolesRevokedEvent {
  required AccountId account_id = 1;
  // "Publisher Self-Served", "Teads Innovation", "Innovation feature team Platform"
  repeated string roles = 4;
  message AccountId {
    required int64 profile_id = 1;
    required int64 entity_id = 2;
  }
}
// @section Finance
message SalesforceOpportunityInsertedIntoRedshiftFinanceEvent {
  required google.protobuf.Timestamp date = 1;
}
// @section Finance
message SalesforceOpportunityLineItemInsertedIntoRedshiftFinanceEvent {
  required google.protobuf.Timestamp date = 1;
}
// @section Finance
message SalesforceSnapshottedIntoRedshiftFinanceEvent {
  required google.protobuf.Timestamp snapshot_date = 1;
}
// @section Campaign
message SaveBillingForBrandingCampaignError {
  repeated Error errors = 1;
  message BillableEventInvalid {
    required int64 line_item_id = 1;
    required BillableEvent billable_event = 2;
    required LineItemCategory line_item_category = 3;
  }
  message BillableEventLockedDuringDelivery {
    required int64 line_item_id = 1;
  }
  message BillingTypeLockedDuringDelivery {
    required int64 line_item_id = 1;
  }
  message CampaignNotEditable {
  }
  message CampaignNotFound {
  }
  message CampaignNotSelfServed {
  }
  message CampaignObjectiveMismatch {
  }
  message CompleteRateOptimizationIncompatibility {
    required int64 line_item_id = 1;
    required LineItemCategory line_item_category = 2;
  }
  message CostPerCompletedViewModelIncompatibility {
    required int64 line_item_id = 1;
    required LineItemCategory line_item_category = 2;
  }
  message CostPerViewModelIncompatibility {
    required int64 line_item_id = 1;
    required LineItemCategory line_item_category = 2;
  }
  message Error {
    oneof error_type {
      CampaignNotFound campaign_not_found = 1;
      CampaignObjectiveMismatch campaign_objective_mismatch = 2;
      CampaignNotSelfServed campaign_not_self_served = 3;
      CampaignNotEditable campaign_not_editable = 4;
      LineItemNotFound line_item_not_found = 5;
      LineItemCampaignMismatch line_item_campaign_mismatch = 6;
      LineItemNotEditable line_item_not_editable = 7;
      LineItemHasUnsupportedCategory line_item_has_unsupported_category = 8;
      CostPerCompletedViewModelIncompatibility cost_per_completed_view_model_incompatibility = 9;
      BillableEventInvalid billable_event_invalid = 10;
      CompleteRateOptimizationIncompatibility complete_rate_optimization_incompatibility = 11;
      BillableEventLockedDuringDelivery billable_event_locked_during_delivery = 12;
      BillingTypeLockedDuringDelivery billing_type_locked_during_delivery = 13;
      CostPerViewModelIncompatibility cost_per_view_model_incompatibility = 14;
    }
  }
  message LineItemCampaignMismatch {
    required int64 line_item_id = 1;
  }
  message LineItemHasUnsupportedCategory {
    required int64 line_item_id = 1;
    required LineItemCategory line_item_category = 2;
  }
  message LineItemNotEditable {
    required int64 line_item_id = 1;
  }
  message LineItemNotFound {
    required int64 line_item_id = 1;
  }
}
// @section Campaign
message SaveBillingForBrandingCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  repeated BillingForLineItem billing_for_line_items = 3;
  optional bool dry_run = 4 [default = false];
  message BillingForLineItem {
    required int64 line_item_id = 1;
    oneof model {
      CostPerMilleModel cost_per_mille_model = 2;
      ViewableCostPerMilleModel viewable_cost_per_mille_model = 3;
      CostPerCompletedViewModel cost_per_completed_view_model = 4;
      CostPerViewModel cost_per_view_model = 5;
    }
  }
  message CostPerCompletedViewModel {
    required double price_in_campaign_currency = 1;
    optional BillingType billing_type = 2 [default = BILLING_TYPE_FIXED];
    required BillableEvent billable_event = 3;
    optional double bid_recommendation_in_campaign_currency = 4;
    optional StartMode start_mode = 5;
  }
  message CostPerMilleModel {
    required double price_in_campaign_currency = 1;
    optional BillingType billing_type = 2 [default = BILLING_TYPE_FIXED];
    oneof optimization {
      RateOptimization complete_rate_optimization = 3;
      RateOptimization viewability_rate_optimization = 4;
      RateOptimization click_through_rate_optimization = 5;
    }
    optional double bid_recommendation_in_campaign_currency = 6;
    optional StartMode start_mode = 7;
    message RateOptimization {
      optional float threshold = 1;
    }
  }
  message CostPerViewModel {
    required double price_in_campaign_currency = 1;
    optional BillingType billing_type = 2 [default = BILLING_TYPE_FIXED];
    required BillableEvent billable_event = 3;
    optional double bid_recommendation_in_campaign_currency = 4;
  }
  message ViewableCostPerMilleModel {
    required double price_in_campaign_currency = 1;
    optional BillingType billing_type = 2 [default = BILLING_TYPE_FIXED];
    required BillableEvent billable_event = 3;
    optional double bid_recommendation_in_campaign_currency = 4;
  }
}
// @section Campaign
message SaveBillingForBrandingCampaignResponse {
}
// @section Campaign
message SaveBillingForConversionsCampaignError {
  repeated Error errors = 1;
  message BillableEventLockedDuringDelivery {
    required int64 line_item_id = 1;
  }
  message BillingTypeLockedDuringDelivery {
    required int64 line_item_id = 1;
  }
  message CampaignNotEditable {
  }
  message CampaignNotFound {
  }
  message CampaignNotSelfServed {
  }
  message CampaignObjectiveMismatch {
  }
  message Error {
    oneof error_type {
      CampaignNotFound campaign_not_found = 1;
      CampaignObjectiveMismatch campaign_objective_mismatch = 2;
      CampaignNotSelfServed campaign_not_self_served = 3;
      CampaignNotEditable campaign_not_editable = 4;
      LineItemNotFound line_item_not_found = 5;
      LineItemCampaignMismatch line_item_campaign_mismatch = 6;
      LineItemNotEditable line_item_not_editable = 7;
      OptimizationConversionNotFound optimization_conversion_not_found = 8;
      OptimizationConversionInvalid optimization_conversion_invalid = 9;
      IncompatibleFixedBillingType incompatible_fixed_billing_type = 12;
      BillableEventLockedDuringDelivery billable_event_locked_during_delivery = 13;
      BillingTypeLockedDuringDelivery billing_type_locked_during_delivery = 14;
      OptimizationVisitInvalid optimization_visit_invalid = 15;
    }
  }
  message IncompatibleFixedBillingType {
    required int64 line_item_id = 1;
  }
  message LineItemCampaignMismatch {
    required int64 line_item_id = 1;
  }
  message LineItemNotEditable {
    required int64 line_item_id = 1;
  }
  message LineItemNotFound {
    required int64 line_item_id = 1;
  }
  message OptimizationConversionInvalid {
    required int64 conversion_id = 1;
  }
  message OptimizationConversionNotFound {
    required int64 conversion_id = 1;
  }
  message OptimizationVisitInvalid {
    required int64 visit_id = 1;
  }
}
// @section Campaign
message SaveBillingForConversionsCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  repeated BillingForLineItem billing_for_line_items = 3;
  optional bool dry_run = 4 [default = false];
  message BillingForLineItem {
    required int64 line_item_id = 1;
    oneof model {
      CostPerMilleModel cost_per_mille_model = 2;
      CostPerClickModel cost_per_click_model = 3;
    }
  }
  message ConversionLookback {
    optional int32 click = 1;
    optional int32 view = 2;
  }
  message ConversionRateOptimization {
    required int64 conversion_id = 1;
    optional ConversionLookback lookback = 2;
    optional int64 visit_id = 3;
  }
  message CostPerActionOptimization {
    required int64 conversion_id = 1;
    required double target_in_campaign_currency = 2;
    optional ConversionLookback lookback = 3;
    optional int64 visit_id = 4;
  }
  message CostPerClickModel {
    required double price_in_campaign_currency = 1;
    optional bool only_one_billable_per_auction = 2 [default = false];
    optional BillingType billing_type = 3 [default = BILLING_TYPE_FIXED];
    oneof optimization {
      ConversionRateOptimization conversion_rate_optimization = 4;
      CostPerActionOptimization cost_per_action_optimization = 5;
    }
    reserved 6;
  }
  message CostPerMilleModel {
    required double price_in_campaign_currency = 1;
    optional BillingType billing_type = 2 [default = BILLING_TYPE_FIXED];
    oneof optimization {
      ConversionRateOptimization conversion_rate_optimization = 3;
      CostPerActionOptimization cost_per_action_optimization = 4;
    }
    reserved 5;
  }
}
// @section Campaign
message SaveBillingForConversionsCampaignResponse {
}
// @section Campaign
message SaveBillingForTrafficAcquisitionCampaignError {
  repeated Error errors = 1;
  message BillableEventLockedDuringDelivery {
    required int64 line_item_id = 1;
  }
  message BillingTypeLockedDuringDelivery {
    required int64 line_item_id = 1;
  }
  message CampaignNotEditable {
  }
  message CampaignNotFound {
  }
  message CampaignNotSelfServed {
  }
  message CampaignObjectiveMismatch {
  }
  message Error {
    oneof error_type {
      CampaignNotFound campaign_not_found = 1;
      CampaignObjectiveMismatch campaign_objective_mismatch = 2;
      CampaignNotSelfServed campaign_not_self_served = 3;
      CampaignNotEditable campaign_not_editable = 4;
      LineItemNotFound line_item_not_found = 5;
      LineItemCampaignMismatch line_item_campaign_mismatch = 6;
      LineItemNotEditable line_item_not_editable = 7;
      OptimizationVisitNotFound optimization_visit_not_found = 8;
      OptimizationVisitInvalid optimization_visit_invalid = 9;
      IncompatibleFixedBillingType incompatible_fixed_billing_type = 12;
      LineItemHasUnsupportedCategory line_item_has_unsupported_category = 13;
      BillableEventLockedDuringDelivery billable_event_locked_during_delivery = 14;
      BillingTypeLockedDuringDelivery billing_type_locked_during_delivery = 15;
    }
  }
  message IncompatibleFixedBillingType {
    required int64 line_item_id = 1;
  }
  message LineItemCampaignMismatch {
    required int64 line_item_id = 1;
  }
  message LineItemHasUnsupportedCategory {
    required int64 line_item_id = 1;
    required LineItemCategory line_item_category = 2;
  }
  message LineItemNotEditable {
    required int64 line_item_id = 1;
  }
  message LineItemNotFound {
    required int64 line_item_id = 1;
  }
  message OptimizationVisitInvalid {
    required int64 visit_id = 1;
  }
  message OptimizationVisitNotFound {
    required int64 visit_id = 1;
  }
}
// @section Campaign
message SaveBillingForTrafficAcquisitionCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  repeated BillingForLineItem billing_for_line_items = 3;
  optional bool dry_run = 4 [default = false];
  message BillingForLineItem {
    required int64 line_item_id = 1;
    oneof model {
      CostPerMilleModel cost_per_mille_model = 2;
      CostPerClickModel cost_per_click_model = 3;
    }
  }
  message BounceRateOptimization {
    required int64 visit_id = 1;
    required float threshold = 2;
    optional ConversionLookback lookback = 3;
  }
  message ClickThroughRateOptimization {
    required float threshold = 1;
    optional int64 visit_id = 2;
    optional ConversionLookback lookback = 3;
  }
  message ConversionLookback {
    optional int32 click = 1;
    optional int32 view = 2;
  }
  message CostPerClickModel {
    required double price_in_campaign_currency = 1;
    optional bool only_one_billable_per_auction = 2 [default = false];
    optional BillingType billing_type = 3 [default = BILLING_TYPE_FIXED];
    oneof optimization {
      QualifiedVisitsOptimization qualified_visits_optimization = 5;
      MinimizeCostPerClickOptimization minimize_cost_per_click_optimization = 6;
      CostPerVisitOptimization cost_per_visit_optimization = 7;
      BounceRateOptimization bounce_rate_optimization = 8;
    }
    optional StartMode start_mode = 9;
    reserved 4;
  }
  message CostPerMilleModel {
    required double price_in_campaign_currency = 1;
    optional BillingType billing_type = 2 [default = BILLING_TYPE_FIXED];
    oneof optimization {
      QualifiedVisitsOptimization qualified_visits_optimization = 4;
      ClickThroughRateOptimization click_through_rate_optimization = 5;
      CostPerVisitOptimization cost_per_visit_optimization = 6;
      BounceRateOptimization bounce_rate_optimization = 7;
      MinimizeCostPerClickOptimization minimize_cost_per_click_optimization = 8; // TODO deprecated, reserve this field once clients are up to date
    }
    optional StartMode start_mode = 9;
    reserved 3;
  }
  message CostPerVisitOptimization {
    required int64 visit_id = 1;
    required double target_in_campaign_currency = 2;
    optional ConversionLookback lookback = 3;
  }
  message MinimizeCostPerClickOptimization {
    optional int64 visit_id = 1;
    optional ConversionLookback lookback = 2;
  }
  message QualifiedVisitsOptimization {
    required int64 visit_id = 1;
    optional ConversionLookback lookback = 2;
  }
}
// @section Campaign
message SaveBillingForTrafficAcquisitionCampaignResponse {
}
// @section Campaign Delivery
message SaveBuyingEngineCacheVersionForAuditAnonymouslyRequest {
  // If true, save the cache into `teads-sandbox-146410.teads_buying_engine.caches_audit_log` temporary table
  optional bool dry_run = 1 [default = false];
  // The S3 URI of the BE Cache Version file to save for audit (production cache URIs only)
  // eg. s3://teads-hadoop/buying-engine/caches/insertions-cache/4971a1b0-df31-4136-9dab-199a11d03384
  required string s3_uri = 2;
}
// @section Campaign Delivery
message SaveBuyingEngineCacheVersionForAuditAnonymouslyResponse {
}
// @section Users Data
message SaveCookielessCustomAudienceSeedCompositionAnonymouslyRequest {
  // seed ID is created from audience-planning and is a UUID
  required string seed_composition_id = 1;
  repeated SeedSegment seed_composition_segments = 2;
  message SeedSegment {
    required CookielessCustomAudienceSeedCompositionCriterion criterion = 1;
    required int64 id = 2;
    required float price = 3;
    // (number of auctions from segment)/(total number of auctions from custom audience)
    required float reach_ratio = 4;
  }
}
// @section Users Data
message SaveCookielessCustomAudienceSeedCompositionAnonymouslyResponse {
}
// @section Account
message SaveImpersonationReasonForAccountRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
  required int64 entity_id = 3;
  required string reason = 4;
}
// @section Account
message SaveImpersonationReasonForAccountResponse {
}
// @section Campaign
message SaveLineItemsForCampaignError {
  repeated Error errors = 1;
  message BudgetIsRequired {
  }
  message BudgetNotRequired {
    required double budget = 1;
  }
  message BudgetPeriodIsRequired {
  }
  message BudgetPeriodNotRequired {
    required LineItemBudgetPeriod budget_period = 1;
  }
  message BudgetPeriodNotSupported {
    required LineItemBudgetPeriod budget_period = 1;
  }
  message CampaignNotEditable {
  }
  message CampaignNotFound {
  }
  message CampaignNotSelfServed {
  }
  message EndDateNotWithinCampaignDuration {
    required google.protobuf.Timestamp end_date = 1;
    required google.protobuf.Timestamp campaign_start_date = 2;
    required google.protobuf.Timestamp campaign_end_date = 3;
  }
  message Error {
    oneof error_type {
      CampaignNotFound campaign_not_found = 1;
      InsertionOrderNotFound insertion_order_not_found = 2;
      CampaignNotSelfServed campaign_not_self_served = 3;
      CampaignNotEditable campaign_not_editable = 4;
      TimezoneNotEditable timezone_not_editable = 5;
      StartDateNotEditable start_date_not_editable = 6;
      BudgetIsRequired budget_is_required = 7;
      InvalidDates invalid_dates = 8;
      InvalidStartDate invalid_start_date = 9;
      StartDateNotWithinCampaignDuration start_date_not_within_campaign_duration = 10;
      EndDateNotWithinCampaignDuration end_date_not_within_campaign_duration = 11;
      BudgetPeriodIsRequired budget_period_is_required = 12;
      PacingIsRequired pacing_is_required = 13;
      LineItemNotEditable line_item_not_editable = 15;
      BudgetPeriodNotSupported budget_period_not_supported = 16;
      BudgetNotRequired budget_not_required = 17;
      BudgetPeriodNotRequired budget_period_not_required = 18;
      PacingNotRequired pacing_not_required = 19;
      LineItemNotFound line_item_not_found = 20;
    }
    reserved 14;
  }
  message InsertionOrderNotFound {
  }
  message InvalidDates {
    required google.protobuf.Timestamp start_date = 1;
    required google.protobuf.Timestamp end_date = 2;
  }
  message InvalidStartDate {
  }
  message LineItemNotEditable {
    required int64 line_item_id = 1;
  }
  message LineItemNotFound {
    required int64 line_item_id = 1;
  }
  message PacingIsRequired {
  }
  message PacingNotRequired {
    required LineItemPacing pacing = 1;
  }
  message StartDateNotEditable {
    required google.protobuf.Timestamp existing_start_date = 1;
    required google.protobuf.Timestamp new_start_date = 2;
    required bool line_has_delivered = 3;
  }
  message StartDateNotWithinCampaignDuration {
    required google.protobuf.Timestamp start_date = 1;
    required google.protobuf.Timestamp campaign_start_date = 2;
    required google.protobuf.Timestamp campaign_end_date = 3;
  }
  message TimezoneNotEditable {
    required string existing_timezone = 1;
    required string new_timezone = 2;
  }
}
// @section Campaign
message SaveLineItemsForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  repeated LineItem line_items = 3;
  optional bool dry_run = 4 [default = false];
  message FlightDuration {
    required string timezone = 1;
    required google.protobuf.Timestamp start_date = 2;
    required google.protobuf.Timestamp end_date = 3;
  }
  message FrequencyCapping {
    required uint32 amount = 1;
    required LineItemFrequencyCappingEvent event = 2;
    required LineItemFrequencyCappingPeriod period = 3;
  }
  message LineItem {
    oneof line_item {
      NewLineItem new_line_item = 1;
      UpdateLineItem update_line_item = 2;
    }
  }
  message NewLineItem {
    required string name = 1;
    // The period is not set when the campaign uses dynamic budget allocation
    optional LineItemBudgetPeriod budget_period = 2;
    // The budget is not set when the campaign uses dynamic budget allocation
    optional double budget = 3;
    required FlightDuration flight_duration = 4;
    optional FrequencyCapping capping = 5;
    // The pacing is not set when the campaign uses dynamic budget allocation
    optional LineItemPacing pacing = 6;
    required WeekSchedule schedule = 7;
    optional LineItemPlatformType line_item_type = 8 [default = LINE_ITEM_PLATFORM_TYPE_WEB_INAPP];
  }
  message UpdateLineItem {
    required int64 line_item_id = 1;
    required string name = 2;
    // The period is not set when the campaign uses dynamic budget allocation
    optional LineItemBudgetPeriod budget_period = 3;
    // The budget is not set when the campaign uses dynamic budget allocation
    optional double budget = 4;
    required FlightDuration flight_duration = 5;
    optional FrequencyCapping capping = 6;
    // The pacing is not set when the campaign uses dynamic budget allocation
    optional LineItemPacing pacing = 7;
    required WeekSchedule schedule = 8;
    required bool active = 9;
  }
  message WeekSchedule {
    required DaySchedule monday = 1;
    required DaySchedule tuesday = 2;
    required DaySchedule wednesday = 3;
    required DaySchedule thursday = 4;
    required DaySchedule friday = 5;
    required DaySchedule saturday = 6;
    required DaySchedule sunday = 7;
    message DaySchedule {
      repeated int32 hours = 1;
    }
  }
}
// @section Campaign
message SaveLineItemsForCampaignResponse {
}
// @section Campaign
message SaveTargetingForCampaignError {
  repeated Error errors = 1;
  message CampaignNotEditable {
  }
  message CampaignNotFound {
  }
  message CampaignNotSelfServed {
  }
  message CannotAssignAdvertiserFirstPartyDataSegmentsWhereAdvertiserIdUnknown {
  }
  message CannotAssignLookalikeSegmentsWhereAdvertiserIdUnknown {
  }
  message CannotAssignRemarketingSegmentsWhereAdvertiserIdUnknown {
  }
  message CustomTargetingRuleNotFound {
    required int64 line_item_id = 1;
    required int64 rule_id = 2;
  }
  message Error {
    oneof error_type {
      CampaignNotFound campaign_not_found = 1;
      CampaignNotSelfServed campaign_not_self_served = 2;
      CampaignNotEditable campaign_not_editable = 3;
      LineItemNotFound line_item_not_found = 4;
      LineItemCampaignMismatch line_item_campaign_mismatch = 5;
      LineItemNotEditable line_item_not_editable = 6;
      CustomTargetingRuleNotFound custom_targeting_rule_not_found = 7;
      RemarketingSegmentsNotAllowed remarketing_segments_not_allowed = 8;
      CannotAssignRemarketingSegmentsWhereAdvertiserIdUnknown cannot_assign_remarketing_segments_where_advertiser_id_unknown = 9;
      SharedSegmentNotAvailable shared_segment_not_available = 10;
      CannotAssignAdvertiserFirstPartyDataSegmentsWhereAdvertiserIdUnknown cannot_assign_advertiser_first_party_data_segments_where_advertiser_id_unknown = 11;
      WhitelistedSegmentNotAvailable whitelisted_segment_not_available = 12;
      LookalikeSegmentsNotAllowed lookalike_segments_not_allowed = 13;
      CannotAssignLookalikeSegmentsWhereAdvertiserIdUnknown cannot_assign_lookalike_segments_where_advertiser_id_unknown = 14;
    }
  }
  message LineItemCampaignMismatch {
    required int64 line_item_id = 1;
  }
  message LineItemNotEditable {
    required int64 line_item_id = 1;
  }
  message LineItemNotFound {
    required int64 line_item_id = 1;
  }
  message LookalikeSegmentsNotAllowed {
  }
  message RemarketingSegmentsNotAllowed {
  }
  message SharedSegmentNotAvailable {
    required int64 segment_id = 1;
  }
  message WhitelistedSegmentNotAvailable {
    required string segment_id = 1;
  }
}
// @section Campaign
message SaveTargetingForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  repeated TargetingForLineItem targeting_for_line_items = 3;
  optional bool dry_run = 4 [default = false];
  message CustomTargeting {
    required int64 custom_rule_id = 1;
  }
  message StandardTargeting {
    required AudienceTargeting audience_targeting = 1;
    required InventoryTargeting inventory_targeting = 2;
    required TechnologyTargeting technology_targeting = 3;
    optional bool is_cookieless = 4 [default = false];
    message AudienceTargeting {
      map<string, Relation> locations_relation_by_codes = 1;
      required TeadsAudienceTargeting teads_audience_targeting = 2;
      repeated int64 custom_audiences_ids = 3;
      map<string, Relation> first_party_audiences_relation_by_ids = 4;
      map<string, Relation> languages_relation_by_codes = 5;
      map<int64, Relation> retargeting_pixels_relation_by_ids = 6;
      map<int64, Relation> content_languages_relation_by_ids = 7;
      map<int64, Relation> remarketing_segments_relation_by_ids = 8;
      map<int64, Relation> lookalike_segments_relation_by_ids = 9;
      message TeadsAudienceTargeting {
        repeated int64 genders_ids = 1;
        repeated int64 ages_ids = 2;
        map<int64, Membership> audiences_membership_by_ids = 3;
        // this accuracy level is applied to demographic audiences only (ages & genders)
        optional TargetingDemographicAudiencesAccuracyLevel demographic_audiences_accuracy_level = 4;
        enum Membership {
          MEMBERSHIP_INCLUDED = 0;
          MEMBERSHIP_NARROWED = 1;
          MEMBERSHIP_INCLUDED_AND_NARROWED = 2;
          MEMBERSHIP_EXCLUDED = 3;
        }
      }
    }
    message InventoryTargeting {
      map<int64, Relation> teads_contextual_relation_by_ids = 1;
      oneof brand_safety {
        int32 teads = 2;
        int32 integral_ad_science = 3;
        int32 grapeshot = 4;
        int32 double_verify = 9;
      }
      required WebsiteTargeting website_targeting = 5;
      map<int64, Relation> packs_relation_by_ids = 6;
      map<string, Relation> apps_relation_by_ids = 7;
      optional BrandSuitability brand_suitability = 8;
      map<string, Relation> domains_relation_by_ids = 10;
      message BrandSuitability {
        repeated int64 integral_ad_science_ids = 3;
        repeated string grapeshot_ids = 4;
        repeated int64 double_verify_ids = 5;
        reserved 1, 2;
      }
      message WebsiteTargeting {
        map<int64, Relation> websites_relation_by_ids = 1;
        map<string, Relation> categories_relation_by_codes = 2;
        optional Tiers tiers = 3;
        enum Tiers {
          TIERS_PREMIER = 0;
          TIERS_SELECT = 1;
          TIERS_REACH = 2;
        }
      }
    }
    message TechnologyTargeting {
      map<int64, Relation> device_types_relation_by_ids = 1;
      required MobileDeviceTargeting mobile_device_targeting = 2;
      map<string, Relation> operating_systems_relation_by_names = 3;
      map<string, Relation> browsers_relation_by_names = 4;
      map<string, Relation> connection_types_relation_by_names = 5;
      map<string, Relation> isps_relation_by_names = 6;
      map<string, Relation> platform_environment_relation_by_names = 7;
      message MobileDeviceTargeting {
        map<string, Relation> carriers_relation_by_names = 1;
        map<string, Relation> models_relation_by_names = 2;
        map<string, Relation> brands_relation_by_names = 3;
        map<string, Relation> categories_relation_by_names = 4;
        map<string, Relation> years_relation_by_names = 5;
      }
    }
    enum Relation {
      RELATION_INCLUDED = 0;
      RELATION_EXCLUDED = 1;
    }
  }
  message TargetingForLineItem {
    required int64 line_item_id = 1;
    oneof targeting {
      StandardTargeting standard_targeting = 2;
      CustomTargeting custom_targeting = 3;
    }
  }
}
// @section Campaign
message SaveTargetingForCampaignResponse {
}
// @section Finance
message ScheduleFinanceDatamartReprocessRequest {
  required SecurityContext security_context = 1;
  required int64 template_id = 2;
  required google.protobuf.Timestamp start_date = 3; // Must be at beginning of hour (0 minute and 0 second)
  required google.protobuf.Timestamp end_date = 4; // Must be at the end of hour (59 minutes and 59 seconds)
}
// @section Finance
message ScheduleFinanceDatamartReprocessResponse {
}
// @section Ad Quality
message ScheduleScanningProcessForCreativeError {
  repeated Error errors = 1;
  message ConflictingSetup {
    required string reason = 1;
    required int64 creative_id = 2;
    required int64 line_item_id = 3;
    required int64 campaign_id = 4;
  }
  message Error {
    oneof error_type {
      InconsistentSetup inconsistent_setup = 1;
      ConflictingSetup conflicting_setup = 2;
    }
  }
  message InconsistentSetup {
    required string reason = 1;
    required int64 creative_id = 2;
    required int64 line_item_id = 3;
    required int64 campaign_id = 4;
  }
}
// @section Ad Quality
message ScheduleScanningProcessForCreativeRequest {
  required SecurityContext security_context = 1;
  oneof creative {
    TeadsHostedCreative teads_hosted_creative = 2;
    DspCreative dsp_creative = 3;
  }
  required AdQualityCreativeScanRegion region = 4;
  message DspCreative {
    required string creative_id = 1;
    required string campaign_id = 2;
    required int64 connection_id = 3;
  }
  message TeadsHostedCreative {
    required int64 creative_id = 1;
    required int64 line_item_id = 2;
    required int64 campaign_id = 3;
  }
}
// @section Ad Quality
message ScheduleScanningProcessForCreativeResponse {
}
// @section Account
message SearchAccountsToImpersonateRequest {
  required SecurityContext security_context = 1;
  // Search can match with entity name, entity id, profile id and profile name
  // As we don't have pagination the search field must have at least 3 characters
  required string search = 2;
}
// @section Account
message SearchAccountsToImpersonateResponse {
  repeated Account accounts = 1;
  message Account {
    required AccountId account_id = 1;
    required string entity_name = 2;
    required string profile_first_name = 3;
    required string profile_last_name = 4;
  }
  message AccountId {
    required int64 profile_id = 1;
    required int64 entity_id = 2;
  }
}
// @section Inventory
message SearchActivePacksForBuyerRequest {
  required SecurityContext security_context = 1;
  required int64 buyer_id = 2;
  required bool pack_include_app = 3;
  required bool pack_include_placement = 4;
  required bool pack_include_site = 5;
  required string search = 6;
  // The page number is set to 0 if not specified
  // The page size is set to 10 if not specified
  required Page page = 7;
  repeated int64 pack_ids = 8;
  optional SortingKey sorting_key = 9;
  optional SortingDirection sorting_direction = 10;
  optional bool pack_include_ctv_app = 11;
  optional bool pack_include_mobile_app = 12;
  enum SortingDirection {
    SORTING_DIRECTION_DESCENDING = 1;
    SORTING_DIRECTION_ASCENDING = 2;
  }
  enum SortingKey {
    SORTING_KEY_ID = 1;
    SORTING_KEY_NAME = 2;
    SORTING_KEY_CREATED_AT = 3;
  }
}
// @section Inventory
message SearchActivePacksForBuyerResponse {
  repeated PackInfo packs = 1;
  required int32 total = 2;
  message PackInfo {
    required int64 id = 1;
    required string name = 2;
    repeated Target targeted_apps = 3;
    repeated Target targeted_sites = 5;
    optional google.protobuf.Timestamp created_at = 6;
    optional google.protobuf.Timestamp updated_at = 7;
    message Target {
      required int64 id = 1;
      required string name = 2;
    }
    reserved 4;
  }
}
// @section Ad Quality
message SearchAdQualityOverviewRequest {
  required SecurityContext security_context = 1;
  repeated Reference references = 2;
  message Reference {
    oneof reference_id {
      int64 campaign_id = 1;
      int64 line_item_id = 2;
      int64 creative_id = 3;
    }
  }
}
// @section Ad Quality
message SearchAdQualityOverviewResponse {
  // List of overviews corresponding to the provided references.
  repeated Overview overviews = 1;
  message AnalysisAspect {
    oneof aspect {
      HeavyAdNetwork heavy_ad_network = 1;
      HeavyAdCpu heavy_ad_cpu = 2;
      FormatSize format_size = 3;
      ImpressionTracking impression_tracking = 4;
      OutboundCommunication outbound_communication = 5;
    }
  }
  message FormatSize {
    required bool is_compliant = 1;
  }
  message HeavyAdCpu {
    required bool is_compliant_according_to_delivery = 1;
  }
  message HeavyAdNetwork {
    required bool is_compliant = 1;
    required bool is_compliant_according_to_delivery = 2;
  }
  message ImpressionTracking {
    required bool is_compliant = 1;
  }
  message OutboundCommunication {
    required bool is_compliant = 1;
  }
  message Overview {
    required Reference reference = 1;
    repeated AnalysisAspect aspects = 2;
  }
  message Reference {
    oneof reference_id {
      int64 campaign_id = 1;
      int64 line_item_id = 2;
      int64 creative_id = 3;
    }
  }
}
// @section Users Data
message SearchAdvertiserFirstPartySegmentsRequest {
  required SecurityContext security_context = 1;
  optional string search = 2;
  required Page page = 3;
  optional int64 advertiser_id = 4;
}
// @section Users Data
message SearchAdvertiserFirstPartySegmentsResponse {
  repeated AdvertiserFirstPartySegment segments = 1;
  required int32 total = 2;
  message AdvertiserFirstPartySegment {
    required int64 provider_segment_id = 1;
    required string segment_label = 2;
    required string segment_provider = 3;
    optional int64 advertiser_id = 4;
  }
}
// @section Advertiser
message SearchAdvertisersForSeatManagementRequest {
  required SecurityContext security_context = 1;
  required int64 office_id = 2;
  optional string search = 3;
  // The page number is set to 0 if not specified
  // The page size is set to 100 if not specified
  required Page page = 4;
}
// @section Advertiser
message SearchAdvertisersForSeatManagementResponse {
  repeated AdvertiserForSeatManagementInfo advertisers = 1;
  message AdvertiserForSeatManagementInfo {
    required int64 advertiser_id = 1;
    required string salesforce_id = 2;
    required string name = 3;
    optional string description = 4;
    required bool has_buyer_seat = 5;
  }
}
// @section Advertiser
message SearchAdvertisersInTrackingBlocklistRequest {
  required SecurityContext security_context = 1;
  optional TrackingBlocklistStatus status = 3; // unset means no filter
  reserved 2;
}
// @section Advertiser
message SearchAdvertisersInTrackingBlocklistResponse {
  repeated Advertiser advertisers = 1;
  message Advertiser {
    oneof source {
      int64 advertiser_id = 1;
      int64 buyer_seat_id = 2;
      int64 buyer_pixel_id = 3;
      string domain = 4;
    }
    required string comment = 5;
    required TrackingBlocklistStatus status = 7;
    required google.protobuf.Timestamp created_at = 10;
    required google.protobuf.Timestamp updated_at = 11;
    optional string url_checked = 12;
    reserved 6;
  }
}
// @section Advertiser
message SearchAdvertisersRequest {
  required SecurityContext security_context = 1;
  optional Page page = 2;
  optional string name = 4;
  optional AdvertiserIds advertiser_ids = 5;
  message AdvertiserIds {
    repeated int64 advertiser_ids = 3;
  }
}
// @section Advertiser
message SearchAdvertisersResponse {
  optional Pagination page = 1;
  repeated Advertiser advertisers = 2;
  message Advertiser {
    required int64 advertiser_id = 1;
    required string name = 2;
    required google.protobuf.Timestamp created_at = 3;
    optional google.protobuf.Timestamp updated_at = 4;
    required AdvertiserStatus status = 5;
    optional string description = 6;
    required int64 category_id = 7;
    optional int64 entity_id = 8;
    optional int64 parent_id = 9;
  }
  enum AdvertiserStatus {
    ADVERTISER_STATUS_ENABLED = 1;
    ADVERTISER_STATUS_DISABLED = 2;
    ADVERTISER_STATUS_DELETED = 3;
  }
}
// @section Advertiser
message SearchAgenciesForSeatManagementRequest {
  required SecurityContext security_context = 1;
  repeated int64 office_ids = 2;
  optional string search = 3;
  // The page number is set to 0 if not specified
  // The page size is set to 100 if not specified
  required Page page = 4;
}
// @section Advertiser
message SearchAgenciesForSeatManagementResponse {
  repeated AgencyForSeatManagementInfo agencies = 1;
  message AgencyForSeatManagementInfo {
    required int64 agency_id = 1;
    required string salesforce_id = 2;
    required string name = 3;
    optional string description = 4;
    repeated int64 offices_with_buyer_seat = 5;
    required int64 office_id = 6;
  }
}
// @section Users Data
message SearchAllBuyerCustomAudiencesRequest {
  required SecurityContext security_context = 1;
  required Page page = 2;
  optional Sort sort = 3;
  optional bool includes_cookieless = 4 [default = false];
  // All filters options are combined as AND filters, they must all match to return the concerned custom audiences
  optional string search = 5;
  optional int64 advertiser_id = 6;
  optional int64 entity_id = 7;
  optional int64 profile_id = 8;
  optional UsersDataEnvironmentChannel channel = 9;
  message Sort {
    required SortField field = 1;
    required SortDirection direction = 2;
  }
  enum SortDirection {
    SORT_DIRECTION_ASC = 1;
    SORT_DIRECTION_DESC = 2;
  }
  enum SortField {
    SORT_FIELD_ID = 1;
    SORT_FIELD_NAME = 2;
    SORT_FIELD_CREATED_AT = 3;
  }
}
// @section Users Data
message SearchAllBuyerCustomAudiencesResponse {
  repeated CustomAudience custom_audiences = 1;
  required int32 total = 2;
  message CustomAudience {
    required int64 id = 1;
    required string name = 2;
    required PersonaStatus status = 3;
    required google.protobuf.Timestamp created_at = 4;
    required google.protobuf.Timestamp updated_at = 5;
    required bool is_cookieless = 6;
    optional UsersDataEnvironmentChannel channel = 7;
    optional BuyerEntity buyer_entity = 8;
    message BuyerEntity {
      required int64 id = 1;
      required string name = 2;
    }
  }
}
// @section Inventory
message SearchAppBundleIdsByAppNameRequest {
  required SecurityContext security_context = 1;
  required Page page = 2;
  optional string search_by_app_name = 3;
  repeated string app_bundle_ids = 4;
  optional AppType app_type = 5;
}
// @section Inventory
message SearchAppBundleIdsByAppNameResponse {
  repeated App apps = 1;
  required int32 total = 2;
  message App {
    required string name = 1;
    required AppType type = 2;
    repeated string bundle_ids = 3;
  }
}
// @section Inventory
message SearchAppsRequest {
  required SecurityContext security_context = 1;
  required Page page = 2;
  optional string search_by_app_name = 3;
  repeated string app_bundle_ids = 4;
  optional bool is_ctv = 5;
  optional bool is_mobile = 6;
}
// @section Inventory
message SearchAppsResponse {
  repeated App apps = 1;
  required int32 total = 2;
  message App {
    required int64 id = 1;
    optional string name = 2;
    required string store_bundle_id = 3;
    required AppPlatform platform = 4;
    optional bool is_mobile = 5 [default = false];
    optional bool is_ctv = 6 [default = false];
  }
}
// @section Audience Custom
message SearchAudienceCustomVerticalsRequest {
  required SecurityContext security_context = 1;
  optional AudienceCustomStatus status = 2;
}
// @section Audience Custom
message SearchAudienceCustomVerticalsResponse {
  repeated Vertical verticals = 1;
  message Vertical {
    required int64 id = 1;
    required string name = 2;
    required AudienceCustomStatus status = 3;
  }
}
// @section Advertiser
// Filters are combined by the AND operator (source, from and to)
message SearchAuditEntriesForTrackingBlocklistRequest {
  required SecurityContext security_context = 1;
  oneof source {
    // empty means no filter
    int64 advertiser_id = 3; // exact match
    int64 buyer_seat_id = 4; // exact match
    int64 buyer_pixel_id = 5; // exact match
    string domain = 6; // filter in all audit entries matching the domain and sub-domains
  }
  // default is value of "to" minus 30 days if "to" exists, minimum value is "2023-08-22"
  optional google.protobuf.Timestamp from = 7;
  optional google.protobuf.Timestamp to = 8;
  optional Page page = 9; // default size to 100
  optional Sort sort = 10; // default by decreasing updated date
  message Sort {
    optional SortCriterion criterion = 1 [default = SORT_CRITERION_UPDATED_AT];
    optional SortDirection direction = 2 [default = SORT_DIRECTION_DESC];
  }
  enum SortCriterion {
    SORT_CRITERION_UPDATED_AT = 5;
  }
  enum SortDirection {
    SORT_DIRECTION_ASC = 1;
    SORT_DIRECTION_DESC = 2;
  }
  reserved 2;
}
// @section Advertiser
message SearchAuditEntriesForTrackingBlocklistResponse {
  repeated AuditEntry audit_entries = 1;
  required int64 total_audit_entries = 2;
  message Account {
    required int64 profile_id = 1;
    required int64 entity_id = 2;
    optional string firstname = 3;
    optional string lastname = 4;
    optional string email = 5;
  }
  message AuditEntry {
    required Account updated_by = 1;
    required google.protobuf.Timestamp updated_at = 2;
    oneof source {
      int64 advertiser_id = 3;
      int64 buyer_seat_id = 4;
      int64 buyer_pixel_id = 5;
      string domain = 6;
    }
    required string comment = 7;
    required TrackingBlocklistStatus status = 9;
    reserved 8;
  }
}
// @section Traffic
message SearchBlacklistedDomainsRequest {
  required SecurityContext security_context = 1;
  required string search = 2;
  optional BlacklistedDomainStatus status = 3;
  required Page page = 4;
}
// @section Traffic
message SearchBlacklistedDomainsResponse {
  repeated BlacklistedDomain blacklisted_domains = 1;
  message BlacklistedDomain {
    required int64 id = 1;
    required string domain = 2;
    required string provider = 3;
    required google.protobuf.Timestamp created_at = 4;
    required BlacklistedDomainStatus status = 5;
  }
}
// @section Traffic
message SearchBlacklistedIPsRequest {
  required SecurityContext security_context = 1;
  optional string ip = 2;
  // The page index is set to 0 if not specified
  // The page size is set to 100 if not specified
  required Page page = 3;
}
// @section Traffic
message SearchBlacklistedIPsResponse {
  repeated BlacklistedIP blacklisted_ips = 1;
  message BlacklistedIP {
    required string ip_hash = 1;
    required google.protobuf.Timestamp created_at = 2;
    required google.protobuf.Timestamp updated_at = 3;
    oneof origin {
      ManualOrigin manual = 4;
      AutomaticOrigin automatic = 5;
    }
    message AutomaticOrigin {
      optional string reason = 1;
    }
    message ManualOrigin {
    }
  }
}
// @section Account
message SearchBuyerAccountsRequest {
  required SecurityContext security_context = 1;
  required int64 buyer_entity_id = 2;
  required Page page = 3;
  optional string filter = 4;
}
// @section Account
message SearchBuyerAccountsResponse {
  repeated BuyerAccount buyer_accounts = 1;
  required Pagination pagination = 2;
  message BuyerAccount {
    required int64 profile_id = 1;
    required string email = 2;
    optional string firstname = 3;
    optional string lastname = 4;
    // must contain only buyer roles of the account (ie buying-interface roles only)
    repeated string buyer_roles = 5;
  }
}
// @section Users Data
message SearchBuyerPersonasRequest {
  required SecurityContext security_context = 1;
  required int64 entity_id = 2;
  optional string search = 3;
  required Page page = 4;
  // If no sorting is explicitly defined, the results will be sorted by decreasing creation date
  optional Sort sort = 5;
  optional bool includes_cookieless = 6 [default = false];
  optional AudienceChannel channel = 7 [default = AUDIENCE_CHANNEL_WEB];
  message Sort {
    required SortField field = 1;
    required SortDirection direction = 2;
  }
  enum SortDirection {
    SORT_DIRECTION_ASC = 1;
    SORT_DIRECTION_DESC = 2;
  }
  enum SortField {
    SORT_FIELD_ID = 1;
    SORT_FIELD_NAME = 2;
    SORT_FIELD_CREATED_AT = 3;
  }
}
// @section Users Data
message SearchBuyerPersonasResponse {
  repeated Persona personas = 1;
  required int32 total = 2;
  message Persona {
    required int64 persona_id = 1;
    required string name = 2;
    required PersonaStatus status = 3;
    required google.protobuf.Timestamp created_at = 4;
    required google.protobuf.Timestamp updated_at = 5;
    optional bool is_cookieless = 6;
    optional string tbl_rule = 7;
    optional AudienceChannel channel = 8;
  }
}
// @section Users Data
message SearchBuyerPlannedTargetingsRequest {
  required SecurityContext security_context = 1;
  required int64 entity_id = 2;
  optional string search = 3;
  required Page page = 4;
  // If no sorting is explicitly defined, the results will be sorted by decreasing creation date
  optional Sort sort = 5;
  optional UsersDataEnvironmentChannel channel = 6 [default = USERS_DATA_ENVIRONMENT_CHANNEL_WEB];
  message Sort {
    required SortField field = 1;
    required SortDirection direction = 2;
  }
  enum SortDirection {
    SORT_DIRECTION_ASC = 1;
    SORT_DIRECTION_DESC = 2;
  }
  enum SortField {
    SORT_FIELD_ID = 1;
    SORT_FIELD_NAME = 2;
    SORT_FIELD_CREATED_AT = 3;
  }
}
// @section Users Data
message SearchBuyerPlannedTargetingsResponse {
  repeated PlannedTargeting planned_targetings = 1;
  required int32 total = 2;
  message PlannedTargeting {
    required int64 id = 1;
    required string name = 2;
    required bool is_cookieless = 3;
    optional int64 ad_opportunities = 4;
    optional int64 teads_ids = 5;
    required google.protobuf.Timestamp created_at = 6;
    required google.protobuf.Timestamp updated_at = 7;
    optional UsersDataEnvironmentChannel channel = 8;
  }
}
// @section Advertiser
message SearchBuyerSeatsRequest {
  required SecurityContext security_context = 1;
  required int64 office_id = 2;
  optional string search = 3;
  optional Filters filters = 4;
  // The page number is set to 0 if not specified
  // The page size is set to 100 if not specified
  required Page page = 5;
  message Filters {
    optional BuyerServiceLevel service_level = 1;
    optional BuyerSeatStatus seat_status = 2;
    optional BuyerSeatType seat_type = 3;
  }
}
// @section Advertiser
message SearchBuyerSeatsResponse {
  repeated BuyerSeat seats = 1;
  required uint32 pages = 2;
  message BuyerSeat {
    required int64 seat_id = 1;
    required int64 office_id = 2;
    required string name = 3;
    required EntityInfo entity = 4;
    required bool existing_seat_member = 5;
    required BuyerServiceLevel service_level = 6;
    required BuyerSeatStatus status = 7;
    optional MsaType msa_type = 8;
    required double fee = 9;
    optional google.protobuf.Timestamp created_at = 10;
    optional string salesforce_account_id = 11;
    optional string salesforce_contract_id = 12;
    oneof buyer_id {
      int64 agency_id = 13;
      int64 advertiser_id = 14;
    }
  }
  message EntityInfo {
    required int64 entity_id = 1;
    required BuyerSeatType type = 2;
    required UsersCount users_count = 3;
  }
  message UsersCount {
    required uint32 tam_admin = 1;
    required uint32 tam_reporting_admin = 2;
    required uint32 tam_user = 3;
    required uint32 tam_reporting_user = 4;
  }
}
// @section Inventory
message SearchBuyingRulesRequest {
  required SecurityContext security_context = 1;
  // Will search for buying rules if or names containing the entire query
  optional string query = 2;
  // The page number is set to 0 if not specified
  // The page size is set to 100 if not specified
  required Page page = 3;
}
// @section Inventory
message SearchBuyingRulesResponse {
  repeated BuyingRule buying_rules = 1;
  required Pagination pagination = 2;
  message BuyingRule {
    required int64 buying_rule_id = 1;
    required string name = 2;
    required string tbl_rule = 3;
    required double price = 4;
    required string currency = 5;
    required BuyingRuleStatus status = 6;
    required bool is_header_bidding = 7;
    required int64 publisher_id = 8;
  }
  enum BuyingRuleStatus {
    BUYING_RULE_STATUS_ENABLED = 1;
    BUYING_RULE_STATUS_DISABLED = 2;
    BUYING_RULE_STATUS_DELETED = 3;
    BUYING_RULE_STATUS_HIDDEN = 4;
  }
}
// @section Reachcast
message SearchCalendarDailyCpmRequest {
  required SecurityContext security_context = 1;
  required Targeting targeting = 2;
  required google.protobuf.Timestamp start_date = 3;
  required google.protobuf.Timestamp end_date = 4;
  required ReachcastFormatCreativeType creative_type = 5;
  required string timezone = 6;
  required Account account = 7;
  message Account {
    required int32 entity_id = 1;
    required int32 profile_id = 2;
  }
  message Targeting {
    required string country_code = 1;
    required LegalAge legal_age = 2;
    required BrandSafetyType brand_safety = 3;
    optional BrandSuitabilitySegments brand_suitability = 4;
    repeated int64 included_packs = 5;
    repeated string included_websites = 6;
    repeated int64 excluded_packs = 7;
    repeated string excluded_websites = 8;
    message BrandSuitabilitySegments {
      repeated string ias_ids = 1;
      repeated string grapeshot_ids = 2;
      repeated string double_verify_ids = 3;
    }
  }
}
// @section Reachcast
message SearchCalendarDailyCpmResponse {
  required string currency = 1;
  required double cpm = 2;
  repeated DailyExceptionCpm daily_exception_cpms = 3;
  message DailyExceptionCpm {
    required google.protobuf.Timestamp date = 1;
    required double cpm = 2;
  }
}
// @section Campaign
message SearchCampaignSetupsRequest {
  required SecurityContext security_context = 1;
  required Page page = 2;
  required Sort sort = 3;
  optional CampaignStatus status = 5;
  optional string search_by_id_or_name = 7;
  repeated int64 advertiser_ids = 8;
  required int64 entity_id = 9;
  optional bool is_self_serve = 10;
  message Sort {
    optional SortCriterion criterion = 1 [default = SORT_CRITERION_CAMPAIGN_ID];
    optional SortDirection direction = 2 [default = SORT_DIRECTION_DESC];
  }
  enum CampaignStatus {
    CAMPAIGN_STATUS_ENABLED = 1;
    CAMPAIGN_STATUS_DISABLED = 2;
    CAMPAIGN_STATUS_FINISHED = 3;
    CAMPAIGN_STATUS_PENDING = 5;
    CAMPAIGN_STATUS_DRAFT = 6; // Is not a status in database
    CAMPAIGN_STATUS_ACTIVE = 7;
    CAMPAIGN_STATUS_PAUSED = 8;
    CAMPAIGN_STATUS_COMPLETED = 9;
  }
  enum SortCriterion {
    SORT_CRITERION_CAMPAIGN_ID = 1;
    SORT_CRITERION_CAMPAIGN_NAME = 2;
    SORT_CRITERION_CAMPAIGN_STATUS = 3;
  }
  enum SortDirection {
    SORT_DIRECTION_ASC = 1;
    SORT_DIRECTION_DESC = 2;
  }
  reserved 4, 6;
}
// @section Campaign
message SearchCampaignSetupsResponse {
  repeated Campaign campaigns = 1;
  required Pagination page = 2;
  message Advertiser {
    required int64 id = 1;
    required string name = 2;
  }
  message Agency {
    required int64 id = 1;
    required string name = 2;
  }
  message Campaign {
    required int64 id = 1;
    required string name = 2;
    required CampaignStatus status = 3;
    optional CampaignObjective objective = 4;
    required int32 line_item_count = 5;
    optional double budget = 6;
    optional double free_budget = 7;
    // The 3-letter currency code defined in ISO 4217
    required string currency = 8;
    required string timezone = 9;
    required bool is_self_serve = 10;
    optional Advertiser advertiser = 11;
    optional Agency agency = 12;
    optional google.protobuf.Timestamp start_date = 13;
    optional google.protobuf.Timestamp end_date = 14;
    required bool is_created_by_salesforce = 16;
    optional google.protobuf.Timestamp start_date_in_seconds = 17;
    optional google.protobuf.Timestamp end_date_in_seconds = 18;
    optional AdvertisingSolutionId advertising_solution_id = 19;
    required bool is_guaranteed = 20;
    reserved 15;
  }
  enum CampaignStatus {
    CAMPAIGN_STATUS_ENABLED = 1;
    CAMPAIGN_STATUS_DISABLED = 2;
    CAMPAIGN_STATUS_FINISHED = 3;
    CAMPAIGN_STATUS_PENDING = 5;
    CAMPAIGN_STATUS_DRAFT = 6; // Is not a status in database
    CAMPAIGN_STATUS_ACTIVE = 7;
    CAMPAIGN_STATUS_PAUSED = 8;
    CAMPAIGN_STATUS_COMPLETED = 9;
  }
}
// @section Campaign
message SearchCampaignsEligibleForManagedServiceMigrationRequest {
  required SecurityContext security_context = 1;
  required int64 office_id = 2;
  optional string search = 3;
  // The page number is set to 0 if not specified
  // The page size is set to 100 if not specified
  required Page page = 4;
}
// @section Campaign
message SearchCampaignsEligibleForManagedServiceMigrationResponse {
  repeated CampaignInfo campaigns = 1;
  message CampaignInfo {
    required int64 id = 1;
    required string name = 2;
    optional int64 owner_id = 3;
    required CampaignObjective objective = 4;
  }
}
// @section Campaign
message SearchCampaignsRequest {
  required SecurityContext security_context = 1;
  optional int64 office_id = 2;
  optional string search = 3;
  // The page number is set to 0 if not specified
  // The page size is set to 100 if not specified
  required Page page = 4;
  // Include info about campaigns migrated to managed services (default is false)
  optional bool include_managed_service_migrated_campaigns_info = 5 [default = false];
}
// @section Campaign
message SearchCampaignsResponse {
  repeated CampaignInfo campaigns = 1;
  message CampaignInfo {
    required int64 id = 1;
    required int64 office_id = 2;
    required string name = 3;
    optional MigrationInfo migration_info = 4;
    message MigrationInfo {
      required string user_email = 1;
      required CampaignMigrationReason reason = 2;
      required string details = 3;
      required google.protobuf.Timestamp migrated_at = 4;
    }
  }
}
// @section Users Data
message SearchCookielessBuyerCustomAudiencesRequest {
  required SecurityContext security_context = 1;
  optional string search = 2;
  required Page page = 3;
  optional int64 entity_id = 4;
}
// @section Users Data
message SearchCookielessBuyerCustomAudiencesResponse {
  repeated CustomAudience custom_audiences = 1;
  required int32 total = 2;
  message CustomAudience {
    required int64 custom_audience_id = 1;
    required string name = 2;
  }
}
// @section Users Data
message SearchCookielessCustomAudiencesRequest {
  required SecurityContext security_context = 1;
  optional string search = 2;
  required Page page = 3;
}
// @section Users Data
message SearchCookielessCustomAudiencesResponse {
  repeated CustomAudience custom_audiences = 1;
  required int32 total = 2;
  message CustomAudience {
    required int64 custom_audience_id = 1;
    required string name = 2;
  }
}
// @section Creatives Approval
message SearchCreativesSubmittedForApprovalRequest {
  required SecurityContext security_context = 1;
  required string search = 2;
  // The page number is set to 0 if not specified
  // The page size is set to 100 if not specified
  required Page page = 3;
}
// @section Creatives Approval
message SearchCreativesSubmittedForApprovalResponse {
  repeated MatchingCreativesSubmittedForApproval matching_creatives_submitted_for_approval = 1;
  message ConnectionId {
    required int64 value = 1;
  }
  message CreativeSubmittedForApprovalId {
    required int64 value = 1;
  }
  message DspCampaignId {
    required string value = 1;
  }
  message DspCreativeId {
    required string value = 1;
  }
  message MatchingCreativesSubmittedForApproval {
    required CreativeSubmittedForApprovalId id = 1;
    required PublisherId publisher_id = 2;
    required DspCampaignId campaign_id = 3;
    required DspCreativeId creative_id = 4;
    required ConnectionId connection_id = 5;
    required CreativeApprovalStatus status = 6;
    optional ProfileId approver_id = 7;
    optional string comment = 8;
    optional int32 number_of_bid_responses = 9;
    optional string wigo_url = 10;
    required string publisher_name = 11;
    optional string creative_name = 12;
    optional string campaign_name = 13;
    optional string advertiser_name = 14;
    optional string approver_email = 15;
    required string connection_name = 16;
    optional string approver_name = 17;
    optional google.protobuf.Timestamp created_at = 18;
    optional google.protobuf.Timestamp updated_at = 19;
  }
  message ProfileId {
    required int64 value = 1;
  }
  message PublisherId {
    required int64 value = 1;
  }
}
// @section Audience Custom
message SearchCustomAudienceTemplatesForBuyerEntityRequest {
  required SecurityContext security_context = 1;
  required int64 buyer_entity_id = 2;
  optional string search = 3;
  optional Page page = 4;
  // If no sorting is explicitly defined, the results will be sorted by decreasing creation date
  optional Sort sort = 5;
  // All filters options are combined as AND filters, they must all match to return the concerned custom audiences
  optional AudienceCustomEnvironmentChannel channel = 6;
  optional AudienceCustomStatus status = 7;
  optional int64 vertical_id = 8;
  message Sort {
    required SortField field = 1;
    required AudienceCustomSortDirection direction = 2;
  }
  enum SortField {
    SORT_FIELD_ID = 1;
    SORT_FIELD_NAME = 2;
    SORT_FIELD_OWNER_ENTITY_ID = 3;
    SORT_FIELD_VERTICAL = 4;
    SORT_FIELD_STATUS = 5;
    SORT_FIELD_CREATED_AT = 6;
  }
}
// @section Audience Custom
message SearchCustomAudienceTemplatesForBuyerEntityResponse {
  repeated CustomAudienceTemplate custom_audience_templates = 1;
  required uint32 total = 2;
  message CustomAudienceTemplate {
    required int64 custom_audience_template_id = 1;
    required Entity owner_entity = 2;
    required string name = 3;
    optional string tbl_rule = 4;
    required AudienceCustomEnvironmentChannel channel = 5;
    required AudienceCustomStatus status = 6;
    required google.protobuf.Timestamp created_at = 7;
    required google.protobuf.Timestamp updated_at = 8;
    required Vertical vertical = 9;
    optional TaxonomyReach worldwide_reach = 10;
    message Entity {
      required int64 id = 1;
      required string name = 2;
    }
    message TaxonomyReach {
      optional int64 reach = 1;
      optional int64 pageviews = 2;
      optional int64 cookieless_reach = 3;
      optional int64 cookieless_pageviews = 4;
    }
    message Vertical {
      required int64 id = 1;
      required string name = 2;
    }
  }
}
// @section Audience Custom
message SearchCustomAudienceTemplatesRequest {
  required SecurityContext security_context = 1;
  optional string search = 2;
  optional Page page = 3;
  // If no sorting is explicitly defined, the results will be sorted by decreasing creation date
  optional Sort sort = 4;
  // All filters options are combined as AND filters, they must all match to return the concerned custom audiences
  optional AudienceCustomEnvironmentChannel channel = 5;
  optional AudienceCustomStatus status = 6;
  optional int64 vertical_id = 7;
  optional int64 allowed_entity_id = 8;
  message Sort {
    required SortField field = 1;
    required AudienceCustomSortDirection direction = 2;
  }
  enum SortField {
    SORT_FIELD_ID = 1;
    SORT_FIELD_NAME = 2;
    SORT_FIELD_OWNER_ENTITY_ID = 3;
    SORT_FIELD_VERTICAL = 4;
    SORT_FIELD_STATUS = 5;
    SORT_FIELD_CREATED_AT = 6;
  }
}
// @section Audience Custom
message SearchCustomAudienceTemplatesResponse {
  repeated CustomAudienceTemplate custom_audience_templates = 1;
  required uint32 total = 2;
  message CustomAudienceTemplate {
    required int64 custom_audience_template_id = 1;
    required Entity owner_entity = 2;
    required string name = 3;
    optional string tbl_rule = 4;
    required AudienceCustomEnvironmentChannel channel = 5;
    required AudienceCustomStatus status = 6;
    required google.protobuf.Timestamp created_at = 7;
    required google.protobuf.Timestamp updated_at = 8;
    required Vertical vertical = 9;
    repeated Entity associated_entities = 10;
    required AudienceCustomEntityAssociationType entity_association_type = 11;
    optional TaxonomyReach worldwide_reach = 12;
    message Entity {
      required int64 id = 1;
      required string name = 2;
    }
    message TaxonomyReach {
      optional int64 reach = 1;
      optional int64 pageviews = 2;
      optional int64 cookieless_reach = 3;
      optional int64 cookieless_pageviews = 4;
    }
    message Vertical {
      required int64 id = 1;
      required string name = 2;
    }
  }
}
// @section Exchange Rate
message SearchDailyExchangeRatesAnonymouslyRequest {
  required ExchangeRateSource source = 1;
  required Date date = 2;
  message Date {
    required int32 date = 1;
    required int32 month = 2;
    required int32 year = 3;
  }
  enum ExchangeRateSource {
    EXCHANGE_RATE_SOURCE_OANDA = 0;
    EXCHANGE_RATE_SOURCE_OANDA_ROCB = 1;
  }
}
// @section Exchange Rate
message SearchDailyExchangeRatesAnonymouslyResponse {
  repeated ExchangeRate rates = 1;
  message ExchangeRate {
    required google.protobuf.Timestamp date = 1;
    required string source_currency = 2;
    required string target_currency = 3;
    required double rate = 4;
  }
}
// @section Reporting
message SearchDatamartsRequest {
  required SecurityContext security_context = 1;
  repeated string dimensions = 2;
  repeated string metrics = 3;
  optional int64 template_id = 4;
}
// @section Reporting
message SearchDatamartsResponse {
  repeated Datamart datamarts = 1;
  message Datamart {
    required int64 datamart_id = 1;
    required int64 template_id = 2;
    required Frequency frequency = 3;
    required Options options = 4;
    required bool company_wide_alerting = 5;
    optional string retention_period = 6;
    optional Filters filters = 7;
    required string name = 8;
    repeated string dimensions = 9;
    repeated string metrics = 10;
    required DatamartStatus status = 11;
    required ReportOutputFormat format = 12;
    message Filters {
      repeated DemandSource demand_sources = 1;
      repeated string ad_types = 2;
      repeated int64 advertiser_ids = 3;
      repeated int64 placement_ids = 4;
      repeated string hb_providers = 5;
    }
    message Options {
      optional string redshift_sort_key = 1;
      optional string redshift_schema = 2;
      optional string redshift_database = 3;
      optional BigQueryTable big_query_table = 8;
      optional ClusteringField big_query_clustering_field = 9;
      message BigQueryTable {
        required string project_id = 1;
        required string dataset = 2;
        required string table = 3;
      }
      message ClusteringField {
        repeated string fields = 1;
      }
    }
  }
}
// @section Account
message SearchEntitiesForProfileHavingRightsAnonymouslyRequest {
  required int64 profile_id = 1;
  optional int64 entity_id = 2; // limit the results to an arbitrary branch of the entity tree (an office for example)
  required string resource_type = 3;
  required string permission_name = 4;
  optional bool inherit_rights_from_parent_entities = 5;
}
// @section Account
message SearchEntitiesForProfileHavingRightsAnonymouslyResponse {
  repeated int64 entity_ids = 1;
}
// @section Account
message SearchEntityRestrictedCurrenciesRequest {
  required SecurityContext security_context = 1;
  optional int64 entity_id = 2;
  optional CurrencyType currency_type = 3;
}
// @section Account
message SearchEntityRestrictedCurrenciesResponse {
  repeated EntityRestrictedCurrency entity_restricted_currencies = 1;
  message EntityRestrictedCurrency {
    required CurrencyType currency_type = 1;
    required bool is_default = 2; // is entity's default currency or not
    required string currency = 3;
    required int64 entity_id = 4;
  }
}
// @section Reporting
message SearchExternalApiTokensRequest {
  required SecurityContext security_context = 1;
  optional int64 external_api_token_id = 2;
  optional int64 profile_id = 3;
  optional int64 entity_id = 4;
}
// @section Reporting
message SearchExternalApiTokensResponse {
  repeated ExternalApiToken external_api_tokens = 1;
  message ExternalApiToken {
    required int64 external_api_token_id = 1;
    required string name = 2;
    required int64 profile_id = 3;
    required int64 entity_id = 4;
    required string token = 5;
    required google.protobuf.Timestamp created_at = 6;
    optional google.protobuf.Timestamp updated_at = 7;
  }
}
// @section Inventory
message SearchInventoryRequest {
  required SecurityContext security_context = 1;
  // Will search for inventory or placement names containing the entire query
  optional string query = 2;
  // The page number is set to 0 if not specified
  // The page size is set to 100 if not specified
  required Page page = 3;
}
// @section Inventory
message SearchInventoryResponse {
  repeated Inventory inventory = 1;
  required int32 total_results_count = 2;
  message Inventory {
    required int64 id = 1;
    required string name = 2;
    repeated Placement placements = 3;
  }
  message Placement {
    required int64 id = 1;
    required string name = 2;
  }
}
// @section Advertiser
message SearchLineItemsWithConversionLiftActivatedAnonymouslyRequest {
  required google.protobuf.Timestamp attribution_expected_at = 1;
}
// @section Advertiser
message SearchLineItemsWithConversionLiftActivatedAnonymouslyResponse {
  repeated int64 line_item_ids = 1;
}
// @section Account
message SearchOfficesForProfileHavingPermissionOnResourceTypeRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
  required string resource_type = 3;
  required string permission_name = 4;
}
// @section Account
message SearchOfficesForProfileHavingPermissionOnResourceTypeResponse {
  repeated int64 office_ids = 1;
}
// @section Inventory
message SearchPacksRequest {
  required SecurityContext security_context = 1;
  required int64 entity_id = 2;
  required string search = 3;
  // if true, no entity check is done on packs, if false retrieve only packs for the specified entity
  required bool is_cross_office_request = 4;
  // The page number is set to 0 if not specified
  // The page size is set to 10 if not specified
  required Page page = 5;
  optional SortingKey sorting_key = 6;
  optional SortingDirection sorting_direction = 7;
  enum SortingDirection {
    SORTING_DIRECTION_DESC = 1;
    SORTING_DIRECTION_ASC = 2;
  }
  enum SortingKey {
    SORTING_KEY_ID = 1;
    SORTING_KEY_NAME = 2;
  }
}
// @section Inventory
message SearchPacksResponse {
  repeated PackInfo packs = 1;
  required int32 total = 2;
  message PackInfo {
    required int64 id = 1;
    required string name = 2;
  }
}
// @section Users Data
message SearchPersonasRequest {
  required SecurityContext security_context = 1;
  optional string search = 2;
  required Page page = 3;
  // If no sorting is explicitly defined, the results will be sorted by decreasing creation date
  optional Sort sort = 4;
  // All filters options are combined as AND filters, they must all match to return the concerned custom audiences
  optional int64 advertiser_id = 5;
  optional int64 entity_id = 6;
  optional int64 profile_id = 7;
  optional bool includes_cookieless = 8 [default = false];
  optional UsersDataEnvironmentChannel channel = 9;
  message Sort {
    required SortField field = 1;
    required SortDirection direction = 2;
  }
  enum SortDirection {
    SORT_DIRECTION_ASC = 1;
    SORT_DIRECTION_DESC = 2;
  }
  enum SortField {
    SORT_FIELD_ID = 1;
    SORT_FIELD_NAME = 2;
    SORT_FIELD_CREATED_AT = 3;
  }
}
// @section Users Data
message SearchPersonasResponse {
  repeated Persona personas = 1;
  required int32 total = 2;
  message Persona {
    required int64 persona_id = 1;
    required string name = 2;
    required PersonaStatus status = 3;
    required google.protobuf.Timestamp created_at = 4;
    required google.protobuf.Timestamp updated_at = 5;
    optional bool is_cookieless = 6;
    optional string tbl_rule = 7;
    optional UsersDataEnvironmentChannel channel = 8;
    optional BuyerEntity buyer_entity = 9;
    message BuyerEntity {
      required int64 id = 1;
      required string name = 2;
    }
  }
}
// @section Advertiser
message SearchPixelsForBuyerRequest {
  required SecurityContext security_context = 1;
  required int64 buyer_seat_id = 2;
  // The page number is set to 0 if not specified
  // The page size is set to 100 if not specified
  required Page page = 3;
  // Full text on Name / Domain / Target Advertiser Name / Owner Seat Name
  optional string search = 4;
}
// @section Advertiser
message SearchPixelsForBuyerResponse {
  repeated Pixel pixels = 1;
  required uint32 total = 2;
  required uint32 total_search = 3;
  message Pixel {
    required int64 id = 1;
    required string name = 2;
    optional string domain = 3;
    required int64 target_advertiser_id = 4;
    required string target_advertiser_name = 5;
    required bool is_migrated_from_managed_services = 6;
    required int64 owner_buyer_id = 7;
    required string owner_buyer_name = 8;
    required bool is_deletable = 9;
    required bool is_revocable = 10;
    required SharingMode sharing_mode = 11;
    optional string office_name = 12;
    required bool is_in_tracking_blocklist = 13;
    repeated string blocklisted_domains = 14;
  }
}
// @section Advertiser
message SearchPixelsWithConversionLiftActivatedAnonymouslyRequest {
  required google.protobuf.Timestamp attribution_expected_at = 1;
}
// @section Advertiser
message SearchPixelsWithConversionLiftActivatedAnonymouslyResponse {
  repeated int64 buyer_pixel_ids = 1;
  reserved 2;
}
// @section Inventory
message SearchPlacementsRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  required string search = 3;
  // The page number is set to 0 if not specified
  // The page size is set to 10 if not specified
  required Page page = 4;
}
// @section Inventory
message SearchPlacementsResponse {
  repeated Placement placements = 1;
  message Placement {
    required int64 id = 1;
    required string name = 2;
  }
}
// @section Advertiser
message SearchPreUserConsentDomainsNotManuallyBlockedRequest {
  required SecurityContext security_context = 1;
  required google.protobuf.Timestamp from = 2;
  optional double min_avg_page_views_from_users_under_data_protection_law_per_hour = 3 [default = 200.000000];
  optional double min_ratio_of_avg_page_views_from_users_under_data_protection_law_per_hour = 4 [default = 0.400000];
}
// @section Advertiser
message SearchPreUserConsentDomainsNotManuallyBlockedResponse {
  repeated Domain domains = 1;
  message Domain {
    required string domain = 1;
    required string url_checked = 2;
    required string office_name = 3;
    required bool is_used_in_active_campaign = 4 [default = false];
    required google.protobuf.Timestamp last_check = 7;
    required int64 entity_id = 8;
    required int64 pixel_id = 9;
    required double avg_page_views_per_hour = 10;
    required double avg_page_views_from_users_under_data_protection_law_per_hour = 11;
    reserved 5, 6;
  }
}
// @section Account
message SearchProfilesForPublisherAnonymouslyRequest {
  required int64 publisher_entity_id = 1;
  required Filter filter = 2;
  message Filter {
    optional InvoiceEmailingNotificationStatus invoice_emailing_notification_status = 1;
  }
  enum InvoiceEmailingNotificationStatus {
    INVOICE_EMAILING_NOTIFICATION_STATUS_DISABLED = 0;
    INVOICE_EMAILING_NOTIFICATION_STATUS_ENABLED = 1;
  }
}
// @section Account
message SearchProfilesForPublisherAnonymouslyResponse {
  repeated Profile profiles = 1;
  message Profile {
    required int64 profile_id = 1;
    required string email = 2;
    optional string firstname = 3;
    optional string lastname = 4;
  }
}
// @section Account
message SearchProfilesHavingPermissionOnResourceTypeForOfficesAnonymouslyRequest {
  repeated int64 office_ids = 1;
  required string resource_type = 2;
  required string permission_name = 3;
  optional bool include_only_profiles_where_permission_not_granted_by_platform_account = 4;
}
// @section Account
message SearchProfilesHavingPermissionOnResourceTypeForOfficesAnonymouslyResponse {
  map<int64, ProfilesHavingPermission> profiles_having_permission_by_office = 1;
  message ProfilesHavingPermission {
    repeated int64 profile_ids = 1;
  }
}
// @section Account
message SearchPublisherTypeSettingValuesRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_setting_id = 2;
  required int64 publisher_type_id = 3;
}
// @section Account
message SearchPublisherTypeSettingValuesResponse {
  repeated PublisherTypeSettingValue publisher_type_setting_values = 1;
  message PublisherTypeSettingValue {
    required int64 id = 1;
    optional string value = 2;
    required int64 publisher_setting_id = 3;
    required int64 publisher_type_setting_id = 4;
  }
}
// @section Reachcast
message SearchReachcastContextsRequest {
  required SecurityContext security_context = 1;
  required string country_code = 2;
  required google.protobuf.Timestamp start_date = 3;
  required google.protobuf.Timestamp end_date = 4;
  required string timezone = 5;
}
// @section Reachcast
message SearchReachcastContextsResponse {
  repeated DailyContext daily_contexts = 1;
  message Context {
    required int64 id = 1;
    required string name = 2;
    required ContextType type = 3;
  }
  message DailyContext {
    required google.protobuf.Timestamp date = 1;
    repeated Context contexts = 2;
  }
  enum ContextType {
    CONTEXT_TYPE_STANDARD = 0;
    CONTEXT_TYPE_SEASONAL = 1;
  }
}
// @section Retail Media
message SearchRetailerSmartlinkConfigurationsRequest {
  required SecurityContext security_context = 1;
  required Page page = 2;
  optional bool ascending = 3;
  optional string search_input = 4;
}
// @section Retail Media
message SearchRetailerSmartlinkConfigurationsResponse {
  repeated ConfigurationItem configurations = 1;
  required Pagination pagination = 2;
  message ConfigurationItem {
    required int64 id = 1;
    required string name = 2;
    required Retailer retailer = 3;
    repeated Product products = 4;
    required RetailerSmartlinkConfigurationStatus status = 5;
    optional double total_price = 6;
    required string currency = 7;
    required google.protobuf.Timestamp created_at = 8;
    required google.protobuf.Timestamp updated_at = 9;
    optional string created_by = 10;
    optional string landing_page_url = 11;
    message Product {
      required int64 id = 1;
      optional string name = 2;
      required string sku = 3;
      required int64 quantity = 4;
      required RetailerSmartlinkConfigurationProductStatus status = 5;
      optional double price = 6;
      optional string seller_id = 8;
      reserved 7;
    }
    message Retailer {
      required int64 id = 1;
      required string name = 2;
      optional string cart_redirect_url = 3;
      optional RetailerCMS cms = 4;
      optional string json_configuration = 5;
      required RetailerStatus status = 6;
      optional string locale = 7;
      optional string country = 8;
      required RetailerCartingMode carting_mode = 9;
      required RetailerProductStrategyAllowed product_strategy_allowed = 10;
      optional bool is_pixel = 11;
    }
  }
}
// @section Retail Media
message SearchRetailersRequest {
  required SecurityContext security_context = 1;
  optional bool ascending = 2;
  optional string search_input = 3;
}
// @section Retail Media
message SearchRetailersResponse {
  repeated Retailers retailers = 1;
  message Retailers {
    required int64 id = 1;
    required string name = 2;
    optional string cart_redirect_url = 3;
    optional RetailerCMS cms = 4;
    optional string json_configuration = 5;
    required RetailerStatus status = 6;
    optional string locale = 7;
    optional string country = 8;
    required RetailerCartingMode carting_mode = 9;
    required RetailerProductStrategyAllowed product_strategy_allowed = 10;
    required google.protobuf.Timestamp created_at = 11;
    required google.protobuf.Timestamp updated_at = 12;
    optional string created_by = 13;
    required bool is_pixel = 14;
  }
}
// @section Advertiser
message SearchSalesforceAdvertisersForConversionManagementRequest {
  required SecurityContext security_context = 1;
  // The page number is set to 0 if not specified
  // The page size is set to 100 if not specified
  required Page page = 2;
  optional string search = 3;
  // If no sorting is explicitly defined, the results will be sorted by decreasing creation date
  optional Sort sort = 4;
  message Sort {
    required SortCriterion criterion = 1;
    required SortDirection direction = 2;
  }
  enum SortCriterion {
    SORT_CRITERION_CREATED_AT = 1;
    SORT_CRITERION_NAME = 2;
  }
  enum SortDirection {
    SORT_DIRECTION_ASC = 1;
    SORT_DIRECTION_DESC = 2;
  }
}
// @section Advertiser
message SearchSalesforceAdvertisersForConversionManagementResponse {
  repeated Advertiser advertisers = 1;
  message Advertiser {
    required int64 advertiser_id = 1;
    required string name = 2;
    optional string description = 3;
    reserved 4, 5;
  }
}
// @section Ad Quality
message SearchScannedDspCreativesCookieReportsAnonymouslyRequest {
  optional google.protobuf.Timestamp from = 1;
  optional google.protobuf.Timestamp to = 2;
}
// @section Ad Quality
message SearchScannedDspCreativesCookieReportsAnonymouslyResponse {
  repeated CreativeCookieReports reports = 1;
  message CreativeCookieReports {
    required DspCreative dsp_creative = 1;
    required google.protobuf.Timestamp scan_date = 2;
    repeated CookieReport cookie_reports = 3;
    message CookieReport {
      required string name = 1;
      required string value = 2;
      required string domain = 3;
      optional string originated_domain = 4; // [(validate.rules).string.hostname = true]
      optional google.protobuf.Duration time_to_live = 5;
    }
    message DspCreative {
      required int64 connection_id = 1;
      required string campaign_id = 2;
      required string creative_id = 3;
    }
  }
}
// @section Users Data
message SearchSegmentsForTargetingDimensionRequest {
  required SecurityContext security_context = 1;
  required TargetingContext targeting_context = 2;
  required TargetingDimension dimension = 3;
  required Page page = 4;
  // The search field, if not empty, will be used to filter segments which
  // contains in their id or label this value. For multiple words
  // (separated by space) then only segments matching all of the words
  // in their id or label will be returned. This field is not
  // case-sensitive, and will return segments ordered by descending reach.
  optional string search = 5;
  message TargetingContext {
    repeated string countries = 1; // ISO 3166-1 alpha-2 (2 letters) codes
    optional bool is_self_served = 2 [default = false];
    optional bool is_ctv = 3 [default = false];
    optional int64 entity_id = 4;
  }
}
// @section Users Data
message SearchSegmentsForTargetingDimensionResponse {
  required TargetingDimension dimension = 1;
  required string dimension_label = 2;
  repeated Segment values = 3;
  required int32 total = 4;
  message Segment {
    required string id = 1;
    required string label = 2;
    required int64 reach = 3;
    optional int64 pageviews = 4;
    optional int64 cookieless_reach = 5;
    optional int64 cookieless_pageviews = 6;
  }
}
// @section Inventory
message SearchSitesByDomainNameRequest {
  required SecurityContext security_context = 1;
  required Page page = 2;
  optional string search = 3;
}
// @section Inventory
message SearchSitesByDomainNameResponse {
  repeated string domains = 1;
  required int32 total = 2;
}
// @section Reachcast
message SearchSpecialCalendarEventsRequest {
  required SecurityContext security_context = 1;
  required string country_code = 2;
  required google.protobuf.Timestamp start_date = 3;
  required google.protobuf.Timestamp end_date = 4;
  required string timezone = 5;
}
// @section Reachcast
message SearchSpecialCalendarEventsResponse {
  repeated SpecialEvent special_events = 1;
  message SpecialEvent {
    required int64 id = 1;
    required string name = 2;
    required google.protobuf.Timestamp start_date = 3;
    required google.protobuf.Timestamp end_date = 4;
    required string timezone = 5;
  }
}
// @section Users Data
message SearchTaxonomyAndReachForProviderRequest {
  required SecurityContext security_context = 1;
  required TaxonomyProvider provider = 2;
  repeated Search searches = 3;
  repeated string return_reach_for_countries = 4; // ISO 2 code
  required Page page = 5;
  // If no sorting is explicitly defined, the results will be sorted by id
  optional Sort sort = 6;
  // environment channels on which we want to retrieve the reach breakdowns
  repeated UsersDataEnvironmentChannel environment_channels_for_reaches = 7;
  message Search {
    // field should match the name of the output field (ie id, segment_name, ...)
    required string field = 1;
    // values that includes search value will be returned (ie, "tea" will return "Teads" segments)
    required string search_value = 2;
  }
  message Sort {
    required string field = 1;
    required SortDirection direction = 2;
  }
  enum SortDirection {
    SORT_DIRECTION_ASC = 1;
    SORT_DIRECTION_DESC = 2;
  }
}
// @section Users Data
message SearchTaxonomyAndReachForProviderResponse {
  repeated Segment segments = 1;
  required int32 total = 2;
  message AudiencePartnerTaxonomy {
    required int64 id = 1;
    required string name = 2;
    required bool active = 3;
  }
  message AudienceTaxonomy {
    required int64 id = 1;
    required string name = 2;
    required string category = 3;
    optional string sub_category = 4;
    optional string level = 5;
    required bool active = 6;
    required AudiencePlatform audience_platform = 7;
    required int64 public_id = 8;
    required bool is_cookieless_compliant = 9;
    optional string environment_channel = 10;
  }
  message BluekaiTaxonomy {
    required int64 id = 1;
    required string name = 2;
    required string path = 3;
    required float price_cpm = 4;
    required bool active = 5;
    required bool permanent = 6;
    required bool deleted = 7;
  }
  message ContextualTaxonomy {
    required int64 id = 1;
    required string name = 2;
    optional int64 parent_id = 3;
  }
  message CountryReach {
    map<string, Reach> reach_by_country = 1;
  }
  message DeviceGraphTaxonomy {
    required string name = 1;
    required string category = 2;
  }
  message EmetriqTaxonomy {
    required string name = 1;
    required string category = 2;
    required int64 id = 3;
    required float price_cpm = 4;
  }
  message ExelateBasedProviderTaxonomy {
    required int64 id = 1;
    required string segment_name = 2;
    required string category = 3;
    required string source = 4;
    optional int64 advertiser_id = 5;
    optional int64 publisher_id = 6;
    required float display_price_cpm = 7;
    required float video_price_cpm = 8;
    required bool active = 9;
    required bool permanent = 10;
    required bool deleted = 11;
  }
  message LookalikeTaxonomy {
    required string name = 1;
    required bool active = 2;
    repeated string countries = 3;
    required string advertiser_name_with_advertiser_id = 4;
    required int64 seed = 5;
    required string seed_source = 6; // data provider used for seed
    optional google.protobuf.Timestamp activated_at = 7;
    optional google.protobuf.Timestamp last_processed_at = 8;
  }
  message OtherSecondPartyDmpTaxonomy {
    required int64 id = 1;
    required string name = 2;
    required string provider = 3;
  }
  message PartnerTaxonomy {
    required int64 id = 1;
    required string name = 2;
    required string category = 3;
    required string source = 4;
    required string provider = 5;
    oneof partner_id {
      int64 advertiser_id = 6;
      int64 publisher_id = 7;
    }
    required bool active = 8;
    repeated SeatEntity assigned_seat_entities = 9;
    message SeatEntity {
      required int64 id = 1;
      required string name = 2;
    }
  }
  message Reach {
    required int64 reach = 1;
    required int64 cookieless_reach = 2;
    required int64 ad_opportunities = 3;
    required int64 cookieless_ad_opportunities = 4;
    required int32 reach_trend = 5; // scale from -2 to 2 to indicate the trend
    required int32 latest_day_trend = 6; // scale from -2 to 2 to indicate the trend
  }
  message RemarketingTaxonomy {
    required int64 id = 1;
    required string name = 2;
    required bool cross_device = 3;
  }
  message Segment {
    oneof provider_taxonomy {
      ExelateBasedProviderTaxonomy exelate_taxonomy = 1;
      BluekaiTaxonomy oracle_taxonomy = 2;
      StandardDmpTaxonomy standard_dmp_taxonomy = 3;
      OtherSecondPartyDmpTaxonomy other_dmp_taxonomy = 4;
      AudienceTaxonomy audience_taxonomy = 5;
      EmetriqTaxonomy emetriq_taxonomy = 6;
      AudiencePartnerTaxonomy audience_partner_taxonomy = 7;
      ContextualTaxonomy contextual_taxonomy = 8;
      DeviceGraphTaxonomy device_graph_taxonomy = 9;
      TeadsSegmentsTaxonomy teads_segments_taxonomy = 10;
      RemarketingTaxonomy remarketing_taxonomy = 11;
      LookalikeTaxonomy lookalike_taxonomy = 12;
      PartnerTaxonomy partner_taxonomy = 13;
    }
    // Key: environment_channel (all, web, inapp, ctv)
    map<string, CountryReach> reach_per_environment_channel_by_country = 15;
    reserved 14;
  }
  message StandardDmpTaxonomy {
    required int64 id = 1;
    required string name = 2;
    required string category = 3;
    required float price_cpm = 4;
    required bool active = 5;
    required bool permanent = 6;
    required bool deleted = 7;
    optional float price_ctv_cpm = 8;
  }
  message TeadsSegmentsTaxonomy {
    required int64 id = 1;
    required string name = 2;
    required string category = 3;
  }
  enum AudiencePlatform {
    AUDIENCE_PLATFORM_CONSOLE = 1;
    AUDIENCE_PLATFORM_SELFSERVED = 2;
  }
}
// @section Audience Standard
message SearchTeadsAudiencesRequest {
  required SecurityContext security_context = 1;
  repeated int64 audience_ids = 2;
  // Fetch only audiences visible on buying-interface
  required bool visible_on_buying_interface_only = 3;
}
// @section Audience Standard
message SearchTeadsAudiencesResponse {
  repeated TeadsAudience teads_audiences = 1;
  message TeadsAudience {
    required int64 id = 1;
    required string name = 2;
    required TeadsAudienceFlavor teads_audience_flavor = 3;
    required TeadsAudienceCategory teads_audience_category = 4;
  }
  message TeadsAudienceCategory {
    required int64 id = 1;
    required string name = 2;
    required int64 parent_id = 4;
  }
}
// @section Ad Quality
message SearchTeadsHostedCreativesToScanAnonymouslyRequest {
  // The page index is set to 0 if not specified
  // The page size is set to 10000 if not specified
  required Page page = 1;
  optional int32 entity_id = 2;
  optional int64 creative_id = 3;
}
// @section Ad Quality
message SearchTeadsHostedCreativesToScanAnonymouslyResponse {
  // List of Teads hosted creatives to scan ordered by scan date ascending and creative_id descending
  repeated Creative creatives = 1;
  message Creative {
    required TeadsHostedCreative creative = 1;
    optional AdQualityCreativeFormatSize expected_creative_format = 2;
  }
  message TeadsHostedCreative {
    required int64 creative_id = 1;
    required int64 line_item_id = 2;
    required int64 campaign_id = 3;
  }
}
// @section Inventory
message SearchWebsitesByDomainNameRequest {
  required SecurityContext security_context = 1;
  required Page page = 2;
  optional string search = 3;
}
// @section Inventory
message SearchWebsitesByDomainNameResponse {
  repeated string domains = 1;
  required int32 total = 2;
}
// @section Traffic
message SearchWhitelistedDomainsRequest {
  required SecurityContext security_context = 1;
  required string search = 2;
  required Page page = 3;
}
// @section Traffic
message SearchWhitelistedDomainsResponse {
  repeated WhitelistedDomain whitelisted_domains = 1;
  message WhitelistedDomain {
    required int64 id = 1;
    required string name = 2;
    required string domain_or_app_bundle_id = 3;
    required google.protobuf.Timestamp created_at = 4;
    required google.protobuf.Timestamp updated_at = 5;
  }
}
// @section Traffic
message SearchWhitelistedIPRangesRequest {
  required SecurityContext security_context = 1;
  optional string search = 2;
  required Page page = 3;
}
// @section Traffic
message SearchWhitelistedIPRangesResponse {
  repeated WhitelistedIPRanges whitelisted_ip_ranges = 1;
  message IpRange {
    oneof ip_range {
      string cidr = 1; // 94.200.207.58/32
      string wildcard = 2; // 17.*.*.*
    }
  }
  message WhitelistedIPRanges {
    required int64 id = 1;
    required string name = 2;
    repeated IpRange ip_ranges = 3;
    required google.protobuf.Timestamp created = 4;
    required google.protobuf.Timestamp last_updated = 5;
  }
}
// @section Commons
message SecurityContext {
  required int64 profile_id = 4;
  required int64 entity_id = 5;
  optional int64 base_profile_id = 6;
}
// @section Campaign
message SelfServedCampaignActivatedEvent {
  required int64 activator_entity_id = 1;
  required int64 activator_profile_id = 2;
  required int64 campaign_id = 3;
}
// @section Finance
message SendEmailNotificationOnPublishersGeneratedInvoiceForOfficeAnonymouslyError {
  required Error error = 1;
  message Error {
    oneof error_type {
      SendEmailFailure send_email_failure = 1;
      InternalFailure internal_failure = 2;
      InvalidOffice invalid_office = 3;
    }
  }
  message InternalFailure {
    required string reason = 1;
  }
  message InvalidOffice {
    required string reason = 1;
  }
  message SendEmailFailure {
    required string reason = 1;
  }
}
// @section Finance
message SendEmailNotificationOnPublishersGeneratedInvoiceForOfficeAnonymouslyRequest {
  required int64 office_id = 1;
  required string invoice_category = 2;
  required string office_invoices_status = 3;
}
// @section Finance
message SendEmailNotificationOnPublishersGeneratedInvoiceForOfficeAnonymouslyResponse {
}
// @section Finance
message SendEmailNotificationOnValidatedBillablesForOfficeAnonymouslyError {
  required Error error = 1;
  message Error {
    oneof error_type {
      SendEmailFailure send_email_failure = 1;
      InternalFailure internal_failure = 2;
      InvalidOffice invalid_office = 3;
      InvalidValidatorUser invalid_validator_user = 4;
    }
  }
  message InternalFailure {
    required string reason = 1;
  }
  message InvalidOffice {
    required string reason = 1;
  }
  message InvalidValidatorUser {
    required string reason = 1;
  }
  message SendEmailFailure {
    required string reason = 1;
  }
}
// @section Finance
message SendEmailNotificationOnValidatedBillablesForOfficeAnonymouslyRequest {
  required int64 office_id = 1;
  required BillableCategory billable_category = 2;
  required int64 billables_validator_profile_id = 3;
}
// @section Finance
message SendEmailNotificationOnValidatedBillablesForOfficeAnonymouslyResponse {
}
// @section Finance
message SendEmailNotificationsForChangesPendingApprovalInPublisherPaymentSettingsAnonymouslyError {
  repeated Error errors = 1;
  message Error {
    oneof error_type {
      SendEmailFailure send_email_failure = 1;
      NoApproverFoundForOffice no_approver_found_for_office = 2;
    }
  }
  message NoApproverFoundForOffice {
    required string office_id = 1;
  }
  message SendEmailFailure {
    required string reason = 1;
  }
}
// @section Finance
message SendEmailNotificationsForChangesPendingApprovalInPublisherPaymentSettingsAnonymouslyRequest {
}
// @section Finance
message SendEmailNotificationsForChangesPendingApprovalInPublisherPaymentSettingsAnonymouslyResponse {
}
// @section Notification
message SendNotificationAnonymouslyRequest {
  repeated Receiver receivers = 1;
  required Notification notification = 2;
  message Notification {
    required string actor = 1;
    required string verb = 2;
    required string object = 3;
    required NotificationCategory category = 4;
  }
  message Receiver {
    required int64 entity_id = 1;
    required int64 profile_id = 2;
  }
  enum NotificationCategory {
    NOTIFICATION_CATEGORY_INFORMATION = 0;
    NOTIFICATION_CATEGORY_WARNING = 1;
    NOTIFICATION_CATEGORY_ISSUE = 2;
  }
}
// @section Notification
message SendNotificationAnonymouslyResponse {
  required string notification_uuid = 1;
}
// @section Inventory
message SetAdTypeExclusionsForPlacementError {
  required Error error = 1;
  message Error {
    oneof error_type {
      NoDeviceIsEnabled no_device_is_enabled = 1;
      NoPortfolioItemIsCompatibleWithCurrentExclusions no_portfolio_item_is_compatible_with_current_exclusions = 2;
      MissingExclusionsForDevices missing_exclusions_for_devices = 3;
    }
  }
  message MissingExclusionsForDevices {
    repeated string devices = 1;
  }
  message NoDeviceIsEnabled {
  }
  message NoPortfolioItemIsCompatibleWithCurrentExclusions {
  }
}
// @section Inventory
message SetAdTypeExclusionsForPlacementRequest {
  required SecurityContext security_context = 1;
  required int64 placement_id = 2;
  required Exclusion adtype_exclusion_for_placement_on_desktop = 3;
  required Exclusion adtype_exclusion_for_placement_on_mobile = 4;
  message Exclusion {
    required bool device_is_blocked = 1;
    repeated int64 excluded_creative_type_families = 2;
    repeated int64 excluded_creative_types = 3;
    repeated int64 excluded_format_positions = 4;
    repeated int64 excluded_format_sizes = 5;
  }
}
// @section Inventory
message SetAdTypeExclusionsForPlacementResponse {
}
// @section Campaign Visual Proof
message SetAdreformResultForVisualProofRequestTrackingAnonymouslyRequest {
  required string request_tracking_token = 1;
  oneof adreform_result {
    AdreformSuccessResult adreform_success_result = 2;
    AdreformFailureResult adreform_failure_result = 3;
  }
  message AdreformFailureResult {
    required string failure_message = 1;
  }
  message AdreformSuccessResult {
    required string file_s3_key = 1;
  }
}
// @section Campaign Visual Proof
message SetAdreformResultForVisualProofRequestTrackingAnonymouslyResponse {
}
// @section Campaign
message SetAuctionIdForwardStatusForCreativesAnonymouslyRequest {
  repeated int64 creative_ids_with_auction_id_forwarded = 1;
  repeated int64 creative_ids_with_auction_id_not_forwarded = 2;
}
// @section Campaign
message SetAuctionIdForwardStatusForCreativesAnonymouslyResponse {
}
// @section Users Data
message SetAudienceFeesForDirectSalesPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  repeated AudienceFee audience_fees = 3;
  message AudienceFee {
    required DirectSalesPublisherAudienceFeeType audience_fee_type = 1;
    // The 3-letter currency code defined in ISO 4217
    required string currency = 2;
    oneof pricing_model {
      Standard standard = 3;
      Waived waived = 4;
      Trial trial = 5;
    }
  }
  message Standard {
    required double value = 1;
  }
  message Trial {
    required google.protobuf.Timestamp trial_period_start = 1;
    required google.protobuf.Timestamp trial_period_end = 2;
  }
  message Waived {
    required double value = 1;
    required google.protobuf.Timestamp waived_period_start = 2;
    optional google.protobuf.Timestamp waived_period_end = 3;
  }
}
// @section Users Data
message SetAudienceFeesForDirectSalesPublisherResponse {
}
// @section Advertiser
message SetBuyerSeatBillingDetailsRequest {
  required SecurityContext security_context = 1;
  required int64 seat_id = 2;
  required string company_name = 3;
  required Contact business_contact = 4;
  required Address company_address = 5;
  required Contact billing_contact = 6;
  required Address billing_address = 7;
  required string billing_entity_name = 8;
  optional string company_registration_number = 9;
  optional string legal_entity_tax_id = 10;
  message Address {
    required string street = 1;
    required string city = 2;
    required string state = 3;
    required string zip = 4;
    required string country = 5;
  }
  message Contact {
    required string name = 1;
    required string email = 2;
    required string phone_number = 3;
  }
}
// @section Advertiser
message SetBuyerSeatBillingDetailsResponse {
}
// @section Inventory
message SetBuyingRuleAsHeaderBiddingError {
  required Error error = 1;
  message BuyingRuleAlreadySetAsHeaderBidding {
  }
  message BuyingRuleNotFound {
  }
  message Error {
    oneof error_type {
      BuyingRuleNotFound buying_rule_not_found = 1;
      BuyingRuleAlreadySetAsHeaderBidding buying_rule_already_set_as_header_bidding = 2;
    }
  }
}
// @section Inventory
message SetBuyingRuleAsHeaderBiddingRequest {
  required SecurityContext security_context = 1;
  required int64 buying_rule_id = 2;
}
// @section Inventory
message SetBuyingRuleAsHeaderBiddingResponse {
}
// @section Campaign Support
message SetCampaignSupportRequestCustomProcessingDurationForEntityRequest {
  required SecurityContext security_context = 1;
  required int64 entity_id = 2;
  required int64 profile_id = 3;
  required int32 duration_in_hours = 4;
}
// @section Campaign Support
message SetCampaignSupportRequestCustomProcessingDurationForEntityResponse {
}
// @section Campaign
message SetCarouselPerformanceAssetsForCreativeStudioAnonymouslyRequest {
  required string creative_studio_id = 1;
}
// @section Campaign
message SetCarouselPerformanceAssetsForCreativeStudioAnonymouslyResponse {
}
// @section Reporting
message SetDatamartStatusRequest {
  required SecurityContext security_context = 1;
  required int64 template_id = 2;
  required DatamartStatus status = 3;
}
// @section Reporting
message SetDatamartStatusResponse {
}
// @section Users Data
message SetDefaultAudienceMappingRequest {
  required SecurityContext security_context = 1;
  required int64 audience_id = 2;
  optional AudienceFlavor audience_flavor = 3;
  required DimensionsMapping dimensions_mapping = 4;
  optional AudienceType audience_type = 5;
  optional UsersDataEnvironmentChannel channel = 6;
  message DimensionsMapping {
    repeated string exelate_ids = 1;
    repeated string bluekai_ids = 2;
    repeated string liveramp_ids = 3;
    repeated string emetriq_ids = 4;
    repeated string teads_segments = 5;
    repeated string grapeshot_channels = 6;
    repeated string website_ids = 7;
    repeated string pack_ids = 8;
    repeated string altice_us_ids = 9;
    repeated string altice_fr_ids = 10;
    repeated string zeotap_ids = 11;
    repeated string skp_ids = 12;
    repeated string contextual_ids = 13;
    repeated string retargetly_ids = 14;
  }
}
// @section Users Data
message SetDefaultAudienceMappingResponse {
}
// @section Advertiser
message SetDeliveryConcentrationPolicyForAdvertiserAndSellerOfficeRequest {
  required SecurityContext security_context = 1;
  required int64 advertiser_id = 2;
  required int64 seller_office_id = 3;
  required DeliveryConcentrationPolicy policy = 4;
}
// @section Advertiser
message SetDeliveryConcentrationPolicyForAdvertiserAndSellerOfficeResponse {
}
// @section Advertiser
message SetDeliveryConcentrationPolicyForAdvertiserRequest {
  required SecurityContext security_context = 1;
  required int64 advertiser_id = 2;
  required DeliveryConcentrationPolicy policy = 3;
}
// @section Advertiser
message SetDeliveryConcentrationPolicyForAdvertiserResponse {
}
// @section Campaign Support
message SetDescriptionForCampaignSupportRequestRequest {
  required SecurityContext security_context = 1;
  required int64 support_request_id = 2;
  required string description = 3;
  required int64 profile_id = 4;
}
// @section Campaign Support
message SetDescriptionForCampaignSupportRequestResponse {
}
// @section Users Data
message SetDomainsForPackRequest {
  required SecurityContext security_context = 1;
  required int64 pack_id = 2;
  required int64 entity_id = 3;
  repeated string domains = 4;
}
// @section Users Data
message SetDomainsForPackResponse {
}
// @section Advertiser
message SetFeeForClientSeatRequest {
  required SecurityContext security_context = 1;
  required int64 seat_id = 2;
  required double fee = 3;
  // Used to check that we don't roll back to a previous version during updates
  required int32 salesforce_contract_version = 4;
}
// @section Advertiser
message SetFeeForClientSeatResponse {
}
// @section Inventory
message SetFeesForDirectSalesPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  // The 3-letter currency code defined in ISO 4217
  required string currency = 3;
  repeated PublisherFee fees = 4;
  message PublisherFee {
    required PublisherFeeProductName product_name = 1;
    oneof pricing_model {
      Standard standard = 2;
      Waived waived = 3;
      Trial trial = 4;
    }
  }
  message Standard {
    required double value = 1;
    optional Threshold threshold = 2;
  }
  message Threshold {
    required double min_amount_payout = 1;
    required double min_volume = 2;
  }
  message Trial {
    required google.protobuf.Timestamp trial_period_start = 1;
    required google.protobuf.Timestamp trial_period_end = 2;
  }
  message Waived {
    required double value = 1;
    required google.protobuf.Timestamp waived_period_start = 2;
    optional google.protobuf.Timestamp waived_period_end = 3;
    optional Threshold threshold = 4;
  }
}
// @section Inventory
message SetFeesForDirectSalesPublisherResponse {
}
// @section Advertiser
message SetLandingUrlForCreativesAnonymouslyRequest {
  map<int64, string> landing_url_by_creative_id = 1;
}
// @section Advertiser
message SetLandingUrlForCreativesAnonymouslyResponse {
}
// @section Account
message SetLicensesForDirectSalesPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  repeated PublisherLicense licenses = 3;
  message PublisherLicense {
    required PublisherLicenseType license_type = 1;
    required bool activated = 2;
  }
}
// @section Account
message SetLicensesForDirectSalesPublisherResponse {
}
// @section Programmatic
message SetMarginExceptionForConnectionRequest {
  required SecurityContext security_context = 1;
  required int64 connection_id = 2;
  // Percentage value, 50 translated to 0.500 into both min_margin_exception and max_margin_exception in connection_price table
  required double margin_exception = 3;
}
// @section Programmatic
message SetMarginExceptionForConnectionResponse {
}
// @section Campaign
message SetMinMarginForLineItemRequest {
  required SecurityContext security_context = 1;
  required int64 line_item_id = 2;
  // percentage value, leave empty to reset. the min_margin waterfall is applied A.K.A publisher level min_margin then office level min_margin.
  optional int32 min_margin = 3;
}
// @section Campaign
message SetMinMarginForLineItemResponse {
}
// @section Campaign
message SetMinimumVisibilityThresholdForLineItemRequest {
  required SecurityContext security_context = 1;
  required int64 line_item_id = 2;
  // percentage value, 1 is 1% and 100 means 100%
  required int32 threshold = 3;
}
// @section Campaign
message SetMinimumVisibilityThresholdForLineItemResponse {
}
// @section Mrg Contract
message SetMrgContractCommitmentsRequest {
  required SecurityContext security_context = 1;
  required string mrg_contract_uuid = 2;
  repeated CommitmentCriterion commitment_criteria = 3;
  message CommitmentCriterion {
    oneof geo {
      CountryList country_list = 1;
      CountryFilter country_filter = 2;
    }
    required MrgContractCriterionEnvironment environment = 3;
    repeated ContractCommitment contract_commitments = 4;
    optional MrgContractCriterionBrandSafety brand_safety = 5;
    optional MrgContractCriterionUserTrackability user_trackability = 6;
  }
  message ContractCommitment {
    required PublisherCommitment publisher_commitment = 1;
    required TeadsCommitment teads_commitment = 2;
    required string commitment_period_uuid = 3;
    optional string uuid = 4;
  }
  message CountryFilter {
    required MrgContractCriterionCountryFilter country_filter = 1;
  }
  message CountryList {
    repeated string countries = 1;
  }
  message PublisherCommitment {
    required int64 volume = 1;
  }
  message TeadsCommitment {
    // The 3-letter currency code defined in ISO 4217
    required string currency = 1;
    required double revenue = 2;
  }
}
// @section Mrg Contract
message SetMrgContractCommitmentsResponse {
}
// @section Mrg Contract
message SetMrgContractPublisherCommitmentInfoRequest {
  required SecurityContext security_context = 1;
  required string mrg_contract_uuid = 2;
  required OpportunityEventDetail opportunity_event_detail = 3;
  required MrgContractSmoothingFrequency smoothing_frequency = 4;
  optional PublisherRequirement publisher_requirement = 5;
  required int32 opportunity_quarterly_rollover = 6;
  message EnvironmentGroupRequirement {
    required string mrg_environment_group_uuid = 1;
    required MrgContractRequirementType requirement_type = 2;
    required int32 value = 3;
  }
  message OpportunityEventDetail {
    optional bool includes_non_user_consent = 2;
    required bool includes_brand_unsafe_content = 4;
    required MrgContractType contract_type = 5;
    optional MrgContractDirectSoldDeliveryToInclude direct_sold_delivery_to_include = 6 [
      default = MRG_CONTRACT_DIRECT_SOLD_DELIVERY_TO_INCLUDE_NONE
    ];
    optional MrgContractNonUserConsentDeliveryToInclude non_user_consent_delivery_to_include = 7 [
      default = MRG_CONTRACT_NON_USER_CONSENT_DELIVERY_TO_INCLUDE_NONE
    ];
  }
  message PublisherRequirement {
    required int32 requirement_probationary_period = 1;
    repeated EnvironmentGroupRequirement environment_group_requirements = 2;
  }
}
// @section Mrg Contract
message SetMrgContractPublisherCommitmentInfoResponse {
}
// @section Mrg Contract
message SetMrgContractTeadsCommitmentInfoRequest {
  required SecurityContext security_context = 1;
  required string mrg_contract_uuid = 2;
  required MrgContractRevenuePeriod revenue_period = 3;
  required int32 revenue_quarterly_rollover = 4;
  required bool allow_overshoot_per_line = 5;
}
// @section Mrg Contract
message SetMrgContractTeadsCommitmentInfoResponse {
}
// @section Reporting
message SetNameForExternalApiTokenRequest {
  required SecurityContext security_context = 1;
  required string external_api_token_id = 2;
  required string name = 3;
}
// @section Reporting
message SetNameForExternalApiTokenResponse {
}
// @section Campaign
message SetOperatorProfileForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  required Operator operator = 3;
  message Operator {
    required int64 profile_id = 1;
    required int64 entity_id = 2;
  }
}
// @section Campaign
message SetOperatorProfileForCampaignResponse {
}
// @section Campaign
message SetPerformanceAssetsForCreativeStudioAnonymouslyRequest {
  required string creative_studio_id = 1;
}
// @section Campaign
message SetPerformanceAssetsForCreativeStudioAnonymouslyResponse {
}
// @section Advertiser
message SetPixelsLastActivityDateRequest {
  required SecurityContext security_context = 1;
  map<int64, google.protobuf.Timestamp> last_activity_date_by_pixel = 2;
}
// @section Advertiser
message SetPixelsLastActivityDateResponse {
}
// @section Advertiser
message SetPreUserConsentForBuyerPixelDomainsAnonymouslyRequest {
  repeated BuyerPixelDomain buyer_pixel_domains = 1;
  message BuyerPixelDomain {
    required string domain_name = 1;
    required int64 buyer_pixel_id = 2;
    required bool is_pre_user_consent = 3;
  }
}
// @section Advertiser
message SetPreUserConsentForBuyerPixelDomainsAnonymouslyResponse {
}
// @section Advertiser
message SetQualifiedVisitRateForPixelsAnonymouslyRequest {
  map<int64, float> qualified_visit_rate_by_pixel = 1;
}
// @section Advertiser
message SetQualifiedVisitRateForPixelsAnonymouslyResponse {
}
// @section Account
message SetRolesForAccountRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
  required int64 entity_id = 3;
  repeated string roles = 4;
  // a reason describing why these roles are granted
  optional string reason = 5;
}
// @section Account
message SetRolesForAccountResponse {
}
// @section Campaign
message SetSellerProfileForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  required int64 seller_profile_id = 3;
}
// @section Campaign
message SetSellerProfileForCampaignResponse {
}
// @section Ab Testing
message SetServiceForAbTestDynamicParameterRequest {
  required SecurityContext security_context = 1;
  required string parameter_name = 2;
  required string service = 3;
}
// @section Ab Testing
message SetServiceForAbTestDynamicParameterResponse {
}
// @section Campaign
message SetStartModeForLineItemRequest {
  required SecurityContext security_context = 1;
  required int64 line_item_id = 2;
  required LineItemStartMode start_mode = 3;
}
// @section Campaign
message SetStartModeForLineItemResponse {
}
// @section Ad Experience
message SetUnsupportedDevicesForDemoConfigurationAndTenantRequest {
  required SecurityContext security_context = 1;
  required uint64 tenant_id = 2;
  required int64 demo_configuration_id = 3;
  repeated AdExperienceDevice unsupported_devices = 4;
}
// @section Ad Experience
message SetUnsupportedDevicesForDemoConfigurationAndTenantResponse {
}
// @section Campaign
message SetVariationsForCreativeAnonymouslyRequest {
  required string creative_id = 1;
  required string variations_json = 2;
  optional bool dry_run = 3;
}
// @section Campaign
message SetVariationsForCreativeAnonymouslyResponse {
}
// @section Inventory
message SetVirtualCostRatiosForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  // percentage value, 0 is 0% and 100 means 100%
  required int32 virtual_cost_ratio_for_desktop = 3;
  // percentage value, 0 is 0% and 100 means 100%
  required int32 virtual_cost_ratio_for_mobile = 4;
}
// @section Inventory
message SetVirtualCostRatiosForPublisherResponse {
}
// @section Advertiser
message SetWebsitesDomainNamesForPixelsAnonymouslyRequest {
  map<int64, DomainList> website_domains_by_pixel = 1;
  message Domain {
    required string name = 1;
    optional int32 number_of_distinct_pages = 2 [default = 1];
    required google.protobuf.Timestamp last_activity_date = 3;
  }
  message DomainList {
    repeated Domain domains = 1;
  }
}
// @section Advertiser
message SetWebsitesDomainNamesForPixelsAnonymouslyResponse {
  map<int64, DomainErrorList> website_domain_errors_by_pixel = 1;
  message DomainError {
    required string domain = 1;
    required string error = 2;
  }
  message DomainErrorList {
    repeated DomainError domain_errors = 1;
  }
}
// @section Users Data
message ShareCustomAudienceWithBuyerEntitiesRequest {
  required SecurityContext security_context = 1;
  required int64 custom_audience_id = 2;
  repeated int64 buyer_entity_ids = 3;
  optional bool send_notification = 4 [default = false];
}
// @section Users Data
message ShareCustomAudienceWithBuyerEntitiesResponse {
  repeated int64 custom_audience_ids = 1;
}
// @section Advertiser
message ShareMigratedPixelWithBuyerRequest {
  required SecurityContext security_context = 1;
  required int64 pixel_id = 2;
  required int64 buyer_seat_id = 3;
}
// @section Advertiser
message ShareMigratedPixelWithBuyerResponse {
}
// @section Advertiser
message SharePixelWithBuyerRequest {
  required SecurityContext security_context = 1;
  required int64 pixel_id = 2;
  required int64 buyer_seat_id = 3;
  optional bool is_read_only = 4 [default = true];
}
// @section Advertiser
message SharePixelWithBuyerResponse {
}
// @section Inventory
message SkipPercentageOfAuctionsFromPlacementsRequest {
  required SecurityContext security_context = 1;
  map<int64, int32> percentage_of_auctions_skipped_by_placement = 2;
}
// @section Inventory
message SkipPercentageOfAuctionsFromPlacementsResponse {
}
// @section Campaign
message SlowDownInsertionDeliveryOnWebsiteRequest {
  required SecurityContext security_context = 1;
  required WebsiteId website_id = 2;
  required InsertionId insertion_id = 3;
  message InsertionId {
    required int64 value = 1;
  }
  message WebsiteId {
    required int64 value = 1;
  }
}
// @section Campaign
message SlowDownInsertionDeliveryOnWebsiteResponse {
}
// @section Campaign Delivery
message SnapshotActiveAppsForDeliveryCacheAnonymouslyRequest {
  optional bool dry_run = 1;
}
// @section Campaign Delivery
message SnapshotActiveAppsForDeliveryCacheAnonymouslyResponse {
  message App {
    required int64 id = 1;
    required string store_bundle_id = 2;
    required AppPlatform platform = 3;
    required InventoryTier tier = 4;
    required Category category = 5;
    required bool is_strategic = 6;
    required bool is_brandsafety_whitelisted = 7;
    repeated int64 pack_ids = 8;
    message Category {
      required int64 id = 1;
      required string iab_id = 2;
    }
    enum AppPlatform {
      APP_PLATFORM_GOOGLE = 1;
      APP_PLATFORM_APPLE = 2;
      APP_PLATFORM_ROKU = 3;
      APP_PLATFORM_AMAZON = 4;
      APP_PLATFORM_SAMSUNG = 5;
      APP_PLATFORM_VIZIO = 6;
      APP_PLATFORM_LG = 7;
      APP_PLATFORM_MICROSOFT = 8;
      APP_PLATFORM_PLAYSTATION = 9;
      APP_PLATFORM_HISENSE = 10;
      APP_PLATFORM_TIVO = 11;
      APP_PLATFORM_ZEASN = 12;
      APP_PLATFORM_FOXXUM = 13;
    }
    enum InventoryTier {
      INVENTORY_TIER_1 = 1;
      INVENTORY_TIER_2 = 2;
      INVENTORY_TIER_3 = 3;
    }
  }
  message Apps {
    repeated App apps = 1;
  }
}
// @section Campaign Delivery
message SnapshotActivePlacementsForDeliveryCacheAnonymouslyRequest {
  optional bool dry_run = 1;
}
// @section Campaign Delivery
message SnapshotActivePlacementsForDeliveryCacheAnonymouslyResponse {
  message Placement {
    required int64 placement_id = 1;
    required Website website = 2;
    required Publisher publisher = 3;
    repeated int64 pack_ids = 4;
    map<string, NielsenDARMonitoredPacks> nielsen_dar_monitored_packs_by_country_code = 5;
    map<string, NielsenDARProjection> nielsen_dar_scored_placements_by_country_code = 6;
    required Settings settings = 7;
    message NielsenDARMonitoredPacks {
      repeated NielsenDARProjection nielsen_dar_monitored_packs = 1;
    }
    message NielsenDARProjection {
      required int64 projection_id = 1;
      repeated string nielsen_campaign_ids = 2;
      required double sampling_rate = 3;
    }
    message Publisher {
      required int64 id = 1;
      required int64 office_id = 2;
      required bool pay_test_ad = 3;
      repeated string authorized_tracking_domains = 4;
      required bool is_strategic = 8;
      required bool allow_user_data_usage = 9;
      reserved 5, 6, 7;
    }
    message Settings {
      required Category category = 1;
      required Format format = 3;
      required bool brand_safety_whitelist = 4;
      required bool test_campaigns_only = 5;
      required MoatFormat moat_format = 10;
      message Category {
        required int64 id = 1;
        required string iab_id = 2;
      }
      message Format {
        required int64 id = 1;
        required string name = 2;
      }
      enum MoatFormat {
        MOAT_FORMAT_TEADS_INAPP = 1;
        MOAT_FORMAT_TEADS_WEB = 2;
      }
      reserved 2, 6, 7, 8, 9;
    }
    message Website {
      required int64 id = 1;
      required int64 inventory_type_id = 4;
      required string domain = 5;
      required string name = 6;
      optional int32 tier = 7;
      optional bool is_strategic = 8;
      required bool is_mfa = 9;
      optional double adelaide_sampling_rate = 10;
      reserved 2, 3;
    }
  }
  message Placements {
    repeated Placement placements = 1;
  }
}
// @section Campaign Delivery
message SnapshotActiveRtbLineItemsAnonymouslyRequest {
  optional bool dry_run = 1;
}
// @section Campaign Delivery
message SnapshotActiveRtbLineItemsAnonymouslyResponse {
}
// @section Campaign Delivery
message SnapshotActiveSitesForDeliveryCacheAnonymouslyRequest {
  optional bool dry_run = 1;
}
// @section Campaign Delivery
message SnapshotActiveSitesForDeliveryCacheAnonymouslyResponse {
  message Site {
    required int64 id = 1;
    required string domain = 2;
    required InventoryTier tier = 3;
    required InventoryType inventory_type = 4;
    required Category category = 5;
    required bool is_strategic = 6;
    repeated int64 pack_ids = 7;
    required bool is_brandsafety_whitelisted = 8;
    message Category {
      required int64 id = 1;
      required string iab_id = 2;
    }
    enum InventoryTier {
      INVENTORY_TIER_1 = 1;
      INVENTORY_TIER_2 = 2;
      INVENTORY_TIER_3 = 3;
    }
    enum InventoryType {
      INVENTORY_TYPE_STANDARD_WEB = 1;
      INVENTORY_TYPE_MOBILE_OPTIMIZED_WEB = 2;
    }
  }
  message Sites {
    repeated Site sites = 1;
  }
}
// @section Campaign Delivery
message SnapshotActiveTagLineItemsAnonymouslyRequest {
  optional bool dry_run = 1;
}
// @section Campaign Delivery
message SnapshotActiveTagLineItemsAnonymouslyResponse {
}
// @section Campaign Delivery
message SnapshotBlacklistedAndWhitelistedGrapeshotCategoryPrefixesAnonymouslyRequest {
  optional bool dry_run = 1;
}
// @section Campaign Delivery
message SnapshotBlacklistedAndWhitelistedGrapeshotCategoryPrefixesAnonymouslyResponse {
  message BlacklistedAndWhitelistedGrapeshotCategoryPrefixes {
    repeated string blacklisted_grapeshot_category_prefixes = 1;
    repeated string whitelisted_grapeshot_category_prefixes = 2;
  }
}
// @section Finance
message SnapshotBuyerSeatsIntoRedshiftFinanceAnonymouslyRequest {
}
// @section Finance
message SnapshotBuyerSeatsIntoRedshiftFinanceAnonymouslyResponse {
}
// @section Finance
message SnapshotCampaignsIntoRedshiftFinanceAnonymouslyRequest {
}
// @section Finance
message SnapshotCampaignsIntoRedshiftFinanceAnonymouslyResponse {
}
// @section Finance
message SnapshotConnectionsIntoRedshiftFinanceAnonymouslyRequest {
}
// @section Finance
message SnapshotConnectionsIntoRedshiftFinanceAnonymouslyResponse {
}
// @section Campaign Delivery
message SnapshotCountriesForDeliveryAnonymouslyRequest {
  optional bool dry_run = 1;
}
// @section Campaign Delivery
message SnapshotCountriesForDeliveryAnonymouslyResponse {
  message Countries {
    repeated Country countries = 1;
  }
  message Country {
    // ISO 3166-1 code: "fr", "gb", "es"
    required string country_code = 1;
    optional int64 office_id = 2;
  }
}
// @section Campaign Delivery
message SnapshotDeliveryConcentrationThrottlingFactorsByLineItemAndWebsiteAnonymouslyRequest {
  optional bool dry_run = 1;
}
// @section Campaign Delivery
message SnapshotDeliveryConcentrationThrottlingFactorsByLineItemAndWebsiteAnonymouslyResponse {
  message ThrottlingFactor {
    required int64 line_item_id = 1;
    required int64 website_id = 2;
    required double factor = 3;
  }
  message ThrottlingFactors {
    repeated ThrottlingFactor throttling_factors = 1;
  }
}
// @section Campaign Delivery
message SnapshotNielsenDarMonitoredSegmentsForDeliveryAnonymouslyRequest {
  optional bool dry_run = 1;
}
// @section Campaign Delivery
message SnapshotNielsenDarMonitoredSegmentsForDeliveryAnonymouslyResponse {
}
// @section Campaign Delivery
message SnapshotNielsenDarScoredClustersForDeliveryAnonymouslyRequest {
  optional bool dry_run = 1;
}
// @section Campaign Delivery
message SnapshotNielsenDarScoredClustersForDeliveryAnonymouslyResponse {
}
// @section Finance
message SnapshotPublishersIntoRedshiftFinanceAnonymouslyRequest {
}
// @section Finance
message SnapshotPublishersIntoRedshiftFinanceAnonymouslyResponse {
}
// @section Campaign Delivery
message SnapshotRunRatesForDeliveryAnonymouslyRequest {
  optional bool dry_run = 1;
}
// @section Campaign Delivery
message SnapshotRunRatesForDeliveryAnonymouslyResponse {
  message RunRate {
    required int64 line_item_id = 1;
    required int64 budget_split_id = 2;
    required double run_rate = 3;
  }
  message RunRates {
    repeated RunRate run_rates = 1;
  }
}
// @section Finance
message SnapshotSalesforceAnonymouslyRequest {
}
// @section Finance
message SnapshotSalesforceAnonymouslyResponse {
}
// @section Campaign Delivery
message SnapshotSmoothingLineItemsAnonymouslyRequest {
  optional bool dry_run = 1;
  required string hour = 3;
  reserved 2;
}
// @section Campaign Delivery
message SnapshotSmoothingLineItemsAnonymouslyResponse {
}
// @section Campaign Delivery
message SnapshotUnapprovedCreativesAnonymouslyRequest {
  optional bool dry_run = 1;
}
// @section Campaign Delivery
message SnapshotUnapprovedCreativesAnonymouslyResponse {
  message UnapprovedCreative {
    required int64 publisher_id = 1;
    required int64 creative_id = 2;
  }
  message UnapprovedCreatives {
    repeated UnapprovedCreative unapproved_creatives = 1;
  }
}
// @section Campaign Delivery
message SnapshotUnfilteredLineItemsAnonymouslyRequest {
  optional bool dry_run = 1;
}
// @section Campaign Delivery
message SnapshotUnfilteredLineItemsAnonymouslyResponse {
}
// @section Ab Testing
message StartAbTestRequest {
  required SecurityContext security_context = 1;
  required int64 ab_test_id = 2;
  required string title = 3; // this field is used by sumo logic, which parse this call log and then send notification to #release slack channel
}
// @section Ab Testing
message StartAbTestResponse {
}
// @section Campaign Support
message StartCampaignSupportRequestRequest {
  required SecurityContext security_context = 1;
  required int64 support_request_id = 2;
  required int64 profile_id = 3;
}
// @section Campaign Support
message StartCampaignSupportRequestResponse {
}
// @section Ab Testing
message StopAbTestRequest {
  required SecurityContext security_context = 1;
  required int64 ab_test_id = 2;
  required string title = 3; // this field is used by sumo logic, which parse this call log and then send notification to #release slack channel
}
// @section Ab Testing
message StopAbTestResponse {
}
// @section Campaign
message StopCampaignDeliveryOnWebsiteRequest {
  required SecurityContext security_context = 1;
  required int64 website_id = 2;
  required int64 campaign_id = 3;
}
// @section Campaign
message StopCampaignDeliveryOnWebsiteResponse {
}
// @section Campaign
message StopDeliveryWhenTargetOptimizationsAreNotReachedAnonymouslyRequest {
  required string hour = 1;
  optional float minimum_turnover_euros = 2 [default = 20.000000];
  optional float total_turnover_threshold_weight = 3 [default = 3.000000];
  optional float effective_cpa_threshold_weight = 4 [default = 3.000000];
  optional int32 days_window = 5 [default = 30];
}
// @section Campaign
message StopDeliveryWhenTargetOptimizationsAreNotReachedAnonymouslyResponse {
}
// @section Campaign
message StopInsertionDeliveryOnWebsiteRequest {
  required SecurityContext security_context = 1;
  required WebsiteId website_id = 2;
  required InsertionId insertion_id = 3;
  message InsertionId {
    required int64 value = 1;
  }
  message WebsiteId {
    required int64 value = 1;
  }
}
// @section Campaign
message StopInsertionDeliveryOnWebsiteResponse {
}
// @section Data Science
message StopModelTrainingRequest {
  required SecurityContext security_context = 1;
  required TrainingSource training_source = 2;
  required string model_training_config_id = 3;
}
// @section Data Science
message StopModelTrainingResponse {
}
// @section Creative
message StudioCreativeChangedEvent {
  required string studio_creative_id = 1;
  required StudioCreativeEventType studio_creative_event_type = 2;
  required StudioCreativeSystem studio_creative_system = 3;
  required StudioCreativeTemplate studio_creative_template = 4;
  required StudioCreativeNative studio_creative_native = 5;
  message StudioCreativeNative {
    repeated AssetObject assets = 1;
    repeated EventTracker event_trackers = 2;
    message AssetObject {
      oneof asset_object {
        Title title = 1;
        Image img = 2;
        Data data = 3;
        Video video = 4;
        Link link = 5;
      }
      message Data {
        required DataAssetType type = 1;
        optional int32 len = 2;
        required string value = 3;
        optional Ext ext = 4;
        enum DataAssetType {
          DATA_ASSET_TYPE_SPONSORED = 1;
          DATA_ASSET_TYPE_DESC = 2;
          DATA_ASSET_TYPE_DISPLAY_URL = 11;
          DATA_ASSET_TYPE_CTA_TEXT = 12;
          DATA_ASSET_TYPE_XXX = 500;
        }
      }
      message Image {
        required ImageAssetType type = 1;
        required string url = 2;
        required int32 w = 3;
        required int32 h = 4;
        optional Ext ext = 5;
        enum ImageAssetType {
          IMAGE_ASSET_TYPE_ICON = 1;
          IMAGE_ASSET_TYPE_MAIN = 3;
          IMAGE_ASSET_TYPE_XXX = 500;
        }
      }
      message Link {
        required string url = 1;
        optional Ext ext = 2;
      }
      message Title {
        required string text = 1;
        required int32 len = 2;
        optional Ext ext = 3;
      }
      message Video {
        required string mime = 1;
        required string url = 2;
        required int32 duration = 3;
        optional Ext ext = 4;
      }
    }
    message EventTracker {
      required EventType event = 1;
      required EventTrackingMethod method = 2;
      required string url = 3;
      optional Ext ext = 4;
      enum EventTrackingMethod {
        EVENT_TRACKING_METHOD_IMG = 1;
      }
      enum EventType {
        EVENT_TYPE_IMPRESSION = 1;
      }
    }
    message Ext {
      required string name = 1;
      optional string key = 2;
    }
  }
  enum StudioCreativeEventType {
    STUDIO_CREATIVE_EVENT_TYPE_CREATED = 1;
    STUDIO_CREATIVE_EVENT_TYPE_UPDATED = 2;
  }
  enum StudioCreativeSystem {
    STUDIO_CREATIVE_SYSTEM_CLASSIC = 1;
    STUDIO_CREATIVE_SYSTEM_CREATIVE_EDITOR = 2;
  }
  enum StudioCreativeTemplate {
    STUDIO_CREATIVE_TEMPLATE_SOCIAL_IMAGE_LAYOUT_1 = 1;
    STUDIO_CREATIVE_TEMPLATE_SOCIAL_IMAGE_LAYOUT_2 = 2;
    STUDIO_CREATIVE_TEMPLATE_SOCIAL_VIDEO_LAYOUT_1 = 3;
    STUDIO_CREATIVE_TEMPLATE_SOCIAL_VIDEO_LAYOUT_2 = 4;
    STUDIO_CREATIVE_TEMPLATE_360 = 5;
    STUDIO_CREATIVE_TEMPLATE_BRAND_PULSE = 6;
    STUDIO_CREATIVE_TEMPLATE_BRAND_PULSE_FORM = 7;
    STUDIO_CREATIVE_TEMPLATE_BUTTON = 8;
    STUDIO_CREATIVE_TEMPLATE_CAROUSEL_LANDSCAPE = 9;
    STUDIO_CREATIVE_TEMPLATE_CAROUSEL_SQUARE = 10;
    STUDIO_CREATIVE_TEMPLATE_CINEMAGRAPH_LANDSCAPE = 11;
    STUDIO_CREATIVE_TEMPLATE_CINEMAGRAPH_SQUARE = 12;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_360_SQUARE = 13;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_360_VERTICAL = 14;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_3D_CUBE = 15;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_CANVAS_LANDSCAPE = 16;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_CANVAS_SQUARE = 17;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_CAROUSEL_LANDSCAPE = 18;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_CAROUSEL_SQUARE = 19;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_CIVIL_WAR = 20;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_DRAG_AND_DROP = 21;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_ENDSCREEN_LANDSCAPE_DARK = 22;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_ENDSCREEN_LANDSCAPE_DARK_V2 = 23;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_ENDSCREEN_LANDSCAPE_LIGHT = 24;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_ENDSCREEN_LANDSCAPE_LIGHT_V2 = 25;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_ENDSCREEN_SQUARE_DARK = 26;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_ENDSCREEN_SQUARE_DARK_V2 = 27;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_ENDSCREEN_SQUARE_LIGHT = 28;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_ENDSCREEN_SQUARE_LIGHT_V2 = 29;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_ENDSCREEN_VERTICAL_DARK = 30;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_ENDSCREEN_VERTICAL_DARK_V2 = 31;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_ENDSCREEN_VERTICAL_LIGHT = 32;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_ENDSCREEN_VERTICAL_LIGHT_V2 = 33;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_EXTEND = 34;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_FLOW_LANDSCAPE = 35;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_FLOW_SQUARE = 36;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_GAME_OF_THRONES = 37;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_INTEL = 38;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_INTERACTIVE_EXTEND = 39;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_LEGO = 40;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_MOBILE_SLIDES = 41;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_PERFORMANCE_CAROUSEL_MULTIPLE_CTA = 42;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_PHILIPS_HUE = 43;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_SELECT = 44;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_SOCIAL_INSTAGRAM_IMAGE = 45;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_SOCIAL_INSTAGRAM_VIDEO = 46;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_SWING_LANDSCAPE = 47;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_SWING_SQUARE = 48;
    STUDIO_CREATIVE_TEMPLATE_DEPRECATED_SWING_VERTICAL = 49;
    STUDIO_CREATIVE_TEMPLATE_DISPLAY = 50;
    STUDIO_CREATIVE_TEMPLATE_FLOW_LANDSCAPE = 51;
    STUDIO_CREATIVE_TEMPLATE_FLOW_SQUARE = 52;
    STUDIO_CREATIVE_TEMPLATE_INTERACTIVE_ENDSCREEN_IMAGE = 53;
    STUDIO_CREATIVE_TEMPLATE_INTERACTIVE_ENDSCREEN_SELECT = 54;
    STUDIO_CREATIVE_TEMPLATE_INTERACTIVE_OVERLAY = 55;
    STUDIO_CREATIVE_TEMPLATE_INTERACTIVE_SKIN_LANDSCAPE = 56;
    STUDIO_CREATIVE_TEMPLATE_INTERACTIVE_SKIN_SQUARE = 57;
    STUDIO_CREATIVE_TEMPLATE_INTERACTIVE_SKIN_VERTICAL = 58;
    STUDIO_CREATIVE_TEMPLATE_LIVE = 59;
    STUDIO_CREATIVE_TEMPLATE_PERFORMANCE_CAROUSEL = 60;
    STUDIO_CREATIVE_TEMPLATE_PERFORMANCE_CAROUSEL_FIXED_CTA = 61;
    STUDIO_CREATIVE_TEMPLATE_PERFORMANCE_CAROUSEL_FULL = 62;
    STUDIO_CREATIVE_TEMPLATE_PERFORMANCE_FLOW = 63;
    STUDIO_CREATIVE_TEMPLATE_PERFORMANCE_SCROLLER = 64;
    STUDIO_CREATIVE_TEMPLATE_PERFORMANCE_SINGLE_IMAGE = 65;
    STUDIO_CREATIVE_TEMPLATE_SCROLLER_LANDSCAPE = 66;
    STUDIO_CREATIVE_TEMPLATE_SCROLLER_SQUARE = 67;
    STUDIO_CREATIVE_TEMPLATE_SCROLLER_VERTICAL = 68;
    STUDIO_CREATIVE_TEMPLATE_SLIDESHOW_LANDSCAPE = 69;
    STUDIO_CREATIVE_TEMPLATE_SLIDESHOW_SQUARE = 70;
    STUDIO_CREATIVE_TEMPLATE_SOCIAL_FACEBOOK_IMAGE = 71;
    STUDIO_CREATIVE_TEMPLATE_SOCIAL_FACEBOOK_VIDEO = 72;
    STUDIO_CREATIVE_TEMPLATE_SOCIAL_INSTAGRAM_IMAGE = 73;
    STUDIO_CREATIVE_TEMPLATE_SOCIAL_INSTAGRAM_VIDEO = 74;
    STUDIO_CREATIVE_TEMPLATE_STORIES_DISPLAY_SQUARE = 75;
    STUDIO_CREATIVE_TEMPLATE_STORIES_DISPLAY_VERTICAL = 76;
    STUDIO_CREATIVE_TEMPLATE_STORIES_VIDEO_SQUARE = 77;
    STUDIO_CREATIVE_TEMPLATE_STORIES_VIDEO_VERTICAL = 78;
    STUDIO_CREATIVE_TEMPLATE_VIDEO = 79;
    STUDIO_CREATIVE_TEMPLATE_VIDEOSCROLLER_LANDSCAPE = 80;
    STUDIO_CREATIVE_TEMPLATE_VIDEOSCROLLER_SQUARE = 81;
    STUDIO_CREATIVE_TEMPLATE_VIDEOSCROLLER_VERTICAL = 82;
  }
}
// @section Command Runner
message SubmissionAppliedEvent {
  required string submission_id = 1;
  required SecurityContext applier = 2;
  required SecurityContext submitter = 3;
}
// @section Creatives Approval
message SubmitCreativesForApprovalRequest {
  required SecurityContext security_context = 1;
  repeated CreativeToApprove creatives_to_approve = 2;
  message ConnectionId {
    required int64 value = 1;
  }
  message CreativeToApprove {
    required PublisherId publisher_id = 1;
    optional string dsp_creative_id = 2;
    optional string dsp_campaign_id = 3;
    optional string campaign_id = 4;
    required ConnectionId connection_id = 5;
    required SourceId source_id = 6;
    required int32 bid_responses_count = 7;
  }
  message PublisherId {
    required int64 value = 1;
  }
  message SourceId {
    required int64 value = 1;
  }
}
// @section Creatives Approval
message SubmitCreativesForApprovalResponse {
}
// @section Programmatic
message SyncDealRequest {
  required SecurityContext security_context = 1;
  required string deal_key = 2;
  required int64 buyer_id = 3;
  required Settings settings = 4;
  message Settings {
    oneof delivery {
      NonGuaranteed non_guaranteed = 1;
      Guaranteed guaranteed = 2;
    }
    message FlightDates {
      required google.protobuf.Timestamp start_date = 1;
      required google.protobuf.Timestamp end_date = 2;
      required string timezone = 3;
    }
    message Guaranteed {
      required Price price = 1;
      required FlightDates flight_dates = 2;
      required AdType ad_type = 3;
      message Price {
        required string cpm_value = 1;
        required string budget = 2;
        required string currency = 3;
      }
    }
    message NonGuaranteed {
      required Price price = 1;
      optional FlightDates flight_dates = 2;
      required AdType ad_type = 3;
      message Price {
        required Pricing pricing = 1;
        required string cpm_value = 2;
        required string currency = 3;
        enum Pricing {
          PRICING_UNSPECIFIED = 0;
          PRICING_FIXED = 1;
          PRICING_FIRST = 2;
        }
      }
    }
    enum AdType {
      AD_TYPE_UNSPECIFIED = 0;
      AD_TYPE_VIDEO = 1;
      AD_TYPE_DISPLAY = 2;
      AD_TYPE_NATIVE = 3;
    }
  }
}
// @section Programmatic
message SyncDealResponse {
}
// @section Campaign
message SynchronizeCampaignFromSalesforceOpportunityRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
}
// @section Campaign
message SynchronizeCampaignFromSalesforceOpportunityResponse {
  repeated string created_line_item_ids = 1;
}
// @section Advertiser
message TransferOwnershipForSharedPixelRequest {
  required SecurityContext security_context = 1;
  required int64 pixel_id = 2;
  required int64 buyer_seat_id = 3;
}
// @section Advertiser
message TransferOwnershipForSharedPixelResponse {
}
// @section Advertiser
message TransitionIoBuyerSeatToManagedRequest {
  required SecurityContext security_context = 1;
  required int64 seat_id = 2;
  required double managed_fee = 3;
  required MsaType msa_type = 4;
  required string salesforce_contract_id = 5;
}
// @section Advertiser
message TransitionIoBuyerSeatToManagedResponse {
  required int64 seat_id = 1;
}
// @section Advertiser
message TransitionIoBuyerSeatToSelfServedRequest {
  required SecurityContext security_context = 1;
  required int64 seat_id = 2;
  required double platform_fee = 3;
  required MsaType msa_type = 4;
  required string salesforce_contract_id = 5;
}
// @section Advertiser
message TransitionIoBuyerSeatToSelfServedResponse {
  required int64 seat_id = 1;
}
// @section Advertiser
message TransitionManagedBuyerSeatToSelfServedRequest {
  required SecurityContext security_context = 1;
  required int64 seat_id = 2;
  required double platform_fee = 3;
}
// @section Advertiser
message TransitionManagedBuyerSeatToSelfServedResponse {
  required int64 seat_id = 1;
}
// @section Advertiser
message TransitionSelfServedBuyerSeatToManagedRequest {
  required SecurityContext security_context = 1;
  required int64 seat_id = 2;
  required double managed_fee = 3;
}
// @section Advertiser
message TransitionSelfServedBuyerSeatToManagedResponse {
  required int64 seat_id = 1;
}
// @section Advertiser
message UnblockTrackingForAdvertiserRequest {
  required SecurityContext security_context = 1;
  oneof source {
    int64 advertiser_id = 2;
    int64 buyer_seat_id = 3;
    int64 buyer_pixel_id = 4;
    string domain = 5;
  }
  required string comment = 6;
  optional UrlChecked url_checked = 8;
  message UrlChecked {
    required string url = 1;
    optional int64 advertiser_id = 2;
    optional int64 buyer_pixel_id = 3;
  }
  reserved 7;
}
// @section Advertiser
message UnblockTrackingForAdvertiserResponse {
}
// @section Data Science
message UnloadModelTrainingRequest {
  required SecurityContext security_context = 1;
  required TrainingSource training_source = 2;
  required string model_training_config_id = 3;
}
// @section Data Science
message UnloadModelTrainingResponse {
}
// @section Creative
message UnmarkCreativeFolderAsStarredForAccountRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
  required int64 entity_id = 3;
  required int64 creative_folder_tree_node_id = 4;
}
// @section Creative
message UnmarkCreativeFolderAsStarredForAccountResponse {
}
// @section Advertiser
message UpdateAdvertiserEventsActivityStatisticsAnonymouslyRequest {
  repeated AdvertiserEvent advertiser_events = 1;
  message AdvertiserEvent {
    required int64 id = 1;
    required string name = 2;
    required int64 buyer_pixel_id = 3;
    required int32 number_of_conversions = 4;
  }
}
// @section Advertiser
message UpdateAdvertiserEventsActivityStatisticsAnonymouslyResponse {
}
// @section Inventory
message UpdateAppBundleIdsForAppNameAnonymouslyRequest {
  repeated App apps = 1;
  message App {
    required string name = 1;
    required AppType type = 2;
    repeated string ids = 3;
  }
}
// @section Inventory
message UpdateAppBundleIdsForAppNameAnonymouslyResponse {
}
// @section Inventory
message UpdateAppsForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  repeated AppToUpdate apps_to_update = 3;
  message App {
    required string store_bundle_id = 1;
    required AppPlatform platform = 2;
    optional string store_bundle_url = 3;
    required string name = 4;
    optional string technical_bundle_id = 5;
    required string iab_category_code = 6;
    required InventoryTier tier = 7;
    required bool is_mobile = 8;
    required bool is_ctv = 9;
    optional bool is_strategic = 10 [default = false];
    optional bool is_brandsafety_whitelisted = 11 [default = false];
  }
  message AppId {
    required string store_bundle_id = 1;
    required AppPlatform platform = 2;
  }
  message AppToUpdate {
    required AppId app_id = 1;
    required App app = 2;
  }
}
// @section Inventory
message UpdateAppsForPublisherResponse {
}
// @section Ad Experience
message UpdateArticleAvailableForDemosRequest {
  required SecurityContext security_context = 1;
  required int64 article_id = 2;
  required Article article = 3;
  message Article {
    required string publisher_name = 1;
    required int64 iab_category_id = 2;
    // ISO 639-1 code: "fr", "en", "es"
    required string language_code = 3;
    // ISO 3166-1 code: "fr", "gb", "es"
    required string country_code = 4;
    required int64 creative_position_id = 5;
    optional string legacy_content_path = 6;
    optional uint64 display_priority = 7;
    optional bool is_staging = 8;
    required string md5_checksum = 9;
  }
}
// @section Ad Experience
message UpdateArticleAvailableForDemosResponse {
}
// @section Ad Experience
message UpdateArticlePublisherForDemosRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  required Publisher publisher = 3;
  message Publisher {
    required string name = 1;
  }
}
// @section Ad Experience
message UpdateArticlePublisherForDemosResponse {
}
// @section Users Data
message UpdateAudienceMappingRequest {
  required SecurityContext security_context = 1;
  required int64 audience_id = 2;
  optional AudienceFlavor audience_flavor = 3;
  // As audience mappings are bound to a group of countries, one can only update them for a group of countries that was previously used in AddAudienceMappingRequest
  required CountryGroup country_group = 4;
  // Array of countries on which to apply the mapping
  // The countries are represented by codes from Digital Elements
  // Example: ["6#124","6#840"]
  repeated string countries = 5;
  required DimensionsMapping dimensions_mapping = 6;
  optional AudienceType audience_type = 7;
  optional UsersDataEnvironmentChannel channel = 8;
  message CountryGroup {
    // Array of country codes from Digital Elements
    // Example: ["6#124","6#840"]
    repeated string countries = 1;
  }
  message DimensionsMapping {
    repeated string exelate_ids = 1;
    repeated string bluekai_ids = 2;
    repeated string liveramp_ids = 3;
    repeated string emetriq_ids = 4;
    repeated string teads_segments = 5;
    repeated string grapeshot_channels = 6;
    repeated string website_ids = 7;
    repeated string pack_ids = 8;
    repeated string altice_us_ids = 9;
    repeated string altice_fr_ids = 10;
    repeated string zeotap_ids = 11;
    repeated string skp_ids = 12;
    repeated string contextual_ids = 13;
    repeated string retargetly_ids = 14;
  }
}
// @section Users Data
message UpdateAudienceMappingResponse {
}
// @section Users Data
message UpdateAudienceStatusRequest {
  required SecurityContext security_context = 1;
  required int64 audience_id = 2;
  required AudienceStatus status = 3;
  optional UsersDataEnvironmentChannel channel = 4;
}
// @section Users Data
message UpdateAudienceStatusResponse {
}
// @section Inventory
message UpdateBlockedDemandTypesForPlacementsRequest {
  required SecurityContext security_context = 1;
  repeated int64 placement_ids = 2;
  repeated DemandTypesWithStatus demand_types = 3;
  message DemandTypesWithStatus {
    required int64 id = 1;
    required bool to_block = 2;
  }
}
// @section Inventory
message UpdateBlockedDemandTypesForPlacementsResponse {
}
// @section Ad Experience
message UpdateBrandAssociatedToDemosRequest {
  required SecurityContext security_context = 1;
  required int64 brand_id = 2;
  required Brand brand = 3;
  message Brand {
    required string name = 1;
    optional bool is_staging = 2;
  }
}
// @section Ad Experience
message UpdateBrandAssociatedToDemosResponse {
}
// @section Users Data
message UpdateBuyerPersonaRequest {
  required SecurityContext security_context = 1;
  required int64 entity_id = 2;
  required int64 persona_id = 3;
  required string name = 4;
  repeated Block blocks = 5;
  optional int64 worldwide_reach = 6;
  optional Block excluded_block = 7;
  optional AudienceChannel channel = 8 [default = AUDIENCE_CHANNEL_WEB];
  message Block {
    optional string name = 1;
    required DimensionsMapping dimensions_mapping = 2;
  }
  message DimensionsMapping {
    repeated string exelate_ids = 1;
    repeated string bluekai_ids = 2;
    repeated string liveramp_ids = 3;
    repeated string emetriq_ids = 4;
    repeated string audience_ids = 5;
    repeated string grapeshot_channels = 6;
    repeated string skp_ids = 7;
    repeated string zeotap_ids = 8;
    repeated string contextual_ids = 9;
    repeated string retargetly_ids = 10;
    repeated string altice_us_ids = 11;
    repeated string comscore_audience_ids = 12;
    repeated string altice_fr_ids = 13;
    repeated string crossix_ids = 14;
  }
}
// @section Users Data
message UpdateBuyerPersonaResponse {
}
// @section Users Data
message UpdateBuyerPlannedTargetingRequest {
  required SecurityContext security_context = 1;
  required int64 planned_targeting_id = 2;
  required string name = 3;
  required Targeting targeting = 4;
  required bool is_cookieless = 5;
  optional int64 ad_opportunities = 6;
  optional int64 teads_ids = 7;
  optional UsersDataEnvironmentChannel channel = 8 [default = USERS_DATA_ENVIRONMENT_CHANNEL_WEB];
  message Targeting {
    repeated RuleDisjunction conjunctions = 1;
    required AudiencesDeliveryType demographic_audiences_delivery_type = 2;
    required AudiencesAccuracyLevel other_audiences_accuracy_level = 3;
    message RuleDisjunction {
      repeated Rule rules = 1;
      message Rule {
        required TargetingCriterion criterion = 1;
        required TargetingRuleOperator operator = 2;
        repeated string values = 3;
      }
    }
  }
}
// @section Users Data
message UpdateBuyerPlannedTargetingResponse {
}
// @section Advertiser
message UpdateBuyerSeatFeeRequest {
  required SecurityContext security_context = 1;
  required int64 seat_id = 2;
  required double fee = 3;
}
// @section Advertiser
message UpdateBuyerSeatFeeResponse {
}
// @section Account
message UpdateBuyerSeatNameRequest {
  required SecurityContext security_context = 1;
  required int64 seat_id = 2;
  required string name = 3;
}
// @section Account
message UpdateBuyerSeatNameResponse {
}
// @section Campaign
message UpdateCampaignDraftRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  required string name = 3;
  required string currency = 5;
  optional double budget = 6;
  optional double free_budget = 7;
  optional google.protobuf.Timestamp start_date = 8;
  optional google.protobuf.Timestamp end_date = 9;
  optional string timezone = 10;
  optional int64 advertiser_id = 11;
  optional float agency_fee_rate = 13;
  reserved 4, 12;
}
// @section Campaign
message UpdateCampaignDraftResponse {
}
// @section Campaign Setup
message UpdateCampaignError {
}
// @section Campaign Setup
message UpdateCampaignRequest {
  required SecurityContext security_context = 1;
  required bool dry_run = 2;
  required int64 campaign_id = 3;
  required Status status = 4;
  required string name = 5;
  optional string external_integration_code = 6;
  optional string purchase_order_number = 7;
  required int64 advertiser_id = 8;
  required string currency = 9;
  required CampaignBudget budget = 10;
  required string timezone = 11; // full name or identifier (Europe/Paris, GMT-8:00...)
  required FlightDuration flight_duration = 12;
  optional FrequencyCapping frequency_capping = 13;
  required LumenAttentionMeasurement lumen_attention_measurement = 14;
  optional double agency_fee_percent = 15; // only agency seats can use this setting
  repeated LineItem line_items = 16; // unmodified line item(s) can be omitted
  message CampaignBudget {
    required double paid_amount = 1;
    optional double free_amount = 2;
    optional DynamicAllocation dynamic_allocation = 3;
    message DynamicAllocation {
      oneof pacing {
        EvenPacing even_pacing = 1;
        ManualPacing manual_pacing = 2;
      }
      message EvenPacing {
      }
      message ManualPacing {
        required double paid_daily_goal = 1;
        optional double free_daily_goal = 2;
      }
    }
  }
  message FlightDuration {
    required google.protobuf.Timestamp start_date = 1;
    required google.protobuf.Timestamp end_date = 2;
  }
  message FrequencyCapping {
    required uint32 number_of_events = 1;
    required Event event = 2;
    required Period period = 3;
    enum Event {
      EVENT_IMPRESSION = 0;
      EVENT_START = 1;
      EVENT_PROGRESS_1 = 2;
      EVENT_PROGRESS_2 = 3;
      EVENT_PROGRESS_3 = 4;
      EVENT_PROGRESS_4 = 5;
      EVENT_PROGRESS_5 = 6;
      EVENT_PROGRESS_6 = 7;
      EVENT_PROGRESS_7 = 8;
      EVENT_PROGRESS_8 = 9;
      EVENT_PROGRESS_9 = 10;
      EVENT_PROGRESS_10 = 11;
      EVENT_PROGRESS_11 = 12;
      EVENT_PROGRESS_12 = 13;
      EVENT_PROGRESS_13 = 14;
      EVENT_PROGRESS_14 = 15;
      EVENT_PROGRESS_15 = 16;
      EVENT_PROGRESS_16 = 17;
      EVENT_PROGRESS_17 = 18;
      EVENT_PROGRESS_18 = 19;
      EVENT_PROGRESS_19 = 20;
      EVENT_PROGRESS_20 = 21;
      EVENT_PROGRESS_21 = 22;
      EVENT_PROGRESS_22 = 23;
      EVENT_PROGRESS_23 = 24;
      EVENT_PROGRESS_24 = 25;
      EVENT_PROGRESS_25 = 26;
      EVENT_PROGRESS_26 = 27;
      EVENT_PROGRESS_27 = 28;
      EVENT_PROGRESS_28 = 29;
      EVENT_PROGRESS_29 = 30;
      EVENT_PROGRESS_30 = 31;
      EVENT_COMPLETE = 32;
      EVENT_BILLABLE = 33;
    }
    enum Period {
      PERIOD_HOUR = 0;
      PERIOD_DAY = 1;
      PERIOD_WEEK = 2;
      PERIOD_MONTH = 3;
      PERIOD_YEAR = 4;
      PERIOD_LIFETIME = 5;
    }
  }
  message LineItem {
    oneof action {
      CreateLineItem create = 1;
      UpdateLineItem update = 2;
      DeleteLineItem delete = 3;
    }
    message AssignedCreatives {
      repeated AssignedCreative creatives = 1;
      required bool enable_optimization = 2;
      optional PlayerMode player_mode = 3;
      message AssignedCreative {
        required int64 id = 1;
        required uint32 delivery_share = 2;
      }
      enum PlayerMode {
        PLAYER_MODE_VIEW_TO_START = 0;
        PLAYER_MODE_VIEW_TO_PLAY = 1;
        PLAYER_MODE_VIEW_TO_PLAY_UNTIL = 2;
      }
    }
    message Billing {
      oneof target_objective {
        Branding branding = 1;
        Conversions conversions = 2;
        TrafficAcquisition traffic_acquisition = 3;
      }
      message Branding {
        oneof pricing_model {
          CostPerMille cost_per_mille = 1;
          ViewableCostPerMille viewable_cost_per_mille = 2;
          CostPerCompletedView cost_per_completed_view = 3;
          CostPerView cost_per_view = 4;
        }
        message ClickThroughRateOptimization {
          optional double target_rate = 1;
        }
        message CompleteRateOptimization {
          optional double target_rate = 1;
        }
        message CostPerCompletedView {
          required double price = 1;
          required AuctionType auction_type = 2;
          required BillableEvent billable_event = 3;
          optional double bid_recommendation = 4;
          optional uint32 ad_visibility = 5;
        }
        message CostPerMille {
          required double price = 1;
          required AuctionType auction_type = 2;
          optional double bid_recommendation = 3;
          oneof optimization {
            CompleteRateOptimization complete_rate_optimization = 4;
            ViewabilityRateOptimization viewability_rate_optimization = 5;
            ClickThroughRateOptimization click_through_rate_optimization = 6;
          }
          optional uint32 ad_visibility = 7;
        }
        message CostPerView {
          required double price = 1;
          required AuctionType auction_type = 2;
          required BillableEvent billable_event = 3;
          optional double bid_recommendation = 4;
        }
        message ViewabilityRateOptimization {
          optional double target_rate = 1;
        }
        message ViewableCostPerMille {
          required double price = 1;
          required AuctionType auction_type = 2;
          required BillableEvent billable_event = 3;
          optional double bid_recommendation = 4;
          optional uint32 ad_visibility = 5;
        }
        enum BillableEvent {
          BILLABLE_EVENT_CLICK = 0;
          BILLABLE_EVENT_IMPRESSION = 1;
          BILLABLE_EVENT_START = 2;
          BILLABLE_EVENT_MID_POINT = 3;
          BILLABLE_EVENT_COMPLETE = 4;
          BILLABLE_EVENT_PROGRESS_1 = 5;
          BILLABLE_EVENT_PROGRESS_2 = 6;
          BILLABLE_EVENT_PROGRESS_3 = 7;
          BILLABLE_EVENT_PROGRESS_4 = 8;
          BILLABLE_EVENT_PROGRESS_5 = 9;
          BILLABLE_EVENT_PROGRESS_6 = 10;
          BILLABLE_EVENT_PROGRESS_7 = 11;
          BILLABLE_EVENT_PROGRESS_8 = 12;
          BILLABLE_EVENT_PROGRESS_9 = 13;
          BILLABLE_EVENT_PROGRESS_10 = 14;
          BILLABLE_EVENT_PROGRESS_11 = 15;
          BILLABLE_EVENT_PROGRESS_12 = 16;
          BILLABLE_EVENT_PROGRESS_13 = 17;
          BILLABLE_EVENT_PROGRESS_14 = 18;
          BILLABLE_EVENT_PROGRESS_15 = 19;
          BILLABLE_EVENT_PROGRESS_16 = 20;
          BILLABLE_EVENT_PROGRESS_17 = 21;
          BILLABLE_EVENT_PROGRESS_18 = 22;
          BILLABLE_EVENT_PROGRESS_19 = 23;
          BILLABLE_EVENT_PROGRESS_20 = 24;
          BILLABLE_EVENT_PROGRESS_21 = 25;
          BILLABLE_EVENT_PROGRESS_22 = 26;
          BILLABLE_EVENT_PROGRESS_23 = 27;
          BILLABLE_EVENT_PROGRESS_24 = 28;
          BILLABLE_EVENT_PROGRESS_25 = 29;
          BILLABLE_EVENT_PROGRESS_26 = 30;
          BILLABLE_EVENT_PROGRESS_27 = 31;
          BILLABLE_EVENT_PROGRESS_28 = 32;
          BILLABLE_EVENT_PROGRESS_29 = 33;
          BILLABLE_EVENT_PROGRESS_30 = 34;
        }
      }
      message ConversionLookback {
        required uint64 after_view_in_days = 1;
        required uint64 after_click_in_days = 2;
      }
      message Conversions {
        oneof pricing_model {
          CostPerMille cost_per_mille = 1;
          CostPerClick cost_per_click = 2;
        }
        message ConversionRateOptimization {
          required OptimizedTowardConversion target_conversion = 1;
        }
        message CostPerActionOptimization {
          required double target_cost = 1;
          required OptimizedTowardConversion target_conversion = 2;
        }
        message CostPerClick {
          required double price = 1;
          required AuctionType auction_type = 2;
          oneof optimization {
            ConversionRateOptimization conversion_rate_optimization = 3;
            CostPerActionOptimization cost_per_action_optimization = 4;
          }
        }
        message CostPerMille {
          required double price = 1;
          required AuctionType auction_type = 2;
          oneof optimization {
            ConversionRateOptimization conversion_rate_optimization = 3;
            CostPerActionOptimization cost_per_action_optimization = 4;
          }
        }
        message OptimizedTowardConversion {
          required int64 pixel_id = 1;
          required ConversionType conversion_type = 2;
          required string domain = 3;
          required ConversionLookback lookback = 4;
        }
        enum ConversionType {
          CONVERSION_TYPE_VIEW_CONTENT = 0;
          CONVERSION_TYPE_SEARCH = 1;
          CONVERSION_TYPE_ADD_TO_WISHLIST = 2;
          CONVERSION_TYPE_ADD_TO_CART = 3;
          CONVERSION_TYPE_INITIATE_CHECKOUT = 4;
          CONVERSION_TYPE_LEAD = 5;
          CONVERSION_TYPE_COMPLETE_REGISTRATION = 6;
          CONVERSION_TYPE_PURCHASE = 7;
        }
      }
      message TrafficAcquisition {
        oneof pricing_model {
          CostPerMille cost_per_mille = 1;
          CostPerClick cost_per_click = 2;
        }
        message BounceRateOptimization {
          required double target_rate = 1;
          required OptimizedTowardVisit target_visit = 2;
        }
        message ClickThroughRateOptimization {
          required double target_rate = 1;
          optional OptimizedTowardVisit target_visit = 2;
        }
        message CostPerClick {
          required double price = 1;
          required AuctionType auction_type = 2;
          oneof optimization {
            QualifiedVisitsOptimization qualified_visits_optimization = 3;
            CostPerVisitOptimization cost_per_visit_optimization = 4;
            MinimizeCostPerClickOptimization minimize_cost_per_click_optimization = 5;
            BounceRateOptimization bounce_rate_optimization = 6;
          }
        }
        message CostPerMille {
          required double price = 1;
          required AuctionType auction_type = 2;
          oneof optimization {
            QualifiedVisitsOptimization qualified_visits_optimization = 3;
            CostPerVisitOptimization cost_per_visit_optimization = 4;
            ClickThroughRateOptimization click_through_rate_optimization = 5;
            BounceRateOptimization bounce_rate_optimization = 6;
          }
        }
        message CostPerVisitOptimization {
          required double target_cost = 1;
          required OptimizedTowardVisit target_visit = 2;
        }
        message MinimizeCostPerClickOptimization {
          optional OptimizedTowardVisit target_visit = 1;
        }
        message OptimizedTowardVisit {
          required int64 pixel_id = 1;
          required string domain = 2;
          required ConversionLookback lookback = 3;
        }
        message QualifiedVisitsOptimization {
          required OptimizedTowardVisit target_visit = 1;
        }
      }
      enum AuctionType {
        AUCTION_TYPE_DYNAMIC = 0;
        AUCTION_TYPE_FIXED = 1;
      }
    }
    message CreateLineItem {
      optional int64 line_group_id = 1; // only for campaigns created by Salesforce
      required string name = 2;
      required ChannelType channel_type = 3;
      required bool is_guaranteed = 4;
      required LineItemBudget budget = 5;
      required FlightDuration flight_duration = 6;
      required Scheduling scheduling = 7;
      optional FrequencyCapping frequency_capping = 8;
      required AssignedCreatives assigned_creatives = 9;
      required TargetPosition target_position = 10;
      required Targeting targeting = 11;
      required Billing billing = 12;
      optional Status status = 13;
      optional AddedValueReason added_value_reason = 14;
      // an optional id that helps the caller to determine which final id was auto-generated in database for a line item
      optional string temporary_id = 15;
    }
    message DeleteLineItem {
      required int64 id = 1;
    }
    message LineItemBudget {
      oneof allocation {
        DynamicAllocation dynamic_allocation = 1;
        StaticAllocation static_allocation = 2;
      }
      message DynamicAllocation {
        optional double max_daily_amount = 1;
        required bool can_spend_campaign_free_budget = 2;
      }
      message StaticAllocation {
        required Pacing pacing = 1;
        required bool can_spend_campaign_free_budget = 2;
        required double amount = 3;
        required Period period = 4;
        enum Pacing {
          PACING_EVEN = 0;
          PACING_AHEAD = 1;
          PACING_ASAP = 2;
        }
        enum Period {
          PERIOD_HOUR = 0;
          PERIOD_DAY = 1;
          PERIOD_MONTH = 2;
          PERIOD_YEAR = 3;
          PERIOD_LIFETIME = 4;
        }
      }
    }
    message Scheduling {
      repeated uint32 monday_hours = 1;
      repeated uint32 tuesday_hours = 2;
      repeated uint32 wednesday_hours = 3;
      repeated uint32 thursday_hours = 4;
      repeated uint32 friday_hours = 5;
      repeated uint32 saturday_hours = 6;
      repeated uint32 sunday_hours = 7;
    }
    message Targeting {
      oneof targeting_type {
        Standard standard = 1;
        Advanced advanced = 2;
        Unsupported unsupported = 3;
      }
      message Advanced {
        required int64 id = 1;
        optional bool is_cookieless_criteria_only = 2; // TODO set it required when clients are up to date
      }
      message Standard {
        required TechnologyCriteria technology_criteria = 1;
        required InventoryCriteria inventory_criteria = 2;
        required AudienceCriteria audience_criteria = 3;
        required DemographicAudiencesAccuracy demographic_audiences_accuracy = 4; // applied to ages & genders teads audiences only
        required bool is_cookieless_criteria_only = 5;
        message AudienceCriteria {
          map<string, Relation> locations_relations_by_code = 1;
          required TeadsAudiences teads_audiences = 2;
          repeated int64 custom_audiences_ids = 3;
          map<string, Relation> first_party_audiences_relations_by_id = 4;
          required Languages languages = 5;
          map<uint64, Relation> retargeting_pixels_relations_by_id = 6;
          map<uint64, Relation> remarketing_segments_relations_by_id = 7;
          map<int64, Relation> lookalike_segments_relation_by_ids = 8;
          message Languages {
            oneof provider {
              Grapeshot grapeshot = 1; // web & in-app
              Comscore comscore = 2; // connected TVs
            }
            message Comscore {
              map<uint64, Relation> relations_by_id = 1;
            }
            message Grapeshot {
              map<string, Relation> relations_by_code = 1;
            }
          }
          message TeadsAudiences {
            repeated uint64 genders_ids = 1;
            repeated uint64 ages_ids = 2;
            map<uint64, Membership> audience_memberships_by_id = 3;
            enum Membership {
              MEMBERSHIP_INCLUDED = 0;
              MEMBERSHIP_NARROWED = 1;
              MEMBERSHIP_INCLUDED_AND_NARROWED = 2;
              MEMBERSHIP_EXCLUDED = 3;
            }
          }
        }
        message InventoryCriteria {
          map<uint64, Relation> teads_contextual_relations_by_id = 1;
          required BrandSafety brand_safety = 2;
          required Websites websites = 3;
          map<uint64, Relation> pack_relations_by_id = 4;
          map<string, Relation> app_relations_by_id = 5;
          required BrandSuitability brand_suitability = 6;
          map<string, Relation> domain_relations_by_names = 10;
          message BrandSafety {
            oneof provider {
              Teads teads = 1;
              IntegralAdScience integral_ad_science = 2;
              Grapeshot grapeshot = 3;
              DoubleVerify double_verify = 4;
            }
            message DoubleVerify {
              required uint32 safety_level = 1;
            }
            message Grapeshot {
              required uint32 safety_level = 1;
            }
            message IntegralAdScience {
              required uint32 safety_level = 1;
            }
            message Teads {
              required uint32 safety_level = 1;
            }
          }
          message BrandSuitability {
            repeated uint64 integral_ad_science_ids = 1;
            repeated string grapeshot_ids = 2;
            repeated uint64 double_verify_ids = 3;
          }
          message Websites {
            map<uint64, Relation> relations_by_id = 1;
            map<string, Relation> category_relations_by_code = 2;
            optional Tier tiers = 3;
            enum Tier {
              TIER_PREMIER = 0;
              TIER_SELECT = 1;
              TIER_REACH = 2;
            }
          }
        }
        message TechnologyCriteria {
          map<uint64, Relation> device_type_relations_by_id = 1;
          required MobileDevices mobile_devices = 2;
          map<string, Relation> operating_system_relations_by_name = 3;
          map<string, Relation> browser_relations_by_name = 4;
          map<string, Relation> connection_type_relations_by_name = 5;
          map<string, Relation> internet_service_provider_relations_by_name = 6;
          optional PlatformEnvironment platform_environment = 7;
          message MobileDevices {
            map<string, Relation> carrier_relations_by_name = 1;
            map<string, Relation> model_relations_by_name = 2;
            map<string, Relation> brand_relations_by_name = 3;
            map<string, Relation> category_relations_by_name = 4;
            map<string, Relation> year_relations_by_name = 5;
          }
          enum PlatformEnvironment {
            PLATFORM_ENVIRONMENT_APP = 0;
            PLATFORM_ENVIRONMENT_WEB = 1;
          }
        }
        enum DemographicAudiencesAccuracy {
          DEMOGRAPHIC_AUDIENCES_ACCURACY_ACCURACY = 0;
          DEMOGRAPHIC_AUDIENCES_ACCURACY_STANDARD = 1;
          DEMOGRAPHIC_AUDIENCES_ACCURACY_REACH = 2;
          DEMOGRAPHIC_AUDIENCES_ACCURACY_HIGH_ACCURACY = 3;
        }
        enum Relation {
          RELATION_INCLUDED = 0;
          RELATION_EXCLUDED = 1;
        }
      }
      message Unsupported {
      }
    }
    message UpdateLineItem {
      required int64 id = 1;
      required Status status = 2;
      required string name = 3;
      required ChannelType channel_type = 4;
      required bool is_guaranteed = 5;
      required LineItemBudget budget = 6;
      required FlightDuration flight_duration = 7;
      required Scheduling scheduling = 8;
      optional FrequencyCapping frequency_capping = 9;
      required AssignedCreatives assigned_creatives = 10;
      required TargetPosition target_position = 11;
      required Targeting targeting = 12;
      required Billing billing = 13;
      optional AddedValueReason added_value_reason = 14;
    }
    enum AddedValueReason {
      ADDED_VALUE_REASON_JBP = 0;
      ADDED_VALUE_REASON_AGENCY_DEAL = 1;
      ADDED_VALUE_REASON_MAKE_GOOD = 2;
      ADDED_VALUE_REASON_PRODUCT_TEST = 3;
    }
    enum ChannelType {
      CHANNEL_TYPE_WEB_AND_IN_APP = 0;
      CHANNEL_TYPE_CONNECTED_TV = 1;
      CHANNEL_TYPE_WEB_IN_APP_INSTREAM = 2;
    }
    enum Status {
      STATUS_ENABLED = 0; // can't be applied until the line item has been validated
      STATUS_DISABLED = 1;
    }
    enum TargetPosition {
      TARGET_POSITION_ALL = 0;
      TARGET_POSITION_IN_READ_ONLY = 1;
      TARGET_POSITION_PRE_ROLL = 2;
      TARGET_POSITION_MID_ROLL = 3;
      TARGET_POSITION_POST_ROLL = 4;
    }
  }
  enum LumenAttentionMeasurement {
    LUMEN_ATTENTION_MEASUREMENT_NONE = 0;
    LUMEN_ATTENTION_MEASUREMENT_SAMPLED = 1;
    LUMEN_ATTENTION_MEASUREMENT_ALWAYS = 2;
  }
  enum Status {
    STATUS_ENABLED = 0; // can't be applied until the campaign has been validated
    STATUS_DISABLED = 1;
    STATUS_WAITING_FOR_APPROVAL = 2;
  }
}
// @section Campaign Setup
message UpdateCampaignResponse {
  repeated int64 created_line_item_ids = 1;
  // a map of auto-generated ids in database for each temporary ids that have been provided by the caller
  map<string, int64> generated_ids_by_temporary_id = 2;
}
// @section Users Data
message UpdateContextualSegmentRequest {
  required SecurityContext security_context = 1;
  required uint64 contextual_segment_id = 2;
  required string name = 3;
  required ContextualSegmentProvider provider = 4;
  required ContextualSegmentType type = 5;
  optional double cpm_cost_usd = 6;
  optional string segment_code_from_provider = 7;
  optional uint64 parent_contextual_segment_id = 8;
  required bool active = 9;
  optional string description = 10;
  optional bool is_available = 11;
}
// @section Users Data
message UpdateContextualSegmentResponse {
}
// @section Advertiser
message UpdateConversionsActivityStatisticsAnonymouslyRequest {
  oneof update_by {
    HourlyConversionStatistics hourly_conversion_statistics = 1;
    RealTimeConversionStatistics real_time_conversion_statistics = 2;
  }
  message HourlyActivity {
    required int64 conversion_id = 1;
    required google.protobuf.Timestamp last_activity_date = 2;
    required PixelType pixel_type = 3;
    required int64 nb_different_urls = 4;
    required int32 number_of_conversions = 5;
    required google.protobuf.Timestamp hour = 6;
    required int32 number_of_attributed_conversions = 7;
  }
  message HourlyConversionStatistics {
    repeated HourlyActivity hourly_activities = 1;
  }
  message RealTimeActivity {
    required string conversion_name = 1;
    required int64 pixel_id = 2;
    required google.protobuf.Timestamp last_activity_date = 4;
    required PixelType pixel_type = 5;
    required int64 nb_different_urls = 6;
    required int32 number_of_conversions = 7;
    required google.protobuf.Timestamp hour = 8;
  }
  message RealTimeConversionStatistics {
    repeated RealTimeActivity realtime_activities = 1;
  }
  enum PixelType {
    PIXEL_TYPE_JS = 1;
    PIXEL_TYPE_IMG = 2;
  }
}
// @section Advertiser
message UpdateConversionsActivityStatisticsAnonymouslyResponse {
}
// @section Users Data
message UpdateCookielessBuyerCustomAudienceRequest {
  required SecurityContext security_context = 1;
  required int64 audience_id = 2;
  required string name = 3;
  repeated Block blocks = 4;
  optional int64 reach = 5;
  optional int64 ad_opportunities = 6;
  message Block {
    required DimensionsMapping dimensions_mapping = 1;
  }
  message DimensionsMapping {
    repeated string age_audience_ids = 1;
    repeated string gender_audience_ids = 2;
    repeated string device_type_ids = 3;
    repeated string browsers_ids = 4;
    repeated string device_standardised_name_ids = 5;
    repeated string os_ids = 6;
    repeated string contextual_ids = 7;
    repeated string website_ids = 8;
    repeated string placement_ids = 9;
  }
}
// @section Users Data
message UpdateCookielessBuyerCustomAudienceResponse {
}
// @section Users Data
message UpdateCookielessCustomAudienceRequest {
  required SecurityContext security_context = 1;
  required int64 audience_id = 2;
  required string name = 3;
  repeated Block blocks = 4;
  optional int64 reach = 5;
  optional int64 ad_opportunities = 6;
  message Block {
    required DimensionsMapping dimensions_mapping = 1;
  }
  message DimensionsMapping {
    repeated string age_audience_ids = 1;
    repeated string gender_audience_ids = 2;
    repeated string device_type_ids = 3;
    repeated string browsers_ids = 4;
    repeated string device_standardised_name_ids = 5;
    repeated string os_ids = 6;
    repeated string contextual_ids = 7;
    repeated string website_ids = 8;
    repeated string placement_ids = 9;
  }
}
// @section Users Data
message UpdateCookielessCustomAudienceResponse {
}
// @section Ad Experience
message UpdateCreativeKPISupportedByDemosRequest {
  required SecurityContext security_context = 1;
  required int64 kpi_id = 2;
  required CreativeKPI kpi = 3;
  message CreativeKPI {
    required string name = 1;
    required string description = 2;
  }
}
// @section Ad Experience
message UpdateCreativeKPISupportedByDemosResponse {
}
// @section Ad Experience
message UpdateCreativePositionSupportedByDemosRequest {
  required SecurityContext security_context = 1;
  required int64 position_id = 2;
  required CreativePosition position = 3;
  message CreativePosition {
    required string name = 1;
  }
}
// @section Ad Experience
message UpdateCreativePositionSupportedByDemosResponse {
}
// @section Ad Experience
message UpdateCreativeSizeSupportedByDemosRequest {
  required SecurityContext security_context = 1;
  required int64 size_id = 2;
  required CreativeSize size = 3;
  message CreativeSize {
    required string name = 1;
  }
}
// @section Ad Experience
message UpdateCreativeSizeSupportedByDemosResponse {
}
// @section Ad Experience
message UpdateCreativeTypeSupportedByDemosRequest {
  required SecurityContext security_context = 1;
  required int64 type_id = 2;
  required CreativeType payload = 3;
  message CreativeType {
    required string name = 1;
    required string category = 2;
  }
}
// @section Ad Experience
message UpdateCreativeTypeSupportedByDemosResponse {
}
// @section Creatives Approval
message UpdateCreativesApprovalStatusForAuthorizedBuyersAnonymouslyRequest {
  optional bool dry_run = 1;
}
// @section Creatives Approval
message UpdateCreativesApprovalStatusForAuthorizedBuyersAnonymouslyResponse {
}
// @section Audience Custom
message UpdateCustomAudienceTemplateRequest {
  required SecurityContext security_context = 1;
  required int64 custom_audience_template_id = 2;
  // The entity id of the template's owner.
  required int64 owner_entity_id = 3;
  required string name = 4;
  repeated Block blocks = 5;
  optional Block exclusion_block = 6;
  required AudienceCustomEnvironmentChannel channel = 7;
  required int64 vertical_id = 8;
  // The entity ids of the seats which will be allowed/denied to use the template depending on the value of entity_association_type.
  repeated int64 associated_entity_ids = 10;
  optional AudienceCustomEntityAssociationType entity_association_type = 11;
  optional TaxonomyReach worldwide_reach = 12;
  message Block {
    optional string name = 1;
    required DimensionsMapping dimensions_mapping = 2;
  }
  message DimensionsMapping {
    repeated int64 nielsen_ids = 1;
    repeated int64 oracle_ids = 2;
    repeated int64 liveramp_ids = 3;
    repeated int64 emetriq_ids = 4;
    repeated int64 teads_segments = 5;
    repeated int64 altice_us_ids = 6;
    repeated int64 altice_fr_ids = 7;
    repeated int64 zeotap_ids = 8;
    repeated int64 crossix_ids = 9;
    repeated int64 audience_ids = 10;
    repeated string grapeshot_channels = 11;
    repeated int64 website_ids = 12;
    repeated int64 pack_ids = 13;
    repeated int64 skp_ids = 14;
    repeated int64 standard_contextual_ids = 15;
    repeated int64 retargetly_ids = 16;
    repeated int64 custom_contextual_ids = 17;
    repeated int64 comscore_audience_ids = 18;
    repeated int64 comscore_content_language_ids = 19;
    repeated int64 comscore_genre_ids = 20;
  }
  message TaxonomyReach {
    optional int64 reach = 1;
    optional int64 pageviews = 2;
    optional int64 cookieless_reach = 3;
    optional int64 cookieless_pageviews = 4;
  }
  reserved 9;
}
// @section Audience Custom
message UpdateCustomAudienceTemplateResponse {
  required int64 custom_audience_template_id = 1;
  repeated int64 associated_entity_ids = 2;
}
// @section Campaign
message UpdateCustomTargetingRuleForCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  required int64 rule_id = 3;
  required string targeting_name = 4;
  required string tbl_string = 5;
  required CustomTargetingRuleAudiencesDeliveryType demographic_audiences_delivery_type = 6;
  required CustomTargetingRuleAudiencesAccuracyLevel other_audiences_accuracy_level = 7;
  required bool cookieless_criteria_only = 8;
  required string description = 9;
  required int64 reason_id = 10;
  optional CustomTargetingEnvironmentChannel channel = 11;
}
// @section Campaign
message UpdateCustomTargetingRuleForCampaignResponse {
}
// @section Reporting
message UpdateDatamartRequest {
  required SecurityContext security_context = 1;
  required DatamartToUpdate datamart = 2;
  message DatamartToUpdate {
    required int64 datamart_id = 1;
    required int64 template_id = 2;
    required Frequency frequency = 3;
    required Options options = 4;
    required bool company_wide_alerting = 5;
    optional string retention_period = 6;
    optional Filters filters = 7;
    required string name = 8;
    repeated string dimensions = 9;
    repeated string metrics = 10;
    required DatamartStatus status = 11;
    required ReportOutputFormat format = 12;
    message Filters {
      repeated DemandSource demand_sources = 1;
      repeated string ad_types = 2;
      repeated int64 advertiser_ids = 3;
      repeated int64 placement_ids = 4;
      repeated string hb_providers = 5;
    }
    message Options {
      optional string redshift_sort_key = 1;
      optional string redshift_schema = 2;
      optional string redshift_database = 3;
      optional BigQueryTable big_query_table = 8;
      optional ClusteringField big_query_clustering_field = 9;
      message BigQueryTable {
        required string project_id = 1;
        required string dataset = 2;
        required string table = 3;
      }
      message ClusteringField {
        repeated string fields = 1;
      }
    }
  }
}
// @section Reporting
message UpdateDatamartResponse {
  optional UpdatedDatamart datamart = 1;
  message UpdatedDatamart {
    required int64 datamart_id = 1;
    required int64 template_id = 2;
    required Frequency frequency = 3;
    required Options options = 4;
    required bool company_wide_alerting = 5;
    optional string retention_period = 6;
    optional Filters filters = 7;
    required string name = 8;
    repeated string dimensions = 9;
    repeated string metrics = 10;
    required DatamartStatus status = 11;
    required ReportOutputFormat format = 12;
    message Filters {
      repeated DemandSource demand_sources = 1;
      repeated string ad_types = 2;
      repeated int64 advertiser_ids = 3;
      repeated int64 placement_ids = 4;
      repeated string hb_providers = 5;
    }
    message Options {
      optional string redshift_sort_key = 1;
      optional string redshift_schema = 2;
      optional string redshift_database = 3;
      optional BigQueryTable big_query_table = 8;
      optional ClusteringField big_query_clustering_field = 9;
      message BigQueryTable {
        required string project_id = 1;
        required string dataset = 2;
        required string table = 3;
      }
      message ClusteringField {
        repeated string fields = 1;
      }
    }
  }
}
// @section User Privacy
message UpdateDeliverableCreativesPrivacyComplianceAnonymouslyRequest {
  optional bool dry_run = 1;
}
// @section User Privacy
message UpdateDeliverableCreativesPrivacyComplianceAnonymouslyResponse {
}
// @section Ad Experience
message UpdateDemoConfigurationForTenantError {
  repeated Error errors = 1;
  message Error {
    oneof error_type {
      IncompleteSetup incomplete_setup = 1;
      MissingResource missing_resource = 2;
    }
  }
  message IncompleteSetup {
    required string reason = 1;
    optional uint64 vertical_id = 2;
    optional uint64 creative_kpi_id = 3;
  }
  message MissingResource {
    required string reason = 1;
    required string url = 2;
  }
}
// @section Ad Experience
message UpdateDemoConfigurationForTenantRequest {
  required SecurityContext security_context = 1;
  required uint64 tenant_id = 2;
  required int64 demo_configuration_id = 3;
  required Configuration configuration = 4;
  message Configuration {
    optional string title = 1;
    required string vast_url = 2;
    required string thumbnail_url = 3;
    optional string description = 4;
    required uint64 article_id = 5;
    required uint64 creative_type_id = 6;
    required uint64 creative_size_id = 7;
    optional uint64 vertical_id = 9;
    optional uint64 creative_kpi_id = 10;
    optional uint64 brand_id = 11;
    optional uint64 display_priority = 12;
    optional uint64 vertical_display_priority = 13;
    repeated Market markets = 14;
    optional bool is_staging = 15;
  }
  message Market {
    required uint64 market_id = 1;
    optional uint64 display_priority = 2;
  }
}
// @section Ad Experience
message UpdateDemoConfigurationForTenantResponse {
}
// @section Ad Experience
message UpdateDemoIABCategoryRequest {
  required SecurityContext security_context = 1;
  required int64 category_id = 2;
  required IABCateogry category = 3;
  message IABCateogry {
    required string name = 1;
  }
}
// @section Ad Experience
message UpdateDemoIABCategoryResponse {
}
// @section Ad Experience
message UpdateMarketSupportedByDemoRequest {
  required SecurityContext security_context = 1;
  required int64 market_id = 2;
  required Market market = 3;
  message Market {
    required string name = 1;
    required string office = 2;
    optional string description = 3;
    optional bool is_staging = 4;
  }
}
// @section Ad Experience
message UpdateMarketSupportedByDemoResponse {
}
// @section Mrg Contract
message UpdateMrgContractCommitmentsRequest {
  required SecurityContext security_context = 1;
  required string mrg_contract_uuid = 2;
  repeated Commitment commitments = 3;
  message Commitment {
    required string uuid = 1;
    optional TeadsCommitment teads_commitment = 2;
    optional PublisherCommitment publisher_commitment = 3;
  }
  message PublisherCommitment {
    required int64 volume = 1;
  }
  message TeadsCommitment {
    // The 3-letter currency code defined in ISO 4217
    required string currency = 1;
    required double revenue = 2;
  }
}
// @section Mrg Contract
message UpdateMrgContractCommitmentsResponse {
}
// @section Mrg Contract
message UpdateMrgContractRequest {
  required SecurityContext security_context = 1;
  required string mrg_contract_uuid = 2;
  required string name = 3;
  required MrgContractPeriod period = 4;
  repeated int64 publisher_party_ids = 5;
  repeated int64 inventory_ids = 6;
  required bool includes_all_inventory = 7;
  required bool includes_all_new_inventory = 8;
  required MrgContractExclusivity exclusivity = 9;
  optional int32 auto_renewal_period = 10;
  optional google.protobuf.Timestamp renewal_limit_date = 11;
  optional string comment = 12;
  repeated int64 excluded_placements = 13;
  message MrgContractPeriod {
    required google.protobuf.Timestamp start_date = 1;
    required google.protobuf.Timestamp end_date = 2;
  }
}
// @section Mrg Contract
message UpdateMrgContractResponse {
}
// @section Inventory
message UpdatePackForBuyerRequest {
  required SecurityContext security_context = 1;
  required int64 buyer_id = 2;
  required int64 pack_id = 3;
  required string name = 4;
  repeated int64 app_ids = 5;
  repeated int64 placement_ids = 6;
  repeated int64 site_ids = 7;
}
// @section Inventory
message UpdatePackForBuyerResponse {
}
// @section Users Data
message UpdatePersonaRequest {
  required SecurityContext security_context = 1;
  required int64 persona_id = 2;
  required string name = 3;
  repeated Block blocks = 4;
  optional int64 advertiser_id = 5;
  optional int64 worldwide_reach = 6;
  optional Block excluded_block = 7;
  optional UsersDataEnvironmentChannel channel = 8 [default = USERS_DATA_ENVIRONMENT_CHANNEL_WEB];
  message Block {
    optional string name = 1;
    required DimensionsMapping dimensions_mapping = 2;
  }
  message DimensionsMapping {
    repeated string exelate_ids = 1;
    repeated string bluekai_ids = 2;
    repeated string liveramp_ids = 3;
    repeated string emetriq_ids = 4;
    repeated string teads_segments = 5;
    repeated string altice_us_ids = 6;
    repeated string altice_fr_ids = 7;
    repeated string zeotap_ids = 8;
    repeated string crossix_ids = 9;
    repeated string audience_ids = 10;
    repeated string grapeshot_channels = 11;
    repeated string website_ids = 12;
    repeated string pack_ids = 13;
    repeated string skp_ids = 14;
    repeated string standard_contextual_ids = 15;
    repeated string retargetly_ids = 16;
    repeated string custom_contextual_ids = 17;
    repeated string comscore_audience_ids = 18;
    repeated string comscore_content_language_ids = 19;
    repeated string comscore_genre_ids = 20;
  }
}
// @section Users Data
message UpdatePersonaResponse {
}
// @section Advertiser
message UpdatePixelSharingForBuyerRequest {
  required SecurityContext security_context = 1;
  required int64 pixel_id = 2;
  required int64 buyer_seat_id = 3;
  required bool is_sharing_read_only = 4;
}
// @section Advertiser
message UpdatePixelSharingForBuyerResponse {
}
// @section Inventory
message UpdatePlacementsForAssistedPacksAnonymouslyRequest {
  repeated PlacementForAssistedPack placements_for_assisted_packs = 1;
  optional google.protobuf.Timestamp created_at = 2;
  message PlacementForAssistedPack {
    required int64 id_pack = 1;
    required int64 id_placement = 2;
  }
}
// @section Inventory
message UpdatePlacementsForAssistedPacksAnonymouslyResponse {
}
// @section Account
message UpdateProfileInfoRequest {
  required SecurityContext security_context = 1;
  required int64 profile_id = 2;
  required string email = 3;
  required string firstname = 4;
  required string lastname = 5;
  // language_TERRITORY: en_US, fr_FR, es_ES, ...
  required string locale = 6;
  optional string timezone = 7 [default = "Europe/Paris"]; // Europe/Paris, Europe/Berlin, US/Central
  optional int64 preferred_entity_id = 8;
}
// @section Account
message UpdateProfileInfoResponse {
}
// @section Campaign
message UpdatePublisherDirectSalesCampaignRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_id = 2;
  required string name = 3;
  required string iab_category_code = 4;
  optional int64 advertiser_id = 5;
  optional int64 agency_id = 6;
  optional bool is_test_campaign = 7;
  optional bool tracked_by_moat = 8;
}
// @section Campaign
message UpdatePublisherDirectSalesCampaignResponse {
}
// @section Campaign
message UpdatePublisherDirectSalesCampaignTagRequest {
  required SecurityContext security_context = 1;
  required int64 campaign_tag_id = 2;
  required string name = 3;
  optional int64 advertiser_id = 4;
  optional int64 agency_id = 5;
  optional bool tracked_by_moat = 6;
}
// @section Campaign
message UpdatePublisherDirectSalesCampaignTagResponse {
}
// @section Campaign
message UpdatePublisherDirectSalesCreativeRequest {
  required SecurityContext security_context = 1;
  required int64 creative_id = 2;
  required string creative_name = 3;
  required int64 format_size_id = 4;
  required int64 format_creative_type_id = 5;
  oneof media {
    FirstPartyMedia first_party_media = 6;
    ThirdPartyMedia third_party_media = 7;
  }
  repeated ThirdPartyTracking third_party_trackings = 8;
  required DirectSalesCreativeCreator created_with = 9;
  message FirstPartyMedia {
    required string asset_path = 1;
    optional string click_through_url = 2;
    optional CallToAction call_to_action = 3;
    message CallToAction {
      required DirectSalesCreativeAction action = 1;
      optional int64 countdown = 2;
    }
  }
  message ThirdPartyMedia {
    required string vast_url = 1;
  }
  message ThirdPartyTracking {
    required DirectSalesThirdPartyTrackingEvent tracking_event = 1;
    required string tracking_url = 2;
  }
}
// @section Campaign
message UpdatePublisherDirectSalesCreativeResponse {
}
// @section Campaign
message UpdatePublisherDirectSalesLineItemRequest {
  required SecurityContext security_context = 1;
  required int64 line_item_id = 2;
  required string name = 3;
  required Budget budget = 4;
  required Price selling_price = 5;
  optional Capping frequency_capping = 7;
  required Duration flight_duration = 8;
  repeated int64 format_positions_ids = 10;
  optional WeekSchedule schedule = 11;
  optional KpiOptimization kpi_optimization = 12;
  optional string targeting_rule = 13;
  optional FormatSettings format_settings = 14;
  repeated AssignedCreative assigned_creatives = 15;
  // when the line item wins an SSP auction in a header bidding context, this value is sent
  // by Teads' adapter to flag it as a particular deal ID, triggering a custom targeting
  // and/or pacing behavior on ad server side
  optional string header_bidding_deal_id_targeting = 16;
  required CampaignPacing pacing = 17;
  message AssignedCreative {
    required int64 creative_id = 1;
    optional int32 share_of_voice = 2;
  }
  message Budget {
    required double amount = 1;
    required DirectSalesLineItemBudgetPeriod period = 2;
  }
  message Capping {
    required int64 amount = 1;
    required DirectSalesBillableCappingEvent event = 2;
    required DirectSalesLineItemCappingPeriod period = 3;
  }
  message Duration {
    required google.protobuf.Timestamp start_date = 1;
    required google.protobuf.Timestamp end_date = 2;
    required string timezone = 3;
  }
  message FormatSettings {
    required DirectSalesLineItemStartMode start_mode = 1;
    required int32 viewability_threshold = 2;
  }
  message KpiOptimization {
    required DirectSalesLineItemOptimizedKpi kpi = 1;
    optional double threshold = 2;
  }
  message Price {
    required double amount = 1;
    required DirectSalesBillablePriceEvent event = 3;
  }
  message WeekSchedule {
    required DaySchedule monday = 1;
    required DaySchedule tuesday = 2;
    required DaySchedule wednesday = 3;
    required DaySchedule thursday = 4;
    required DaySchedule friday = 5;
    required DaySchedule saturday = 6;
    required DaySchedule sunday = 7;
    message DaySchedule {
      // Array of ints between 0 and 23
      repeated int32 hours = 1;
    }
  }
  reserved 6;
}
// @section Campaign
message UpdatePublisherDirectSalesLineItemResponse {
}
// @section Campaign
message UpdatePublisherDirectSalesTagRequest {
  required SecurityContext security_context = 1;
  required int64 tag_id = 2;
  repeated AssignedCreative assigned_creatives = 3;
  required string name = 4;
  optional Price selling_price = 5;
  message AssignedCreative {
    required int64 creative_id = 1;
    // Share of voice must be defined for every creative in the request, or none.
    // If defined, the sum of the share of voice of the creatives in the request must total 100.
    optional int32 share_of_voice = 2;
  }
  message Price {
    required double amount = 1;
    required DirectSalesBillablePriceEvent event = 2;
  }
}
// @section Campaign
message UpdatePublisherDirectSalesTagResponse {
}
// @section Account
message UpdatePublisherTypeSettingValuesRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  repeated PublisherTypeSettingValue publisher_type_setting_values = 3;
  message PublisherTypeSettingValue {
    required string value = 1;
    required int64 publisher_type_setting_value_id = 2;
  }
}
// @section Account
message UpdatePublisherTypeSettingValuesResponse {
}
// @section Users Data
message UpdateQuarantinedSegmentsRequest {
  required SecurityContext security_context = 1;
  repeated QuarantinedSegment quarantined_segments = 2;
  message QuarantinedSegment {
    required SegmentIdFromProvider segment = 1;
    required string name = 2;
    optional double price = 3;
    oneof first_party {
      int64 advertiser_id = 4;
      int64 publisher_id = 5;
    }
    required SegmentState state = 6;
    required bool is_crm = 7;
    optional bool blocked_on_self_served = 8 [default = false];
    message SegmentIdFromProvider {
      required string id = 1;
      required QuarantineProvider provider = 2;
    }
    enum SegmentState {
      SEGMENT_STATE_QUARANTINED = 0;
      SEGMENT_STATE_VALIDATED = 1;
      SEGMENT_STATE_DISCARDED = 2;
    }
  }
}
// @section Users Data
message UpdateQuarantinedSegmentsResponse {
  // Represents segments that could not have been updated
  repeated SegmentIdFromProvider failed_segments = 1;
  message SegmentIdFromProvider {
    required string id = 1;
    required QuarantineProvider provider = 2;
  }
}
// @section Ab Testing
message UpdateReadyCampaignAbTestRequest {
  required SecurityContext security_context = 1;
  required int64 ab_test_id = 2;
  required string title = 3;
  required int32 split_algorithm_id = 4;
  repeated Population populations = 5;
  message Population {
    required int32 id = 1;
    required string name = 2;
    required int32 size = 3;
  }
}
// @section Ab Testing
message UpdateReadyCampaignAbTestResponse {
}
// @section Ab Testing
message UpdateReadyPlatformAbTestRequest {
  required SecurityContext security_context = 1;
  required int64 ab_test_id = 2;
  required string title = 3;
  required int32 split_algorithm_id = 4;
  repeated Population populations = 5;
  repeated int32 abtest_analysis_ids = 6;
  optional string commentary = 7;
  message Population {
    required int32 id = 1;
    required string name = 2;
    required int32 size = 3;
    map<string, string> parameters = 4;
  }
}
// @section Ab Testing
message UpdateReadyPlatformAbTestResponse {
}
// @section Retail Media
message UpdateRetailerError {
  repeated Error errors = 1;
  message Error {
    oneof error_type {
      RetailerNotFound retailer_not_found = 1;
    }
  }
  message RetailerNotFound {
    required string reason = 1;
  }
}
// @section Retail Media
message UpdateRetailerRequest {
  required SecurityContext security_context = 1;
  required int64 retailer_id = 2;
  required string name = 3;
  required string cart_redirect_url = 4;
  optional RetailerCMS cms = 5;
  optional string json_configuration = 6;
  optional string locale = 7;
  optional string country = 8;
  required RetailerCartingMode carting_mode = 9;
  required RetailerProductStrategyAllowed product_strategy_allowed = 10;
  optional bool is_pixel = 11;
}
// @section Retail Media
message UpdateRetailerResponse {
  required int64 retailer_id = 1;
  required string name = 2;
  optional string cart_redirect_url = 3;
  optional RetailerCMS cms = 4;
  optional string json_configuration = 5;
  optional string locale = 6;
  optional string country = 7;
  required RetailerCartingMode carting_mode = 8;
  required RetailerProductStrategyAllowed product_strategy_allowed = 9;
  required google.protobuf.Timestamp created_at = 10;
  required google.protobuf.Timestamp updated_at = 11;
  required bool is_pixel = 12;
}
// @section Retail Media
message UpdateRetailerSmartlinkConfigurationError {
  repeated Error errors = 1;
  message ConfigurationNameAlreadyExist {
    required string reason = 1;
  }
  message ConfigurationNotFound {
    required string reason = 1;
  }
  message Error {
    oneof error_type {
      ConfigurationNameAlreadyExist configuration_name_already_exist = 1;
      ConfigurationNotFound configuration_not_found = 2;
      RetailerNotFound retailer_not_found = 3;
    }
  }
  message RetailerNotFound {
    required string reason = 1;
  }
}
// @section Retail Media
message UpdateRetailerSmartlinkConfigurationRequest {
  required SecurityContext security_context = 1;
  required int64 smartlink_configuration_id = 2;
  required string name = 3;
  required int64 retailer_id = 4;
  repeated Product products = 5;
  optional double total_price = 6;
  required string currency = 7;
  optional string landing_page_url = 8;
  message Product {
    optional string name = 1;
    required string sku = 2;
    required int64 quantity = 3;
    optional double price = 4;
    optional string seller_id = 6;
    reserved 5;
  }
}
// @section Retail Media
message UpdateRetailerSmartlinkConfigurationResponse {
  required int64 configuration_id = 1;
  required string name = 2;
  required Retailer retailer = 3;
  repeated Product products = 4;
  optional double total_price = 5;
  required string currency = 6;
  required google.protobuf.Timestamp created_at = 7;
  required google.protobuf.Timestamp updated_at = 8;
  optional string landing_page_url = 9;
  message Product {
    required int64 id = 1;
    optional string name = 2;
    required string sku = 3;
    required int64 quantity = 4;
    optional double price = 5;
    optional string seller_id = 7;
    reserved 6;
  }
  message Retailer {
    required int64 id = 1;
    required string name = 2;
    optional string cart_redirect_url = 3;
    optional RetailerCMS cms = 4;
    optional string json_configuration = 5;
    optional string locale = 6;
    optional string country = 7;
    required RetailerCartingMode carting_mode = 8;
    required RetailerProductStrategyAllowed product_strategy_allowed = 9;
  }
}
// @section Ab Testing
message UpdateRunningPlatformAbTestRequest {
  required SecurityContext security_context = 1;
  required int64 ab_test_id = 2;
  required string title = 3;
  repeated int32 abtest_analysis_ids = 4;
  map<int32, int32> source_population_id_by_target_population_id = 5; // to copy parameters from population A to population B
  optional string commentary = 6;
}
// @section Ab Testing
message UpdateRunningPlatformAbTestResponse {
}
// @section Inventory
message UpdateSitesForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  repeated SiteToUpdate sites_to_update = 3;
  message Site {
    required string domain = 1;
    required string name = 2;
    required InventoryTier tier = 3;
    required string iab_category_code = 4;
    required InventoryType inventory_type = 5;
    optional bool is_strategic = 6 [default = false];
    optional bool is_brandsafety_whitelisted = 7 [default = false];
  }
  message SiteToUpdate {
    required string domain = 1;
    required Site new_values = 2;
  }
}
// @section Inventory
message UpdateSitesForPublisherResponse {
}
// @section Inventory
message UpdateTfpFeaturesForPublisherRequest {
  required SecurityContext security_context = 1;
  required int64 publisher_id = 2;
  repeated UpdatedFeature updated_features = 3;
  message UpdatedFeature {
    required TfpFeature feature = 1;
    required bool enabled = 2;
  }
}
// @section Inventory
message UpdateTfpFeaturesForPublisherResponse {
}
// @section Advertiser
message UpdateUrlFromAdvertiserEventForBuyerPixelRequest {
  required SecurityContext security_context = 1;
  required int64 buyer_pixel_id = 2;
  required int64 url_mapping_id = 3;
  required string url = 4;
  optional string conversion_name = 5; // If not provided and present in DB, will be deleted
  optional UrlMappingMatchType match_type = 6;
}
// @section Advertiser
message UpdateUrlFromAdvertiserEventForBuyerPixelResponse {
}
// @section Ad Experience
message UpdateVerticalSupportedByDemosRequest {
  required SecurityContext security_context = 1;
  required int64 vertical_id = 2;
  required Vertical vertical = 3;
  message Vertical {
    required string name = 1;
    required string full_name = 2;
    optional bool is_staging = 3;
  }
}
// @section Ad Experience
message UpdateVerticalSupportedByDemosResponse {
}
// @section Inventory
message UpdateVettingInformationForAppsRequest {
  required SecurityContext security_context = 1;
  required int64 current_reviewer_id = 2;
  repeated AppWithVettingInformation apps = 3;
  message AppWithVettingInformation {
    required string store_bundle_id = 1;
    required AppPlatform platform = 2;
    required VettingOutcome outcome = 3;
    optional string store_bundle_url = 4;
    optional string name = 5;
    optional string technical_bundle_id = 6;
    optional string iab_category_code = 7;
    optional InventoryTier inventory_tier = 8;
    optional bool is_mobile = 9;
    optional bool is_ctv = 10;
    optional bool is_strategic = 11;
    optional bool is_brandsafety_whitelisted = 12;
    optional int64 reviewer_id = 13;
    optional string reviewer_comment = 14;
    optional int64 followup_reviewer_id = 15;
    optional string followup_reviewer_comment = 16;
    repeated Publisher publishers = 17;
  }
  message Publisher {
    required int64 id = 1;
    required PublisherInventoryStatus status = 2;
  }
}
// @section Inventory
message UpdateVettingInformationForAppsResponse {
}
// @section Inventory
message UpdateVettingInformationForSitesRequest {
  required SecurityContext security_context = 1;
  required int64 current_reviewer_id = 2;
  repeated SiteWithVettingInformation sites = 3;
  message Publisher {
    required int64 id = 1;
    required PublisherInventoryStatus status = 2;
  }
  message SiteWithVettingInformation {
    required string domain = 1;
    required VettingOutcome outcome = 2;
    optional string name = 3;
    optional InventoryTier inventory_tier = 4;
    optional string iab_category_code = 5;
    optional InventoryType inventory_type = 6;
    optional bool is_strategic = 7;
    optional bool is_brandsafety_whitelisted = 8;
    optional bool is_mfa = 9;
    optional bool gdi_contains_pfi_segment = 10;
    optional string newsguard_false_content = 11;
    optional string newsguard_score = 12;
    optional string publisher_sources = 13;
    optional string article_content = 14;
    optional string main_traffic_source = 15;
    optional string ads_txt = 16;
    optional int64 reviewer_id = 17;
    optional string reviewer_comment = 18;
    optional int64 followup_reviewer_id = 19;
    optional string followup_reviewer_comment = 20;
    repeated Publisher publishers = 21;
  }
}
// @section Inventory
message UpdateVettingInformationForSitesResponse {
}
// @section Users Data
message UpdateWeatherSegmentRequest {
  required SecurityContext security_context = 1;
  required int64 weather_segment_id = 2;
  required string name = 3;
  optional double cpm_in_usd = 4;
  optional string segment_code_from_provider = 5;
  optional int64 parent_weather_segment_id = 6;
  required bool is_active = 7;
  optional string description = 8;
  repeated string country_codes = 9; // ISO639-1 codes
  optional bool is_available = 10;
}
// @section Users Data
message UpdateWeatherSegmentResponse {
}
// @section Traffic
message UpdateWhitelistedIPRangesRequest {
  required SecurityContext security_context = 1;
  required int64 whitelisted_ip_ranges_id = 2;
  required string name = 3;
  repeated string cidr_ranges = 4;
}
// @section Traffic
message UpdateWhitelistedIPRangesResponse {
}
// @section Finance
message UploadLastCompletedMonthOfLineItemBillablesAnonymouslyRequest {
}
// @section Finance
message UploadLastCompletedMonthOfLineItemBillablesAnonymouslyResponse {
}
// @section Finance
message UploadPriceAnalysisForBusinessIntelligenceAnonymouslyRequest {
  required google.protobuf.Timestamp start_date = 1;
  required google.protobuf.Timestamp end_date = 2;
  required string files_directory_name = 3;
}
// @section Finance
message UploadPriceAnalysisForBusinessIntelligenceAnonymouslyResponse {
}
// @section Campaign
message UploadTrackingCampaignsDataForBusinessIntelligenceAnonymouslyRequest {
}
// @section Campaign
message UploadTrackingCampaignsDataForBusinessIntelligenceAnonymouslyResponse {
}
// @section Inventory
message UseDivHopsHeaderBiddingSlotSelectionForWebsitesError {
  repeated Error errors = 1;
  message Error {
    oneof error_type {
      NonHeaderBiddingWebsite non_header_bidding_website = 1;
    }
  }
  message NonHeaderBiddingWebsite {
    required int64 website_id = 1;
  }
}
// @section Inventory
message UseDivHopsHeaderBiddingSlotSelectionForWebsitesRequest {
  required SecurityContext security_context = 1;
  repeated int64 website_ids = 2;
}
// @section Inventory
message UseDivHopsHeaderBiddingSlotSelectionForWebsitesResponse {
}
// @section Finance
message ValidatePublisherDirectSalesDealIdBillableRequest {
  required SecurityContext security_context = 1;
  required PublisherDirectSalesDealIdBillable billable = 2;
  message Amendment {
    required double publisher_platform_fee_amended = 1;
    required string comment = 2;
  }
  message PublisherDirectSalesDealIdBillable {
    required int64 publisher_id = 1;
    required string publisher_name = 2;
    required int64 billing_office_id = 3;
    required string billing_office_name = 4;
    required int64 operator_office_id = 5;
    required string operator_office_name = 6;
    required int64 publisher_billable_volume = 7;
    required string billing_currency = 8;
    required double publisher_platform_fee = 9;
    required double publisher_platform_fee_gross = 10;
    required double dsp_billing_amount = 11;
    required double publisher_platform_fee_converted_usd = 12;
    required double publisher_platform_fee_gross_converted_usd = 13;
    required double dsp_billing_amount_converted_usd = 14;
    required YearMonth year_month = 15;
    optional Amendment amendment = 16;
  }
  message YearMonth {
    required int32 month = 1;
    required int32 year = 2;
  }
}
// @section Finance
message ValidatePublisherDirectSalesDealIdBillableResponse {
}
// @section Traffic
message WhitelistAppBundleIdRequest {
  required SecurityContext security_context = 1;
  required string name = 2;
  required string app_bundle_id = 3;
}
// @section Traffic
message WhitelistAppBundleIdResponse {
  required int64 whitelisted_app_bundle_id_id = 1;
}
// @section Traffic
message WhitelistDomainRequest {
  required SecurityContext security_context = 1;
  required string name = 2;
  required string domain = 3;
}
// @section Traffic
message WhitelistDomainResponse {
  required int64 whitelisted_domain_id = 1;
}
// @section Ab Testing
enum AbtestStatus {
  ABTEST_STATUS_READY = 1;
  ABTEST_STATUS_SCHEDULED_START = 2;
  ABTEST_STATUS_RUNNING = 3;
  ABTEST_STATUS_STOPPED = 4;
  ABTEST_STATUS_UNDEFINED = 5;
}
// @section Account
enum AccountType {
  ACCOUNT_TYPE_INTERNAL_EMPLOYEE = 1;
  ACCOUNT_TYPE_PUBLISHER = 2;
  ACCOUNT_TYPE_ADVERTISER = 3;
  ACCOUNT_TYPE_AGENCY = 4;
}
// @section Ad Experience
enum AdExperienceDevice {
  AD_EXPERIENCE_DEVICE_DESKTOP = 0;
  AD_EXPERIENCE_DEVICE_MOBILE = 1;
  AD_EXPERIENCE_DEVICE_CTV = 2;
}
// @section Ad Quality
enum AdQualityCreativeFormatSize {
  AD_QUALITY_CREATIVE_FORMAT_SIZE_LANDSCAPE = 0;
  AD_QUALITY_CREATIVE_FORMAT_SIZE_SQUARE = 1;
  AD_QUALITY_CREATIVE_FORMAT_SIZE_VERTICAL = 2;
  AD_QUALITY_CREATIVE_FORMAT_SIZE_BANNER = 3;
  AD_QUALITY_CREATIVE_FORMAT_SIZE_SOCIAL = 4;
}
// @section Ad Quality
enum AdQualityCreativeFormatType {
  AD_QUALITY_CREATIVE_FORMAT_TYPE_VIDEO = 0;
  AD_QUALITY_CREATIVE_FORMAT_TYPE_VIDEO_360 = 1;
  AD_QUALITY_CREATIVE_FORMAT_TYPE_VIDEO_LIVE = 2;
  AD_QUALITY_CREATIVE_FORMAT_TYPE_SCROLLER = 3;
  AD_QUALITY_CREATIVE_FORMAT_TYPE_SWING = 4;
  AD_QUALITY_CREATIVE_FORMAT_TYPE_SLIDESHOW = 5;
  AD_QUALITY_CREATIVE_FORMAT_TYPE_CAROUSEL = 6;
  AD_QUALITY_CREATIVE_FORMAT_TYPE_CANVAS = 7;
  AD_QUALITY_CREATIVE_FORMAT_TYPE_ENGAGE = 8;
  AD_QUALITY_CREATIVE_FORMAT_TYPE_DISPLAY_CLASSIC = 9;
  AD_QUALITY_CREATIVE_FORMAT_TYPE_FLOW = 10;
  AD_QUALITY_CREATIVE_FORMAT_TYPE_DISPLAY_NATIVE = 11;
  AD_QUALITY_CREATIVE_FORMAT_TYPE_CINEMAGRAPH = 12;
  AD_QUALITY_CREATIVE_FORMAT_TYPE_VIDEO_OTHER = 13;
  AD_QUALITY_CREATIVE_FORMAT_TYPE_VIEWABLE_DISPLAY_OTHER = 14;
  AD_QUALITY_CREATIVE_FORMAT_TYPE_VIEWABLE_DISPLAY = 15;
  AD_QUALITY_CREATIVE_FORMAT_TYPE_DISPLAY_SCROLLER_CELTRA = 16;
  AD_QUALITY_CREATIVE_FORMAT_TYPE_VIDEO_SCROLLER_CELTRA = 17;
  AD_QUALITY_CREATIVE_FORMAT_TYPE_SINGLE_IMAGE_PERFORMANCE = 18;
  AD_QUALITY_CREATIVE_FORMAT_TYPE_VIDEO_SOCIAL = 19;
  AD_QUALITY_CREATIVE_FORMAT_TYPE_IMAGE_SOCIAL = 20;
  AD_QUALITY_CREATIVE_FORMAT_TYPE_CAROUSEL_PERFORMANCE = 21;
  AD_QUALITY_CREATIVE_FORMAT_TYPE_VIDEO_STORIES = 22;
  AD_QUALITY_CREATIVE_FORMAT_TYPE_DISPLAY_STORIES = 23;
  AD_QUALITY_CREATIVE_FORMAT_TYPE_SINGLE_VIDEO_PERFORMANCE = 24;
  AD_QUALITY_CREATIVE_FORMAT_TYPE_VIDEO_SMART6 = 25;
}
// @section Ad Quality
enum AdQualityCreativeScanRegion {
  AD_QUALITY_CREATIVE_SCAN_REGION_EU_WEST_1 = 1;
  AD_QUALITY_CREATIVE_SCAN_REGION_US_EAST_1 = 2;
  AD_QUALITY_CREATIVE_SCAN_REGION_AP_NORTHEAST_1 = 3;
}
// @section Advertiser
enum AdvertiserFirstPartySegmentProvider {
  ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_NIELSEN = 1;
  ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_LIVERAMP = 2;
  ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_BLUEKAI = 3;
  ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_NEUSTAR = 4;
  ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_SALESFORCE = 5;
  ADVERTISER_FIRST_PARTY_SEGMENT_PROVIDER_RETARGETLY = 7;
  reserved 6;
}
// @section Campaign
enum AdvertisingSolutionId {
  ADVERTISING_SOLUTION_ID_AWARENESS = 1;
  ADVERTISING_SOLUTION_ID_TA_CLICKS = 2;
  ADVERTISING_SOLUTION_ID_TA_VISITS = 3;
  ADVERTISING_SOLUTION_ID_TA_MIXED = 4;
  ADVERTISING_SOLUTION_ID_WEBSITE_CONVERSIONS = 5;
  ADVERTISING_SOLUTION_ID_SEAMLESS_COMMERCE = 6;
  ADVERTISING_SOLUTION_ID_TA_CLICKS_GUARANTEED_CPC = 7;
  ADVERTISING_SOLUTION_ID_TA_VISITS_GUARANTEED_CPC = 8;
}
// @section Inventory
enum AppPlatform {
  APP_PLATFORM_GOOGLE = 1;
  APP_PLATFORM_APPLE = 2;
  APP_PLATFORM_ROKU = 3;
  APP_PLATFORM_AMAZON = 4;
  APP_PLATFORM_SAMSUNG = 5;
  APP_PLATFORM_VIZIO = 6;
  APP_PLATFORM_LG = 7;
  APP_PLATFORM_MICROSOFT = 8;
  APP_PLATFORM_PLAYSTATION = 9;
  APP_PLATFORM_HISENSE = 10;
  APP_PLATFORM_TIVO = 11;
  APP_PLATFORM_ZEASN = 12;
  APP_PLATFORM_FOXXUM = 13;
}
// @section Inventory
enum AppType {
  APP_TYPE_CTV = 0;
  APP_TYPE_MOBILE = 1;
}
// @section Users Data
// AudienceChannel should be migrated to UsersDataEnvironmentChannel to align naming
enum AudienceChannel {
  AUDIENCE_CHANNEL_WEB = 0;
  AUDIENCE_CHANNEL_CTV = 1;
}
// @section Audience Custom
enum AudienceCustomEntityAssociationType {
  AUDIENCE_CUSTOM_ENTITY_ASSOCIATION_TYPE_INCLUDE = 1;
  AUDIENCE_CUSTOM_ENTITY_ASSOCIATION_TYPE_EXCLUDE = 2;
}
// @section Audience Custom
enum AudienceCustomEnvironmentChannel {
  AUDIENCE_CUSTOM_ENVIRONMENT_CHANNEL_WEB = 0;
  AUDIENCE_CUSTOM_ENVIRONMENT_CHANNEL_CTV = 1;
  AUDIENCE_CUSTOM_ENVIRONMENT_CHANNEL_INAPP = 2;
}
// @section Audience Custom
enum AudienceCustomSortDirection {
  AUDIENCE_CUSTOM_SORT_DIRECTION_ASC = 1;
  AUDIENCE_CUSTOM_SORT_DIRECTION_DESC = 2;
}
// @section Audience Custom
enum AudienceCustomStatus {
  AUDIENCE_CUSTOM_STATUS_ACTIVE = 0;
  AUDIENCE_CUSTOM_STATUS_INACTIVE = 1;
  AUDIENCE_CUSTOM_STATUS_DELETED = 2;
}
// @section Users Data
enum AudienceFlavor {
  AUDIENCE_FLAVOR_STANDARD = 1;
  AUDIENCE_FLAVOR_REACH = 2;
  AUDIENCE_FLAVOR_CUSTOM_BRAND_PERSONA = 4;
}
// @section Users Data
enum AudienceStatus {
  AUDIENCE_STATUS_ENABLED = 1;
  AUDIENCE_STATUS_DISABLED = 2;
  AUDIENCE_STATUS_DELETED = 3;
}
// @section Users Data
enum AudienceTargetingAgeFrom {
  AUDIENCE_TARGETING_AGE_FROM_18 = 1;
  AUDIENCE_TARGETING_AGE_FROM_21 = 2;
  AUDIENCE_TARGETING_AGE_FROM_25 = 3;
  AUDIENCE_TARGETING_AGE_FROM_30 = 4;
  AUDIENCE_TARGETING_AGE_FROM_35 = 5;
  AUDIENCE_TARGETING_AGE_FROM_40 = 6;
  AUDIENCE_TARGETING_AGE_FROM_45 = 7;
  AUDIENCE_TARGETING_AGE_FROM_50 = 8;
  AUDIENCE_TARGETING_AGE_FROM_55 = 9;
  AUDIENCE_TARGETING_AGE_FROM_65 = 10;
}
// @section Users Data
enum AudienceTargetingAgeTo {
  AUDIENCE_TARGETING_AGE_TO_24 = 1;
  AUDIENCE_TARGETING_AGE_TO_29 = 2;
  AUDIENCE_TARGETING_AGE_TO_34 = 3;
  AUDIENCE_TARGETING_AGE_TO_39 = 4;
  AUDIENCE_TARGETING_AGE_TO_44 = 5;
  AUDIENCE_TARGETING_AGE_TO_49 = 6;
  AUDIENCE_TARGETING_AGE_TO_54 = 7;
  AUDIENCE_TARGETING_AGE_TO_59 = 8;
  AUDIENCE_TARGETING_AGE_TO_64 = 9;
  AUDIENCE_TARGETING_AGE_TO_65_PLUS = 10;
}
// @section Users Data
enum AudienceTargetingGender {
  AUDIENCE_TARGETING_GENDER_MALE = 1;
  AUDIENCE_TARGETING_GENDER_FEMALE = 2;
}
// @section Users Data
enum AudienceType {
  AUDIENCE_TYPE_HIGH_ACCURACY = 2;
  AUDIENCE_TYPE_ACCURACY = 3;
  AUDIENCE_TYPE_STANDARD = 4;
  AUDIENCE_TYPE_REACH = 5;
  AUDIENCE_TYPE_CUSTOM = 6;
  reserved 1;
}
// @section Users Data
enum AudiencesAccuracyLevel {
  AUDIENCES_ACCURACY_LEVEL_HIGH = 1;
  AUDIENCES_ACCURACY_LEVEL_MEDIUM = 2;
  AUDIENCES_ACCURACY_LEVEL_LOW = 3;
}
// @section Users Data
enum AudiencesDeliveryType {
  AUDIENCES_DELIVERY_TYPE_HIGH_ACCURACY = 2;
  AUDIENCES_DELIVERY_TYPE_ACCURACY = 3;
  AUDIENCES_DELIVERY_TYPE_STANDARD = 4;
  AUDIENCES_DELIVERY_TYPE_REACH = 5;
  reserved 1;
}
// @section Finance
enum BillableCategory {
  BILLABLE_CATEGORY_PUBLISHER_CONNECTION = 1;
  BILLABLE_CATEGORY_PUBLISHER_NO_DEMAND = 2;
  BILLABLE_CATEGORY_PUBLISHER_LINE_ITEM = 3;
}
// @section Campaign
enum BillableEvent {
  BILLABLE_EVENT_CLICK = 1;
  BILLABLE_EVENT_IMPRESSION = 2;
  BILLABLE_EVENT_START = 3;
  BILLABLE_EVENT_MID_POINT = 4;
  BILLABLE_EVENT_PROGRESS_1 = 5;
  BILLABLE_EVENT_PROGRESS_2 = 6;
  BILLABLE_EVENT_PROGRESS_3 = 7;
  BILLABLE_EVENT_PROGRESS_4 = 8;
  BILLABLE_EVENT_PROGRESS_5 = 9;
  BILLABLE_EVENT_PROGRESS_6 = 10;
  BILLABLE_EVENT_PROGRESS_7 = 11;
  BILLABLE_EVENT_PROGRESS_8 = 12;
  BILLABLE_EVENT_PROGRESS_9 = 13;
  BILLABLE_EVENT_PROGRESS_10 = 14;
  BILLABLE_EVENT_PROGRESS_11 = 15;
  BILLABLE_EVENT_PROGRESS_12 = 16;
  BILLABLE_EVENT_PROGRESS_13 = 17;
  BILLABLE_EVENT_PROGRESS_14 = 18;
  BILLABLE_EVENT_PROGRESS_15 = 19;
  BILLABLE_EVENT_PROGRESS_16 = 20;
  BILLABLE_EVENT_PROGRESS_17 = 21;
  BILLABLE_EVENT_PROGRESS_18 = 22;
  BILLABLE_EVENT_PROGRESS_19 = 23;
  BILLABLE_EVENT_PROGRESS_20 = 24;
  BILLABLE_EVENT_PROGRESS_21 = 25;
  BILLABLE_EVENT_PROGRESS_22 = 26;
  BILLABLE_EVENT_PROGRESS_23 = 27;
  BILLABLE_EVENT_PROGRESS_24 = 28;
  BILLABLE_EVENT_PROGRESS_25 = 29;
  BILLABLE_EVENT_PROGRESS_26 = 30;
  BILLABLE_EVENT_PROGRESS_27 = 31;
  BILLABLE_EVENT_PROGRESS_28 = 32;
  BILLABLE_EVENT_PROGRESS_29 = 33;
  BILLABLE_EVENT_PROGRESS_30 = 34;
  BILLABLE_EVENT_COMPLETE = 35;
}
// @section Campaign
enum BillingType {
  BILLING_TYPE_FIXED = 1;
  BILLING_TYPE_DYNAMIC = 2;
}
// @section Traffic
enum BlacklistedDomainStatus {
  BLACKLISTED_DOMAIN_STATUS_ACTIVE = 1;
  BLACKLISTED_DOMAIN_STATUS_INACTIVE = 2;
  BLACKLISTED_DOMAIN_STATUS_DISABLED = 3;
}
// @section Reachcast
enum BrandSafetyType {
  BRAND_SAFETY_TYPE_NO_RESTRICTION = 0;
  BRAND_SAFETY_TYPE_TEADS = 1;
  BRAND_SAFETY_TYPE_IAS = 2;
  BRAND_SAFETY_TYPE_GRAPESHOT = 3;
  BRAND_SAFETY_TYPE_DOUBLE_VERIFY = 4;
}
// @section Advertiser
enum BuyerSeatStatus {
  BUYER_SEAT_STATUS_ENABLED = 1;
  BUYER_SEAT_STATUS_DISABLED = 2;
  BUYER_SEAT_STATUS_PENDING_CLIENT_INPUT = 3;
  BUYER_SEAT_STATUS_PENDING_TEADS_INPUT = 4;
}
// @section Advertiser
enum BuyerSeatStatusFlag {
  BUYER_SEAT_STATUS_FLAG_NOT_REQUIRED = 0;
  BUYER_SEAT_STATUS_FLAG_REQUIRED = 1;
  BUYER_SEAT_STATUS_FLAG_COMPLETED = 2;
}
// @section Advertiser
enum BuyerSeatType {
  BUYER_SEAT_TYPE_ADVERTISER = 1;
  BUYER_SEAT_TYPE_AGENCY = 2;
}
// @section Advertiser
enum BuyerServiceLevel {
  BUYER_SERVICE_LEVEL_MANAGED = 1;
  BUYER_SERVICE_LEVEL_SELF_SERVED = 2;
  BUYER_SERVICE_LEVEL_IO = 3;
  BUYER_SERVICE_LEVEL_INTERNAL = 4;
  BUYER_SERVICE_LEVEL_CLIENT = 5;
}
// @section Publisher Statistics
enum BuyerType {
  BUYER_TYPE_SELF_SERVED = 0;
  BUYER_TYPE_OFFICE = 1;
  BUYER_TYPE_ECPM = 2;
  BUYER_TYPE_RPM = 3;
  BUYER_TYPE_NON_GUARANTEED = 4;
}
// @section Campaign
enum CampaignMigrationReason {
  CAMPAIGN_MIGRATION_REASON_TARGETING_NOT_AVAILABLE = 0; // deprecated
  CAMPAIGN_MIGRATION_REASON_AUCTION_TYPE_NOT_AVAILABLE = 1; // deprecated
  CAMPAIGN_MIGRATION_REASON_BILLING_EVENT_NOT_AVAILABLE = 2; // deprecated
  CAMPAIGN_MIGRATION_REASON_PLAYER_MODE_NOT_AVAILABLE = 3; // deprecated
  CAMPAIGN_MIGRATION_REASON_OTHER = 5;
  CAMPAIGN_MIGRATION_REASON_IAS_PREBID = 6; // deprecated
  CAMPAIGN_MIGRATION_REASON_MOAT_100_PERCENT = 7; // deprecated
  CAMPAIGN_MIGRATION_REASON_RETARGETING_SEGMENTS = 8; // deprecated
  CAMPAIGN_MIGRATION_REASON_OFFICE_PACK = 9; // deprecated
  CAMPAIGN_MIGRATION_REASON_FORMAT_POSITION = 10;
  CAMPAIGN_MIGRATION_REASON_CUSTOM_BRAND_SAFETY = 11; // deprecated
  CAMPAIGN_MIGRATION_REASON_CUSTOM_AUDIENCE = 12; // deprecated
  CAMPAIGN_MIGRATION_REASON_TAM_ISSUE = 13;
  CAMPAIGN_MIGRATION_REASON_ALTICE_DATA_SEGMENTS = 14; // deprecated
  CAMPAIGN_MIGRATION_REASON_CREATIVE_STUDIO_UNIT = 15; // deprecated
  CAMPAIGN_MIGRATION_REASON_CUSTOM_BILLING_EVENT = 16; // deprecated
  CAMPAIGN_MIGRATION_REASON_PLAYER_MODE = 17; // deprecated
  CAMPAIGN_MIGRATION_REASON_ADDED_VALUE = 18; // deprecated
  CAMPAIGN_MIGRATION_REASON_REMARKETING_ON_CREATIVE_EVENT = 19; // deprecated
  CAMPAIGN_MIGRATION_REASON_LOOKALIKE_SEGMENTS = 20; // deprecated
  CAMPAIGN_MIGRATION_REASON_GEO_POSTAL_CODES = 21; // deprecated
  CAMPAIGN_MIGRATION_REASON_CARRIER_PROVIDER = 22; // deprecated
  CAMPAIGN_MIGRATION_REASON_AUDIENCES_STANDARD_TO_ACCURACY = 23; // deprecated
  CAMPAIGN_MIGRATION_REASON_CREATIVE_HOURLY_FLIGHTING = 24; // deprecated
  CAMPAIGN_MIGRATION_REASON_INNOVATION_TEST = 25;
  CAMPAIGN_MIGRATION_REASON_NOT_SUPPORTED_TRAFFIC_ACQUISITION_CREATIVE = 26;
  CAMPAIGN_MIGRATION_REASON_TRAFFIC_ACQUISITION_REACHCAST = 27; // deprecated
  CAMPAIGN_MIGRATION_REASON_CAMPAIGN_DATE_TO_THE_FUTURE = 28;
  CAMPAIGN_MIGRATION_REASON_CAMPAIGN_TIMEZONE = 29;
  CAMPAIGN_MIGRATION_REASON_CTV_INSTREAM_SUPPLY_TARGETING = 30;
  CAMPAIGN_MIGRATION_REASON_GUARANTEED_SELF_SERVE_CAMPAIGN = 31;
  CAMPAIGN_MIGRATION_REASON_PLAYER_VIEWABILITY = 32;
  CAMPAIGN_MIGRATION_REASON_TRACKING_PIXEL_ON_CLICK_EVENT = 33;
  CAMPAIGN_MIGRATION_REASON_VIRTUAL_PRICE_FOR_MANAGED_CAMPAIGN = 34;
  CAMPAIGN_MIGRATION_REASON_HOURLY_FLIGHTING = 35;
  CAMPAIGN_MIGRATION_REASON_ATTENTION_LUMEN_NO_SAMPLING = 36;
  reserved 4;
}
// @section Campaign
enum CampaignObjective {
  CAMPAIGN_OBJECTIVE_BRANDING = 0;
  CAMPAIGN_OBJECTIVE_TRAFFIC_ACQUISITION = 1;
  CAMPAIGN_OBJECTIVE_SOCIAL = 2;
  CAMPAIGN_OBJECTIVE_CONVERSIONS = 3;
}
// @section Campaign
enum CampaignPacing {
  CAMPAIGN_PACING_EVEN = 0;
  CAMPAIGN_PACING_ASAP = 1;
  CAMPAIGN_PACING_AHEAD = 2;
}
// @section Campaign
enum CampaignStatus {
  CAMPAIGN_STATUS_NONE = 0;
  CAMPAIGN_STATUS_ENABLED = 1;
  CAMPAIGN_STATUS_DISABLED = 2;
  CAMPAIGN_STATUS_FINISHED = 3;
  CAMPAIGN_STATUS_DELETED = 4;
  CAMPAIGN_STATUS_PENDING = 5;
  CAMPAIGN_STATUS_DRAFT = 6;
}
// @section Campaign Support
enum CampaignSupportRequestSource {
  CAMPAIGN_SUPPORT_REQUEST_SOURCE_PROFILE = 0;
  CAMPAIGN_SUPPORT_REQUEST_SOURCE_JENKINS_JOB = 1;
}
// @section Campaign Support
enum CampaignSupportRequestStatus {
  CAMPAIGN_SUPPORT_REQUEST_STATUS_CLOSED = 0;
  CAMPAIGN_SUPPORT_REQUEST_STATUS_DELETED = 1;
  CAMPAIGN_SUPPORT_REQUEST_STATUS_PROCESSING = 2;
  CAMPAIGN_SUPPORT_REQUEST_STATUS_OPENED = 3;
  CAMPAIGN_SUPPORT_REQUEST_STATUS_REOPENED = 4;
  CAMPAIGN_SUPPORT_REQUEST_STATUS_TREATED = 5;
}
// @section Campaign Visual Proof
enum CampaignVisualProofDevice {
  CAMPAIGN_VISUAL_PROOF_DEVICE_DESKTOP = 1;
  CAMPAIGN_VISUAL_PROOF_DEVICE_MOBILE_IOS = 3;
  CAMPAIGN_VISUAL_PROOF_DEVICE_MOBILE_ANDROID = 4;
  reserved 2;
}
// @section Campaign Visual Proof
enum CampaignVisualProofRequestTrackingStatus {
  CAMPAIGN_VISUAL_PROOF_REQUEST_TRACKING_STATUS_REQUESTED = 0;
  CAMPAIGN_VISUAL_PROOF_REQUEST_TRACKING_STATUS_PROCESSED = 1;
  CAMPAIGN_VISUAL_PROOF_REQUEST_TRACKING_STATUS_FAILED = 2;
  CAMPAIGN_VISUAL_PROOF_REQUEST_TRACKING_STATUS_NIL = 3;
}
// @section Users Segments
enum ContextualCtvSegmentUsage {
  CONTEXTUAL_CTV_SEGMENT_USAGE_AUDIENCE = 1;
  CONTEXTUAL_CTV_SEGMENT_USAGE_CONTEXTUAL = 2;
  CONTEXTUAL_CTV_SEGMENT_USAGE_LANGUAGE = 3;
}
// @section Users Data
enum ContextualSegmentProvider {
  CONTEXTUAL_SEGMENT_PROVIDER_GRAPESHOT = 1;
  CONTEXTUAL_SEGMENT_PROVIDER_COMSCORE = 2;
  CONTEXTUAL_SEGMENT_PROVIDER_TEADS = 3;
}
// @section Users Data
enum ContextualSegmentType {
  CONTEXTUAL_SEGMENT_TYPE_STANDARD = 1;
  CONTEXTUAL_SEGMENT_TYPE_CUSTOM = 2;
}
// @section Advertiser
enum ConversionType {
  CONVERSION_TYPE_EVENT = 1;
  CONVERSION_TYPE_URL = 2;
}
// @section Users Data
enum CookielessCustomAudienceSeedCompositionCriterion {
  COOKIELESS_CUSTOM_AUDIENCE_SEED_COMPOSITION_CRITERION_EXELATE = 1;
  COOKIELESS_CUSTOM_AUDIENCE_SEED_COMPOSITION_CRITERION_BLUEKAI = 2;
  COOKIELESS_CUSTOM_AUDIENCE_SEED_COMPOSITION_CRITERION_LIVERAMP = 3;
  COOKIELESS_CUSTOM_AUDIENCE_SEED_COMPOSITION_CRITERION_EMETRIQ = 4;
  COOKIELESS_CUSTOM_AUDIENCE_SEED_COMPOSITION_CRITERION_TEADS_SEGMENTS = 5;
  COOKIELESS_CUSTOM_AUDIENCE_SEED_COMPOSITION_CRITERION_AUDIENCE_PARTNER = 6;
  COOKIELESS_CUSTOM_AUDIENCE_SEED_COMPOSITION_CRITERION_ALTICE_FR = 7;
  COOKIELESS_CUSTOM_AUDIENCE_SEED_COMPOSITION_CRITERION_SKP = 8;
  COOKIELESS_CUSTOM_AUDIENCE_SEED_COMPOSITION_CRITERION_PAGE_TOPIC = 9;
  COOKIELESS_CUSTOM_AUDIENCE_SEED_COMPOSITION_CRITERION_RETARGETLY = 10;
  COOKIELESS_CUSTOM_AUDIENCE_SEED_COMPOSITION_CRITERION_SALESFORCE = 11;
  COOKIELESS_CUSTOM_AUDIENCE_SEED_COMPOSITION_CRITERION_AUDIENCE_PACK = 12;
  COOKIELESS_CUSTOM_AUDIENCE_SEED_COMPOSITION_CRITERION_WEBSITE = 13;
  COOKIELESS_CUSTOM_AUDIENCE_SEED_COMPOSITION_CRITERION_ADVERTISER_PIXEL = 14;
}
// @section Creatives Approval
// This status reflects if a creative has been approved (delivery authorized) or rejected (delivery is blocked) by an operator.
// If no action has been taken on a creative yet then the status PENDING is set. This status also stops the delivery until approval.
enum CreativeApprovalStatus {
  CREATIVE_APPROVAL_STATUS_PENDING = 0;
  CREATIVE_APPROVAL_STATUS_APPROVED = 1;
  CREATIVE_APPROVAL_STATUS_REJECTED = 2;
}
// @section Campaign
enum CreativeStatus {
  CREATIVE_STATUS_UNKNOWN = 0;
  CREATIVE_STATUS_ENABLED = 1;
  CREATIVE_STATUS_DISABLED = 2;
  CREATIVE_STATUS_DELETED = 3;
}
// @section Account
enum CurrencyType {
  CURRENCY_TYPE_SELL = 1;
  CURRENCY_TYPE_BUY = 2;
}
// @section Campaign
enum CustomTargetingEnvironmentChannel {
  CUSTOM_TARGETING_ENVIRONMENT_CHANNEL_WEB = 1;
  CUSTOM_TARGETING_ENVIRONMENT_CHANNEL_CTV = 2;
}
// @section Campaign
enum CustomTargetingRuleAudiencesAccuracyLevel {
  CUSTOM_TARGETING_RULE_AUDIENCES_ACCURACY_LEVEL_HIGH = 1;
  CUSTOM_TARGETING_RULE_AUDIENCES_ACCURACY_LEVEL_MEDIUM = 2;
  CUSTOM_TARGETING_RULE_AUDIENCES_ACCURACY_LEVEL_LOW = 3;
}
// @section Campaign
enum CustomTargetingRuleAudiencesDeliveryType {
  CUSTOM_TARGETING_RULE_AUDIENCES_DELIVERY_TYPE_HIGH_ACCURACY = 2;
  CUSTOM_TARGETING_RULE_AUDIENCES_DELIVERY_TYPE_ACCURACY = 3;
  CUSTOM_TARGETING_RULE_AUDIENCES_DELIVERY_TYPE_STANDARD = 4;
  CUSTOM_TARGETING_RULE_AUDIENCES_DELIVERY_TYPE_REACH = 5;
  reserved 1;
}
// @section Reporting
enum DatamartStatus {
  DATAMART_STATUS_ACTIVE = 0;
  DATAMART_STATUS_PAUSED = 1;
  DATAMART_STATUS_DELETED = 2;
}
// @section Advertiser
enum DeliveryConcentrationPolicy {
  DELIVERY_CONCENTRATION_POLICY_DISABLED = 0;
  DELIVERY_CONCENTRATION_POLICY_STANDARD = 1;
  DELIVERY_CONCENTRATION_POLICY_STRICT = 2;
}
// @section Publisher Statistics
enum DeliveryContext {
  DELIVERY_CONTEXT_CLASSIC = 0;
  DELIVERY_CONTEXT_HEADER_BIDDING = 1;
}
// @section Reporting
enum DemandSource {
  DEMAND_SOURCE_INSERTION_ORDER = 0;
  DEMAND_SOURCE_CONNECT = 1;
  DEMAND_SOURCE_PROGRAMMATIC = 2;
}
// @section Programmatic
enum DemandType {
  DEMAND_TYPE_IO = 1;
  DEMAND_TYPE_OPEN_EXCHANGE = 2;
  DEMAND_TYPE_DEAL_ID = 3;
  DEMAND_TYPE_AD_MANAGER = 4;
  DEMAND_TYPE_PERFORMANCE = 5;
  DEMAND_TYPE_VAST = 6;
}
// @section Campaign
enum DirectSalesBillableCappingEvent {
  DIRECT_SALES_BILLABLE_CAPPING_EVENT_IMPRESSION = 0;
  DIRECT_SALES_BILLABLE_CAPPING_EVENT_START = 1;
  DIRECT_SALES_BILLABLE_CAPPING_EVENT_FIRST_QUARTILE = 2;
  DIRECT_SALES_BILLABLE_CAPPING_EVENT_MIDPOINT = 3;
  DIRECT_SALES_BILLABLE_CAPPING_EVENT_THIRD_QUARTILE = 4;
  DIRECT_SALES_BILLABLE_CAPPING_EVENT_COMPLETE = 5;
  DIRECT_SALES_BILLABLE_CAPPING_EVENT_PROGRESS_2 = 6;
  DIRECT_SALES_BILLABLE_CAPPING_EVENT_PROGRESS_15 = 7;
  DIRECT_SALES_BILLABLE_CAPPING_EVENT_PROGRESS_30 = 8;
  DIRECT_SALES_BILLABLE_CAPPING_EVENT_CLICK = 9;
  DIRECT_SALES_BILLABLE_CAPPING_EVENT_PROGRESS_6 = 10;
  DIRECT_SALES_BILLABLE_CAPPING_EVENT_PROGRESS_10 = 11;
  DIRECT_SALES_BILLABLE_CAPPING_EVENT_UNSUPPORTED = 999;
}
// @section Campaign
enum DirectSalesBillablePriceEvent {
  DIRECT_SALES_BILLABLE_PRICE_EVENT_IMPRESSION = 0;
  DIRECT_SALES_BILLABLE_PRICE_EVENT_START = 1;
  DIRECT_SALES_BILLABLE_PRICE_EVENT_FIRST_QUARTILE = 2;
  DIRECT_SALES_BILLABLE_PRICE_EVENT_MIDPOINT = 3;
  DIRECT_SALES_BILLABLE_PRICE_EVENT_THIRD_QUARTILE = 4;
  DIRECT_SALES_BILLABLE_PRICE_EVENT_COMPLETE = 5;
  DIRECT_SALES_BILLABLE_PRICE_EVENT_PROGRESS_2 = 6;
  DIRECT_SALES_BILLABLE_PRICE_EVENT_PROGRESS_15 = 7;
  DIRECT_SALES_BILLABLE_PRICE_EVENT_PROGRESS_30 = 8;
  DIRECT_SALES_BILLABLE_PRICE_EVENT_CLICK = 9;
  DIRECT_SALES_BILLABLE_PRICE_EVENT_PROGRESS_6 = 10;
  DIRECT_SALES_BILLABLE_PRICE_EVENT_PROGRESS_10 = 11;
  DIRECT_SALES_BILLABLE_PRICE_EVENT_UNSUPPORTED = 999;
}
// @section Campaign
enum DirectSalesCampaignStatus {
  DIRECT_SALES_CAMPAIGN_STATUS_ENABLED = 1;
  DIRECT_SALES_CAMPAIGN_STATUS_DISABLED = 2;
  DIRECT_SALES_CAMPAIGN_STATUS_DELETED = 3;
  DIRECT_SALES_CAMPAIGN_STATUS_UNSUPPORTED = 999;
}
// @section Campaign
enum DirectSalesCampaignType {
  DIRECT_SALES_CAMPAIGN_TYPE_CAMPAIGN = 0;
  DIRECT_SALES_CAMPAIGN_TYPE_CAMPAIGN_TAG = 1;
}
// @section Campaign
enum DirectSalesCreativeAction {
  DIRECT_SALES_CREATIVE_ACTION_BOOK_NOW = 0;
  DIRECT_SALES_CREATIVE_ACTION_CONTACT_US = 1;
  DIRECT_SALES_CREATIVE_ACTION_DOWNLOAD = 2;
  DIRECT_SALES_CREATIVE_ACTION_LEARN_MORE = 3;
  DIRECT_SALES_CREATIVE_ACTION_SHOP_NOW = 4;
  DIRECT_SALES_CREATIVE_ACTION_READ_MORE = 5;
  DIRECT_SALES_CREATIVE_ACTION_SIGN_UP = 6;
  DIRECT_SALES_CREATIVE_ACTION_WATCH_MORE = 7;
  DIRECT_SALES_CREATIVE_ACTION_NEARBY_SELLERS = 8;
}
// @section Campaign
enum DirectSalesCreativeCreator {
  DIRECT_SALES_CREATIVE_CREATOR_STANDARD = 0;
  DIRECT_SALES_CREATIVE_CREATOR_STUDIO = 5;
  reserved 1 to 4;
}
// @section Campaign
enum DirectSalesCreativeEncodingStatus {
  DIRECT_SALES_CREATIVE_ENCODING_STATUS_ENCODED = 0;
  DIRECT_SALES_CREATIVE_ENCODING_STATUS_IN_PROGRESS = 1;
  DIRECT_SALES_CREATIVE_ENCODING_STATUS_FAILED = 2;
}
// @section Campaign
enum DirectSalesLineItemBudgetPeriod {
  DIRECT_SALES_LINE_ITEM_BUDGET_PERIOD_ALL = 0;
  DIRECT_SALES_LINE_ITEM_BUDGET_PERIOD_DAY = 1;
  DIRECT_SALES_LINE_ITEM_BUDGET_PERIOD_UNSUPPORTED = 999;
}
// @section Campaign
enum DirectSalesLineItemCappingPeriod {
  DIRECT_SALES_LINE_ITEM_CAPPING_PERIOD_ALL = 0;
  DIRECT_SALES_LINE_ITEM_CAPPING_PERIOD_HOUR = 1;
  DIRECT_SALES_LINE_ITEM_CAPPING_PERIOD_DAY = 2;
  DIRECT_SALES_LINE_ITEM_CAPPING_PERIOD_MONTH = 3;
  DIRECT_SALES_LINE_ITEM_CAPPING_PERIOD_UNSUPPORTED = 999;
}
// @section Campaign
enum DirectSalesLineItemOptimizedKpi {
  DIRECT_SALES_LINE_ITEM_OPTIMIZED_KPI_CTR = 0;
  DIRECT_SALES_LINE_ITEM_OPTIMIZED_KPI_VTR = 1;
  DIRECT_SALES_LINE_ITEM_OPTIMIZED_KPI_UNSUPPORTED = 999;
}
// @section Campaign
enum DirectSalesLineItemStartMode {
  DIRECT_SALES_LINE_ITEM_START_MODE_VIEW_TO_PLAY = 0;
  DIRECT_SALES_LINE_ITEM_START_MODE_VIEW_TO_START = 1;
  DIRECT_SALES_LINE_ITEM_START_MODE_UNSUPPORTED = 999;
}
// @section Campaign
enum DirectSalesLineItemStatus {
  DIRECT_SALES_LINE_ITEM_STATUS_ENABLED = 0;
  DIRECT_SALES_LINE_ITEM_STATUS_DISABLED = 1;
  DIRECT_SALES_LINE_ITEM_STATUS_DELETED = 2;
  DIRECT_SALES_LINE_ITEM_STATUS_UNSUPPORTED = 999;
}
// @section Users Data
enum DirectSalesPublisherAudienceFeeType {
  DIRECT_SALES_PUBLISHER_AUDIENCE_FEE_TYPE_SOCIODEMOGRAPHIC = 1;
  DIRECT_SALES_PUBLISHER_AUDIENCE_FEE_TYPE_INTERESTS_AND_OTHERS = 2;
}
// @section Campaign
enum DirectSalesTagStatus {
  DIRECT_SALES_TAG_STATUS_ENABLED = 0;
  DIRECT_SALES_TAG_STATUS_DISABLED = 1;
  DIRECT_SALES_TAG_STATUS_DELETED = 2;
  DIRECT_SALES_TAG_STATUS_UNSUPPORTED = 999;
}
// @section Campaign
enum DirectSalesThirdPartyTrackingEvent {
  DIRECT_SALES_THIRD_PARTY_TRACKING_EVENT_BILLABLE = 0;
  DIRECT_SALES_THIRD_PARTY_TRACKING_EVENT_IMPRESSION = 1;
  DIRECT_SALES_THIRD_PARTY_TRACKING_EVENT_START = 2;
  DIRECT_SALES_THIRD_PARTY_TRACKING_EVENT_FIRST_QUARTILE = 3;
  DIRECT_SALES_THIRD_PARTY_TRACKING_EVENT_MIDPOINT = 4;
  DIRECT_SALES_THIRD_PARTY_TRACKING_EVENT_THIRD_QUARTILE = 5;
  DIRECT_SALES_THIRD_PARTY_TRACKING_EVENT_COMPLETE = 6;
  DIRECT_SALES_THIRD_PARTY_TRACKING_EVENT_PROGRESS_1 = 7;
  DIRECT_SALES_THIRD_PARTY_TRACKING_EVENT_PROGRESS_2 = 8;
  DIRECT_SALES_THIRD_PARTY_TRACKING_EVENT_PROGRESS_5 = 9;
  DIRECT_SALES_THIRD_PARTY_TRACKING_EVENT_PROGRESS_10 = 10;
  DIRECT_SALES_THIRD_PARTY_TRACKING_EVENT_PROGRESS_15 = 11;
  DIRECT_SALES_THIRD_PARTY_TRACKING_EVENT_PROGRESS_30 = 12;
  DIRECT_SALES_THIRD_PARTY_TRACKING_EVENT_PROGRESS_6 = 13;
  DIRECT_SALES_THIRD_PARTY_TRACKING_EVENT_UNSUPPORTED = 999;
}
// @section Data Science
enum DurationUnit {
  DURATION_UNIT_HOUR = 1;
  DURATION_UNIT_DAY = 2;
}
// @section Account
enum EntityStatus {
  ENTITY_STATUS_ENABLED = 1;
  ENTITY_STATUS_DISABLED = 2;
  ENTITY_STATUS_DELETED = 3;
}
// @section Account
enum EntityType {
  ENTITY_TYPE_OFFICE = 1;
  ENTITY_TYPE_PLATFORM = 2;
  ENTITY_TYPE_SELF_SERVED = 3;
  ENTITY_TYPE_MANAGED_SERVICES = 4;
  ENTITY_TYPE_AGENCY = 5;
  ENTITY_TYPE_ADVERTISER = 6;
  ENTITY_TYPE_ADNETWORK = 7;
  ENTITY_TYPE_UNKNOWN = 8;
}
// @section Finance
enum FinanceLegacyReportTemplate {
  FINANCE_LEGACY_REPORT_TEMPLATE_COST_OF_GOODS_SOLD = 1;
  FINANCE_LEGACY_REPORT_TEMPLATE_MANAGED_SERVICES_TEADS_AD_MANAGER = 2;
  FINANCE_LEGACY_REPORT_TEMPLATE_PROGRAMMATIC = 3;
}
// @section Finance
enum FinanceReportTemplate {
  FINANCE_REPORT_TEMPLATE_REVENUES_PROGRAMMATIC = 2;
  FINANCE_REPORT_TEMPLATE_UNMONETIZED_COST_OF_GOODS_SOLD = 5;
  FINANCE_REPORT_TEMPLATE_PUBLISHER_DIRECT_SOLD_PROGRAMMATIC_DEALID_FEES = 6;
  FINANCE_REPORT_TEMPLATE_COST_OF_GOODS_SOLD_DETAILS = 9;
  FINANCE_REPORT_TEMPLATE_COST_OF_GOODS_SOLD_INTER_COMPANY_SELLER = 10;
  FINANCE_REPORT_TEMPLATE_COST_OF_GOODS_SOLD_INTER_COMPANY_OPERATOR = 11;
  FINANCE_REPORT_TEMPLATE_REVENUE_AGENCY = 12;
  FINANCE_REPORT_TEMPLATE_REVENUE_ADVERTISER = 13;
  FINANCE_REPORT_TEMPLATE_REVENUE_MANAGED_SERVICES = 14;
  FINANCE_REPORT_TEMPLATE_REVENUE_TEADS_AD_MANAGER = 16;
  reserved 1, 3, 4, 7, 8, 15, 17;
}
// @section Creative
enum FolderTreeNodeType {
  FOLDER_TREE_NODE_TYPE_FOLDER = 1;
  FOLDER_TREE_NODE_TYPE_CREATIVE = 2;
  FOLDER_TREE_NODE_TYPE_ENTITY_ROOT = 3;
  FOLDER_TREE_NODE_TYPE_ARCHIVE = 4;
}
// @section Reporting
enum Frequency {
  FREQUENCY_HOUR = 0;
  FREQUENCY_DAY = 1;
  FREQUENCY_MONTH = 2;
}
// @section Campaign
enum InsertionOrderLineAuctionType {
  INSERTION_ORDER_LINE_AUCTION_TYPE_FIXED = 1;
  INSERTION_ORDER_LINE_AUCTION_TYPE_DYNAMIC = 2;
}
// @section Campaign
enum InsertionOrderLineBillingModel {
  INSERTION_ORDER_LINE_BILLING_MODEL_CPM = 1;
  INSERTION_ORDER_LINE_BILLING_MODEL_VCPM = 2;
  INSERTION_ORDER_LINE_BILLING_MODEL_CPCV = 3;
  INSERTION_ORDER_LINE_BILLING_MODEL_CPC = 4;
  INSERTION_ORDER_LINE_BILLING_MODEL_CPV = 5;
}
// @section Campaign
enum InsertionOrderLineCreativeTypeFamily {
  INSERTION_ORDER_LINE_CREATIVE_TYPE_FAMILY_VIDEO = 1;
  INSERTION_ORDER_LINE_CREATIVE_TYPE_FAMILY_DISPLAY = 2;
}
// @section Inventory
enum Integration {
  INTEGRATION_CLASSIC = 0;
  INTEGRATION_HEADER_BIDDING = 1;
}
// @section Inventory
enum InventoryStatus {
  INVENTORY_STATUS_ACTIVE = 1;
  INVENTORY_STATUS_DISABLED = 2;
  INVENTORY_STATUS_DELETED = 3;
  INVENTORY_STATUS_UNVETTED = 4;
  INVENTORY_STATUS_REJECTED = 5;
  INVENTORY_STATUS_NEEDS_FURTHER_REVIEW = 6;
}
// @section Inventory
enum InventoryTier {
  INVENTORY_TIER_1 = 1;
  INVENTORY_TIER_2 = 2;
  INVENTORY_TIER_3 = 3;
}
// @section Inventory
enum InventoryType {
  INVENTORY_TYPE_STANDARD_WEB = 1;
  INVENTORY_TYPE_MOBILE_OPTIMIZED_WEB = 2;
}
// @section Finance
enum InvoiceRecipientStatus {
  INVOICE_RECIPIENT_STATUS_PENDING = 1;
  INVOICE_RECIPIENT_STATUS_APPROVED = 2;
  INVOICE_RECIPIENT_STATUS_REJECTED = 3;
  INVOICE_RECIPIENT_STATUS_APPROVED_WITH_PREPAY = 4;
}
// @section Reachcast
enum LegalAge {
  LEGAL_AGE_NONE = 0;
  LEGAL_AGE_18_PLUS = 1;
  LEGAL_AGE_21_PLUS = 2;
}
// @section Campaign
enum LineItemBillingType {
  LINE_ITEM_BILLING_TYPE_FIRST_PRICE = 0;
  LINE_ITEM_BILLING_TYPE_SECOND_PRICE = 1;
  LINE_ITEM_BILLING_TYPE_FIXED_PRICE = 2;
}
// @section Campaign
enum LineItemBudgetPeriod {
  LINE_ITEM_BUDGET_PERIOD_HOUR = 0;
  LINE_ITEM_BUDGET_PERIOD_DAY = 1;
  LINE_ITEM_BUDGET_PERIOD_MONTH = 2;
  LINE_ITEM_BUDGET_PERIOD_YEAR = 3;
  LINE_ITEM_BUDGET_PERIOD_ALL = 4;
}
// @section Campaign
enum LineItemCategory {
  LINE_ITEM_CATEGORY_CLASSIC = 0;
  LINE_ITEM_CATEGORY_VIEWABLE_DISPLAY = 1;
  LINE_ITEM_CATEGORY_SQUARE = 2;
  LINE_ITEM_CATEGORY_VERTICAL = 3;
  LINE_ITEM_CATEGORY_DISPLAY = 4;
  LINE_ITEM_CATEGORY_DISPLAY_MID_PAGE_UNIT = 5;
  LINE_ITEM_CATEGORY_HYBRID = 6;
}
// @section Campaign
enum LineItemFrequencyCappingEvent {
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_IMPRESSION = 0;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_START = 1;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_1 = 2;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_2 = 3;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_3 = 4;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_4 = 5;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_5 = 6;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_6 = 7;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_7 = 8;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_8 = 9;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_9 = 10;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_10 = 11;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_11 = 12;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_12 = 13;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_13 = 14;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_14 = 15;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_15 = 16;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_16 = 17;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_17 = 18;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_18 = 19;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_19 = 20;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_20 = 21;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_21 = 22;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_22 = 23;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_23 = 24;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_24 = 25;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_25 = 26;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_26 = 27;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_27 = 28;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_28 = 29;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_29 = 30;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_PROGRESS_30 = 31;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_COMPLETE = 32;
  LINE_ITEM_FREQUENCY_CAPPING_EVENT_BILLABLE = 33;
}
// @section Campaign
enum LineItemFrequencyCappingPeriod {
  LINE_ITEM_FREQUENCY_CAPPING_PERIOD_HOUR = 0;
  LINE_ITEM_FREQUENCY_CAPPING_PERIOD_DAY = 1;
  LINE_ITEM_FREQUENCY_CAPPING_PERIOD_WEEK = 2;
  LINE_ITEM_FREQUENCY_CAPPING_PERIOD_MONTH = 3;
  LINE_ITEM_FREQUENCY_CAPPING_PERIOD_YEAR = 4;
  LINE_ITEM_FREQUENCY_CAPPING_PERIOD_ALL = 5;
}
// @section Campaign
enum LineItemPacing {
  LINE_ITEM_PACING_EVEN = 0;
  LINE_ITEM_PACING_ASAP = 1;
  LINE_ITEM_PACING_AHEAD = 2;
}
// @section Campaign
enum LineItemPlatformType {
  LINE_ITEM_PLATFORM_TYPE_WEB_INAPP = 1;
  LINE_ITEM_PLATFORM_TYPE_CTV = 2;
  LINE_ITEM_PLATFORM_TYPE_WEB_INAPP_INSTREAM = 3;
}
// @section Campaign
enum LineItemResearch {
  LINE_ITEM_RESEARCH_NONE = 0;
  LINE_ITEM_RESEARCH_MILWARD_BROWN = 1;
  LINE_ITEM_RESEARCH_BRAND_PULSE = 2;
  LINE_ITEM_RESEARCH_NIELSEN_MBE = 3;
  LINE_ITEM_RESEARCH_NIELSEN_DBE = 4;
}
// @section Campaign
enum LineItemStartMode {
  LINE_ITEM_START_MODE_VIEW_TO_PLAY = 0;
  LINE_ITEM_START_MODE_VIEW_TO_START = 1;
  LINE_ITEM_START_MODE_VIEW_TO_PLAY_UNTIL = 2;
}
// @section Campaign
enum LineItemStatus {
  LINE_ITEM_STATUS_UNKOWN = 0;
  LINE_ITEM_STATUS_ENABLED = 1;
  LINE_ITEM_STATUS_DISABLED = 2;
  LINE_ITEM_STATUS_DELETED = 3;
}
// @section Campaign
enum LineItemTransactionMethod {
  LINE_ITEM_TRANSACTION_METHOD_CPM_CPCV_PROGRESS = 0;
  LINE_ITEM_TRANSACTION_METHOD_MRC_VIEWABILITY = 1;
  LINE_ITEM_TRANSACTION_METHOD_IN_DEMO_GUARANTEE = 2;
  LINE_ITEM_TRANSACTION_METHOD_PUBLICIS_VIEWABILITY = 3;
  LINE_ITEM_TRANSACTION_METHOD_GROUP_M_VIEWABILITY = 4;
  LINE_ITEM_TRANSACTION_METHOD_TRUE_VISIT = 5;
}
// @section Campaign
enum LineItemType {
  LINE_ITEM_TYPE_INHOUSE = 0;
  LINE_ITEM_TYPE_INTRAGROUP = 1;
  LINE_ITEM_TYPE_SSP_PUBLISHER = 2;
  LINE_ITEM_TYPE_CONNECT = 3;
}
// @section Users Data
enum LookalikeDataProvider {
  LOOKALIKE_DATA_PROVIDER_EXELATE = 1;
  LOOKALIKE_DATA_PROVIDER_TEADS_CONVERSION = 2;
  LOOKALIKE_DATA_PROVIDER_LIVERAMP = 3;
  LOOKALIKE_DATA_PROVIDER_AUDIENCE_PARTNER = 4;
  LOOKALIKE_DATA_PROVIDER_BLUEKAI = 5;
  LOOKALIKE_DATA_PROVIDER_SALESFORCE = 6;
  LOOKALIKE_DATA_PROVIDER_NEUSTAR = 7;
}
// @section Data Science
enum Metric {
  METRIC_AUC = 0;
  METRIC_R2 = 1;
  METRIC_INTERCEPT_ONLY = 2;
  METRIC_CALIBRATION = 3;
}
// @section Mrg Contract
enum MrgContractCriterionBrandSafety {
  MRG_CONTRACT_CRITERION_BRAND_SAFETY_ALL = 0;
  MRG_CONTRACT_CRITERION_BRAND_SAFETY_BRANDSAFE = 1;
  MRG_CONTRACT_CRITERION_BRAND_SAFETY_OTHER = 2;
}
// @section Mrg Contract
enum MrgContractCriterionCountryFilter {
  MRG_CONTRACT_CRITERION_COUNTRY_FILTER_ALL = 0;
  MRG_CONTRACT_CRITERION_COUNTRY_FILTER_ROE = 1;
  MRG_CONTRACT_CRITERION_COUNTRY_FILTER_ROW = 2;
  MRG_CONTRACT_CRITERION_COUNTRY_FILTER_NO_FILTERING = 3;
}
// @section Mrg Contract
enum MrgContractCriterionEnvironment {
  MRG_CONTRACT_CRITERION_ENVIRONMENT_ALL_DEVICES_ALL_ENVS = 0;
  MRG_CONTRACT_CRITERION_ENVIRONMENT_ALL_WEB_AMP = 1;
  MRG_CONTRACT_CRITERION_ENVIRONMENT_DESKTOP_WEB = 2;
  MRG_CONTRACT_CRITERION_ENVIRONMENT_MOBILE_ALL = 3;
  MRG_CONTRACT_CRITERION_ENVIRONMENT_MOBILE_AMP = 4;
  MRG_CONTRACT_CRITERION_ENVIRONMENT_MOBILE_APPS = 5;
  MRG_CONTRACT_CRITERION_ENVIRONMENT_MOBILE_WEB = 6;
  MRG_CONTRACT_CRITERION_ENVIRONMENT_MOBILE_WEB_AMP = 7;
}
// @section Mrg Contract
enum MrgContractCriterionUserTrackability {
  MRG_CONTRACT_CRITERION_USER_TRACKABILITY_ALL = 0;
  MRG_CONTRACT_CRITERION_USER_TRACKABILITY_TRACKABLE = 1;
  MRG_CONTRACT_CRITERION_USER_TRACKABILITY_NOT_TRACKABLE = 2;
}
// @section Mrg Contract
enum MrgContractDirectSoldDeliveryToInclude {
  MRG_CONTRACT_DIRECT_SOLD_DELIVERY_TO_INCLUDE_NONE = 0;
  MRG_CONTRACT_DIRECT_SOLD_DELIVERY_TO_INCLUDE_ALL = 1;
  MRG_CONTRACT_DIRECT_SOLD_DELIVERY_TO_INCLUDE_LOWER_PRIORITY = 2;
  MRG_CONTRACT_DIRECT_SOLD_DELIVERY_TO_INCLUDE_PASSBACK = 3;
}
// @section Mrg Contract
enum MrgContractEnvironmentType {
  MRG_CONTRACT_ENVIRONMENT_TYPE_PUBLISHER_COMMITMENT_INFO = 0;
  MRG_CONTRACT_ENVIRONMENT_TYPE_COMMITMENT_CRITERION = 1;
}
// @section Mrg Contract
enum MrgContractExclusivity {
  MRG_CONTRACT_EXCLUSIVITY_YES_OUTSTREAM = 0;
  MRG_CONTRACT_EXCLUSIVITY_YES_OUTSTREAM_MID_PAGE = 1;
  MRG_CONTRACT_EXCLUSIVITY_YES_LOCAL_IP = 2;
  MRG_CONTRACT_EXCLUSIVITY_NO = 3;
}
// @section Mrg Contract
enum MrgContractNonUserConsentDeliveryToInclude {
  MRG_CONTRACT_NON_USER_CONSENT_DELIVERY_TO_INCLUDE_NONE = 0;
  MRG_CONTRACT_NON_USER_CONSENT_DELIVERY_TO_INCLUDE_ALL = 1;
  MRG_CONTRACT_NON_USER_CONSENT_DELIVERY_TO_INCLUDE_NO_MOBILE_APP_ID = 2;
}
// @section Mrg Contract
enum MrgContractRequirementType {
  MRG_CONTRACT_REQUIREMENT_TYPE_MIN_SCROLL_RATE = 0;
  MRG_CONTRACT_REQUIREMENT_TYPE_MIN_VTR = 1;
  MRG_CONTRACT_REQUIREMENT_TYPE_MIN_VIEWABILITY = 2;
}
// @section Mrg Contract
enum MrgContractRevenuePeriod {
  MRG_CONTRACT_REVENUE_PERIOD_MONTHLY = 0;
  MRG_CONTRACT_REVENUE_PERIOD_QUARTERLY = 1;
  MRG_CONTRACT_REVENUE_PERIOD_YEARLY = 2;
}
// @section Mrg Contract
enum MrgContractSmoothingFrequency {
  MRG_CONTRACT_SMOOTHING_FREQUENCY_NONE = 0;
  MRG_CONTRACT_SMOOTHING_FREQUENCY_DAILY = 1;
  MRG_CONTRACT_SMOOTHING_FREQUENCY_MONTHLY = 2;
  MRG_CONTRACT_SMOOTHING_FREQUENCY_QUARTERLY = 3;
  MRG_CONTRACT_SMOOTHING_FREQUENCY_YEARLY = 4;
}
// @section Mrg Contract
enum MrgContractStatus {
  MRG_CONTRACT_STATUS_DRAFT = 0;
  MRG_CONTRACT_STATUS_ACTIVE = 1;
  MRG_CONTRACT_STATUS_INACTIVE = 2;
}
// @section Mrg Contract
enum MrgContractType {
  MRG_CONTRACT_TYPE_ECPM = 1;
  MRG_CONTRACT_TYPE_RPM = 2;
}
// @section Advertiser
enum MsaType {
  MSA_TYPE_DIGITAL = 1;
  MSA_TYPE_PAPER = 2;
}
// @section Data Science
enum Operator {
  OPERATOR_GREATER_THAN = 0;
  OPERATOR_LESS_THAN = 1;
}
// @section Campaign
enum OptimizationKpi {
  OPTIMIZATION_KPI_COST_PER_ACTION = 1;
  OPTIMIZATION_KPI_CONVERSION_RATE = 2;
  OPTIMIZATION_KPI_CLICK_THROUGH_RATE = 3;
  OPTIMIZATION_KPI_MOAT_VIEWABLE = 4;
  OPTIMIZATION_KPI_QUALIFIED_VISITS = 5;
  OPTIMIZATION_KPI_VIEW_THROUGH_RATE = 6;
  OPTIMIZATION_KPI_BOUNCE_RATE = 7;
}
// @section Campaign
enum PacingRateDimension {
  PACING_RATE_DIMENSION_LINE_ITEM = 1;
  PACING_RATE_DIMENSION_INSERTION_ORDER_LINE = 2;
}
// @section Account
enum PaymentMode {
  PAYMENT_MODE_UNKNOWN = 0;
  PAYMENT_MODE_BANK = 1;
  PAYMENT_MODE_PAYPAL = 2;
}
// @section Buying Price
enum PayoutMode {
  PAYOUT_MODE_FIXED = 1;
  PAYOUT_MODE_DYNAMIC = 2;
}
// @section Users Data
enum PersonaStatus {
  PERSONA_STATUS_ENABLED = 1;
  PERSONA_STATUS_DISABLED = 2;
  PERSONA_STATUS_DELETED = 3;
}
// @section Advertiser
enum PixelType {
  PIXEL_TYPE_JS = 1;
  PIXEL_TYPE_IMG = 2;
}
// @section Inventory
enum PlacementEnvironment {
  PLACEMENT_ENVIRONMENT_WEB = 1;
  PLACEMENT_ENVIRONMENT_WEB_DESKTOP = 2;
  PLACEMENT_ENVIRONMENT_WEB_MOBILE = 3;
  PLACEMENT_ENVIRONMENT_AMP = 4;
  PLACEMENT_ENVIRONMENT_INAPP_IOS = 5;
  PLACEMENT_ENVIRONMENT_INAPP_ANDROID = 6;
  PLACEMENT_ENVIRONMENT_CTV = 7;
}
// @section Inventory
enum PortfolioItemStatus {
  PORTFOLIO_ITEM_STATUS_NONE = 0;
  PORTFOLIO_ITEM_STATUS_ENABLED = 1;
  PORTFOLIO_ITEM_STATUS_DISABLED = 2;
  PORTFOLIO_ITEM_STATUS_DELETED = 3;
  // correspond to staging mode, where the portfolio item is experimental and not yet fully in use in production
  PORTFOLIO_ITEM_STATUS_INTEGRATION_MODE = 4;
}
// @section Data Science
enum PredictorType {
  PREDICTOR_TYPE_LINEAR = 1;
  PREDICTOR_TYPE_CLUSTERING = 2;
  PREDICTOR_TYPE_ONNX = 3;
}
// @section Account
enum ProfileStatus {
  PROFILE_STATUS_ENABLED = 1;
  PROFILE_STATUS_DISABLED = 2;
  PROFILE_STATUS_DELETED = 3;
  PROFILE_STATUS_WAITING_PASSWORD = 4;
  PROFILE_STATUS_FIRST_LOGIN = 5;
}
// @section Inventory
enum PublisherContractType {
  PUBLISHER_CONTRACT_TYPE_STANDARD = 0;
  PUBLISHER_CONTRACT_TYPE_ECPM = 1;
  PUBLISHER_CONTRACT_TYPE_RPM = 2;
  PUBLISHER_CONTRACT_TYPE_CLASSIC_MRG = 3;
  PUBLISHER_CONTRACT_TYPE_STRATEGIC = 4;
}
// @section Inventory
enum PublisherFeeProductName {
  PUBLISHER_FEE_PRODUCT_NAME_DIRECT_SOLD = 0;
  PUBLISHER_FEE_PRODUCT_NAME_PROGRAMMATIC = 1;
  PUBLISHER_FEE_PRODUCT_NAME_PROGRAMMATIC_VAST = 2;
  PUBLISHER_FEE_PRODUCT_NAME_STUDIO = 3;
  PUBLISHER_FEE_PRODUCT_NAME_SOCIAL_DEMOGRAPHIC = 4;
  PUBLISHER_FEE_PRODUCT_NAME_INTEREST_AND_OTHERS = 5;
}
// @section Inventory
enum PublisherFeeValueType {
  PUBLISHER_FEE_VALUE_TYPE_RATE = 0;
  PUBLISHER_FEE_VALUE_TYPE_CPM = 1;
}
// @section Inventory
enum PublisherInventoryStatus {
  PUBLISHER_INVENTORY_STATUS_ACTIVE = 1;
  PUBLISHER_INVENTORY_STATUS_DISABLED = 2;
  PUBLISHER_INVENTORY_STATUS_DELETED = 3;
}
// @section Finance
enum PublisherInvoiceCategory {
  PUBLISHER_INVOICE_CATEGORY_TEADS_DEMAND = 1;
  PUBLISHER_INVOICE_CATEGORY_DIRECT_SALES_PUBLISHER_DEAL_ID = 2;
}
// @section Finance
enum PublisherInvoiceDeferredReason {
  PUBLISHER_INVOICE_DEFERRED_REASON_INCOMPLETE_SETTINGS = 1;
  PUBLISHER_INVOICE_DEFERRED_REASON_AMOUNT_TOO_LOW = 2;
}
// @section Finance
enum PublisherInvoiceStatus {
  PUBLISHER_INVOICE_STATUS_NOT_PAID = 1;
  PUBLISHER_INVOICE_STATUS_PAYMENT_PENDING = 2;
  PUBLISHER_INVOICE_STATUS_PAID = 3;
  PUBLISHER_INVOICE_STATUS_LOCKED = 4;
}
// @section Account
enum PublisherLicenseType {
  PUBLISHER_LICENSE_TYPE_DIRECT_SALES = 0;
  PUBLISHER_LICENSE_TYPE_DIRECT_SALES_STUDIO = 1;
  PUBLISHER_LICENSE_TYPE_DIRECT_SALES_AUDIENCE = 2;
}
// @section Account
enum PublisherSettingsFieldCategory {
  PUBLISHER_SETTINGS_FIELD_CATEGORY_GLOBAL_BASIC = 1;
  PUBLISHER_SETTINGS_FIELD_CATEGORY_GLOBAL_CONTACT = 2;
  PUBLISHER_SETTINGS_FIELD_CATEGORY_FINANCE = 3;
}
// @section Account
enum PublisherSettingsFieldType {
  PUBLISHER_SETTINGS_FIELD_TYPE_NUMBER = 1;
  PUBLISHER_SETTINGS_FIELD_TYPE_TEXT = 2;
  PUBLISHER_SETTINGS_FIELD_TYPE_DECIMAL = 3;
  PUBLISHER_SETTINGS_FIELD_TYPE_LIST = 4;
  PUBLISHER_SETTINGS_FIELD_TYPE_BOOL = 5;
}
// @section Inventory
enum PublisherTier {
  PUBLISHER_TIER_1 = 1;
  PUBLISHER_TIER_2 = 2;
  PUBLISHER_TIER_3 = 3;
}
// @section Inventory
enum PublisherType {
  PUBLISHER_TYPE_MANAGED_SERVICES = 0;
  PUBLISHER_TYPE_SELF_SERVED = 1;
}
// @section Users Data
enum QuarantineProvider {
  QUARANTINE_PROVIDER_BLUEKAI = 1;
  QUARANTINE_PROVIDER_EXELATE = 2;
  QUARANTINE_PROVIDER_LIVERAMP = 3;
  QUARANTINE_PROVIDER_NEUSTAR = 4;
  QUARANTINE_PROVIDER_RETARGETLY = 5;
  QUARANTINE_PROVIDER_SALESFORCE = 6;
  QUARANTINE_PROVIDER_SKP = 7;
}
// @section Reachcast
enum ReachcastFormatCreativeType {
  REACHCAST_FORMAT_CREATIVE_TYPE_VIDEO = 0;
  REACHCAST_FORMAT_CREATIVE_TYPE_DISPLAY = 1;
}
// @section Reporting
enum ReportCategory {
  REPORT_CATEGORY_CONNECT = 0;
  REPORT_CATEGORY_LEGACY = 1;
}
// @section Reporting
enum ReportOutputFormat {
  REPORT_OUTPUT_FORMAT_XLSX = 1;
  REPORT_OUTPUT_FORMAT_JSONV1 = 2;
  REPORT_OUTPUT_FORMAT_JSONTEST = 3;
  REPORT_OUTPUT_FORMAT_CSV = 4;
  REPORT_OUTPUT_FORMAT_REDSHIFT = 5;
  REPORT_OUTPUT_FORMAT_FINANCE = 6;
  REPORT_OUTPUT_FORMAT_BIGQUERY = 7;
}
// @section Reporting
enum ReportProcessingMode {
  REPORT_PROCESSING_MODE_FFRS = 0;
  REPORT_PROCESSING_MODE_HYBRID = 1;
}
// @section Reporting
enum ReportStatus {
  REPORT_STATUS_STARTED = 0;
  REPORT_STATUS_SUCCEEDED = 1;
  REPORT_STATUS_FAILED = 2;
}
// @section Retail Media
enum RetailerCMS {
  RETAILER_CMS_VTEX = 0;
  RETAILER_CMS_SALESFORCE_B2C = 1;
  RETAILER_CMS_SHOPIFY = 2;
  RETAILER_CMS_SHOPLINE = 3;
}
// @section Retail Media
enum RetailerCartingMode {
  RETAILER_CARTING_MODE_DIRECT_TO_CART = 0;
  RETAILER_CARTING_MODE_CONFIRM_TO_CART = 1;
  RETAILER_CARTING_MODE_LOGIN_TO_CART = 2;
  RETAILER_CARTING_MODE_DIRECT_TO_CHECKOUT = 3;
}
// @section Retail Media
enum RetailerProductStrategyAllowed {
  RETAILER_PRODUCT_STRATEGY_ALLOWED_MULTIPLE = 0;
  RETAILER_PRODUCT_STRATEGY_ALLOWED_SINGLE = 1;
}
// @section Retail Media
enum RetailerSmartlinkConfigurationProductStatus {
  RETAILER_SMARTLINK_CONFIGURATION_PRODUCT_STATUS_ACTIVE = 0;
  RETAILER_SMARTLINK_CONFIGURATION_PRODUCT_STATUS_INACTIVE = 1;
}
// @section Retail Media
enum RetailerSmartlinkConfigurationStatus {
  RETAILER_SMARTLINK_CONFIGURATION_STATUS_ACTIVE = 0;
  RETAILER_SMARTLINK_CONFIGURATION_STATUS_INACTIVE = 1;
}
// @section Retail Media
enum RetailerStatus {
  RETAILER_STATUS_ACTIVE = 0;
  RETAILER_STATUS_INACTIVE = 1;
}
// @section Commercial
enum SalesforceBuyerType {
  SALESFORCE_BUYER_TYPE_AGENCY = 1;
  SALESFORCE_BUYER_TYPE_ADVERTISER = 2;
}
// @section Commercial
enum SalesforceInvoiceRecipientStatus {
  SALESFORCE_INVOICE_RECIPIENT_STATUS_PENDING = 1;
  SALESFORCE_INVOICE_RECIPIENT_STATUS_APPROVED = 2;
  SALESFORCE_INVOICE_RECIPIENT_STATUS_REJECTED = 3;
  SALESFORCE_INVOICE_RECIPIENT_STATUS_APPROVED_WITH_PREPAY = 4;
}
// @section Advertiser
enum SeatFeature {
  SEAT_FEATURE_MULTIPLE_PIXELS = 0;
  SEAT_FEATURE_SHARE_WITH_ADVERTISERS = 1;
  SEAT_FEATURE_PREFER_VIEW_TO_PLAY_START_MODE = 2;
  SEAT_FEATURE_ACCURACY_LEVELS = 4;
  SEAT_FEATURE_AGENCY_FEE = 5;
  SEAT_FEATURE_CUSTOM_AUDIENCE_ALTICE_US = 6;
  SEAT_FEATURE_CUSTOM_CREATIVES_FOR_PERFORMANCE = 7;
  SEAT_FEATURE_LUMEN = 8;
  SEAT_FEATURE_CUSTOM_AUDIENCE_SKP = 9;
  SEAT_FEATURE_CUSTOM_AUDIENCE_CROSSIX = 10;
  SEAT_FEATURE_CUSTOM_AUDIENCE_ALTICE_FR = 11;
  SEAT_FEATURE_REMARKETING_SEGMENTATION_ACCESS = 12;
  SEAT_FEATURE_CPV = 13;
  SEAT_FEATURE_PLAYER_MODE_SELECTION_FOR_BRANDING = 14;
  SEAT_FEATURE_PLAYER_MODE_SELECTION_FOR_BRANDFORMANCE = 15;
  SEAT_FEATURE_LOOKALIKE_SEGMENTATION_ACCESS = 16;
  SEAT_FEATURE_CUSTOM_AUDIENCE_THIRD_PARTY_DATA_ACCESS = 17;
  SEAT_FEATURE_HAS_OPTED_IN_AD_ASSISTANT = 18;
  SEAT_FEATURE_PLAYER_MODE_SELECTION_FOR_BRANDING_CPCV = 19;
  reserved 3;
}
// @section Advertiser
enum SharingMode {
  SHARING_MODE_OWNER = 0;
  SHARING_MODE_READ_ONLY = 1;
  SHARING_MODE_FULL_ACCESS = 2;
}
// @section Creative
enum SortDirection {
  SORT_DIRECTION_ASC = 1;
  SORT_DIRECTION_DESC = 2;
}
// @section Ab Testing
enum SplitAlgo {
  SPLIT_ALGO_KAIROS = 1;
  SPLIT_ALGO_TEADS_FORMAT = 2;
  SPLIT_ALGO_TEADS_STANDARD = 3;
}
// @section Campaign
enum StartMode {
  START_MODE_CLICK_TO_PLAY = 1;
  START_MODE_VIEW_TO_PLAY = 2;
  START_MODE_VIEW_TO_PLAY_UNTIL = 3;
  START_MODE_VIEW_TO_START = 4;
}
// @section Users Data
enum TargetingCriterion {
  TARGETING_CRITERION_AUDIENCE = 1;
  TARGETING_CRITERION_BROWSER = 2;
  TARGETING_CRITERION_CONTEXTUAL = 3;
  TARGETING_CRITERION_DEVICE = 4;
  TARGETING_CRITERION_DEVICE_MODEL = 5;
  TARGETING_CRITERION_GRAPESHOT = 6;
  TARGETING_CRITERION_IAB_CATEGORY = 7;
  TARGETING_CRITERION_DE_LOCATION = 8;
  TARGETING_CRITERION_OS = 9;
  TARGETING_CRITERION_PACK = 10;
  TARGETING_CRITERION_PLACEMENT = 11;
  TARGETING_CRITERION_TIER = 12;
  TARGETING_CRITERION_WEBSITE = 13;
  TARGETING_CRITERION_FORMAT_CREATIVE_TYPE = 14;
  TARGETING_CRITERION_FORMAT_POSITION = 15;
  TARGETING_CRITERION_FORMAT_SIZE = 16;
  TARGETING_CRITERION_DEVICE_STANDARDISED_NAME = 17;
  TARGETING_CRITERION_BRAND_SAFETY_TEADS = 18;
  TARGETING_CRITERION_BRAND_SAFETY_IAS = 19;
  TARGETING_CRITERION_BRAND_SAFETY_GRAPESHOT = 20;
  TARGETING_CRITERION_ADVERTISER_DATA = 21;
  TARGETING_CRITERION_DEVICE_VENDOR = 22;
  TARGETING_CRITERION_MOBILE_CARRIER = 23;
  TARGETING_CRITERION_DEVICE_HARDWARE_CLASSIFICATION = 24;
  TARGETING_CRITERION_DE_CONNECTION_TYPE = 25;
  TARGETING_CRITERION_ENVIRONMENT_CHANNEL = 26;
  TARGETING_CRITERION_APP_BUNDLE_ID = 27;
  TARGETING_CRITERION_BRAND_SUITABILITY_IAS = 28;
  TARGETING_CRITERION_BRAND_SUITABILITY_GRAPESHOT = 29;
  TARGETING_CRITERION_CONTENT_LANGUAGE = 30;
  TARGETING_CRITERION_DE_ISP = 31;
  TARGETING_CRITERION_BRAND_SAFETY_DOUBLE_VERIFY = 32;
  TARGETING_CRITERION_BRAND_SUITABILITY_DOUBLE_VERIFY = 33;
  TARGETING_CRITERION_DEVICE_YEAR = 34;
  TARGETING_CRITERION_PLATFORM_ENVIRONMENT = 35;
}
// @section Campaign
enum TargetingDemographicAudiencesAccuracyLevel {
  TARGETING_DEMOGRAPHIC_AUDIENCES_ACCURACY_LEVEL_ACCURACY = 1;
  TARGETING_DEMOGRAPHIC_AUDIENCES_ACCURACY_LEVEL_STANDARD = 2;
  TARGETING_DEMOGRAPHIC_AUDIENCES_ACCURACY_LEVEL_REACH = 3;
}
// @section Users Data
enum TargetingDimension {
  TARGETING_DIMENSION_EXELATE = 1;
  TARGETING_DIMENSION_BLUEKAI = 2;
  TARGETING_DIMENSION_LIVERAMP = 3;
  TARGETING_DIMENSION_EMETRIQ = 4;
  TARGETING_DIMENSION_TEADS_SEGMENTS = 5;
  TARGETING_DIMENSION_ALTICE_US = 6;
  TARGETING_DIMENSION_ALTICE_FR = 7;
  TARGETING_DIMENSION_ZEOTAP = 8;
  TARGETING_DIMENSION_CROSSIX = 9;
  TARGETING_DIMENSION_AUDIENCE_STANDARD = 10;
  TARGETING_DIMENSION_AUDIENCE_REACH = 11;
  TARGETING_DIMENSION_AUDIENCE_CUSTOM = 12;
  TARGETING_DIMENSION_SKP = 13;
  TARGETING_DIMENSION_NEUSTAR = 15;
  TARGETING_DIMENSION_SALESFORCE = 16;
  TARGETING_DIMENSION_RETARGETLY = 17;
  TARGETING_DIMENSION_LOOKALIKE = 18;
  TARGETING_DIMENSION_CONTEXTUAL_STANDARD = 19;
  TARGETING_DIMENSION_CONTEXTUAL_CUSTOM = 20;
  TARGETING_DIMENSION_TEADS_AUDIENCES = 21;
  TARGETING_DIMENSION_COMSCORE_AUDIENCE = 22;
  TARGETING_DIMENSION_COMSCORE_CONTEXTUAL = 23;
  TARGETING_DIMENSION_COMSCORE_LANGUAGE = 24;
  reserved 14;
}
// @section Users Data
enum TargetingRuleOperator {
  TARGETING_RULE_OPERATOR_ANY = 1;
  TARGETING_RULE_OPERATOR_NOTANY = 2;
  TARGETING_RULE_OPERATOR_EQ = 3;
  TARGETING_RULE_OPERATOR_ALL = 4;
}
// @section Users Data
enum TaxonomyProvider {
  TAXONOMY_PROVIDER_NIELSEN = 1;
  TAXONOMY_PROVIDER_ORACLE = 2;
  TAXONOMY_PROVIDER_LIVERAMP = 3;
  TAXONOMY_PROVIDER_EMETRIQ = 4;
  TAXONOMY_PROVIDER_TEADS_SEGMENTS = 5;
  TAXONOMY_PROVIDER_ALTICE_US = 6;
  TAXONOMY_PROVIDER_ALTICE_FR = 7;
  TAXONOMY_PROVIDER_ZEOTAP = 8;
  TAXONOMY_PROVIDER_CROSSIX = 9;
  TAXONOMY_PROVIDER_AUDIENCE_STANDARD = 10;
  TAXONOMY_PROVIDER_AUDIENCE_CUSTOM = 11;
  TAXONOMY_PROVIDER_SKP = 12;
  TAXONOMY_PROVIDER_OTHERS = 13;
  TAXONOMY_PROVIDER_RETARGETLY = 14;
  TAXONOMY_PROVIDER_LOOKALIKE = 15;
  TAXONOMY_PROVIDER_CONTEXTUAL_STANDARD = 16;
  TAXONOMY_PROVIDER_CONTEXTUAL_CUSTOM = 17;
  TAXONOMY_PROVIDER_ADVERTISER = 18;
  TAXONOMY_PROVIDER_REMARKETING = 19;
  TAXONOMY_PROVIDER_PUBLISHER = 20;
  TAXONOMY_PROVIDER_MOBILE_GRAPH = 21;
}
// @section Audience Standard
enum TeadsAudienceFlavor {
  TEADS_AUDIENCE_FLAVOR_HIGH_ACCURACY = 1;
  TEADS_AUDIENCE_FLAVOR_ACCURACY = 2;
  TEADS_AUDIENCE_FLAVOR_STANDARD = 3;
  TEADS_AUDIENCE_FLAVOR_REACH = 4;
}
// @section Inventory
enum TfpFeature {
  TFP_FEATURE_SHOW_EXPERT_KPI = 0;
  TFP_FEATURE_SHOW_CREATIVE_APPROVAL = 1;
  TFP_FEATURE_ALLOW_MOAT_ACTIVATION = 2;
  TFP_FEATURE_ALLOW_FORMAT_SETTINGS_EDITION = 3;
  TFP_FEATURE_ALLOW_CAMPAIGN_TAG = 4;
  TFP_FEATURE_SHOW_HEADER_BIDDING_DEAL_ID_TARGETING = 5;
  TFP_FEATURE_HIDE_GUARANTEED_PAGE = 7;
  TFP_FEATURE_SHOW_CAMPAIGN_TROUBLESHOOTING = 8;
  TFP_FEATURE_ALLOW_DMP_PERMUTIVE = 9;
  TFP_FEATURE_ALLOW_SLIDER_IO = 10;
  TFP_FEATURE_ALLOW_INSTREAM = 11;
  TFP_FEATURE_SHOW_GENERAL_AND_PAYMENT_SETTINGS_V1 = 12;
  TFP_FEATURE_SHOW_TRUE_DOMAINS = 13;
  reserved 6;
}
// @section Publisher Statistics
enum TimeRange {
  TIME_RANGE_HOUR = 0;
  TIME_RANGE_DAY = 1;
  TIME_RANGE_WEEK = 2;
  TIME_RANGE_MONTH = 3;
}
// @section Advertiser
enum TrackingBlocklistStatus {
  TRACKING_BLOCKLIST_STATUS_UNBLOCKED = 0;
  TRACKING_BLOCKLIST_STATUS_BLOCKED = 1;
}
// @section Data Science
enum TrainingSource {
  TRAINING_SOURCE_SSP_TRAINING = 1;
  TRAINING_SOURCE_BUYING_ENGINE_TRAINING = 2;
}
// @section Data Science
enum TrainingState {
  TRAINING_STATE_CREATED = 1;
  TRAINING_STATE_TRAINED = 2;
  TRAINING_STATE_LOADED = 3;
  TRAINING_STATE_STOPPED = 4;
}
// @section Inventory
enum UnvettedInventoryStatus {
  UNVETTED_INVENTORY_STATUS_UNVETTED = 1;
  UNVETTED_INVENTORY_STATUS_NEEDS_FURTHER_REVIEW = 2;
}
// @section Advertiser
enum UrlMappingMatchType {
  URL_MAPPING_MATCH_TYPE_CONTAINS = 2;
  URL_MAPPING_MATCH_TYPE_STARTS_WITH = 3;
  reserved 1;
}
// @section Users Data
enum UsersDataEnvironmentChannel {
  USERS_DATA_ENVIRONMENT_CHANNEL_WEB = 0;
  USERS_DATA_ENVIRONMENT_CHANNEL_CTV = 1;
  USERS_DATA_ENVIRONMENT_CHANNEL_INSTREAM = 2;
}
// @section Users Targeting
enum UsersTargetingLookalikeSeedProvider {
  USERS_TARGETING_LOOKALIKE_SEED_PROVIDER_EXELATE = 0;
  USERS_TARGETING_LOOKALIKE_SEED_PROVIDER_TEADS_CONVERSION = 1;
  USERS_TARGETING_LOOKALIKE_SEED_PROVIDER_LIVERAMP = 2;
  USERS_TARGETING_LOOKALIKE_SEED_PROVIDER_ALTICE_US = 3;
  USERS_TARGETING_LOOKALIKE_SEED_PROVIDER_BLUEKAI = 4;
  USERS_TARGETING_LOOKALIKE_SEED_PROVIDER_SALES_FORCE = 5;
  USERS_TARGETING_LOOKALIKE_SEED_PROVIDER_NEUSTAR = 6;
}
// @section Inventory
enum VettedInventoryStatus {
  VETTED_INVENTORY_STATUS_ACTIVE = 1;
  VETTED_INVENTORY_STATUS_DISABLED = 2;
  VETTED_INVENTORY_STATUS_DELETED = 3;
  VETTED_INVENTORY_STATUS_REJECTED = 4;
}
// @section Inventory
enum VettedPublisherInventoryStatus {
  VETTED_PUBLISHER_INVENTORY_STATUS_ACTIVE = 1;
  VETTED_PUBLISHER_INVENTORY_STATUS_DISABLED = 2;
  VETTED_PUBLISHER_INVENTORY_STATUS_DELETED = 3;
  VETTED_PUBLISHER_INVENTORY_STATUS_NOT_LINKED = 4;
}
// @section Inventory
enum VettingOutcome {
  VETTING_OUTCOME_PASS = 1;
  VETTING_OUTCOME_REJECTED = 2;
  VETTING_OUTCOME_FURTHER_REVIEW = 3;
}
// @section Inventory
enum WebsiteStatus {
  WEBSITE_STATUS_NONE = 0;
  WEBSITE_STATUS_ENABLED = 1;
  WEBSITE_STATUS_DISABLED = 2;
  WEBSITE_STATUS_DELETED = 3;
  WEBSITE_STATUS_CONNECTED_DELETED = 4;
}
// @section Inventory
enum WebsiteTier {
  WEBSITE_TIER_1 = 1;
  WEBSITE_TIER_2 = 2;
  WEBSITE_TIER_3 = 3;
}
service CommandService {
  // @section Commercial
  rpc AcknowledgeBuyerSeatCreationToSalesforce ( AcknowledgeBuyerSeatCreationToSalesforceRequest ) returns ( AcknowledgeBuyerSeatCreationToSalesforceResponse );
  // @section Commercial
  rpc AcknowledgeCampaignSkeletonCreationToSalesforce ( AcknowledgeCampaignSkeletonCreationToSalesforceRequest ) returns ( AcknowledgeCampaignSkeletonCreationToSalesforceResponse );
  // @section Inventory
  rpc ActivateAppsForPublisher ( ActivateAppsForPublisherRequest ) returns ( ActivateAppsForPublisherResponse );
  // @section Ad Experience
  rpc ActivateArticleAvailableForDemos ( ActivateArticleAvailableForDemosRequest ) returns ( ActivateArticleAvailableForDemosResponse );
  // @section Ad Experience
  rpc ActivateArticlePublisherForDemos ( ActivateArticlePublisherForDemosRequest ) returns ( ActivateArticlePublisherForDemosResponse );
  // @section Ad Experience
  rpc ActivateBrandAssociatedToDemos ( ActivateBrandAssociatedToDemosRequest ) returns ( ActivateBrandAssociatedToDemosResponse );
  // @section Campaign
  rpc ActivateCampaign ( ActivateCampaignRequest ) returns ( ActivateCampaignResponse );
  // @section Users Data
  rpc ActivateCookielessCustomAudience ( ActivateCookielessCustomAudienceRequest ) returns ( ActivateCookielessCustomAudienceResponse );
  // @section Campaign
  rpc ActivateCreative ( ActivateCreativeRequest ) returns ( ActivateCreativeResponse );
  // @section Ad Experience
  rpc ActivateCreativeKPISupportedByDemos ( ActivateCreativeKPISupportedByDemosRequest ) returns ( ActivateCreativeKPISupportedByDemosResponse );
  // @section Audience Custom
  rpc ActivateCustomAudienceTemplate ( ActivateCustomAudienceTemplateRequest ) returns ( ActivateCustomAudienceTemplateResponse );
  // @section Ad Experience
  rpc ActivateDemoConfigurationForTenant ( ActivateDemoConfigurationForTenantRequest ) returns ( ActivateDemoConfigurationForTenantResponse );
  // @section Ad Experience
  rpc ActivateDemoIABCategory ( ActivateDemoIABCategoryRequest ) returns ( ActivateDemoIABCategoryResponse );
  // @section Advertiser
  // Activate a given seat feature for a given seat
  rpc ActivateFeatureForSeat ( ActivateFeatureForSeatRequest ) returns ( ActivateFeatureForSeatResponse );
  // @section Finance
  rpc ActivateInvoiceEmailNotificationForProfile ( ActivateInvoiceEmailNotificationForProfileRequest ) returns ( ActivateInvoiceEmailNotificationForProfileResponse );
  // @section Campaign
  rpc ActivateLineItem ( ActivateLineItemRequest ) returns ( ActivateLineItemResponse );
  // @section Users Data
  // Activate 3 lookalike segments (accuracy, standard, reach)
  rpc ActivateLookalikeSegments ( ActivateLookalikeSegmentsRequest ) returns ( ActivateLookalikeSegmentsResponse );
  // @section Campaign
  rpc ActivateManagedCampaign ( ActivateManagedCampaignRequest ) returns ( ActivateManagedCampaignResponse );
  // @section Ad Experience
  rpc ActivateMarketSupportedByDemo ( ActivateMarketSupportedByDemoRequest ) returns ( ActivateMarketSupportedByDemoResponse );
  // @section Mrg Contract
  rpc ActivateMrgContract ( ActivateMrgContractRequest ) returns ( ActivateMrgContractResponse );
  // @section Campaign
  // Update Active Performance NonTest Creative Editor compliant campaigns according to requested arguments
  // Add Banner FormatPosition to all related Line Items & Add 2 creative size override (Mobile / Banner and Desktop / Banner)
  rpc ActivatePerformanceBanner ( ActivatePerformanceBannerRequest ) returns ( ActivatePerformanceBannerResponse );
  // @section Users Data
  rpc ActivatePersona ( ActivatePersonaRequest ) returns ( ActivatePersonaResponse );
  // @section Inventory
  rpc ActivatePlacements ( ActivatePlacementsRequest ) returns ( ActivatePlacementsResponse );
  // @section Account
  // Activate the profile and thus permit the user login
  rpc ActivateProfile ( ActivateProfileRequest ) returns ( ActivateProfileResponse );
  // @section Account
  rpc ActivateProfileAnonymously ( ActivateProfileAnonymouslyRequest ) returns ( ActivateProfileAnonymouslyResponse );
  // @section Campaign
  rpc ActivatePublisherDirectSalesCampaign ( ActivatePublisherDirectSalesCampaignRequest ) returns ( ActivatePublisherDirectSalesCampaignResponse );
  // @section Campaign
  rpc ActivatePublisherDirectSalesLineItem ( ActivatePublisherDirectSalesLineItemRequest ) returns ( ActivatePublisherDirectSalesLineItemResponse );
  // @section Campaign
  rpc ActivatePublisherDirectSalesTag ( ActivatePublisherDirectSalesTagRequest ) returns ( ActivatePublisherDirectSalesTagResponse );
  // @section Reachcast
  // Activate a booking
  rpc ActivateReachcastBooking ( ActivateReachcastBookingRequest ) returns ( ActivateReachcastBookingResponse );
  // @section Users Segments
  // Activate remarketing lookback segments at hour from Jenkins scheduler
  // It reads from BQ to update the segments in teads targeting DB
  rpc ActivateRemarketingLookbackSegmentsAnonymously ( ActivateRemarketingLookbackSegmentsAnonymouslyRequest ) returns ( ActivateRemarketingLookbackSegmentsAnonymouslyResponse );
  // @section Inventory
  rpc ActivateSitesForPublisher ( ActivateSitesForPublisherRequest ) returns ( ActivateSitesForPublisherResponse );
  // @section Ad Experience
  rpc ActivateVerticalSupportedByDemos ( ActivateVerticalSupportedByDemosRequest ) returns ( ActivateVerticalSupportedByDemosResponse );
  // @section Users Data
  // Create a new mapping for an audience
  // A mapping represents a combination of segments for one or more countries
  rpc AddAudienceMapping ( AddAudienceMappingRequest ) returns ( AddAudienceMappingResponse );
  // @section Advertiser
  // Adding an event conversion to an advertiser
  rpc AddEventConversionToAdvertiser ( AddEventConversionToAdvertiserRequest ) returns ( AddEventConversionToAdvertiserResponse );
  // @section Advertiser
  // Whitelist a first party segment for a given seat
  rpc AddFirstPartySegmentToWhitelistForSeat ( AddFirstPartySegmentToWhitelistForSeatRequest ) returns ( AddFirstPartySegmentToWhitelistForSeatResponse );
  // @section Brand Safety
  // Adds a Grapeshot Brand Suitability segment for a given seat
  rpc AddGrapeshotBrandSuitabilitySegmentForBuyerSeat ( AddGrapeshotBrandSuitabilitySegmentForBuyerSeatRequest ) returns ( AddGrapeshotBrandSuitabilitySegmentForBuyerSeatResponse );
  // @section Advertiser
  // An event in this context is an action performed by a user on a website ("Add to cart", for example). Each event is mapped to several URLs : the current RPC add one in this mapping
  rpc AddUrlToAdvertiserEventForBuyerPixel ( AddUrlToAdvertiserEventForBuyerPixelRequest ) returns ( AddUrlToAdvertiserEventForBuyerPixelResponse );
  // @section Inventory
  rpc AgreeToTermsAndConditions ( AgreeToTermsAndConditionsRequest ) returns ( AgreeToTermsAndConditionsResponse );
  // @section Users Targeting
  rpc AllowLookalikeSegmentForSeat ( AllowLookalikeSegmentForSeatRequest ) returns ( AllowLookalikeSegmentForSeatResponse );
  // @section Users Targeting
  rpc AllowRemarketingSegmentForSeat ( AllowRemarketingSegmentForSeatRequest ) returns ( AllowRemarketingSegmentForSeatResponse );
  // @section Command Runner
  rpc ApplySubmission ( ApplySubmissionRequest ) returns ( ApplySubmissionResponse );
  // @section Creatives Approval
  // Approves creatives for a given publisher
  // The status of the creatives is set to APPROVED and the delivery is authorized
  rpc ApproveCreativesForPublisher ( ApproveCreativesForPublisherRequest ) returns ( ApproveCreativesForPublisherResponse );
  // @section Creatives Approval
  // Updates inStream creatives that are wrongly disapproved from Authorized Buyers Approval due to Moat
  // The statuses are retrieved from Google's API
  // On Google Authorized Buyers inventory only approved creatives can deliver
  rpc ApproveInStreamCreativesWronglyDisapprovedByMoatAnonymously ( ApproveInStreamCreativesWronglyDisapprovedByMoatAnonymouslyRequest ) returns ( ApproveInStreamCreativesWronglyDisapprovedByMoatAnonymouslyResponse );
  // @section Finance
  rpc ApprovePendingPublisherPaymentSettingChangesForPublisherOnBillingOffice ( ApprovePendingPublisherPaymentSettingChangesForPublisherOnBillingOfficeRequest ) returns ( ApprovePendingPublisherPaymentSettingChangesForPublisherOnBillingOfficeResponse );
  // @section Finance
  rpc AskForPaymentForPublisher ( AskForPaymentForPublisherRequest ) returns ( AskForPaymentForPublisherResponse );
  // @section Campaign
  rpc AssignCreativesToCampaignLineItems ( AssignCreativesToCampaignLineItemsRequest ) returns ( AssignCreativesToCampaignLineItemsResponse );
  // @section Users Data
  // Removes a specific mapping for a group of countries
  // Once the mapping is removed, countries are assigned to the default mapping
  rpc AssignDefaultAudienceMapping ( AssignDefaultAudienceMappingRequest ) returns ( AssignDefaultAudienceMappingResponse );
  // @section Finance
  rpc AssociateDefaultInvoiceRecipientToCampaignAnonymously ( AssociateDefaultInvoiceRecipientToCampaignAnonymouslyRequest ) returns ( AssociateDefaultInvoiceRecipientToCampaignAnonymouslyResponse );
  // @section Finance
  rpc AssociateInvoiceRecipientToCampaign ( AssociateInvoiceRecipientToCampaignRequest ) returns ( AssociateInvoiceRecipientToCampaignResponse );
  // @section Campaign
  rpc AssociateLineItemToAbTest ( AssociateLineItemToAbTestRequest ) returns ( AssociateLineItemToAbTestResponse );
  // @section Account
  // Returns the API Token owner passing its token
  rpc AuthenticateWithApiTokenAnonymously ( AuthenticateWithApiTokenAnonymouslyRequest ) returns ( AuthenticateWithApiTokenAnonymouslyResponse );
  // @section Traffic
  // Blacklists a domain provided internally
  rpc BlacklistDomain ( BlacklistDomainRequest ) returns ( BlacklistDomainResponse );
  // @section Advertiser
  rpc BlockTrackingForAdvertiser ( BlockTrackingForAdvertiserRequest ) returns ( BlockTrackingForAdvertiserResponse );
  // @section Campaign
  // Increase the delivery on a website for a given insertion
  // This is done by increasing virtually the potential revenue which will results in higher bids
  rpc BoostInsertionDeliveryOnWebsite ( BoostInsertionDeliveryOnWebsiteRequest ) returns ( BoostInsertionDeliveryOnWebsiteResponse );
  // @section Finance
  rpc CallForInvoicePublisherDirectSalesDealIdBillable ( CallForInvoicePublisherDirectSalesDealIdBillableRequest ) returns ( CallForInvoicePublisherDirectSalesDealIdBillableResponse );
  // @section Ab Testing
  rpc CancelScheduledAbTest ( CancelScheduledAbTestRequest ) returns ( CancelScheduledAbTestResponse );
  // @section Account
  rpc ClearPendingConfirmationEmailForProfile ( ClearPendingConfirmationEmailForProfileRequest ) returns ( ClearPendingConfirmationEmailForProfileResponse );
  // @section Campaign Support
  // Status change
  rpc CloseCampaignSupportRequest ( CloseCampaignSupportRequestRequest ) returns ( CloseCampaignSupportRequestResponse );
  // @section Campaign Support
  rpc CompleteCampaignSupportRequest ( CompleteCampaignSupportRequestRequest ) returns ( CompleteCampaignSupportRequestResponse );
  // @section Campaign Support
  rpc CompleteExpiredCampaignSupportRequestsAnonymously ( CompleteExpiredCampaignSupportRequestsAnonymouslyRequest ) returns ( CompleteExpiredCampaignSupportRequestsAnonymouslyResponse );
  // @section Finance
  // Compute MSA invoices amount every month into api-domains finance database and set job history to green on success
  rpc ComputeMasterServiceAgreementInvoicingAnonymously ( ComputeMasterServiceAgreementInvoicingAnonymouslyRequest ) returns ( ComputeMasterServiceAgreementInvoicingAnonymouslyResponse );
  // @section Campaign
  rpc CopyCustomTargetingRulesFromCampaign ( CopyCustomTargetingRulesFromCampaignRequest ) returns ( CopyCustomTargetingRulesFromCampaignResponse );
  // @section Inventory
  //  @title Copy Placement AdType Setup
  //
  //  Copy a placement source's AdType setup to one or more placement targets.
  //
  rpc CopyPlacementAdTypeSetup ( CopyPlacementAdTypeSetupRequest ) returns ( CopyPlacementAdTypeSetupResponse );
  // @section Ab Testing
  rpc CreateAbTestDynamicParameter ( CreateAbTestDynamicParameterRequest ) returns ( CreateAbTestDynamicParameterResponse );
  // @section Advertiser
  // Create an advertiser for a given publisher
  rpc CreateAdvertiserForPublisher ( CreateAdvertiserForPublisherRequest ) returns ( CreateAdvertiserForPublisherResponse );
  // @section Advertiser
  // Create an agency for a given publisher
  rpc CreateAgencyForPublisher ( CreateAgencyForPublisherRequest ) returns ( CreateAgencyForPublisherResponse );
  // @section Account
  // A Member can create an API Token to act on behalf another member that is in the same entity or sub-entity
  rpc CreateApiToken ( CreateApiTokenRequest ) returns ( CreateApiTokenResponse );
  // @section Inventory
  rpc CreateAppsForPublisher ( CreateAppsForPublisherRequest ) returns ( CreateAppsForPublisherResponse );
  // @section Ad Experience
  rpc CreateArticleAvailableForDemos ( CreateArticleAvailableForDemosRequest ) returns ( CreateArticleAvailableForDemosResponse );
  // @section Ad Experience
  rpc CreateArticlePublishersForDemos ( CreateArticlePublishersForDemosRequest ) returns ( CreateArticlePublishersForDemosResponse );
  // @section Campaign
  rpc CreateBrandPulseCampaign ( CreateBrandPulseCampaignRequest ) returns ( CreateBrandPulseCampaignResponse );
  // @section Branding Measurement
  rpc CreateBrandPulseSurveyAnonymously ( CreateBrandPulseSurveyAnonymouslyRequest ) returns ( CreateBrandPulseSurveyAnonymouslyResponse );
  // @section Ad Experience
  rpc CreateBrandsAssociatedToDemos ( CreateBrandsAssociatedToDemosRequest ) returns ( CreateBrandsAssociatedToDemosResponse );
  // @section Users Data
  // Creates new brand personas, including their blocks and their mapping
  rpc CreateBuyerCustomAudiences ( CreateBuyerCustomAudiencesRequest ) returns ( CreateBuyerCustomAudiencesResponse );
  // @section Account
  // Create the buyer entity for agency/advertiser
  rpc CreateBuyerEntity ( CreateBuyerEntityRequest ) returns ( CreateBuyerEntityResponse );
  // @section Users Data
  rpc CreateBuyerPersona ( CreateBuyerPersonaRequest ) returns ( CreateBuyerPersonaResponse );
  // @section Users Data
  rpc CreateBuyerPlannedTargeting ( CreateBuyerPlannedTargetingRequest ) returns ( CreateBuyerPlannedTargetingResponse );
  // @section Campaign Setup
  rpc CreateCampaign ( CreateCampaignRequest ) returns ( CreateCampaignResponse );
  // @section Ab Testing
  rpc CreateCampaignAbTest ( CreateCampaignAbTestRequest ) returns ( CreateCampaignAbTestResponse );
  // @section Campaign
  rpc CreateCampaignSkeletonWithObjective ( CreateCampaignSkeletonWithObjectiveRequest ) returns ( CreateCampaignSkeletonWithObjectiveResponse );
  // @section Campaign
  rpc CreateCampaignSkeletonsFromSalesforceOpportunity ( CreateCampaignSkeletonsFromSalesforceOpportunityRequest ) returns ( CreateCampaignSkeletonsFromSalesforceOpportunityResponse );
  // @section Campaign Support
  rpc CreateCampaignSupportRequestForCampaign ( CreateCampaignSupportRequestForCampaignRequest ) returns ( CreateCampaignSupportRequestForCampaignResponse );
  // @section Advertiser
  // Create a self served client (advertiser or agency) buyer seat for a salesforce advertiser/agency entity in a specific office
  rpc CreateClientSeatForBuyer ( CreateClientSeatForBuyerRequest ) returns ( CreateClientSeatForBuyerResponse );
  // @section Users Data
  rpc CreateContextualSegment ( CreateContextualSegmentRequest ) returns ( CreateContextualSegmentResponse );
  // @section Advertiser
  // Create a token to authenticate conversion api requests
  rpc CreateConversionApiToken ( CreateConversionApiTokenRequest ) returns ( CreateConversionApiTokenResponse );
  // @section Users Data
  rpc CreateCookielessBuyerCustomAudience ( CreateCookielessBuyerCustomAudienceRequest ) returns ( CreateCookielessBuyerCustomAudienceResponse );
  // @section Users Data
  rpc CreateCookielessCustomAudience ( CreateCookielessCustomAudienceRequest ) returns ( CreateCookielessCustomAudienceResponse );
  // @section Ad Experience
  rpc CreateCreativeKPIsSupportedByDemos ( CreateCreativeKPIsSupportedByDemosRequest ) returns ( CreateCreativeKPIsSupportedByDemosResponse );
  // @section Ad Experience
  rpc CreateCreativePositionsSupportedByDemos ( CreateCreativePositionsSupportedByDemosRequest ) returns ( CreateCreativePositionsSupportedByDemosResponse );
  // @section Ad Experience
  rpc CreateCreativeSizesSupportedByDemos ( CreateCreativeSizesSupportedByDemosRequest ) returns ( CreateCreativeSizesSupportedByDemosResponse );
  // @section Ad Experience
  rpc CreateCreativeTypesSupportedByDemos ( CreateCreativeTypesSupportedByDemosRequest ) returns ( CreateCreativeTypesSupportedByDemosResponse );
  // @section Audience Custom
  rpc CreateCustomAudienceTemplate ( CreateCustomAudienceTemplateRequest ) returns ( CreateCustomAudienceTemplateResponse );
  // @section Campaign
  rpc CreateCustomTargetingRuleForCampaign ( CreateCustomTargetingRuleForCampaignRequest ) returns ( CreateCustomTargetingRuleForCampaignResponse );
  // @section Exchange Rate
  rpc CreateDailyExchangeRatesAnonymously ( CreateDailyExchangeRatesAnonymouslyRequest ) returns ( CreateDailyExchangeRatesAnonymouslyResponse );
  // @section Reporting
  // Only user in emails.txt will be able to use datamarts command, Otherwise a PERMISSION_DENIED error code will be returned
  // Create a datamart
  rpc CreateDatamart ( CreateDatamartRequest ) returns ( CreateDatamartResponse );
  // @section Programmatic
  rpc CreateDealSyncBuyersForDealSyncPlatform ( CreateDealSyncBuyersForDealSyncPlatformRequest ) returns ( CreateDealSyncBuyersForDealSyncPlatformResponse );
  // @section Advertiser
  // Create a default self-served pixel for an advertiser which has already existing conversions
  rpc CreateDefaultPixelForAdvertiserWithExistingConversions ( CreateDefaultPixelForAdvertiserWithExistingConversionsRequest ) returns ( CreateDefaultPixelForAdvertiserWithExistingConversionsResponse );
  // @section Ad Experience
  rpc CreateDemoConfigurationForTenant ( CreateDemoConfigurationForTenantRequest ) returns ( CreateDemoConfigurationForTenantResponse );
  // @section Ad Experience
  rpc CreateDemoIABCategories ( CreateDemoIABCategoriesRequest ) returns ( CreateDemoIABCategoriesResponse );
  // @section Account
  // Create accounts for employees including office delegations and training seats
  rpc CreateEmployee ( CreateEmployeeRequest ) returns ( CreateEmployeeResponse );
  // @section Advertiser
  // Create an internal agency seat for an office
  rpc CreateInternalAgencySeatForOffice ( CreateInternalAgencySeatForOfficeRequest ) returns ( CreateInternalAgencySeatForOfficeResponse );
  // @section Advertiser
  // Create an internal buyer seat for a salesforce advertiser/agency entity in a specific office
  rpc CreateInternalSeatForBuyer ( CreateInternalSeatForBuyerRequest ) returns ( CreateInternalSeatForBuyerResponse );
  // @section Advertiser
  // Create an IO Buyer seat for a salesforce advertiser/agency entity in a specific office
  rpc CreateIoBuyerSeatForEntity ( CreateIoBuyerSeatForEntityRequest ) returns ( CreateIoBuyerSeatForEntityResponse );
  // @section Users Data
  // Create 3 lookalike segments (accuracy, standard, reach), which will be generated shortly after creation
  rpc CreateLookalikeSegments ( CreateLookalikeSegmentsRequest ) returns ( CreateLookalikeSegmentsResponse );
  // @section Advertiser
  // Create a Managed Buyer seat for a salesforce advertiser/agency entity in a specific office
  rpc CreateManagedBuyerSeatForEntity ( CreateManagedBuyerSeatForEntityRequest ) returns ( CreateManagedBuyerSeatForEntityResponse );
  // @section Ad Experience
  rpc CreateMarketsSupportedByDemo ( CreateMarketsSupportedByDemoRequest ) returns ( CreateMarketsSupportedByDemoResponse );
  // @section Data Science
  rpc CreateModelTraining ( CreateModelTrainingRequest ) returns ( CreateModelTrainingResponse );
  // @section Mrg Contract
  rpc CreateMrgContract ( CreateMrgContractRequest ) returns ( CreateMrgContractResponse );
  // @section Account
  rpc CreateOrUpdateAdvertiserFromSalesforceAnonymously ( CreateOrUpdateAdvertiserFromSalesforceAnonymouslyRequest ) returns ( CreateOrUpdateAdvertiserFromSalesforceAnonymouslyResponse );
  // @section Users Data
  rpc CreateOracleFirstPartySegment ( CreateOracleFirstPartySegmentRequest ) returns ( CreateOracleFirstPartySegmentResponse );
  // @section Inventory
  rpc CreatePackForBuyer ( CreatePackForBuyerRequest ) returns ( CreatePackForBuyerResponse );
  // @section Users Data
  // Creates a new brand persona, including its blocks and their mapping
  rpc CreatePersona ( CreatePersonaRequest ) returns ( CreatePersonaResponse );
  // @section Advertiser
  // Create a pixel for a given buyer (advertiser or agency)
  rpc CreatePixelForBuyer ( CreatePixelForBuyerRequest ) returns ( CreatePixelForBuyerResponse );
  // @section Inventory
  rpc CreatePlacementsForPublisher ( CreatePlacementsForPublisherRequest ) returns ( CreatePlacementsForPublisherResponse );
  // @section Inventory
  rpc CreatePlacementsForWebsites ( CreatePlacementsForWebsitesRequest ) returns ( CreatePlacementsForWebsitesResponse );
  // @section Ab Testing
  rpc CreatePlatformAbTest ( CreatePlatformAbTestRequest ) returns ( CreatePlatformAbTestResponse );
  // @section Account
  // Create a profile for person with some accounts
  rpc CreateProfile ( CreateProfileRequest ) returns ( CreateProfileResponse );
  // @section Account
  rpc CreateProfileForIdentityProviderAnonymously ( CreateProfileForIdentityProviderAnonymouslyRequest ) returns ( CreateProfileForIdentityProviderAnonymouslyResponse );
  // @section Campaign
  rpc CreatePublisherDirectSalesCampaign ( CreatePublisherDirectSalesCampaignRequest ) returns ( CreatePublisherDirectSalesCampaignResponse );
  // @section Campaign
  rpc CreatePublisherDirectSalesCampaignTag ( CreatePublisherDirectSalesCampaignTagRequest ) returns ( CreatePublisherDirectSalesCampaignTagResponse );
  // @section Campaign
  rpc CreatePublisherDirectSalesCreative ( CreatePublisherDirectSalesCreativeRequest ) returns ( CreatePublisherDirectSalesCreativeResponse );
  // @section Campaign
  rpc CreatePublisherDirectSalesLineItem ( CreatePublisherDirectSalesLineItemRequest ) returns ( CreatePublisherDirectSalesLineItemResponse );
  // @section Campaign
  rpc CreatePublisherDirectSalesTag ( CreatePublisherDirectSalesTagRequest ) returns ( CreatePublisherDirectSalesTagResponse );
  // @section Account
  rpc CreatePublisherTypeSettingValues ( CreatePublisherTypeSettingValuesRequest ) returns ( CreatePublisherTypeSettingValuesResponse );
  // @section Reachcast
  // Create a booking
  rpc CreateReachcastBooking ( CreateReachcastBookingRequest ) returns ( CreateReachcastBookingResponse );
  // @section Users Data
  rpc CreateRemarketingSegmentForBrandPulse ( CreateRemarketingSegmentForBrandPulseRequest ) returns ( CreateRemarketingSegmentForBrandPulseResponse );
  // @section Retail Media
  rpc CreateRetailer ( CreateRetailerRequest ) returns ( CreateRetailerResponse );
  // @section Retail Media
  rpc CreateRetailerAndSmartlinkConfiguration ( CreateRetailerAndSmartlinkConfigurationRequest ) returns ( CreateRetailerAndSmartlinkConfigurationResponse );
  // @section Retail Media
  // Create a Smartlink configuration for an existing retailer
  rpc CreateRetailerSmartlinkConfiguration ( CreateRetailerSmartlinkConfigurationRequest ) returns ( CreateRetailerSmartlinkConfigurationResponse );
  // @section Account
  // Create a client (advertiser or agency) buyer seat on our platform for a Salesforce seat ID
  rpc CreateSeatForBuyer ( CreateSeatForBuyerRequest ) returns ( CreateSeatForBuyerResponse );
  // @section Advertiser
  // Create a Self-Served Buyer seat for a salesforce advertiser/agency entity in a specific office
  rpc CreateSelfServedBuyerSeatForEntity ( CreateSelfServedBuyerSeatForEntityRequest ) returns ( CreateSelfServedBuyerSeatForEntityResponse );
  // @section Inventory
  rpc CreateSitesForPublisher ( CreateSitesForPublisherRequest ) returns ( CreateSitesForPublisherResponse );
  // @section Ad Experience
  rpc CreateVerticalsSupportedByDemos ( CreateVerticalsSupportedByDemosRequest ) returns ( CreateVerticalsSupportedByDemosResponse );
  // @section Users Data
  rpc CreateWeatherSegment ( CreateWeatherSegmentRequest ) returns ( CreateWeatherSegmentResponse );
  // @section Inventory
  rpc CreateWebsitesForPublisher ( CreateWebsitesForPublisherRequest ) returns ( CreateWebsitesForPublisherResponse );
  // @section Traffic
  // Create new whitelisted IP ranges
  rpc CreateWhitelistedIPRanges ( CreateWhitelistedIPRangesRequest ) returns ( CreateWhitelistedIPRangesResponse );
  // @section Inventory
  rpc DeactivateAppsForPublisher ( DeactivateAppsForPublisherRequest ) returns ( DeactivateAppsForPublisherResponse );
  // @section Ad Experience
  rpc DeactivateArticleAvailableForDemos ( DeactivateArticleAvailableForDemosRequest ) returns ( DeactivateArticleAvailableForDemosResponse );
  // @section Ad Experience
  rpc DeactivateArticlePublisherForDemos ( DeactivateArticlePublisherForDemosRequest ) returns ( DeactivateArticlePublisherForDemosResponse );
  // @section Ad Experience
  rpc DeactivateBrandAssociatedToDemos ( DeactivateBrandAssociatedToDemosRequest ) returns ( DeactivateBrandAssociatedToDemosResponse );
  // @section Campaign
  rpc DeactivateCampaign ( DeactivateCampaignRequest ) returns ( DeactivateCampaignResponse );
  // @section Campaign
  rpc DeactivateCreative ( DeactivateCreativeRequest ) returns ( DeactivateCreativeResponse );
  // @section Ad Experience
  rpc DeactivateCreativeKPISupportedByDemos ( DeactivateCreativeKPISupportedByDemosRequest ) returns ( DeactivateCreativeKPISupportedByDemosResponse );
  // @section Audience Custom
  rpc DeactivateCustomAudienceTemplate ( DeactivateCustomAudienceTemplateRequest ) returns ( DeactivateCustomAudienceTemplateResponse );
  // @section Ad Experience
  rpc DeactivateDemoConfigurationForTenant ( DeactivateDemoConfigurationForTenantRequest ) returns ( DeactivateDemoConfigurationForTenantResponse );
  // @section Ad Experience
  rpc DeactivateDemoIABCategory ( DeactivateDemoIABCategoryRequest ) returns ( DeactivateDemoIABCategoryResponse );
  // @section Advertiser
  // Deactivate a given seat feature for a given seat
  rpc DeactivateFeatureForSeat ( DeactivateFeatureForSeatRequest ) returns ( DeactivateFeatureForSeatResponse );
  // @section Finance
  rpc DeactivateInvoiceEmailNotificationForProfile ( DeactivateInvoiceEmailNotificationForProfileRequest ) returns ( DeactivateInvoiceEmailNotificationForProfileResponse );
  // @section Campaign
  rpc DeactivateLineItem ( DeactivateLineItemRequest ) returns ( DeactivateLineItemResponse );
  // @section Ad Experience
  rpc DeactivateMarketSupportedByDemo ( DeactivateMarketSupportedByDemoRequest ) returns ( DeactivateMarketSupportedByDemoResponse );
  // @section Mrg Contract
  rpc DeactivateMrgContract ( DeactivateMrgContractRequest ) returns ( DeactivateMrgContractResponse );
  // @section Inventory
  rpc DeactivatePlacements ( DeactivatePlacementsRequest ) returns ( DeactivatePlacementsResponse );
  // @section Account
  // Deactivate the profile and thus prevent the user login
  rpc DeactivateProfile ( DeactivateProfileRequest ) returns ( DeactivateProfileResponse );
  // @section Campaign
  rpc DeactivatePublisherDirectSalesCampaign ( DeactivatePublisherDirectSalesCampaignRequest ) returns ( DeactivatePublisherDirectSalesCampaignResponse );
  // @section Campaign
  rpc DeactivatePublisherDirectSalesLineItem ( DeactivatePublisherDirectSalesLineItemRequest ) returns ( DeactivatePublisherDirectSalesLineItemResponse );
  // @section Campaign
  rpc DeactivatePublisherDirectSalesTag ( DeactivatePublisherDirectSalesTagRequest ) returns ( DeactivatePublisherDirectSalesTagResponse );
  // @section Inventory
  rpc DeactivateSitesForPublisher ( DeactivateSitesForPublisherRequest ) returns ( DeactivateSitesForPublisherResponse );
  // @section Ad Experience
  rpc DeactivateVerticalSupportedByDemos ( DeactivateVerticalSupportedByDemosRequest ) returns ( DeactivateVerticalSupportedByDemosResponse );
  // @section Advertiser
  // Delete an advertiser
  rpc DeleteAdvertiser ( DeleteAdvertiserRequest ) returns ( DeleteAdvertiserResponse );
  // @section Account
  rpc DeleteAdvertiserFromSalesforceAnonymously ( DeleteAdvertiserFromSalesforceAnonymouslyRequest ) returns ( DeleteAdvertiserFromSalesforceAnonymouslyResponse );
  // @section Advertiser
  // Delete an agency
  rpc DeleteAgency ( DeleteAgencyRequest ) returns ( DeleteAgencyResponse );
  // @section Campaign
  rpc DeleteCampaignDraft ( DeleteCampaignDraftRequest ) returns ( DeleteCampaignDraftResponse );
  // @section Campaign Support
  rpc DeleteCampaignSupportRequest ( DeleteCampaignSupportRequestRequest ) returns ( DeleteCampaignSupportRequestResponse );
  // @section Audience Custom
  rpc DeleteCustomAudienceTemplate ( DeleteCustomAudienceTemplateRequest ) returns ( DeleteCustomAudienceTemplateResponse );
  // @section Reporting
  // Delete a datamart
  rpc DeleteDatamart ( DeleteDatamartRequest ) returns ( DeleteDatamartResponse );
  // @section Brand Safety
  // Deletes a list of Grapeshot Brand Suitability segments for a given seat
  rpc DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeat ( DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest ) returns ( DeleteGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse );
  // @section Mrg Contract
  rpc DeleteMrgContract ( DeleteMrgContractRequest ) returns ( DeleteMrgContractResponse );
  // @section Inventory
  rpc DeletePack ( DeletePackRequest ) returns ( DeletePackResponse );
  // @section Inventory
  rpc DeletePackForBuyer ( DeletePackForBuyerRequest ) returns ( DeletePackForBuyerResponse );
  // @section Inventory
  rpc DeletePreviousPlacementsForAssistedPacksAnonymously ( DeletePreviousPlacementsForAssistedPacksAnonymouslyRequest ) returns ( DeletePreviousPlacementsForAssistedPacksAnonymouslyResponse );
  // @section Campaign
  rpc DeletePublisherDirectSalesCampaign ( DeletePublisherDirectSalesCampaignRequest ) returns ( DeletePublisherDirectSalesCampaignResponse );
  // @section Campaign
  rpc DeletePublisherDirectSalesCreative ( DeletePublisherDirectSalesCreativeRequest ) returns ( DeletePublisherDirectSalesCreativeResponse );
  // @section Campaign
  rpc DeletePublisherDirectSalesLineItem ( DeletePublisherDirectSalesLineItemRequest ) returns ( DeletePublisherDirectSalesLineItemResponse );
  // @section Reachcast
  rpc DeleteReachcastBooking ( DeleteReachcastBookingRequest ) returns ( DeleteReachcastBookingResponse );
  // @section Reachcast
  // Job which clean our Live Planner cache
  rpc DeleteReachcastLivePlannerCacheAnonymously ( DeleteReachcastLivePlannerCacheAnonymouslyRequest ) returns ( DeleteReachcastLivePlannerCacheAnonymouslyResponse );
  // @section Ab Testing
  rpc DeleteReadyAbTest ( DeleteReadyAbTestRequest ) returns ( DeleteReadyAbTestResponse );
  // @section Retail Media
  rpc DeleteRetailer ( DeleteRetailerRequest ) returns ( DeleteRetailerResponse );
  // @section Retail Media
  rpc DeleteRetailerSmartlinkConfiguration ( DeleteRetailerSmartlinkConfigurationRequest ) returns ( DeleteRetailerSmartlinkConfigurationResponse );
  // @section Traffic
  // Delete a whitelisted app bundle id
  rpc DeleteWhitelistedAppBundleId ( DeleteWhitelistedAppBundleIdRequest ) returns ( DeleteWhitelistedAppBundleIdResponse );
  // @section Traffic
  // Delete a whitelisted domain
  rpc DeleteWhitelistedDomain ( DeleteWhitelistedDomainRequest ) returns ( DeleteWhitelistedDomainResponse );
  // @section Traffic
  // Delete whitelisted IP ranges
  rpc DeleteWhitelistedIPRanges ( DeleteWhitelistedIPRangesRequest ) returns ( DeleteWhitelistedIPRangesResponse );
  // @section Campaign
  // Restore the delivery on a website for all line items of a given campaign
  rpc DeliverNormallyForCampaignOnWebsite ( DeliverNormallyForCampaignOnWebsiteRequest ) returns ( DeliverNormallyForCampaignOnWebsiteResponse );
  // @section Campaign
  // Deliver normally on a website for a given insertion
  rpc DeliverNormallyForInsertionOnWebsite ( DeliverNormallyForInsertionOnWebsiteRequest ) returns ( DeliverNormallyForInsertionOnWebsiteResponse );
  // @section Ab Testing
  rpc DeployAbTest ( DeployAbTestRequest ) returns ( DeployAbTestResponse );
  // @section Campaign
  rpc DisableAdCollisionFlagForCampaign ( DisableAdCollisionFlagForCampaignRequest ) returns ( DisableAdCollisionFlagForCampaignResponse );
  // @section Finance
  rpc DisableAutoInvoicingForCampaign ( DisableAutoInvoicingForCampaignRequest ) returns ( DisableAutoInvoicingForCampaignResponse );
  // @section Reporting
  // Disable report, NOT FOUND error code will be returned if the ReportPreferenceId is not in the manager db
  rpc DisableAutoReport ( DisableAutoReportRequest ) returns ( DisableAutoReportResponse );
  // @section Traffic
  // Disable a blacklisted domain permanently
  rpc DisableBlacklistedDomain ( DisableBlacklistedDomainRequest ) returns ( DisableBlacklistedDomainResponse );
  // @section Advertiser
  // Disables a Buyer seat if the current seat status is not already disabled
  rpc DisableBuyerSeat ( DisableBuyerSeatRequest ) returns ( DisableBuyerSeatResponse );
  // @section Campaign
  rpc DisableGuaranteedFlagForLineItem ( DisableGuaranteedFlagForLineItemRequest ) returns ( DisableGuaranteedFlagForLineItemResponse );
  // @section Inventory
  rpc DisableHeaderBiddingAutoSizeFlagForPlacement ( DisableHeaderBiddingAutoSizeFlagForPlacementRequest ) returns ( DisableHeaderBiddingAutoSizeFlagForPlacementResponse );
  // @section Inventory
  rpc DisableStrategicFlagForPublisher ( DisableStrategicFlagForPublisherRequest ) returns ( DisableStrategicFlagForPublisherResponse );
  // @section Users Targeting
  rpc DisallowLookalikeSegmentForSeat ( DisallowLookalikeSegmentForSeatRequest ) returns ( DisallowLookalikeSegmentForSeatResponse );
  // @section Users Targeting
  rpc DisallowRemarketingSegmentForSeat ( DisallowRemarketingSegmentForSeatRequest ) returns ( DisallowRemarketingSegmentForSeatResponse );
  // @section Campaign
  rpc DissociateLineItemToAbTest ( DissociateLineItemToAbTestRequest ) returns ( DissociateLineItemToAbTestResponse );
  // @section Campaign
  rpc EnableAdCollisionFlagForCampaign ( EnableAdCollisionFlagForCampaignRequest ) returns ( EnableAdCollisionFlagForCampaignResponse );
  // @section Finance
  rpc EnableAutoInvoicingForCampaign ( EnableAutoInvoicingForCampaignRequest ) returns ( EnableAutoInvoicingForCampaignResponse );
  // @section Advertiser
  // Enables a Buyer seat if the current seat status is not already enabled
  rpc EnableBuyerSeat ( EnableBuyerSeatRequest ) returns ( EnableBuyerSeatResponse );
  // @section Campaign
  rpc EnableGuaranteedFlagForLineItem ( EnableGuaranteedFlagForLineItemRequest ) returns ( EnableGuaranteedFlagForLineItemResponse );
  // @section Inventory
  rpc EnableHeaderBiddingAutoSizeFlagForPlacement ( EnableHeaderBiddingAutoSizeFlagForPlacementRequest ) returns ( EnableHeaderBiddingAutoSizeFlagForPlacementResponse );
  // @section Inventory
  rpc EnableStrategicFlagForPublisher ( EnableStrategicFlagForPublisherRequest ) returns ( EnableStrategicFlagForPublisherResponse );
  // @section Advertiser
  // Create a visits type conversion if same conversion (pixel id and domain) does not exist
  rpc EnsureVisitsConversionExistsForBuyerPixelAndDomain ( EnsureVisitsConversionExistsForBuyerPixelAndDomainRequest ) returns ( EnsureVisitsConversionExistsForBuyerPixelAndDomainResponse );
  // @section Reporting
  // Set expiration time on downloaded auto-report and return the link to download the report.
  rpc ExpireTemplateSchedulingAfterDownloadInactivityForSeat ( ExpireTemplateSchedulingAfterDownloadInactivityForSeatRequest ) returns ( ExpireTemplateSchedulingAfterDownloadInactivityForSeatResponse );
  // @section Advertiser
  // Export all enabled conversion api tokens to a dedicated bucket in S3
  rpc ExportEnabledConversionApiTokensToS3Anonymously ( ExportEnabledConversionApiTokensToS3AnonymouslyRequest ) returns ( ExportEnabledConversionApiTokensToS3AnonymouslyResponse );
  // @section Campaign
  // Export all performance line items by advertiser domain to a dedicated bucket in S3
  rpc ExportTrafficAcquisitionLineItemsByOptimizedBuyerPixelDomainAnonymously ( ExportTrafficAcquisitionLineItemsByOptimizedBuyerPixelDomainAnonymouslyRequest ) returns ( ExportTrafficAcquisitionLineItemsByOptimizedBuyerPixelDomainAnonymouslyResponse );
  // @section Finance
  rpc GenerateAutoBillingSheet ( GenerateAutoBillingSheetRequest ) returns ( GenerateAutoBillingSheetResponse );
  // @section Finance
  rpc GenerateFinanceReport ( GenerateFinanceReportRequest ) returns ( GenerateFinanceReportResponse );
  // @section Inventory
  rpc GeneratePresignedURLForPublisherLogoUpload ( GeneratePresignedURLForPublisherLogoUploadRequest ) returns ( GeneratePresignedURLForPublisherLogoUploadResponse );
  // @section Reporting
  // Grant access temporarily to buyer report generation for the supplied profile
  rpc GrantAccessToBuyerReportingForProfileAnonymously ( GrantAccessToBuyerReportingForProfileAnonymouslyRequest ) returns ( GrantAccessToBuyerReportingForProfileAnonymouslyResponse );
  // @section Reporting
  // Grant access temporarily to publisher report generation for the supplied profile
  rpc GrantAccessToPublisherReportingForProfileAnonymously ( GrantAccessToPublisherReportingForProfileAnonymouslyRequest ) returns ( GrantAccessToPublisherReportingForProfileAnonymouslyResponse );
  // @section Account
  // Grant Teads Ad Manager admin role ("Connect Admin") for a buyer
  rpc GrantAdminRoleForBuyer ( GrantAdminRoleForBuyerRequest ) returns ( GrantAdminRoleForBuyerResponse );
  // @section Account
  // Grant roles for an account. If the account does not exist it will be created.
  rpc GrantRolesForAccount ( GrantRolesForAccountRequest ) returns ( GrantRolesForAccountResponse );
  // @section Account
  // Allow a publisher to grant its account access to teads
  rpc GrantTemporaryAccountsForPublisher ( GrantTemporaryAccountsForPublisherRequest ) returns ( GrantTemporaryAccountsForPublisherResponse );
  // @section Inventory
  rpc ImportVettedSitesFromCsv ( ImportVettedSitesFromCsvRequest ) returns ( ImportVettedSitesFromCsvResponse );
  // @section Finance
  rpc InvalidatePublisherTypeForPublisherOnBillingOffice ( InvalidatePublisherTypeForPublisherOnBillingOfficeRequest ) returns ( InvalidatePublisherTypeForPublisherOnBillingOfficeResponse );
  // @section Finance
  rpc LoadLastCompletedMonthOfLineItemBillablesAnonymously ( LoadLastCompletedMonthOfLineItemBillablesAnonymouslyRequest ) returns ( LoadLastCompletedMonthOfLineItemBillablesAnonymouslyResponse );
  // @section Data Science
  rpc LoadModelTraining ( LoadModelTrainingRequest ) returns ( LoadModelTrainingResponse );
  // @section Finance
  rpc LoadPriceAnalysisForBusinessIntelligenceAnonymously ( LoadPriceAnalysisForBusinessIntelligenceAnonymouslyRequest ) returns ( LoadPriceAnalysisForBusinessIntelligenceAnonymouslyResponse );
  // @section Campaign
  rpc LoadTrackingCampaignsDataForBusinessIntelligenceAnonymously ( LoadTrackingCampaignsDataForBusinessIntelligenceAnonymouslyRequest ) returns ( LoadTrackingCampaignsDataForBusinessIntelligenceAnonymouslyResponse );
  // @section Campaign Setup
  rpc LogCampaignSnapshot ( LogCampaignSnapshotRequest ) returns ( LogCampaignSnapshotResponse );
  // @section Reporting
  // Add the end information for the launched report
  rpc LogEndReport ( LogEndReportRequest ) returns ( LogEndReportResponse );
  // @section Reporting
  // Log the information of the launched report
  rpc LogStartReport ( LogStartReportRequest ) returns ( LogStartReportResponse );
  // @section Ab Testing
  rpc MarkAbTestDynamicParameterAsObsolete ( MarkAbTestDynamicParameterAsObsoleteRequest ) returns ( MarkAbTestDynamicParameterAsObsoleteResponse );
  // @section Advertiser
  // Mark client billing details filled for Buyer seat. If all required flags are marked then it updates seat status to enabled
  rpc MarkClientBillingDetailsFilledForSeat ( MarkClientBillingDetailsFilledForSeatRequest ) returns ( MarkClientBillingDetailsFilledForSeatResponse );
  // @section Advertiser
  // Mark client msa filled for Buyer seat. If all required flags are marked then it updates seat status to enabled
  rpc MarkClientMsaFilledForSeat ( MarkClientMsaFilledForSeatRequest ) returns ( MarkClientMsaFilledForSeatResponse );
  // @section Creative
  rpc MarkCreativeFolderAsStarredForAccount ( MarkCreativeFolderAsStarredForAccountRequest ) returns ( MarkCreativeFolderAsStarredForAccountResponse );
  // @section Advertiser
  rpc MarkMappedUrlAsTrusted ( MarkMappedUrlAsTrustedRequest ) returns ( MarkMappedUrlAsTrustedResponse );
  // @section Finance
  rpc MarkPublisherDirectSalesDealIdValidatedBillablesAsProcessed ( MarkPublisherDirectSalesDealIdValidatedBillablesAsProcessedRequest ) returns ( MarkPublisherDirectSalesDealIdValidatedBillablesAsProcessedResponse );
  // @section Reporting
  rpc MarkScheduledReportAsCompletedForReferenceDateAnonymously ( MarkScheduledReportAsCompletedForReferenceDateAnonymouslyRequest ) returns ( MarkScheduledReportAsCompletedForReferenceDateAnonymouslyResponse );
  // @section Advertiser
  // Mark teads finance approval filled for Buyer seat. If all required flags are marked then it updates seat status to enabled
  rpc MarkTeadsFinanceApprovalFilledForSeat ( MarkTeadsFinanceApprovalFilledForSeatRequest ) returns ( MarkTeadsFinanceApprovalFilledForSeatResponse );
  // @section Campaign
  rpc MigrateCampaignToManagedService ( MigrateCampaignToManagedServiceRequest ) returns ( MigrateCampaignToManagedServiceResponse );
  // @section Account
  rpc MigrateCustomerProfileToOkta ( MigrateCustomerProfileToOktaRequest ) returns ( MigrateCustomerProfileToOktaResponse );
  // @section Buying Price
  rpc MigrateHeaderBiddingFloorPricesForOffices ( MigrateHeaderBiddingFloorPricesForOfficesRequest ) returns ( MigrateHeaderBiddingFloorPricesForOfficesResponse );
  // @section Advertiser
  // Adds all managed services conversions of an advertiser, if there is any, to a given self served pixel. This command will be used temporarily for the migration of performance to self served.
  rpc MigrateManagedServicesConversionsToBuyerPixelForAdvertiser ( MigrateManagedServicesConversionsToBuyerPixelForAdvertiserRequest ) returns ( MigrateManagedServicesConversionsToBuyerPixelForAdvertiserResponse );
  // @section Notification
  rpc NotifyEventAnonymously ( NotifyEventAnonymouslyRequest ) returns ( NotifyEventAnonymouslyResponse );
  // @section Finance
  rpc PrepareLastCompletedMonthOfPlatformDataForFinanceConsolidationAnonymously ( PrepareLastCompletedMonthOfPlatformDataForFinanceConsolidationAnonymouslyRequest ) returns ( PrepareLastCompletedMonthOfPlatformDataForFinanceConsolidationAnonymouslyResponse );
  // @section Finance
  rpc PrepareSalesforceSnapshotsAnonymously ( PrepareSalesforceSnapshotsAnonymouslyRequest ) returns ( PrepareSalesforceSnapshotsAnonymouslyResponse );
  // @section Finance
  rpc ProcessCurrentMonthExchangeRatesAnonymously ( ProcessCurrentMonthExchangeRatesAnonymouslyRequest ) returns ( ProcessCurrentMonthExchangeRatesAnonymouslyResponse );
  // @section Finance
  rpc ProcessLastCompletedMonthOfConnectionBillablesAnonymously ( ProcessLastCompletedMonthOfConnectionBillablesAnonymouslyRequest ) returns ( ProcessLastCompletedMonthOfConnectionBillablesAnonymouslyResponse );
  // @section Finance
  rpc ProcessLastCompletedMonthOfNoDemandBillablesAnonymously ( ProcessLastCompletedMonthOfNoDemandBillablesAnonymouslyRequest ) returns ( ProcessLastCompletedMonthOfNoDemandBillablesAnonymouslyResponse );
  // @section Campaign
  rpc PublishCampaignEvent ( PublishCampaignEventRequest ) returns ( PublishCampaignEventResponse );
  // @section Ad Experience
  rpc PublishDemosConfigurationsForTenant ( PublishDemosConfigurationsForTenantRequest ) returns ( PublishDemosConfigurationsForTenantResponse );
  // @section Advertiser
  // Publish the provided event to the queue
  rpc PublishEventAnonymously ( PublishEventAnonymouslyRequest ) returns ( PublishEventAnonymouslyResponse );
  // @section Creative
  rpc PublishStudioCreativeEvent ( PublishStudioCreativeEventRequest ) returns ( PublishStudioCreativeEventResponse );
  // @section Creatives Approval
  // Deletes creatives that have not been delivered at least once during the past 30 days
  rpc PurgeOldestCreativesApprobation ( PurgeOldestCreativesApprobationRequest ) returns ( PurgeOldestCreativesApprobationResponse );
  // @section Account
  rpc ReactivateApiToken ( ReactivateApiTokenRequest ) returns ( ReactivateApiTokenResponse );
  // @section Data Science
  rpc ReactivateModelTraining ( ReactivateModelTrainingRequest ) returns ( ReactivateModelTrainingResponse );
  // @section Campaign Delivery
  // Called by a CRON job to update the delivery rules for the active campaigns
  rpc RefreshCampaignsDeliveryRulesAnonymously ( RefreshCampaignsDeliveryRulesAnonymouslyRequest ) returns ( RefreshCampaignsDeliveryRulesAnonymouslyResponse );
  // @section Programmatic
  rpc RefreshConnectionsDeliveryRulesAnonymously ( RefreshConnectionsDeliveryRulesAnonymouslyRequest ) returns ( RefreshConnectionsDeliveryRulesAnonymouslyResponse );
  // @section Users Data
  rpc RefreshLineItemsAndConnectionsDataRevenuesAnonymously ( RefreshLineItemsAndConnectionsDataRevenuesAnonymouslyRequest ) returns ( RefreshLineItemsAndConnectionsDataRevenuesAnonymouslyResponse );
  // @section Inventory
  rpc RefreshPacksAssociatedDomainsPlacementsAnonymously ( RefreshPacksAssociatedDomainsPlacementsAnonymouslyRequest ) returns ( RefreshPacksAssociatedDomainsPlacementsAnonymouslyResponse );
  // @section Inventory
  rpc RefreshViewabilityExclusionPacksAnonymously ( RefreshViewabilityExclusionPacksAnonymouslyRequest ) returns ( RefreshViewabilityExclusionPacksAnonymouslyResponse );
  // @section Ad Quality
  rpc RegisterCreativeScanResultsForCreativeAnonymously ( RegisterCreativeScanResultsForCreativeAnonymouslyRequest ) returns ( RegisterCreativeScanResultsForCreativeAnonymouslyResponse );
  // @section Account
  rpc RegisterSuccessfulAuthenticationForProfileAnonymously ( RegisterSuccessfulAuthenticationForProfileAnonymouslyRequest ) returns ( RegisterSuccessfulAuthenticationForProfileAnonymouslyResponse );
  // @section Account
  rpc RegisterSuccessfulPasswordMigrationToOktaForCustomerProfileAnonymously ( RegisterSuccessfulPasswordMigrationToOktaForCustomerProfileAnonymouslyRequest ) returns ( RegisterSuccessfulPasswordMigrationToOktaForCustomerProfileAnonymouslyResponse );
  // @section Ad Quality
  // Collects heavy creatives from delivery by looking at a dedicated datamart and registers them in Elastic Search audit database.
  // By default, creatives are filtered between now and now - 12 hours. We also apply a threshold on the heavy ad interventions
  // count over the impressions count ratio and another one on the impressions count during this period of time
  rpc RegisterUnderperformingCreativesFromDeliveryAnonymously ( RegisterUnderperformingCreativesFromDeliveryAnonymouslyRequest ) returns ( RegisterUnderperformingCreativesFromDeliveryAnonymouslyResponse );
  // @section Creatives Approval
  // Rejects creatives for a given publisher
  // The status of the creatives is set to REJECTED and the delivery remains blocked
  rpc RejectCreativesForPublisher ( RejectCreativesForPublisherRequest ) returns ( RejectCreativesForPublisherResponse );
  // @section Users Data
  rpc RemoveBuyerPersona ( RemoveBuyerPersonaRequest ) returns ( RemoveBuyerPersonaResponse );
  // @section Advertiser
  // Removes the buyer pixel id and associated conversions
  rpc RemoveBuyerPixel ( RemoveBuyerPixelRequest ) returns ( RemoveBuyerPixelResponse );
  // @section Users Data
  rpc RemoveBuyerPlannedTargeting ( RemoveBuyerPlannedTargetingRequest ) returns ( RemoveBuyerPlannedTargetingResponse );
  // @section Users Data
  // Permanently remove a contextual segment, so it cannot be used for targeting any longer
  rpc RemoveContextualSegment ( RemoveContextualSegmentRequest ) returns ( RemoveContextualSegmentResponse );
  // @section Advertiser
  rpc RemoveConversionAndAttachedUrlsForBuyerPixel ( RemoveConversionAndAttachedUrlsForBuyerPixelRequest ) returns ( RemoveConversionAndAttachedUrlsForBuyerPixelResponse );
  // @section Advertiser
  // Remove a first party segment from its seat's whitelist
  rpc RemoveFirstPartySegmentFromWhitelistForSeat ( RemoveFirstPartySegmentFromWhitelistForSeatRequest ) returns ( RemoveFirstPartySegmentFromWhitelistForSeatResponse );
  // @section Users Data
  // Removes an existing brand persona by identifier
  rpc RemovePersona ( RemovePersonaRequest ) returns ( RemovePersonaResponse );
  // @section Advertiser
  // An event in this context is an action performed by a user on a website ("Add to cart", for example). Each event is mapped to several URLs : the current RPC removes one of this mapping.
  rpc RemoveUrlFromAdvertiserEventForBuyerPixel ( RemoveUrlFromAdvertiserEventForBuyerPixelRequest ) returns ( RemoveUrlFromAdvertiserEventForBuyerPixelResponse );
  // @section Users Data
  rpc RemoveWeatherSegment ( RemoveWeatherSegmentRequest ) returns ( RemoveWeatherSegmentResponse );
  // @section Advertiser
  // Rename an advertiser
  rpc RenameAdvertiser ( RenameAdvertiserRequest ) returns ( RenameAdvertiserResponse );
  // @section Advertiser
  // Rename an agency
  rpc RenameAgency ( RenameAgencyRequest ) returns ( RenameAgencyResponse );
  // @section Campaign Support
  rpc ReopenCampaignSupportRequest ( ReopenCampaignSupportRequestRequest ) returns ( ReopenCampaignSupportRequestResponse );
  // @section Users Data
  rpc ReprocessAudiencePerSegmentAndCountryMappingsAnonymously ( ReprocessAudiencePerSegmentAndCountryMappingsAnonymouslyRequest ) returns ( ReprocessAudiencePerSegmentAndCountryMappingsAnonymouslyResponse );
  // @section Campaign Visual Proof
  rpc RequestScreenshotForCreative ( RequestScreenshotForCreativeRequest ) returns ( RequestScreenshotForCreativeResponse );
  // @section Campaign
  rpc RequestScreenshotsForPublisherDirectSalesLineItem ( RequestScreenshotsForPublisherDirectSalesLineItemRequest ) returns ( RequestScreenshotsForPublisherDirectSalesLineItemResponse );
  // @section Inventory
  // reset to 100% VCR on publisher and all its website, for desktop and mobile, and no placement should ignore VCR
  rpc ResetAllVirtualCostRatiosForPublisher ( ResetAllVirtualCostRatiosForPublisherRequest ) returns ( ResetAllVirtualCostRatiosForPublisherResponse );
  // @section Campaign Support
  rpc ResetCampaignSupportRequestCustomProcessingDurationForEntity ( ResetCampaignSupportRequestCustomProcessingDurationForEntityRequest ) returns ( ResetCampaignSupportRequestCustomProcessingDurationForEntityResponse );
  // @section Programmatic
  rpc ResetMarginExceptionForConnection ( ResetMarginExceptionForConnectionRequest ) returns ( ResetMarginExceptionForConnectionResponse );
  // @section Account
  // Revoke Teads Ad Manager admin roles ("Connect Admin", "Client Dashboard Admin") for a buyer
  rpc RevokeAdminRoleForBuyer ( RevokeAdminRoleForBuyerRequest ) returns ( RevokeAdminRoleForBuyerResponse );
  // @section Account
  rpc RevokeAllPublisherTemporaryAccountsAnonymously ( RevokeAllPublisherTemporaryAccountsAnonymouslyRequest ) returns ( RevokeAllPublisherTemporaryAccountsAnonymouslyResponse );
  // @section Account
  // A Member can revoke a Token that is Active
  // He must be the API Token creator or be member of a parent entity of the creator
  rpc RevokeApiToken ( RevokeApiTokenRequest ) returns ( RevokeApiTokenResponse );
  // @section Advertiser
  // Revoke the pixel shared with the buyer
  rpc RevokeBuyerPixelSharedWithBuyer ( RevokeBuyerPixelSharedWithBuyerRequest ) returns ( RevokeBuyerPixelSharedWithBuyerResponse );
  // @section Advertiser
  // Revoke an existing conversion api token
  rpc RevokeConversionApiToken ( RevokeConversionApiTokenRequest ) returns ( RevokeConversionApiTokenResponse );
  // @section Account
  // Revoke roles for one or several accounts. If after that all the account roles are revoked,
  // the account is deleted and in the end if all the accounts are deleted, the profile account will
  // be deleted
  rpc RevokeRolesForAccount ( RevokeRolesForAccountRequest ) returns ( RevokeRolesForAccountResponse );
  // @section Account
  rpc RevokeTemporaryAccountsForPublisher ( RevokeTemporaryAccountsForPublisherRequest ) returns ( RevokeTemporaryAccountsForPublisherResponse );
  // @section Campaign
  rpc SaveBillingForBrandingCampaign ( SaveBillingForBrandingCampaignRequest ) returns ( SaveBillingForBrandingCampaignResponse );
  // @section Campaign
  rpc SaveBillingForConversionsCampaign ( SaveBillingForConversionsCampaignRequest ) returns ( SaveBillingForConversionsCampaignResponse );
  // @section Campaign
  rpc SaveBillingForTrafficAcquisitionCampaign ( SaveBillingForTrafficAcquisitionCampaignRequest ) returns ( SaveBillingForTrafficAcquisitionCampaignResponse );
  // @section Campaign Delivery
  // (Re)load and save a Buying Engine Cache Version files for audit from its S3 URIs.
  rpc SaveBuyingEngineCacheVersionForAuditAnonymously ( SaveBuyingEngineCacheVersionForAuditAnonymouslyRequest ) returns ( SaveBuyingEngineCacheVersionForAuditAnonymouslyResponse );
  // @section Users Data
  rpc SaveCookielessCustomAudienceSeedCompositionAnonymously ( SaveCookielessCustomAudienceSeedCompositionAnonymouslyRequest ) returns ( SaveCookielessCustomAudienceSeedCompositionAnonymouslyResponse );
  // @section Account
  rpc SaveImpersonationReasonForAccount ( SaveImpersonationReasonForAccountRequest ) returns ( SaveImpersonationReasonForAccountResponse );
  // @section Campaign
  rpc SaveLineItemsForCampaign ( SaveLineItemsForCampaignRequest ) returns ( SaveLineItemsForCampaignResponse );
  // @section Campaign
  rpc SaveTargetingForCampaign ( SaveTargetingForCampaignRequest ) returns ( SaveTargetingForCampaignResponse );
  // @section Finance
  // Innovation users have access to this command to allow the reprocess of a datamart template on a range of hours which implies deleting the data and marking as obsolete in the job history.
  rpc ScheduleFinanceDatamartReprocess ( ScheduleFinanceDatamartReprocessRequest ) returns ( ScheduleFinanceDatamartReprocessResponse );
  // @section Ad Quality
  rpc ScheduleScanningProcessForCreative ( ScheduleScanningProcessForCreativeRequest ) returns ( ScheduleScanningProcessForCreativeResponse );
  // @section Finance
  rpc SendEmailNotificationOnPublishersGeneratedInvoiceForOfficeAnonymously ( SendEmailNotificationOnPublishersGeneratedInvoiceForOfficeAnonymouslyRequest ) returns ( SendEmailNotificationOnPublishersGeneratedInvoiceForOfficeAnonymouslyResponse );
  // @section Finance
  rpc SendEmailNotificationOnValidatedBillablesForOfficeAnonymously ( SendEmailNotificationOnValidatedBillablesForOfficeAnonymouslyRequest ) returns ( SendEmailNotificationOnValidatedBillablesForOfficeAnonymouslyResponse );
  // @section Finance
  rpc SendEmailNotificationsForChangesPendingApprovalInPublisherPaymentSettingsAnonymously ( SendEmailNotificationsForChangesPendingApprovalInPublisherPaymentSettingsAnonymouslyRequest ) returns ( SendEmailNotificationsForChangesPendingApprovalInPublisherPaymentSettingsAnonymouslyResponse );
  // @section Notification
  rpc SendNotificationAnonymously ( SendNotificationAnonymouslyRequest ) returns ( SendNotificationAnonymouslyResponse );
  // @section Inventory
  rpc SetAdTypeExclusionsForPlacement ( SetAdTypeExclusionsForPlacementRequest ) returns ( SetAdTypeExclusionsForPlacementResponse );
  // @section Campaign Visual Proof
  rpc SetAdreformResultForVisualProofRequestTrackingAnonymously ( SetAdreformResultForVisualProofRequestTrackingAnonymouslyRequest ) returns ( SetAdreformResultForVisualProofRequestTrackingAnonymouslyResponse );
  // @section Campaign
  // Update auction id forward status for multiple creatives
  rpc SetAuctionIdForwardStatusForCreativesAnonymously ( SetAuctionIdForwardStatusForCreativesAnonymouslyRequest ) returns ( SetAuctionIdForwardStatusForCreativesAnonymouslyResponse );
  // @section Users Data
  rpc SetAudienceFeesForDirectSalesPublisher ( SetAudienceFeesForDirectSalesPublisherRequest ) returns ( SetAudienceFeesForDirectSalesPublisherResponse );
  // @section Advertiser
  // Create billing details for a buyer seat
  rpc SetBuyerSeatBillingDetails ( SetBuyerSeatBillingDetailsRequest ) returns ( SetBuyerSeatBillingDetailsResponse );
  // @section Inventory
  rpc SetBuyingRuleAsHeaderBidding ( SetBuyingRuleAsHeaderBiddingRequest ) returns ( SetBuyingRuleAsHeaderBiddingResponse );
  // @section Campaign Support
  // CUSTOM PROCESSING DURATION ===================
  rpc SetCampaignSupportRequestCustomProcessingDurationForEntity ( SetCampaignSupportRequestCustomProcessingDurationForEntityRequest ) returns ( SetCampaignSupportRequestCustomProcessingDurationForEntityResponse );
  // @section Campaign
  rpc SetCarouselPerformanceAssetsForCreativeStudioAnonymously ( SetCarouselPerformanceAssetsForCreativeStudioAnonymouslyRequest ) returns ( SetCarouselPerformanceAssetsForCreativeStudioAnonymouslyResponse );
  // @section Reporting
  // Only user in emails.txt will be able to use datamarts command, Otherwise a PERMISSION_DENIED error code will be returned
  // Change the status of a datamart
  rpc SetDatamartStatus ( SetDatamartStatusRequest ) returns ( SetDatamartStatusResponse );
  // @section Users Data
  // Updates the default mapping
  // Only enables to edit the segments as countries for the default mapping are not updated directly
  rpc SetDefaultAudienceMapping ( SetDefaultAudienceMappingRequest ) returns ( SetDefaultAudienceMappingResponse );
  // @section Advertiser
  // Set delivery concentration policy for an advertiser
  rpc SetDeliveryConcentrationPolicyForAdvertiser ( SetDeliveryConcentrationPolicyForAdvertiserRequest ) returns ( SetDeliveryConcentrationPolicyForAdvertiserResponse );
  // @section Advertiser
  // Set the advertiser delivery concentration policy override for an office
  rpc SetDeliveryConcentrationPolicyForAdvertiserAndSellerOffice ( SetDeliveryConcentrationPolicyForAdvertiserAndSellerOfficeRequest ) returns ( SetDeliveryConcentrationPolicyForAdvertiserAndSellerOfficeResponse );
  // @section Campaign Support
  rpc SetDescriptionForCampaignSupportRequest ( SetDescriptionForCampaignSupportRequestRequest ) returns ( SetDescriptionForCampaignSupportRequestResponse );
  // @section Users Data
  rpc SetDomainsForPack ( SetDomainsForPackRequest ) returns ( SetDomainsForPackResponse );
  // @section Advertiser
  rpc SetFeeForClientSeat ( SetFeeForClientSeatRequest ) returns ( SetFeeForClientSeatResponse );
  // @section Inventory
  rpc SetFeesForDirectSalesPublisher ( SetFeesForDirectSalesPublisherRequest ) returns ( SetFeesForDirectSalesPublisherResponse );
  // @section Advertiser
  // Set the landing url of each creative given in the request
  rpc SetLandingUrlForCreativesAnonymously ( SetLandingUrlForCreativesAnonymouslyRequest ) returns ( SetLandingUrlForCreativesAnonymouslyResponse );
  // @section Account
  rpc SetLicensesForDirectSalesPublisher ( SetLicensesForDirectSalesPublisherRequest ) returns ( SetLicensesForDirectSalesPublisherResponse );
  // @section Programmatic
  rpc SetMarginExceptionForConnection ( SetMarginExceptionForConnectionRequest ) returns ( SetMarginExceptionForConnectionResponse );
  // @section Campaign
  rpc SetMinMarginForLineItem ( SetMinMarginForLineItemRequest ) returns ( SetMinMarginForLineItemResponse );
  // @section Campaign
  // Update the proportion of the slot where the line item was selected to be in view for the creatives to start
  rpc SetMinimumVisibilityThresholdForLineItem ( SetMinimumVisibilityThresholdForLineItemRequest ) returns ( SetMinimumVisibilityThresholdForLineItemResponse );
  // @section Mrg Contract
  rpc SetMrgContractCommitments ( SetMrgContractCommitmentsRequest ) returns ( SetMrgContractCommitmentsResponse );
  // @section Mrg Contract
  rpc SetMrgContractPublisherCommitmentInfo ( SetMrgContractPublisherCommitmentInfoRequest ) returns ( SetMrgContractPublisherCommitmentInfoResponse );
  // @section Mrg Contract
  rpc SetMrgContractTeadsCommitmentInfo ( SetMrgContractTeadsCommitmentInfoRequest ) returns ( SetMrgContractTeadsCommitmentInfoResponse );
  // @section Campaign
  rpc SetOperatorProfileForCampaign ( SetOperatorProfileForCampaignRequest ) returns ( SetOperatorProfileForCampaignResponse );
  // @section Campaign
  rpc SetPerformanceAssetsForCreativeStudioAnonymously ( SetPerformanceAssetsForCreativeStudioAnonymouslyRequest ) returns ( SetPerformanceAssetsForCreativeStudioAnonymouslyResponse );
  // @section Advertiser
  // Set the last activity date a pixel has been seen
  rpc SetPixelsLastActivityDate ( SetPixelsLastActivityDateRequest ) returns ( SetPixelsLastActivityDateResponse );
  // @section Advertiser
  // Set if given pixel domains are pre user consent or not
  rpc SetPreUserConsentForBuyerPixelDomainsAnonymously ( SetPreUserConsentForBuyerPixelDomainsAnonymouslyRequest ) returns ( SetPreUserConsentForBuyerPixelDomainsAnonymouslyResponse );
  // @section Advertiser
  // Set qualified visit rate for the given pixels
  rpc SetQualifiedVisitRateForPixelsAnonymously ( SetQualifiedVisitRateForPixelsAnonymouslyRequest ) returns ( SetQualifiedVisitRateForPixelsAnonymouslyResponse );
  // @section Account
  rpc SetRolesForAccount ( SetRolesForAccountRequest ) returns ( SetRolesForAccountResponse );
  // @section Campaign
  rpc SetSellerProfileForCampaign ( SetSellerProfileForCampaignRequest ) returns ( SetSellerProfileForCampaignResponse );
  // @section Ab Testing
  rpc SetServiceForAbTestDynamicParameter ( SetServiceForAbTestDynamicParameterRequest ) returns ( SetServiceForAbTestDynamicParameterResponse );
  // @section Campaign
  rpc SetStartModeForLineItem ( SetStartModeForLineItemRequest ) returns ( SetStartModeForLineItemResponse );
  // @section Ad Experience
  rpc SetUnsupportedDevicesForDemoConfigurationAndTenant ( SetUnsupportedDevicesForDemoConfigurationAndTenantRequest ) returns ( SetUnsupportedDevicesForDemoConfigurationAndTenantResponse );
  // @section Campaign
  // Upsert variations (needed for DCO=Dynamic Creative Optimization features) provided by studio for a given creative
  rpc SetVariationsForCreativeAnonymously ( SetVariationsForCreativeAnonymouslyRequest ) returns ( SetVariationsForCreativeAnonymouslyResponse );
  // @section Inventory
  rpc SetVirtualCostRatiosForPublisher ( SetVirtualCostRatiosForPublisherRequest ) returns ( SetVirtualCostRatiosForPublisherResponse );
  // @section Advertiser
  // Set the website domain names on which the activity of a pixel has been seen
  rpc SetWebsitesDomainNamesForPixelsAnonymously ( SetWebsitesDomainNamesForPixelsAnonymouslyRequest ) returns ( SetWebsitesDomainNamesForPixelsAnonymouslyResponse );
  // @section Users Data
  // Pushes a custom audience to a given list of entities
  rpc ShareCustomAudienceWithBuyerEntities ( ShareCustomAudienceWithBuyerEntitiesRequest ) returns ( ShareCustomAudienceWithBuyerEntitiesResponse );
  // @section Advertiser
  // Share an existing migrated pixel to a new self-served buyer
  rpc ShareMigratedPixelWithBuyer ( ShareMigratedPixelWithBuyerRequest ) returns ( ShareMigratedPixelWithBuyerResponse );
  // @section Advertiser
  // Share a pixel with a buyer if security context's user owns the given pixel
  rpc SharePixelWithBuyer ( SharePixelWithBuyerRequest ) returns ( SharePixelWithBuyerResponse );
  // @section Inventory
  rpc SkipPercentageOfAuctionsFromPlacements ( SkipPercentageOfAuctionsFromPlacementsRequest ) returns ( SkipPercentageOfAuctionsFromPlacementsResponse );
  // @section Campaign
  // Decrease the delivery on a website for a given insertion
  // This is done by decreasing virtually the potential revenue which will results in lesser bids
  rpc SlowDownInsertionDeliveryOnWebsite ( SlowDownInsertionDeliveryOnWebsiteRequest ) returns ( SlowDownInsertionDeliveryOnWebsiteResponse );
  // @section Campaign Delivery
  // Write to S3 and update cache_history table with active apps used by Buying Engine instances
  rpc SnapshotActiveAppsForDeliveryCacheAnonymously ( SnapshotActiveAppsForDeliveryCacheAnonymouslyRequest ) returns ( SnapshotActiveAppsForDeliveryCacheAnonymouslyResponse );
  // @section Campaign Delivery
  // Write to S3 and update cache_history table with active placements used by Buying Engine instances
  rpc SnapshotActivePlacementsForDeliveryCacheAnonymously ( SnapshotActivePlacementsForDeliveryCacheAnonymouslyRequest ) returns ( SnapshotActivePlacementsForDeliveryCacheAnonymouslyResponse );
  // @section Campaign Delivery
  // Write to S3 and update cache_history table with active RTB line items used by Buying Engine instances
  rpc SnapshotActiveRtbLineItemsAnonymously ( SnapshotActiveRtbLineItemsAnonymouslyRequest ) returns ( SnapshotActiveRtbLineItemsAnonymouslyResponse );
  // @section Campaign Delivery
  // Write to S3 and update cache_history table with active sites used by Buying Engine instances
  rpc SnapshotActiveSitesForDeliveryCacheAnonymously ( SnapshotActiveSitesForDeliveryCacheAnonymouslyRequest ) returns ( SnapshotActiveSitesForDeliveryCacheAnonymouslyResponse );
  // @section Campaign Delivery
  // Write to S3 and update cache_history table with active line items from publisher campaign tags used by Buying Engine instances
  rpc SnapshotActiveTagLineItemsAnonymously ( SnapshotActiveTagLineItemsAnonymouslyRequest ) returns ( SnapshotActiveTagLineItemsAnonymouslyResponse );
  // @section Campaign Delivery
  // Write to S3 and update cache_history table with grapeshot prefix filter used by Buying Engine instances
  rpc SnapshotBlacklistedAndWhitelistedGrapeshotCategoryPrefixesAnonymously ( SnapshotBlacklistedAndWhitelistedGrapeshotCategoryPrefixesAnonymouslyRequest ) returns ( SnapshotBlacklistedAndWhitelistedGrapeshotCategoryPrefixesAnonymouslyResponse );
  // @section Finance
  rpc SnapshotBuyerSeatsIntoRedshiftFinanceAnonymously ( SnapshotBuyerSeatsIntoRedshiftFinanceAnonymouslyRequest ) returns ( SnapshotBuyerSeatsIntoRedshiftFinanceAnonymouslyResponse );
  // @section Finance
  rpc SnapshotCampaignsIntoRedshiftFinanceAnonymously ( SnapshotCampaignsIntoRedshiftFinanceAnonymouslyRequest ) returns ( SnapshotCampaignsIntoRedshiftFinanceAnonymouslyResponse );
  // @section Finance
  rpc SnapshotConnectionsIntoRedshiftFinanceAnonymously ( SnapshotConnectionsIntoRedshiftFinanceAnonymouslyRequest ) returns ( SnapshotConnectionsIntoRedshiftFinanceAnonymouslyResponse );
  // @section Campaign Delivery
  // Write to S3 and update cache_history table with countries used by Buying Engine instances
  rpc SnapshotCountriesForDeliveryAnonymously ( SnapshotCountriesForDeliveryAnonymouslyRequest ) returns ( SnapshotCountriesForDeliveryAnonymouslyResponse );
  // @section Campaign Delivery
  // Write to S3 and update cache_history table with throttling factors for line item and website when delivery concentration is high enough
  rpc SnapshotDeliveryConcentrationThrottlingFactorsByLineItemAndWebsiteAnonymously ( SnapshotDeliveryConcentrationThrottlingFactorsByLineItemAndWebsiteAnonymouslyRequest ) returns ( SnapshotDeliveryConcentrationThrottlingFactorsByLineItemAndWebsiteAnonymouslyResponse );
  // @section Campaign Delivery
  // Write to S3 and update cache_history table with DAR monitored segments to be used by Buying Engine instances.
  rpc SnapshotNielsenDarMonitoredSegmentsForDeliveryAnonymously ( SnapshotNielsenDarMonitoredSegmentsForDeliveryAnonymouslyRequest ) returns ( SnapshotNielsenDarMonitoredSegmentsForDeliveryAnonymouslyResponse );
  // @section Campaign Delivery
  // Write to S3 and update cache_history table with DAR scored clusters to be used by Buying Engine instances.
  rpc SnapshotNielsenDarScoredClustersForDeliveryAnonymously ( SnapshotNielsenDarScoredClustersForDeliveryAnonymouslyRequest ) returns ( SnapshotNielsenDarScoredClustersForDeliveryAnonymouslyResponse );
  // @section Finance
  rpc SnapshotPublishersIntoRedshiftFinanceAnonymously ( SnapshotPublishersIntoRedshiftFinanceAnonymouslyRequest ) returns ( SnapshotPublishersIntoRedshiftFinanceAnonymouslyResponse );
  // @section Campaign Delivery
  // Write to S3 and update cache_history table with run rates to be used by Buying Engine instances.
  rpc SnapshotRunRatesForDeliveryAnonymously ( SnapshotRunRatesForDeliveryAnonymouslyRequest ) returns ( SnapshotRunRatesForDeliveryAnonymouslyResponse );
  // @section Finance
  rpc SnapshotSalesforceAnonymously ( SnapshotSalesforceAnonymouslyRequest ) returns ( SnapshotSalesforceAnonymouslyResponse );
  // @section Campaign Delivery
  // Write to S3 and update cache_history table with smoothing line items specified by caller.
  rpc SnapshotSmoothingLineItemsAnonymously ( SnapshotSmoothingLineItemsAnonymouslyRequest ) returns ( SnapshotSmoothingLineItemsAnonymouslyResponse );
  // @section Campaign Delivery
  // Write to S3 and update cache_history table with unapproved creatives used by Buying Engine instances.
  // Those creatives are subject to approval, but are not yet accepted or already refused by publishers.
  // A creative subjected to approbation can be in status pending, accepted or refused. 'Unapproved' means pending or refused.
  rpc SnapshotUnapprovedCreativesAnonymously ( SnapshotUnapprovedCreativesAnonymouslyRequest ) returns ( SnapshotUnapprovedCreativesAnonymouslyResponse );
  // @section Campaign Delivery
  // Write to S3 and update cache_history table with some information from all line items without filtering
  rpc SnapshotUnfilteredLineItemsAnonymously ( SnapshotUnfilteredLineItemsAnonymouslyRequest ) returns ( SnapshotUnfilteredLineItemsAnonymouslyResponse );
  // @section Ab Testing
  rpc StartAbTest ( StartAbTestRequest ) returns ( StartAbTestResponse );
  // @section Campaign Support
  rpc StartCampaignSupportRequest ( StartCampaignSupportRequestRequest ) returns ( StartCampaignSupportRequestResponse );
  // @section Ab Testing
  rpc StopAbTest ( StopAbTestRequest ) returns ( StopAbTestResponse );
  // @section Campaign
  // Completely stop the delivery on a website for all line items of a given campaign
  rpc StopCampaignDeliveryOnWebsite ( StopCampaignDeliveryOnWebsiteRequest ) returns ( StopCampaignDeliveryOnWebsiteResponse );
  // @section Campaign
  // Check delivery for target optimizations and stop delivery if needed for some websites or creatives
  rpc StopDeliveryWhenTargetOptimizationsAreNotReachedAnonymously ( StopDeliveryWhenTargetOptimizationsAreNotReachedAnonymouslyRequest ) returns ( StopDeliveryWhenTargetOptimizationsAreNotReachedAnonymouslyResponse );
  // @section Campaign
  // Completely stop the delivery on a website for a given insertion
  rpc StopInsertionDeliveryOnWebsite ( StopInsertionDeliveryOnWebsiteRequest ) returns ( StopInsertionDeliveryOnWebsiteResponse );
  // @section Data Science
  rpc StopModelTraining ( StopModelTrainingRequest ) returns ( StopModelTrainingResponse );
  // @section Creatives Approval
  // This command makes creatives subject to approbation for some publishers
  // An url for the each creative preview will be generated depending on the source of the creative (programmatic or not)
  // The status of the creatives will be PENDING, see CreativeApprovalStatus documentation
  rpc SubmitCreativesForApproval ( SubmitCreativesForApprovalRequest ) returns ( SubmitCreativesForApprovalResponse );
  // @section Programmatic
  rpc SyncDeal ( SyncDealRequest ) returns ( SyncDealResponse );
  // @section Campaign
  rpc SynchronizeCampaignFromSalesforceOpportunity ( SynchronizeCampaignFromSalesforceOpportunityRequest ) returns ( SynchronizeCampaignFromSalesforceOpportunityResponse );
  // @section Advertiser
  // Change the ownership of a buyer pixel
  rpc TransferOwnershipForSharedPixel ( TransferOwnershipForSharedPixelRequest ) returns ( TransferOwnershipForSharedPixelResponse );
  // @section Advertiser
  // Transition an IO Buyer seat to a Managed Buyer seat
  rpc TransitionIoBuyerSeatToManaged ( TransitionIoBuyerSeatToManagedRequest ) returns ( TransitionIoBuyerSeatToManagedResponse );
  // @section Advertiser
  // Transition an IO Buyer seat to a Self-Served Buyer seat
  rpc TransitionIoBuyerSeatToSelfServed ( TransitionIoBuyerSeatToSelfServedRequest ) returns ( TransitionIoBuyerSeatToSelfServedResponse );
  // @section Advertiser
  // Transition a Managed Buyer seat to a Self-Served Buyer seat
  rpc TransitionManagedBuyerSeatToSelfServed ( TransitionManagedBuyerSeatToSelfServedRequest ) returns ( TransitionManagedBuyerSeatToSelfServedResponse );
  // @section Advertiser
  // Transition a Self-Served Buyer seat to a Managed Buyer seat
  rpc TransitionSelfServedBuyerSeatToManaged ( TransitionSelfServedBuyerSeatToManagedRequest ) returns ( TransitionSelfServedBuyerSeatToManagedResponse );
  // @section Advertiser
  rpc UnblockTrackingForAdvertiser ( UnblockTrackingForAdvertiserRequest ) returns ( UnblockTrackingForAdvertiserResponse );
  // @section Data Science
  rpc UnloadModelTraining ( UnloadModelTrainingRequest ) returns ( UnloadModelTrainingResponse );
  // @section Creative
  rpc UnmarkCreativeFolderAsStarredForAccount ( UnmarkCreativeFolderAsStarredForAccountRequest ) returns ( UnmarkCreativeFolderAsStarredForAccountResponse );
  // @section Advertiser
  // Update statistics relative to the health of advertiser events
  rpc UpdateAdvertiserEventsActivityStatisticsAnonymously ( UpdateAdvertiserEventsActivityStatisticsAnonymouslyRequest ) returns ( UpdateAdvertiserEventsActivityStatisticsAnonymouslyResponse );
  // @section Inventory
  rpc UpdateAppBundleIdsForAppNameAnonymously ( UpdateAppBundleIdsForAppNameAnonymouslyRequest ) returns ( UpdateAppBundleIdsForAppNameAnonymouslyResponse );
  // @section Inventory
  rpc UpdateAppsForPublisher ( UpdateAppsForPublisherRequest ) returns ( UpdateAppsForPublisherResponse );
  // @section Ad Experience
  rpc UpdateArticleAvailableForDemos ( UpdateArticleAvailableForDemosRequest ) returns ( UpdateArticleAvailableForDemosResponse );
  // @section Ad Experience
  rpc UpdateArticlePublisherForDemos ( UpdateArticlePublisherForDemosRequest ) returns ( UpdateArticlePublisherForDemosResponse );
  // @section Users Data
  // Update the values of an existing mapping
  // Enables to edit the countries, the segments
  rpc UpdateAudienceMapping ( UpdateAudienceMappingRequest ) returns ( UpdateAudienceMappingResponse );
  // @section Users Data
  rpc UpdateAudienceStatus ( UpdateAudienceStatusRequest ) returns ( UpdateAudienceStatusResponse );
  // @section Inventory
  rpc UpdateBlockedDemandTypesForPlacements ( UpdateBlockedDemandTypesForPlacementsRequest ) returns ( UpdateBlockedDemandTypesForPlacementsResponse );
  // @section Ad Experience
  rpc UpdateBrandAssociatedToDemos ( UpdateBrandAssociatedToDemosRequest ) returns ( UpdateBrandAssociatedToDemosResponse );
  // @section Users Data
  rpc UpdateBuyerPersona ( UpdateBuyerPersonaRequest ) returns ( UpdateBuyerPersonaResponse );
  // @section Users Data
  rpc UpdateBuyerPlannedTargeting ( UpdateBuyerPlannedTargetingRequest ) returns ( UpdateBuyerPlannedTargetingResponse );
  // @section Advertiser
  rpc UpdateBuyerSeatFee ( UpdateBuyerSeatFeeRequest ) returns ( UpdateBuyerSeatFeeResponse );
  // @section Account
  rpc UpdateBuyerSeatName ( UpdateBuyerSeatNameRequest ) returns ( UpdateBuyerSeatNameResponse );
  // @section Campaign Setup
  rpc UpdateCampaign ( UpdateCampaignRequest ) returns ( UpdateCampaignResponse );
  // @section Campaign
  rpc UpdateCampaignDraft ( UpdateCampaignDraftRequest ) returns ( UpdateCampaignDraftResponse );
  // @section Users Data
  rpc UpdateContextualSegment ( UpdateContextualSegmentRequest ) returns ( UpdateContextualSegmentResponse );
  // @section Advertiser
  // Update statistics relative to the health of conversions
  rpc UpdateConversionsActivityStatisticsAnonymously ( UpdateConversionsActivityStatisticsAnonymouslyRequest ) returns ( UpdateConversionsActivityStatisticsAnonymouslyResponse );
  // @section Users Data
  rpc UpdateCookielessBuyerCustomAudience ( UpdateCookielessBuyerCustomAudienceRequest ) returns ( UpdateCookielessBuyerCustomAudienceResponse );
  // @section Users Data
  rpc UpdateCookielessCustomAudience ( UpdateCookielessCustomAudienceRequest ) returns ( UpdateCookielessCustomAudienceResponse );
  // @section Ad Experience
  rpc UpdateCreativeKPISupportedByDemos ( UpdateCreativeKPISupportedByDemosRequest ) returns ( UpdateCreativeKPISupportedByDemosResponse );
  // @section Ad Experience
  rpc UpdateCreativePositionSupportedByDemos ( UpdateCreativePositionSupportedByDemosRequest ) returns ( UpdateCreativePositionSupportedByDemosResponse );
  // @section Ad Experience
  rpc UpdateCreativeSizeSupportedByDemos ( UpdateCreativeSizeSupportedByDemosRequest ) returns ( UpdateCreativeSizeSupportedByDemosResponse );
  // @section Ad Experience
  rpc UpdateCreativeTypeSupportedByDemos ( UpdateCreativeTypeSupportedByDemosRequest ) returns ( UpdateCreativeTypeSupportedByDemosResponse );
  // @section Creatives Approval
  // Updates creatives Authorized Buyers Approval Status
  // The statuses are retrieved from Google's API
  // On Google Authorized Buyers inventory only approved creatives can deliver
  rpc UpdateCreativesApprovalStatusForAuthorizedBuyersAnonymously ( UpdateCreativesApprovalStatusForAuthorizedBuyersAnonymouslyRequest ) returns ( UpdateCreativesApprovalStatusForAuthorizedBuyersAnonymouslyResponse );
  // @section Audience Custom
  rpc UpdateCustomAudienceTemplate ( UpdateCustomAudienceTemplateRequest ) returns ( UpdateCustomAudienceTemplateResponse );
  // @section Campaign
  rpc UpdateCustomTargetingRuleForCampaign ( UpdateCustomTargetingRuleForCampaignRequest ) returns ( UpdateCustomTargetingRuleForCampaignResponse );
  // @section Reporting
  // Only user in emails.txt will be able to use datamarts command, Otherwise a PERMISSION_DENIED error code will be returned
  // Update a datamart
  rpc UpdateDatamart ( UpdateDatamartRequest ) returns ( UpdateDatamartResponse );
  // @section User Privacy
  // Called by an hourly job to update the is_privacy_compliant field in manager.creative table from whitelisted domains defined in user_privacy.teads_privacy_allowed_domain table.
  rpc UpdateDeliverableCreativesPrivacyComplianceAnonymously ( UpdateDeliverableCreativesPrivacyComplianceAnonymouslyRequest ) returns ( UpdateDeliverableCreativesPrivacyComplianceAnonymouslyResponse );
  // @section Ad Experience
  rpc UpdateDemoConfigurationForTenant ( UpdateDemoConfigurationForTenantRequest ) returns ( UpdateDemoConfigurationForTenantResponse );
  // @section Ad Experience
  rpc UpdateDemoIABCategory ( UpdateDemoIABCategoryRequest ) returns ( UpdateDemoIABCategoryResponse );
  // @section Ad Experience
  rpc UpdateMarketSupportedByDemo ( UpdateMarketSupportedByDemoRequest ) returns ( UpdateMarketSupportedByDemoResponse );
  // @section Mrg Contract
  rpc UpdateMrgContract ( UpdateMrgContractRequest ) returns ( UpdateMrgContractResponse );
  // @section Mrg Contract
  // Update mrg contract commitments related to an active contract
  rpc UpdateMrgContractCommitments ( UpdateMrgContractCommitmentsRequest ) returns ( UpdateMrgContractCommitmentsResponse );
  // @section Inventory
  rpc UpdatePackForBuyer ( UpdatePackForBuyerRequest ) returns ( UpdatePackForBuyerResponse );
  // @section Users Data
  // Updates an existing brand persona, including its blocks and their mapping
  rpc UpdatePersona ( UpdatePersonaRequest ) returns ( UpdatePersonaResponse );
  // @section Advertiser
  // Update the sharing accessibility for a given pixel
  rpc UpdatePixelSharingForBuyer ( UpdatePixelSharingForBuyerRequest ) returns ( UpdatePixelSharingForBuyerResponse );
  // @section Inventory
  rpc UpdatePlacementsForAssistedPacksAnonymously ( UpdatePlacementsForAssistedPacksAnonymouslyRequest ) returns ( UpdatePlacementsForAssistedPacksAnonymouslyResponse );
  // @section Account
  // Update the profile information (mail, first name etc)
  rpc UpdateProfileInfo ( UpdateProfileInfoRequest ) returns ( UpdateProfileInfoResponse );
  // @section Campaign
  rpc UpdatePublisherDirectSalesCampaign ( UpdatePublisherDirectSalesCampaignRequest ) returns ( UpdatePublisherDirectSalesCampaignResponse );
  // @section Campaign
  rpc UpdatePublisherDirectSalesCampaignTag ( UpdatePublisherDirectSalesCampaignTagRequest ) returns ( UpdatePublisherDirectSalesCampaignTagResponse );
  // @section Campaign
  rpc UpdatePublisherDirectSalesCreative ( UpdatePublisherDirectSalesCreativeRequest ) returns ( UpdatePublisherDirectSalesCreativeResponse );
  // @section Campaign
  rpc UpdatePublisherDirectSalesLineItem ( UpdatePublisherDirectSalesLineItemRequest ) returns ( UpdatePublisherDirectSalesLineItemResponse );
  // @section Campaign
  // Updating a DirectSalesTag will remove all associations to creatives for that tag,
  // and recreate them using the creativeAssignment in the request
  rpc UpdatePublisherDirectSalesTag ( UpdatePublisherDirectSalesTagRequest ) returns ( UpdatePublisherDirectSalesTagResponse );
  // @section Account
  rpc UpdatePublisherTypeSettingValues ( UpdatePublisherTypeSettingValuesRequest ) returns ( UpdatePublisherTypeSettingValuesResponse );
  // @section Users Data
  // Management of segments in quarantine state
  rpc UpdateQuarantinedSegments ( UpdateQuarantinedSegmentsRequest ) returns ( UpdateQuarantinedSegmentsResponse );
  // @section Ab Testing
  rpc UpdateReadyCampaignAbTest ( UpdateReadyCampaignAbTestRequest ) returns ( UpdateReadyCampaignAbTestResponse );
  // @section Ab Testing
  rpc UpdateReadyPlatformAbTest ( UpdateReadyPlatformAbTestRequest ) returns ( UpdateReadyPlatformAbTestResponse );
  // @section Retail Media
  rpc UpdateRetailer ( UpdateRetailerRequest ) returns ( UpdateRetailerResponse );
  // @section Retail Media
  rpc UpdateRetailerSmartlinkConfiguration ( UpdateRetailerSmartlinkConfigurationRequest ) returns ( UpdateRetailerSmartlinkConfigurationResponse );
  // @section Ab Testing
  rpc UpdateRunningPlatformAbTest ( UpdateRunningPlatformAbTestRequest ) returns ( UpdateRunningPlatformAbTestResponse );
  // @section Inventory
  rpc UpdateSitesForPublisher ( UpdateSitesForPublisherRequest ) returns ( UpdateSitesForPublisherResponse );
  // @section Inventory
  rpc UpdateTfpFeaturesForPublisher ( UpdateTfpFeaturesForPublisherRequest ) returns ( UpdateTfpFeaturesForPublisherResponse );
  // @section Advertiser
  rpc UpdateUrlFromAdvertiserEventForBuyerPixel ( UpdateUrlFromAdvertiserEventForBuyerPixelRequest ) returns ( UpdateUrlFromAdvertiserEventForBuyerPixelResponse );
  // @section Ad Experience
  rpc UpdateVerticalSupportedByDemos ( UpdateVerticalSupportedByDemosRequest ) returns ( UpdateVerticalSupportedByDemosResponse );
  // @section Inventory
  rpc UpdateVettingInformationForApps ( UpdateVettingInformationForAppsRequest ) returns ( UpdateVettingInformationForAppsResponse );
  // @section Inventory
  rpc UpdateVettingInformationForSites ( UpdateVettingInformationForSitesRequest ) returns ( UpdateVettingInformationForSitesResponse );
  // @section Users Data
  rpc UpdateWeatherSegment ( UpdateWeatherSegmentRequest ) returns ( UpdateWeatherSegmentResponse );
  // @section Traffic
  // Update whitelisted ip ranges
  rpc UpdateWhitelistedIPRanges ( UpdateWhitelistedIPRangesRequest ) returns ( UpdateWhitelistedIPRangesResponse );
  // @section Finance
  rpc UploadLastCompletedMonthOfLineItemBillablesAnonymously ( UploadLastCompletedMonthOfLineItemBillablesAnonymouslyRequest ) returns ( UploadLastCompletedMonthOfLineItemBillablesAnonymouslyResponse );
  // @section Finance
  rpc UploadPriceAnalysisForBusinessIntelligenceAnonymously ( UploadPriceAnalysisForBusinessIntelligenceAnonymouslyRequest ) returns ( UploadPriceAnalysisForBusinessIntelligenceAnonymouslyResponse );
  // @section Campaign
  rpc UploadTrackingCampaignsDataForBusinessIntelligenceAnonymously ( UploadTrackingCampaignsDataForBusinessIntelligenceAnonymouslyRequest ) returns ( UploadTrackingCampaignsDataForBusinessIntelligenceAnonymouslyResponse );
  // @section Inventory
  rpc UseDivHopsHeaderBiddingSlotSelectionForWebsites ( UseDivHopsHeaderBiddingSlotSelectionForWebsitesRequest ) returns ( UseDivHopsHeaderBiddingSlotSelectionForWebsitesResponse );
  // @section Finance
  rpc ValidatePublisherDirectSalesDealIdBillable ( ValidatePublisherDirectSalesDealIdBillableRequest ) returns ( ValidatePublisherDirectSalesDealIdBillableResponse );
  // @section Traffic
  // Whitelists an app bundle id provided internally
  rpc WhitelistAppBundleId ( WhitelistAppBundleIdRequest ) returns ( WhitelistAppBundleIdResponse );
  // @section Traffic
  // Whitelists a domain provided internally
  rpc WhitelistDomain ( WhitelistDomainRequest ) returns ( WhitelistDomainResponse );
}
service QueryService {
  // @section Traffic
  // Returns which domains are blacklisted for delivery or not in a given list of domains
  rpc AreDomainsBlacklistedAnonymously ( AreDomainsBlacklistedAnonymouslyRequest ) returns ( AreDomainsBlacklistedAnonymouslyResponse );
  // @section Programmatic
  rpc AreInternalConnections ( AreInternalConnectionsRequest ) returns ( AreInternalConnectionsResponse );
  // @section Campaign
  rpc CanAccountCreateCampaign ( CanAccountCreateCampaignRequest ) returns ( CanAccountCreateCampaignResponse );
  // @section Campaign Visual Proof
  rpc CanAccountCreateCampaignVisualProofForCampaign ( CanAccountCreateCampaignVisualProofForCampaignRequest ) returns ( CanAccountCreateCampaignVisualProofForCampaignResponse );
  // @section Campaign
  rpc CanAccountEditCampaign ( CanAccountEditCampaignRequest ) returns ( CanAccountEditCampaignResponse );
  // @section Campaign
  rpc CanAccountEditLineItem ( CanAccountEditLineItemRequest ) returns ( CanAccountEditLineItemResponse );
  // @section Account
  rpc CanAccountManageTrustedUrls ( CanAccountManageTrustedUrlsRequest ) returns ( CanAccountManageTrustedUrlsResponse );
  // @section Campaign
  rpc CanAccountRequestCampaignActivation ( CanAccountRequestCampaignActivationRequest ) returns ( CanAccountRequestCampaignActivationResponse );
  // @section Account
  rpc CanProfilePerformImpersonationAnonymously ( CanProfilePerformImpersonationAnonymouslyRequest ) returns ( CanProfilePerformImpersonationAnonymouslyResponse );
  // @section Advertiser
  // Returns if a mapped url related to an advertiser event is in conflict with already existing urls mapped with this event
  rpc CheckMappedUrlForBuyerPixel ( CheckMappedUrlForBuyerPixelRequest ) returns ( CheckMappedUrlForBuyerPixelResponse );
  // @section Users Data
  rpc ComputeAudienceOptimizedDeliveryRulesAnonymously ( ComputeAudienceOptimizedDeliveryRulesAnonymouslyRequest ) returns ( ComputeAudienceOptimizedDeliveryRulesAnonymouslyResponse );
  // @section Users Data
  // Compute audience flavor according to the options and optimize 'Gender x Age' audiences
  // Audiences are not inlined here
  rpc ComputeAudienceOptimizedRuleAnonymously ( ComputeAudienceOptimizedRuleAnonymouslyRequest ) returns ( ComputeAudienceOptimizedRuleAnonymouslyResponse );
  // @section Reachcast
  // Return budget by context
  rpc ComputeBreakdownContextBudget ( ComputeBreakdownContextBudgetRequest ) returns ( ComputeBreakdownContextBudgetResponse );
  // @section Reachcast
  rpc ComputeBudgetForecastForReachcast ( ComputeBudgetForecastForReachcastRequest ) returns ( ComputeBudgetForecastForReachcastResponse );
  // @section Reporting
  // Compute the next period that need to be process for this scheduled report
  rpc ComputeNextPeriodForScheduledReportAnonymously ( ComputeNextPeriodForScheduledReportAnonymouslyRequest ) returns ( ComputeNextPeriodForScheduledReportAnonymouslyResponse );
  // @section Users Data
  rpc ConvertAudienceTargetingToTBLAnonymously ( ConvertAudienceTargetingToTBLAnonymouslyRequest ) returns ( ConvertAudienceTargetingToTBLAnonymouslyResponse );
  // @section Users Data
  rpc ConvertBuyerPersonaMappingToTBLAnonymously ( ConvertBuyerPersonaMappingToTBLAnonymouslyRequest ) returns ( ConvertBuyerPersonaMappingToTBLAnonymouslyResponse );
  // @section Users Data
  rpc ConvertManagedServicesTargetingToTBLAnonymously ( ConvertManagedServicesTargetingToTBLAnonymouslyRequest ) returns ( ConvertManagedServicesTargetingToTBLAnonymouslyResponse );
  // @section Users Data
  rpc ConvertPersonaMappingToTBLAnonymously ( ConvertPersonaMappingToTBLAnonymouslyRequest ) returns ( ConvertPersonaMappingToTBLAnonymouslyResponse );
  // @section Users Data
  rpc ConvertTBLToAudienceTargetingAnonymously ( ConvertTBLToAudienceTargetingAnonymouslyRequest ) returns ( ConvertTBLToAudienceTargetingAnonymouslyResponse );
  // @section Users Data
  rpc ConvertTBLToManagedServicesTargetingAnonymously ( ConvertTBLToManagedServicesTargetingAnonymouslyRequest ) returns ( ConvertTBLToManagedServicesTargetingAnonymouslyResponse );
  // @section Users Data
  rpc ConvertTeadsAudienceMappingToTBLAnonymously ( ConvertTeadsAudienceMappingToTBLAnonymouslyRequest ) returns ( ConvertTeadsAudienceMappingToTBLAnonymouslyResponse );
  // @section Reporting
  // Create a new External API Token
  rpc CreateExternalApiToken ( CreateExternalApiTokenRequest ) returns ( CreateExternalApiTokenResponse );
  // @section Reporting
  // Delete a token
  rpc DeleteExternalApiToken ( DeleteExternalApiTokenRequest ) returns ( DeleteExternalApiTokenResponse );
  // @section Account
  // Return all active accounts related to a given profile
  rpc FindActiveAccountsForProfile ( FindActiveAccountsForProfileRequest ) returns ( FindActiveAccountsForProfileResponse );
  // @section Account
  rpc FindActiveAccountsForProfileAnonymously ( FindActiveAccountsForProfileAnonymouslyRequest ) returns ( FindActiveAccountsForProfileAnonymouslyResponse );
  // @section Programmatic
  // Retrieve the connections which were active on the requested period and are viewable by this security context
  rpc FindActiveConnectionsForPreAndPostBidFilteringAnalysis ( FindActiveConnectionsForPreAndPostBidFilteringAnalysisRequest ) returns ( FindActiveConnectionsForPreAndPostBidFilteringAnalysisResponse );
  // @section Inventory
  rpc FindActivePortfolioItemsForPlacement ( FindActivePortfolioItemsForPlacementRequest ) returns ( FindActivePortfolioItemsForPlacementResponse );
  // @section Inventory
  // Find active publishers for a given office id
  rpc FindActivePublishersForOffice ( FindActivePublishersForOfficeRequest ) returns ( FindActivePublishersForOfficeResponse );
  // @section Inventory
  rpc FindActivePublishersWithContractTypeForAccount ( FindActivePublishersWithContractTypeForAccountRequest ) returns ( FindActivePublishersWithContractTypeForAccountResponse );
  // @section Account
  rpc FindActivePublishersWithLicensesForAccount ( FindActivePublishersWithLicensesForAccountRequest ) returns ( FindActivePublishersWithLicensesForAccountResponse );
  // @section Advertiser
  rpc FindAdvertiserEventsForPixel ( FindAdvertiserEventsForPixelRequest ) returns ( FindAdvertiserEventsForPixelResponse );
  // @section Advertiser
  rpc FindAdvertiserEventsForPixels ( FindAdvertiserEventsForPixelsRequest ) returns ( FindAdvertiserEventsForPixelsResponse );
  // @section Account
  // Return advertiser id for a specified entity
  rpc FindAdvertiserForEntity ( FindAdvertiserForEntityRequest ) returns ( FindAdvertiserForEntityResponse );
  // @section Advertiser
  rpc FindAdvertisersAndPixelsForAgency ( FindAdvertisersAndPixelsForAgencyRequest ) returns ( FindAdvertisersAndPixelsForAgencyResponse );
  // @section Advertiser
  // Returns the available advertisers of a publisher
  rpc FindAdvertisersForPublisher ( FindAdvertisersForPublisherRequest ) returns ( FindAdvertisersForPublisherResponse );
  // @section Advertiser
  // Returns all pixels and domains where tracking is blocked
  rpc FindAdvertisersWhereTrackingIsBlockedAnonymously ( FindAdvertisersWhereTrackingIsBlockedAnonymouslyRequest ) returns ( FindAdvertisersWhereTrackingIsBlockedAnonymouslyResponse );
  // @section Campaign
  rpc FindAdvertisingSolutionForCampaign ( FindAdvertisingSolutionForCampaignRequest ) returns ( FindAdvertisingSolutionForCampaignResponse );
  // @section Advertiser
  // Returns the available agencies of a publisher
  rpc FindAgenciesForPublisher ( FindAgenciesForPublisherRequest ) returns ( FindAgenciesForPublisherResponse );
  // @section Account
  // Return agency id for a specified entity
  rpc FindAgencyForEntity ( FindAgencyForEntityRequest ) returns ( FindAgencyForEntityResponse );
  // @section Publisher Statistics
  rpc FindAllDirectSalesCampaignsStatsForPublisher ( FindAllDirectSalesCampaignsStatsForPublisherRequest ) returns ( FindAllDirectSalesCampaignsStatsForPublisherResponse );
  // @section Inventory
  rpc FindAppsForOffices ( FindAppsForOfficesRequest ) returns ( FindAppsForOfficesResponse );
  // @section Inventory
  rpc FindAppsForPublisher ( FindAppsForPublisherRequest ) returns ( FindAppsForPublisherResponse );
  // @section Finance
  rpc FindAuthorizedOfficesInFinanceAutoBillingSheetForUser ( FindAuthorizedOfficesInFinanceAutoBillingSheetForUserRequest ) returns ( FindAuthorizedOfficesInFinanceAutoBillingSheetForUserResponse );
  // @section Finance
  rpc FindAuthorizedOfficesInFinanceLegacyReportingForUser ( FindAuthorizedOfficesInFinanceLegacyReportingForUserRequest ) returns ( FindAuthorizedOfficesInFinanceLegacyReportingForUserResponse );
  // @section Finance
  rpc FindAuthorizedOfficesInFinancePublisherBillableForUser ( FindAuthorizedOfficesInFinancePublisherBillableForUserRequest ) returns ( FindAuthorizedOfficesInFinancePublisherBillableForUserResponse );
  // @section Finance
  rpc FindAuthorizedOfficesInFinancePublisherBillableInvoicingForUser ( FindAuthorizedOfficesInFinancePublisherBillableInvoicingForUserRequest ) returns ( FindAuthorizedOfficesInFinancePublisherBillableInvoicingForUserResponse );
  // @section Finance
  rpc FindAuthorizedOfficesInFinancePublisherBillableValidationForUser ( FindAuthorizedOfficesInFinancePublisherBillableValidationForUserRequest ) returns ( FindAuthorizedOfficesInFinancePublisherBillableValidationForUserResponse );
  // @section Finance
  rpc FindAuthorizedOfficesInFinanceReportingForUser ( FindAuthorizedOfficesInFinanceReportingForUserRequest ) returns ( FindAuthorizedOfficesInFinanceReportingForUserResponse );
  // @section Account
  // Return the different applications to which the account has access
  rpc FindAvailableApplicationsForAccount ( FindAvailableApplicationsForAccountRequest ) returns ( FindAvailableApplicationsForAccountResponse );
  // @section Inventory
  rpc FindAvailableFeeCurrenciesForDirectSalesPublisher ( FindAvailableFeeCurrenciesForDirectSalesPublisherRequest ) returns ( FindAvailableFeeCurrenciesForDirectSalesPublisherResponse );
  // @section Publisher Statistics
  rpc FindAvailableFinanceStatsFiltersForPublisher ( FindAvailableFinanceStatsFiltersForPublisherRequest ) returns ( FindAvailableFinanceStatsFiltersForPublisherResponse );
  // @section Advertiser
  rpc FindBuyerPixelsForAdvertiser ( FindBuyerPixelsForAdvertiserRequest ) returns ( FindBuyerPixelsForAdvertiserResponse );
  // @section Advertiser
  // Returns seat for specified entity_id
  rpc FindBuyerSeatForEntity ( FindBuyerSeatForEntityRequest ) returns ( FindBuyerSeatForEntityResponse );
  // @section Advertiser
  // Returns seat for specified salesforce seat id
  rpc FindBuyerSeatForSalesforceSeat ( FindBuyerSeatForSalesforceSeatRequest ) returns ( FindBuyerSeatForSalesforceSeatResponse );
  // @section Campaign
  rpc FindBuyerSeatIdForCampaignAnonymously ( FindBuyerSeatIdForCampaignAnonymouslyRequest ) returns ( FindBuyerSeatIdForCampaignAnonymouslyResponse );
  // @section Advertiser
  // Returns seat public info for specified entity_id
  rpc FindBuyerSeatPublicInfoForEntity ( FindBuyerSeatPublicInfoForEntityRequest ) returns ( FindBuyerSeatPublicInfoForEntityResponse );
  // @section Advertiser
  // Returns seats for specified entity ids
  rpc FindBuyerSeatsForEntities ( FindBuyerSeatsForEntitiesRequest ) returns ( FindBuyerSeatsForEntitiesResponse );
  // @section Advertiser
  // Return all buyer seats with whom a given pixel has been shared
  rpc FindBuyerSeatsWithWhomPixelIsShared ( FindBuyerSeatsWithWhomPixelIsSharedRequest ) returns ( FindBuyerSeatsWithWhomPixelIsSharedResponse );
  // @section Account
  // Return all the API Tokens from teads Connect accessible for the given profile.
  // It could be its API Tokens from teads Connect but also the API Tokens of child entities
  rpc FindBuyersApiTokensForProfile ( FindBuyersApiTokensForProfileRequest ) returns ( FindBuyersApiTokensForProfileResponse );
  // @section Account
  // Return advertiser ids and agency ids for specified entity ids
  rpc FindBuyersForEntities ( FindBuyersForEntitiesRequest ) returns ( FindBuyersForEntitiesResponse );
  // @section Finance
  rpc FindCallForInvoicesForPublisher ( FindCallForInvoicesForPublisherRequest ) returns ( FindCallForInvoicesForPublisherResponse );
  // @section Campaign
  rpc FindCampaignChangesForDayAnonymously ( FindCampaignChangesForDayAnonymouslyRequest ) returns ( FindCampaignChangesForDayAnonymouslyResponse );
  // @section Campaign Support
  rpc FindCampaignSupportRequestStatusChangesForDayAnonymously ( FindCampaignSupportRequestStatusChangesForDayAnonymouslyRequest ) returns ( FindCampaignSupportRequestStatusChangesForDayAnonymouslyResponse );
  // @section Campaign Support
  rpc FindCampaignSupportRequestsForCampaign ( FindCampaignSupportRequestsForCampaignRequest ) returns ( FindCampaignSupportRequestsForCampaignResponse );
  // @section Campaign Support
  rpc FindCampaignSupportRequestsForOffice ( FindCampaignSupportRequestsForOfficeRequest ) returns ( FindCampaignSupportRequestsForOfficeResponse );
  // @section Campaign Support
  rpc FindCampaignSupportRequestsForSeat ( FindCampaignSupportRequestsForSeatRequest ) returns ( FindCampaignSupportRequestsForSeatResponse );
  // @section Campaign
  rpc FindCampaignsForSalesforceOpportunity ( FindCampaignsForSalesforceOpportunityRequest ) returns ( FindCampaignsForSalesforceOpportunityResponse );
  // @section Campaign
  rpc FindCampaignsForSalesforceOpportunityAndProfile ( FindCampaignsForSalesforceOpportunityAndProfileRequest ) returns ( FindCampaignsForSalesforceOpportunityAndProfileResponse );
  // @section Finance
  rpc FindCampaignsWithInvoiceRecipientsForBuyerSeat ( FindCampaignsWithInvoiceRecipientsForBuyerSeatRequest ) returns ( FindCampaignsWithInvoiceRecipientsForBuyerSeatResponse );
  // @section Finance
  rpc FindChangesPendingApprovalInPublisherPaymentSettingsForBillingOffices ( FindChangesPendingApprovalInPublisherPaymentSettingsForBillingOfficesRequest ) returns ( FindChangesPendingApprovalInPublisherPaymentSettingsForBillingOfficesResponse );
  // @section Mrg Contract
  rpc FindCommitmentPeriodsForMrgContract ( FindCommitmentPeriodsForMrgContractRequest ) returns ( FindCommitmentPeriodsForMrgContractResponse );
  // @section Account
  rpc FindConnectedPublisherIdsForPublisher ( FindConnectedPublisherIdsForPublisherRequest ) returns ( FindConnectedPublisherIdsForPublisherResponse );
  // @section Advertiser
  // Returns all conversion api tokens associated to a given seat
  rpc FindConversionApiTokensForSeat ( FindConversionApiTokensForSeatRequest ) returns ( FindConversionApiTokensForSeatResponse );
  // @section Campaign
  rpc FindConversionsEnabledForCampaign ( FindConversionsEnabledForCampaignRequest ) returns ( FindConversionsEnabledForCampaignResponse );
  // @section Advertiser
  // Retrieves conversions linked to a specific buyer seat id
  rpc FindConversionsForBuyer ( FindConversionsForBuyerRequest ) returns ( FindConversionsForBuyerResponse );
  // @section Publisher Statistics
  rpc FindCreativeStatsForPublisher ( FindCreativeStatsForPublisherRequest ) returns ( FindCreativeStatsForPublisherResponse );
  // @section Campaign
  rpc FindCreativesForCampaign ( FindCreativesForCampaignRequest ) returns ( FindCreativesForCampaignResponse );
  // @section Campaign Delivery
  // Retrieve rules that are delivering or will be delivering soon and that contain one or more of the specified audiences
  rpc FindDeliverableCampaignRulesUsingAudiencesAnonymously ( FindDeliverableCampaignRulesUsingAudiencesAnonymouslyRequest ) returns ( FindDeliverableCampaignRulesUsingAudiencesAnonymouslyResponse );
  // @section Programmatic
  // Retrieve rules that are delivering or will be delivering soon and that contain one or more of the specified audiences
  rpc FindDeliverableConnectionRulesUsingAudiencesAnonymously ( FindDeliverableConnectionRulesUsingAudiencesAnonymouslyRequest ) returns ( FindDeliverableConnectionRulesUsingAudiencesAnonymouslyResponse );
  // @section Users Data
  rpc FindDemographicAudiencesForTargetingAnonymously ( FindDemographicAudiencesForTargetingAnonymouslyRequest ) returns ( FindDemographicAudiencesForTargetingAnonymouslyResponse );
  // @section Users Data
  rpc FindDemographicAudiencesForTargetings ( FindDemographicAudiencesForTargetingsRequest ) returns ( FindDemographicAudiencesForTargetingsResponse );
  // @section Publisher Statistics
  rpc FindDirectSalesCampaignStatsForPublisher ( FindDirectSalesCampaignStatsForPublisherRequest ) returns ( FindDirectSalesCampaignStatsForPublisherResponse );
  // @section Account
  // Return the entity id of a buyer seat id
  rpc FindEntityForBuyerSeat ( FindEntityForBuyerSeatRequest ) returns ( FindEntityForBuyerSeatResponse );
  // @section Publisher Statistics
  rpc FindFinanceAppsAndSitesStatsForPublisher ( FindFinanceAppsAndSitesStatsForPublisherRequest ) returns ( FindFinanceAppsAndSitesStatsForPublisherResponse );
  // @section Publisher Statistics
  rpc FindFinanceBuyerTypesStatsForPublisher ( FindFinanceBuyerTypesStatsForPublisherRequest ) returns ( FindFinanceBuyerTypesStatsForPublisherResponse );
  // @section Publisher Statistics
  rpc FindFinanceCommitmentsStatsForPublisher ( FindFinanceCommitmentsStatsForPublisherRequest ) returns ( FindFinanceCommitmentsStatsForPublisherResponse );
  // @section Publisher Statistics
  rpc FindFinanceCountriesStatsForPublisher ( FindFinanceCountriesStatsForPublisherRequest ) returns ( FindFinanceCountriesStatsForPublisherResponse );
  // @section Publisher Statistics
  rpc FindFinanceDeliveryContextsStatsForPublisher ( FindFinanceDeliveryContextsStatsForPublisherRequest ) returns ( FindFinanceDeliveryContextsStatsForPublisherResponse );
  // @section Publisher Statistics
  rpc FindFinanceDevicesStatsForPublisher ( FindFinanceDevicesStatsForPublisherRequest ) returns ( FindFinanceDevicesStatsForPublisherResponse );
  // @section Publisher Statistics
  rpc FindFinanceEnvironmentsStatsForPublisher ( FindFinanceEnvironmentsStatsForPublisherRequest ) returns ( FindFinanceEnvironmentsStatsForPublisherResponse );
  // @section Publisher Statistics
  rpc FindFinanceFormatPositionsStatsForPublisher ( FindFinanceFormatPositionsStatsForPublisherRequest ) returns ( FindFinanceFormatPositionsStatsForPublisherResponse );
  // @section Publisher Statistics
  rpc FindFinanceFormatsStatsForPublisher ( FindFinanceFormatsStatsForPublisherRequest ) returns ( FindFinanceFormatsStatsForPublisherResponse );
  // @section Publisher Statistics
  rpc FindFinanceOverviewStatsForPublisher ( FindFinanceOverviewStatsForPublisherRequest ) returns ( FindFinanceOverviewStatsForPublisherResponse );
  // @section Finance
  rpc FindFinancePermissionsForProfile ( FindFinancePermissionsForProfileRequest ) returns ( FindFinancePermissionsForProfileResponse );
  // @section Publisher Statistics
  rpc FindFinancePlacementsStatsForPublisher ( FindFinancePlacementsStatsForPublisherRequest ) returns ( FindFinancePlacementsStatsForPublisherResponse );
  // @section Publisher Statistics
  rpc FindFinanceStatsTotalsForPublisher ( FindFinanceStatsTotalsForPublisherRequest ) returns ( FindFinanceStatsTotalsForPublisherResponse );
  // @section Publisher Statistics
  rpc FindFinanceWebsitesStatsForPublisher ( FindFinanceWebsitesStatsForPublisherRequest ) returns ( FindFinanceWebsitesStatsForPublisherResponse );
  // @section Publisher Statistics
  rpc FindFinanceYieldStrategiesStatsForPublisher ( FindFinanceYieldStrategiesStatsForPublisherRequest ) returns ( FindFinanceYieldStrategiesStatsForPublisherResponse );
  // @section Brand Safety
  // Returns available Grapeshot brand suitability segments for a given buyer seat
  rpc FindGrapeshotBrandSuitabilitySegmentsForBuyerSeat ( FindGrapeshotBrandSuitabilitySegmentsForBuyerSeatRequest ) returns ( FindGrapeshotBrandSuitabilitySegmentsForBuyerSeatResponse );
  // @section Brand Safety
  // Returns a list of Grapeshot brand suitability segments in common for a given list of buyer seats
  rpc FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeats ( FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsRequest ) returns ( FindGrapeshotBrandSuitabilitySegmentsInCommonForBuyerSeatsResponse );
  // @section Buying Price
  rpc FindHeaderBiddingFloorPriceForOffice ( FindHeaderBiddingFloorPriceForOfficeRequest ) returns ( FindHeaderBiddingFloorPriceForOfficeResponse );
  // @section Inventory
  // Find inventory (app & website) for a given publisher
  rpc FindInventoryForPublisher ( FindInventoryForPublisherRequest ) returns ( FindInventoryForPublisherResponse );
  // @section Inventory
  // Find inventory (app & website) for given publisher ids without giving a security context
  rpc FindInventoryForPublishersAnonymously ( FindInventoryForPublishersAnonymouslyRequest ) returns ( FindInventoryForPublishersAnonymouslyResponse );
  // @section Publisher Statistics
  rpc FindInventoryStatsByIdentifierForPublisher ( FindInventoryStatsByIdentifierForPublisherRequest ) returns ( FindInventoryStatsByIdentifierForPublisherResponse );
  // @section Publisher Statistics
  rpc FindInventoryStatsForPublisher ( FindInventoryStatsForPublisherRequest ) returns ( FindInventoryStatsForPublisherResponse );
  // @section Commercial
  rpc FindInvoiceRecipientsForBuyerSeat ( FindInvoiceRecipientsForBuyerSeatRequest ) returns ( FindInvoiceRecipientsForBuyerSeatResponse );
  // @section Campaign
  rpc FindLineItemAbTestAssociationsForLineItem ( FindLineItemAbTestAssociationsForLineItemRequest ) returns ( FindLineItemAbTestAssociationsForLineItemResponse );
  // @section Publisher Statistics
  rpc FindLineItemStatsForPublisher ( FindLineItemStatsForPublisherRequest ) returns ( FindLineItemStatsForPublisherResponse );
  // @section Campaign
  rpc FindLineItemsEligibleForReachcastCampaign ( FindLineItemsEligibleForReachcastCampaignRequest ) returns ( FindLineItemsEligibleForReachcastCampaignResponse );
  // @section Campaign
  rpc FindLineItemsForCampaign ( FindLineItemsForCampaignRequest ) returns ( FindLineItemsForCampaignResponse );
  // @section Users Targeting
  rpc FindLookalikeSegmentsForSeat ( FindLookalikeSegmentsForSeatRequest ) returns ( FindLookalikeSegmentsForSeatResponse );
  // @section Mrg Contract
  rpc FindMrgContractsCommitmentsStatsForPeriod ( FindMrgContractsCommitmentsStatsForPeriodRequest ) returns ( FindMrgContractsCommitmentsStatsForPeriodResponse );
  // @section Mrg Contract
  rpc FindMrgContractsForPublisher ( FindMrgContractsForPublisherRequest ) returns ( FindMrgContractsForPublisherResponse );
  // @section Account
  // Return the offices that the profile is directly member of
  rpc FindOfficesForProfile ( FindOfficesForProfileRequest ) returns ( FindOfficesForProfileResponse );
  // @section Campaign Support
  rpc FindOpenCampaignSupportRequestForCampaign ( FindOpenCampaignSupportRequestForCampaignRequest ) returns ( FindOpenCampaignSupportRequestForCampaignResponse );
  // @section Campaign
  rpc FindPacingRateForCampaign ( FindPacingRateForCampaignRequest ) returns ( FindPacingRateForCampaignResponse );
  // @section Inventory
  rpc FindPagesForPublisher ( FindPagesForPublisherRequest ) returns ( FindPagesForPublisherResponse );
  // @section Inventory
  // Retrieve all pages and their placements for multiple websites
  rpc FindPagesForWebsites ( FindPagesForWebsitesRequest ) returns ( FindPagesForWebsitesResponse );
  // @section Finance
  rpc FindPaymentSettingsPendingApprovalForPublisherAndBillingOffice ( FindPaymentSettingsPendingApprovalForPublisherAndBillingOfficeRequest ) returns ( FindPaymentSettingsPendingApprovalForPublisherAndBillingOfficeResponse );
  // @section Inventory
  rpc FindPlacementTypesForProfile ( FindPlacementTypesForProfileRequest ) returns ( FindPlacementTypesForProfileResponse );
  // @section Inventory
  rpc FindPlacementsForPacks ( FindPlacementsForPacksRequest ) returns ( FindPlacementsForPacksResponse );
  // @section Inventory
  // Retrieve all placement for publisher
  rpc FindPlacementsForPublisher ( FindPlacementsForPublisherRequest ) returns ( FindPlacementsForPublisherResponse );
  // @section Inventory
  // Retrieve all placements for websites
  rpc FindPlacementsForWebsites ( FindPlacementsForWebsitesRequest ) returns ( FindPlacementsForWebsitesResponse );
  // @section Account
  rpc FindProfileForEmailAnonymously ( FindProfileForEmailAnonymouslyRequest ) returns ( FindProfileForEmailAnonymouslyResponse );
  // @section Inventory
  rpc FindProfilesEligibleForTemporaryAccountOnPublisher ( FindProfilesEligibleForTemporaryAccountOnPublisherRequest ) returns ( FindProfilesEligibleForTemporaryAccountOnPublisherResponse );
  // @section Account
  // Return the profiles that are part of the entity given in the request
  rpc FindProfilesFromEntityId ( FindProfilesFromEntityIdRequest ) returns ( FindProfilesFromEntityIdResponse );
  // @section Inventory
  rpc FindProgrammaticFeeRatesForDirectSalesPublishers ( FindProgrammaticFeeRatesForDirectSalesPublishersRequest ) returns ( FindProgrammaticFeeRatesForDirectSalesPublishersResponse );
  // @section Finance
  rpc FindPublisherDirectSalesDealIdMonthlyBillables ( FindPublisherDirectSalesDealIdMonthlyBillablesRequest ) returns ( FindPublisherDirectSalesDealIdMonthlyBillablesResponse );
  // @section Account
  // List publishers (active by their status) for the given office
  rpc FindPublishersForOffice ( FindPublishersForOfficeRequest ) returns ( FindPublishersForOfficeResponse );
  // @section Reporting
  rpc FindRecentReportsForTemplate ( FindRecentReportsForTemplateRequest ) returns ( FindRecentReportsForTemplateResponse );
  // @section Users Targeting
  rpc FindRemarketingSegmentsForSeat ( FindRemarketingSegmentsForSeatRequest ) returns ( FindRemarketingSegmentsForSeatResponse );
  // @section Advertiser
  rpc FindRevocableSeatsForPixel ( FindRevocableSeatsForPixelRequest ) returns ( FindRevocableSeatsForPixelResponse );
  // @section Advertiser
  rpc FindSalesforceBuyerSeatIdForEntityAnonymously ( FindSalesforceBuyerSeatIdForEntityAnonymouslyRequest ) returns ( FindSalesforceBuyerSeatIdForEntityAnonymouslyResponse );
  // @section Ad Quality
  // Retrieves the scanned creatives matching the ids that are given (all creatives if none specified)
  // The result of this query depends on the access rights the current user has towards creatives
  rpc FindScannedDspCreatives ( FindScannedDspCreativesRequest ) returns ( FindScannedDspCreativesResponse );
  // @section Users Targeting
  rpc FindSeatsForLookalikeSegment ( FindSeatsForLookalikeSegmentRequest ) returns ( FindSeatsForLookalikeSegmentResponse );
  // @section Users Targeting
  rpc FindSeatsForRemarketingSegment ( FindSeatsForRemarketingSegmentRequest ) returns ( FindSeatsForRemarketingSegmentResponse );
  // @section Account
  rpc FindSellersForOffice ( FindSellersForOfficeRequest ) returns ( FindSellersForOfficeResponse );
  // @section Commercial
  rpc FindSingleValidInvoiceRecipientForBuyerSeatAnonymously ( FindSingleValidInvoiceRecipientForBuyerSeatAnonymouslyRequest ) returns ( FindSingleValidInvoiceRecipientForBuyerSeatAnonymouslyResponse );
  // @section Inventory
  rpc FindSitesForOffices ( FindSitesForOfficesRequest ) returns ( FindSitesForOfficesResponse );
  // @section Inventory
  rpc FindSitesForPublisher ( FindSitesForPublisherRequest ) returns ( FindSitesForPublisherResponse );
  // @section Inventory
  rpc FindSitesForURIs ( FindSitesForURIsRequest ) returns ( FindSitesForURIsResponse );
  // @section Inventory
  // Retrieve all app bundles for provider packs
  rpc FindTargetedInventoryForPacks ( FindTargetedInventoryForPacksRequest ) returns ( FindTargetedInventoryForPacksResponse );
  // @section Advertiser
  rpc FindTeadsConversionsSegmentsForBuyer ( FindTeadsConversionsSegmentsForBuyerRequest ) returns ( FindTeadsConversionsSegmentsForBuyerResponse );
  // @section Advertiser
  rpc FindTeadsConversionsSegmentsForPixel ( FindTeadsConversionsSegmentsForPixelRequest ) returns ( FindTeadsConversionsSegmentsForPixelResponse );
  // @section Inventory
  rpc FindTeadsFirstPartyCookieStatsForPublisher ( FindTeadsFirstPartyCookieStatsForPublisherRequest ) returns ( FindTeadsFirstPartyCookieStatsForPublisherResponse );
  // @section Account
  rpc FindTemporaryAccountsTimeIntervalForPublisher ( FindTemporaryAccountsTimeIntervalForPublisherRequest ) returns ( FindTemporaryAccountsTimeIntervalForPublisherResponse );
  // @section Inventory
  rpc FindTermsAndConditionsAgreedForPublisher ( FindTermsAndConditionsAgreedForPublisherRequest ) returns ( FindTermsAndConditionsAgreedForPublisherResponse );
  // @section Inventory
  // Retrieve all the T&Cs a publisher must agree to (excludes the ones already agreed to)
  rpc FindTermsAndConditionsToAgreeToForPublisher ( FindTermsAndConditionsToAgreeToForPublisherRequest ) returns ( FindTermsAndConditionsToAgreeToForPublisherResponse );
  // @section Users Insights
  rpc FindUniqueVisitorsNumberForCampaign ( FindUniqueVisitorsNumberForCampaignRequest ) returns ( FindUniqueVisitorsNumberForCampaignResponse );
  // @section Inventory
  rpc FindUnvettedAppsForOffices ( FindUnvettedAppsForOfficesRequest ) returns ( FindUnvettedAppsForOfficesResponse );
  // @section Inventory
  rpc FindUnvettedSitesForOffices ( FindUnvettedSitesForOfficesRequest ) returns ( FindUnvettedSitesForOfficesResponse );
  // @section Campaign Visual Proof
  rpc FindVisualProofRequestTrackingStatusUpdatesForHourAnonymously ( FindVisualProofRequestTrackingStatusUpdatesForHourAnonymouslyRequest ) returns ( FindVisualProofRequestTrackingStatusUpdatesForHourAnonymouslyResponse );
  // @section Campaign Visual Proof
  rpc FindVisualProofRequestTrackingsForCampaign ( FindVisualProofRequestTrackingsForCampaignRequest ) returns ( FindVisualProofRequestTrackingsForCampaignResponse );
  // @section Campaign Visual Proof
  rpc FindVisualProofRequestTrackingsForHourAnonymously ( FindVisualProofRequestTrackingsForHourAnonymouslyRequest ) returns ( FindVisualProofRequestTrackingsForHourAnonymouslyResponse );
  // @section Inventory
  rpc FindWebsitesForURIs ( FindWebsitesForURIsRequest ) returns ( FindWebsitesForURIsResponse );
  // @section Inventory
  rpc FindWebsitesWithPlacementsForPublisher ( FindWebsitesWithPlacementsForPublisherRequest ) returns ( FindWebsitesWithPlacementsForPublisherResponse );
  // @section Traffic
  // Find whitelisted IP ranges for an IP
  rpc FindWhiteListedIPRangesForIP ( FindWhiteListedIPRangesForIPRequest ) returns ( FindWhiteListedIPRangesForIPResponse );
  // @section Advertiser
  // Return a list of a whitelisted first party segments for a given seat
  rpc FindWhitelistedAdvertiserFirstPartySegmentsForSeat ( FindWhitelistedAdvertiserFirstPartySegmentsForSeatRequest ) returns ( FindWhitelistedAdvertiserFirstPartySegmentsForSeatResponse );
  // @section Programmatic
  // Retrieve the json for the sellers.json file
  rpc GenerateSellersJsonAnonymously ( GenerateSellersJsonAnonymouslyRequest ) returns ( GenerateSellersJsonAnonymouslyResponse );
  // @section Ab Testing
  rpc GetAbTest ( GetAbTestRequest ) returns ( GetAbTestResponse );
  // @section Account
  rpc GetAccount ( GetAccountRequest ) returns ( GetAccountResponse );
  // @section Campaign
  // You can find more information about the metrics in this link:  https://confluence.teads.net/display/OP/6.+Performance+console+tab#id-6.Performanceconsoletab-Campaign'sKPIs
  rpc GetAcquisitionStatisticsForCampaign ( GetAcquisitionStatisticsForCampaignRequest ) returns ( GetAcquisitionStatisticsForCampaignResponse );
  // @section Account
  // Return the account type of a given active account
  rpc GetActiveAccountTypeAnonymously ( GetActiveAccountTypeAnonymouslyRequest ) returns ( GetActiveAccountTypeAnonymouslyResponse );
  // @section Mrg Contract
  rpc GetAdOpportunitiesFunnelForPublisherEcpmContract ( GetAdOpportunitiesFunnelForPublisherEcpmContractRequest ) returns ( GetAdOpportunitiesFunnelForPublisherEcpmContractResponse );
  // @section Inventory
  rpc GetAdTypeExclusionsForPlacement ( GetAdTypeExclusionsForPlacementRequest ) returns ( GetAdTypeExclusionsForPlacementResponse );
  // @section Users Data
  rpc GetAdvertiserFirstPartySegments ( GetAdvertiserFirstPartySegmentsRequest ) returns ( GetAdvertiserFirstPartySegmentsResponse );
  // @section Advertiser
  // Returns info about the advertiser
  rpc GetAdvertiserInfo ( GetAdvertiserInfoRequest ) returns ( GetAdvertiserInfoResponse );
  // @section Advertiser
  rpc GetAdvertisersAnonymously ( GetAdvertisersAnonymouslyRequest ) returns ( GetAdvertisersAnonymouslyResponse );
  // @section Advertiser
  // Returns the descriptions of given agency ids.
  rpc GetAgenciesAnonymously ( GetAgenciesAnonymouslyRequest ) returns ( GetAgenciesAnonymouslyResponse );
  // @section Campaign
  rpc GetAllCustomTargetingReasons ( GetAllCustomTargetingReasonsRequest ) returns ( GetAllCustomTargetingReasonsResponse );
  // @section Account
  // Return the API Token information for a token string given in parameters
  rpc GetApiToken ( GetApiTokenRequest ) returns ( GetApiTokenResponse );
  // @section Inventory
  rpc GetApps ( GetAppsRequest ) returns ( GetAppsResponse );
  // @section Branding Measurement
  rpc GetAttentionStatisticsForCampaign ( GetAttentionStatisticsForCampaignRequest ) returns ( GetAttentionStatisticsForCampaignResponse );
  // @section Users Data
  rpc GetAudience ( GetAudienceRequest ) returns ( GetAudienceResponse );
  // @section Users Data
  rpc GetAudienceByChannelAndType ( GetAudienceByChannelAndTypeRequest ) returns ( GetAudienceByChannelAndTypeResponse );
  // @section Users Data
  rpc GetAudienceFeesForDirectSalesPublisher ( GetAudienceFeesForDirectSalesPublisherRequest ) returns ( GetAudienceFeesForDirectSalesPublisherResponse );
  // @section Users Data
  rpc GetAudiencesAnonymously ( GetAudiencesAnonymouslyRequest ) returns ( GetAudiencesAnonymouslyResponse );
  // @section Campaign
  // The audit entries list is sorted by the entry date, most recent first.
  rpc GetAuditEntriesForCampaign ( GetAuditEntriesForCampaignRequest ) returns ( GetAuditEntriesForCampaignResponse );
  // @section Campaign Support
  rpc GetAuditEntriesForCampaignSupportRequest ( GetAuditEntriesForCampaignSupportRequestRequest ) returns ( GetAuditEntriesForCampaignSupportRequestResponse );
  // @section Ab Testing
  rpc GetAuditForAbTest ( GetAuditForAbTestRequest ) returns ( GetAuditForAbTestResponse );
  // @section Mrg Contract
  rpc GetAuditedCommandsForMrgContract ( GetAuditedCommandsForMrgContractRequest ) returns ( GetAuditedCommandsForMrgContractResponse );
  // @section Account
  rpc GetAvailablePaymentModesForPublisherSetting ( GetAvailablePaymentModesForPublisherSettingRequest ) returns ( GetAvailablePaymentModesForPublisherSettingResponse );
  // @section Inventory
  rpc GetBankSettingsAuditForPublisher ( GetBankSettingsAuditForPublisherRequest ) returns ( GetBankSettingsAuditForPublisherResponse );
  // @section Finance
  rpc GetBillingSettingsByOfficeForPublisher ( GetBillingSettingsByOfficeForPublisherRequest ) returns ( GetBillingSettingsByOfficeForPublisherResponse );
  // @section Inventory
  // Retrieve blocked demand type(s) for a specific placement
  rpc GetBlockedDemandTypesForPlacement ( GetBlockedDemandTypesForPlacementRequest ) returns ( GetBlockedDemandTypesForPlacementResponse );
  // @section Campaign
  // For a given campaign id, check if it's eligible for a brand pulse campaign and return information needed to create it
  rpc GetBrandPulseEligibilityForReferenceCampaign ( GetBrandPulseEligibilityForReferenceCampaignRequest ) returns ( GetBrandPulseEligibilityForReferenceCampaignResponse );
  // @section Campaign
  rpc GetBrandPulseEligibilityForSalesforceOpportunity ( GetBrandPulseEligibilityForSalesforceOpportunityRequest ) returns ( GetBrandPulseEligibilityForSalesforceOpportunityResponse );
  // @section Account
  rpc GetBuyerAccount ( GetBuyerAccountRequest ) returns ( GetBuyerAccountResponse );
  // @section Users Data
  rpc GetBuyerPersona ( GetBuyerPersonaRequest ) returns ( GetBuyerPersonaResponse );
  // @section Advertiser
  // Returns the detailed pixel
  rpc GetBuyerPixel ( GetBuyerPixelRequest ) returns ( GetBuyerPixelResponse );
  // @section Users Data
  rpc GetBuyerPlannedTargeting ( GetBuyerPlannedTargetingRequest ) returns ( GetBuyerPlannedTargetingResponse );
  // @section Advertiser
  // Returns seat for specified id
  rpc GetBuyerSeat ( GetBuyerSeatRequest ) returns ( GetBuyerSeatResponse );
  // @section Account
  rpc GetBuyerSeatInfoAnonymously ( GetBuyerSeatInfoAnonymouslyRequest ) returns ( GetBuyerSeatInfoAnonymouslyResponse );
  // @section Account
  rpc GetBuyerSeatInfoForBuyerEntityAnonymously ( GetBuyerSeatInfoForBuyerEntityAnonymouslyRequest ) returns ( GetBuyerSeatInfoForBuyerEntityAnonymouslyResponse );
  // @section Campaign Setup
  rpc GetCampaign ( GetCampaignRequest ) returns ( GetCampaignResponse );
  // @section Campaign
  rpc GetCampaignDetails ( GetCampaignDetailsRequest ) returns ( GetCampaignDetailsResponse );
  // @section Campaign
  rpc GetCampaignNameAnonymously ( GetCampaignNameAnonymouslyRequest ) returns ( GetCampaignNameAnonymouslyResponse );
  // @section Campaign Support
  rpc GetCampaignSupportRequest ( GetCampaignSupportRequestRequest ) returns ( GetCampaignSupportRequestResponse );
  // @section Campaign
  rpc GetCampaignsLifetimeDeliveryMetrics ( GetCampaignsLifetimeDeliveryMetricsRequest ) returns ( GetCampaignsLifetimeDeliveryMetricsResponse );
  // @section Carbon Footprint
  rpc GetCarbonFootprintMetricsForCampaign ( GetCarbonFootprintMetricsForCampaignRequest ) returns ( GetCarbonFootprintMetricsForCampaignResponse );
  // @section Campaign
  rpc GetConversionsOverallStatisticsForCampaign ( GetConversionsOverallStatisticsForCampaignRequest ) returns ( GetConversionsOverallStatisticsForCampaignResponse );
  // @section Campaign
  rpc GetConversionsStatisticsForCampaign ( GetConversionsStatisticsForCampaignRequest ) returns ( GetConversionsStatisticsForCampaignResponse );
  // @section Users Data
  rpc GetCookielessBuyerCustomAudience ( GetCookielessBuyerCustomAudienceRequest ) returns ( GetCookielessBuyerCustomAudienceResponse );
  // @section Users Data
  rpc GetCookielessBuyerCustomAudienceByTargeting ( GetCookielessBuyerCustomAudienceByTargetingRequest ) returns ( GetCookielessBuyerCustomAudienceByTargetingResponse );
  // @section Users Data
  rpc GetCookielessCustomAudience ( GetCookielessCustomAudienceRequest ) returns ( GetCookielessCustomAudienceResponse );
  // @section Creatives Approval
  // Retrieves the creatives that are subject to approbation
  // The result of this query depends on the access rights the current user has towards publishers
  rpc GetCreativesSubmittedForApproval ( GetCreativesSubmittedForApprovalRequest ) returns ( GetCreativesSubmittedForApprovalResponse );
  // @section Finance
  // Returns the Finance-Central maintained exchange rates from all currencies contractually (currently) supported by Teads against USD
  rpc GetCurrentExchangeRatesToUSDAnonymously ( GetCurrentExchangeRatesToUSDAnonymouslyRequest ) returns ( GetCurrentExchangeRatesToUSDAnonymouslyResponse );
  // @section Audience Custom
  rpc GetCustomAudienceTemplate ( GetCustomAudienceTemplateRequest ) returns ( GetCustomAudienceTemplateResponse );
  // @section Audience Custom
  rpc GetCustomAudienceTemplateForBuyerEntity ( GetCustomAudienceTemplateForBuyerEntityRequest ) returns ( GetCustomAudienceTemplateForBuyerEntityResponse );
  // @section Campaign
  rpc GetCustomTargetingRule ( GetCustomTargetingRuleRequest ) returns ( GetCustomTargetingRuleResponse );
  // @section Campaign
  // Return the troubleshooting data for a campaign
  rpc GetDailyTroubleshootingStatsForCampaign ( GetDailyTroubleshootingStatsForCampaignRequest ) returns ( GetDailyTroubleshootingStatsForCampaignResponse );
  // @section Campaign
  // Return the troubleshooting data for a line item
  rpc GetDailyTroubleshootingStatsForLineItem ( GetDailyTroubleshootingStatsForLineItemRequest ) returns ( GetDailyTroubleshootingStatsForLineItemResponse );
  // @section Reporting
  // Only user in emails.txt will be able to use these query, Otherwise a PERMISSION_DENIED error code will be returned
  // Get properties of a datamart
  rpc GetDatamart ( GetDatamartRequest ) returns ( GetDatamartResponse );
  // @section Programmatic
  // Get deal sync info (proposal status, buyer ID) for a deal key
  rpc GetDealSync ( GetDealSyncRequest ) returns ( GetDealSyncResponse );
  // @section Campaign
  rpc GetDeliveryMetricsForCampaigns ( GetDeliveryMetricsForCampaignsRequest ) returns ( GetDeliveryMetricsForCampaignsResponse );
  // @section Ad Experience
  rpc GetDemoConfigurationForTenant ( GetDemoConfigurationForTenantRequest ) returns ( GetDemoConfigurationForTenantResponse );
  // @section Ad Experience
  rpc GetDemosConfigurationsForTenant ( GetDemosConfigurationsForTenantRequest ) returns ( GetDemosConfigurationsForTenantResponse );
  // @section Users Data
  rpc GetDomainsForPack ( GetDomainsForPackRequest ) returns ( GetDomainsForPackResponse );
  // @section Mrg Contract
  rpc GetEarningStatsForMrgContract ( GetEarningStatsForMrgContractRequest ) returns ( GetEarningStatsForMrgContractResponse );
  // @section Campaign
  rpc GetEncodingStatusForPublisherDirectSalesCreatives ( GetEncodingStatusForPublisherDirectSalesCreativesRequest ) returns ( GetEncodingStatusForPublisherDirectSalesCreativesResponse );
  // @section Finance
  rpc GetExchangeRatesForCurrencyAndPeriod ( GetExchangeRatesForCurrencyAndPeriodRequest ) returns ( GetExchangeRatesForCurrencyAndPeriodResponse );
  // @section Reporting
  // Get the URL to a specific report valid for a limited amount of time
  rpc GetExpiringURLForReport ( GetExpiringURLForReportRequest ) returns ( GetExpiringURLForReportResponse );
  // @section Reporting
  // Get External api token properties from token
  rpc GetExternalApiToken ( GetExternalApiTokenRequest ) returns ( GetExternalApiTokenResponse );
  // @section Inventory
  rpc GetFeesAuditForPublisher ( GetFeesAuditForPublisherRequest ) returns ( GetFeesAuditForPublisherResponse );
  // @section Inventory
  rpc GetFeesForDirectSalesPublisher ( GetFeesForDirectSalesPublisherRequest ) returns ( GetFeesForDirectSalesPublisherResponse );
  // @section Finance
  rpc GetFinanceLegacyReport ( GetFinanceLegacyReportRequest ) returns ( GetFinanceLegacyReportResponse );
  // @section Finance
  rpc GetFinanceSettingsForOffice ( GetFinanceSettingsForOfficeRequest ) returns ( GetFinanceSettingsForOfficeResponse );
  // @section Account
  rpc GetForeignOfficePublisherTypesForPublisher ( GetForeignOfficePublisherTypesForPublisherRequest ) returns ( GetForeignOfficePublisherTypesForPublisherResponse );
  // @section Ad Quality
  // Returns the creative expected Format type and Format size configured for the connection identified by the provided connection id
  rpc GetFormatAspectsForConnectionAnonymously ( GetFormatAspectsForConnectionAnonymouslyRequest ) returns ( GetFormatAspectsForConnectionAnonymouslyResponse );
  // @section Inventory
  rpc GetFormatPositionsForPlacement ( GetFormatPositionsForPlacementRequest ) returns ( GetFormatPositionsForPlacementResponse );
  // @section Campaign Support
  rpc GetHasActionableCampaignSupportRequestByCampaigns ( GetHasActionableCampaignSupportRequestByCampaignsRequest ) returns ( GetHasActionableCampaignSupportRequestByCampaignsResponse );
  // @section Inventory
  rpc GetHydratedPortfolioItemsForBuyerAnonymously ( GetHydratedPortfolioItemsForBuyerAnonymouslyRequest ) returns ( GetHydratedPortfolioItemsForBuyerAnonymouslyResponse );
  // @section Commercial
  rpc GetInvoiceRecipients ( GetInvoiceRecipientsRequest ) returns ( GetInvoiceRecipientsResponse );
  // @section Campaign
  rpc GetKpiMetricsForPerformanceCampaign ( GetKpiMetricsForPerformanceCampaignRequest ) returns ( GetKpiMetricsForPerformanceCampaignResponse );
  // @section Advertiser
  // Returns last activity date about the pixel
  rpc GetLastActivityDateForPixelAnonymously ( GetLastActivityDateForPixelAnonymouslyRequest ) returns ( GetLastActivityDateForPixelAnonymouslyResponse );
  // @section Campaign
  rpc GetLegacyConversionsOverallStatisticsForCampaign ( GetLegacyConversionsOverallStatisticsForCampaignRequest ) returns ( GetLegacyConversionsOverallStatisticsForCampaignResponse );
  // @section Account
  rpc GetLicensesForPublisher ( GetLicensesForPublisherRequest ) returns ( GetLicensesForPublisherResponse );
  // @section Campaign Delivery
  // Retrieve RTB and tag line items used by Buying Engine instances
  rpc GetLineItemsAnonymously ( GetLineItemsAnonymouslyRequest ) returns ( GetLineItemsAnonymouslyResponse );
  // @section Advertiser
  // Get MS Pixel migration state; if it can be migrated, and the internal agencies to which it has already been migrated and those to which it could be migrated
  rpc GetManagedServicesPixelMigrationStateForAdvertiser ( GetManagedServicesPixelMigrationStateForAdvertiserRequest ) returns ( GetManagedServicesPixelMigrationStateForAdvertiserResponse );
  // @section Data Science
  rpc GetModelTrainingSspPredictorMetadata ( GetModelTrainingSspPredictorMetadataRequest ) returns ( GetModelTrainingSspPredictorMetadataResponse );
  // @section Mrg Contract
  rpc GetMrgContract ( GetMrgContractRequest ) returns ( GetMrgContractResponse );
  // @section Campaign
  rpc GetNameForCampaigns ( GetNameForCampaignsRequest ) returns ( GetNameForCampaignsResponse );
  // @section Ab Testing
  rpc GetNextAbTestBudgetSplitId ( GetNextAbTestBudgetSplitIdRequest ) returns ( GetNextAbTestBudgetSplitIdResponse );
  // @section Account
  // Return a specific office
  rpc GetOffice ( GetOfficeRequest ) returns ( GetOfficeResponse );
  // @section Account
  rpc GetOfficeAnonymously ( GetOfficeAnonymouslyRequest ) returns ( GetOfficeAnonymouslyResponse );
  // @section Account
  // Return the office for the current account
  rpc GetOfficeForAccount ( GetOfficeForAccountRequest ) returns ( GetOfficeForAccountResponse );
  // @section Account
  rpc GetOfficeForEntity ( GetOfficeForEntityRequest ) returns ( GetOfficeForEntityResponse );
  // @section Campaign
  rpc GetOptimizationStatisticsForLineItems ( GetOptimizationStatisticsForLineItemsRequest ) returns ( GetOptimizationStatisticsForLineItemsResponse );
  // @section Inventory
  // Retrieve (id, name) tuple for packs ids
  rpc GetPacks ( GetPacksRequest ) returns ( GetPacksResponse );
  // @section Users Data
  rpc GetPacksDomainsAnonymously ( GetPacksDomainsAnonymouslyRequest ) returns ( GetPacksDomainsAnonymouslyResponse );
  // @section Campaign
  rpc GetPerformanceCampaignInfo ( GetPerformanceCampaignInfoRequest ) returns ( GetPerformanceCampaignInfoResponse );
  // @section Users Data
  // Retrieves an existing brand persona by identifier, including its blocks and their mapping
  rpc GetPersona ( GetPersonaRequest ) returns ( GetPersonaResponse );
  // @section Inventory
  // Retrieve placement related information
  rpc GetPlacementInfo ( GetPlacementInfoRequest ) returns ( GetPlacementInfoResponse );
  // @section Inventory
  rpc GetPlacements ( GetPlacementsRequest ) returns ( GetPlacementsResponse );
  // @section Programmatic
  // Retrieve the filtering statistics for one or multiple connection IDs on the requested period
  rpc GetPreAndPostBidFilteringStatisticsForConnections ( GetPreAndPostBidFilteringStatisticsForConnectionsRequest ) returns ( GetPreAndPostBidFilteringStatisticsForConnectionsResponse );
  // @section Account
  // Return a profile with all its accounts
  rpc GetProfile ( GetProfileRequest ) returns ( GetProfileResponse );
  // @section Account
  // Return a profile with all its accounts
  rpc GetProfileAnonymously ( GetProfileAnonymouslyRequest ) returns ( GetProfileAnonymouslyResponse );
  // @section Account
  // Return profiles for specified profile ids
  rpc GetProfiles ( GetProfilesRequest ) returns ( GetProfilesResponse );
  // @section Account
  rpc GetProfilesAnonymously ( GetProfilesAnonymouslyRequest ) returns ( GetProfilesAnonymouslyResponse );
  // @section Campaign
  rpc GetProgressReportMetricsForBrandingCampaign ( GetProgressReportMetricsForBrandingCampaignRequest ) returns ( GetProgressReportMetricsForBrandingCampaignResponse );
  // @section Campaign
  rpc GetProgressReportMetricsForPerformanceCampaign ( GetProgressReportMetricsForPerformanceCampaignRequest ) returns ( GetProgressReportMetricsForPerformanceCampaignResponse );
  // @section Campaign
  rpc GetPublisherDirectSalesCampaign ( GetPublisherDirectSalesCampaignRequest ) returns ( GetPublisherDirectSalesCampaignResponse );
  // @section Campaign
  rpc GetPublisherDirectSalesCampaignTag ( GetPublisherDirectSalesCampaignTagRequest ) returns ( GetPublisherDirectSalesCampaignTagResponse );
  // @section Finance
  rpc GetPublisherDirectSalesDealIdValidatedBillables ( GetPublisherDirectSalesDealIdValidatedBillablesRequest ) returns ( GetPublisherDirectSalesDealIdValidatedBillablesResponse );
  // @section Inventory
  // Retrieve publisher info related to the entity id present in the security context.
  // Returns an error if the entity id is not a publisher (not managed services or self served).
  rpc GetPublisherInfo ( GetPublisherInfoRequest ) returns ( GetPublisherInfoResponse );
  // @section Account
  rpc GetPublisherSettingsForPublisher ( GetPublisherSettingsForPublisherRequest ) returns ( GetPublisherSettingsForPublisherResponse );
  // @section Account
  rpc GetPublisherTypesForOffices ( GetPublisherTypesForOfficesRequest ) returns ( GetPublisherTypesForOfficesResponse );
  // @section Campaign
  // Return the definition of a qualified visit in terms of page views and time spent
  rpc GetQualifiedVisitCriteriaAnonymously ( GetQualifiedVisitCriteriaAnonymouslyRequest ) returns ( GetQualifiedVisitCriteriaAnonymouslyResponse );
  // @section Reachcast
  // Return reachcast feasibility for a specific country on a specific period
  rpc GetReachcastFeasibility ( GetReachcastFeasibilityRequest ) returns ( GetReachcastFeasibilityResponse );
  // @section Advertiser
  // Returns recent daily activities for a given list of buyer pixels
  rpc GetRecentActivityForBuyerPixels ( GetRecentActivityForBuyerPixelsRequest ) returns ( GetRecentActivityForBuyerPixelsResponse );
  // @section Account
  rpc GetRestrictedCurrenciesForEntity ( GetRestrictedCurrenciesForEntityRequest ) returns ( GetRestrictedCurrenciesForEntityResponse );
  // @section Account
  rpc GetRightsForAccountAnonymously ( GetRightsForAccountAnonymouslyRequest ) returns ( GetRightsForAccountAnonymouslyResponse );
  // @section Advertiser
  // Returns info about the salesforce advertiser
  rpc GetSalesforceAdvertiser ( GetSalesforceAdvertiserRequest ) returns ( GetSalesforceAdvertiserResponse );
  // @section Commercial
  rpc GetSalesforceAdvertiserAnonymously ( GetSalesforceAdvertiserAnonymouslyRequest ) returns ( GetSalesforceAdvertiserAnonymouslyResponse );
  // @section Advertiser
  // Returns info about the salesforce agency
  rpc GetSalesforceAgency ( GetSalesforceAgencyRequest ) returns ( GetSalesforceAgencyResponse );
  // @section Commercial
  rpc GetSalesforceBuyerSeat ( GetSalesforceBuyerSeatRequest ) returns ( GetSalesforceBuyerSeatResponse );
  // @section Commercial
  rpc GetSalesforceOpportunity ( GetSalesforceOpportunityRequest ) returns ( GetSalesforceOpportunityResponse );
  // @section Users Data
  // hydrate a list of targeting dimensions / segments mappings with their labels and reaches
  rpc GetSegmentsByTargetingDimension ( GetSegmentsByTargetingDimensionRequest ) returns ( GetSegmentsByTargetingDimensionResponse );
  // @section Users Data
  // Get a lookalike parent content containing 3 lookalike segments (accuracy, standard, reach)
  rpc GetSegmentsForLookalike ( GetSegmentsForLookalikeRequest ) returns ( GetSegmentsForLookalikeResponse );
  // @section Campaign
  rpc GetSellerOfficeForCampaign ( GetSellerOfficeForCampaignRequest ) returns ( GetSellerOfficeForCampaignResponse );
  // @section Account
  rpc GetSettingsForPublisherType ( GetSettingsForPublisherTypeRequest ) returns ( GetSettingsForPublisherTypeResponse );
  // @section Creative
  rpc GetStarredCreativeFoldersForAccount ( GetStarredCreativeFoldersForAccountRequest ) returns ( GetStarredCreativeFoldersForAccountResponse );
  // @section Creative
  rpc GetStarredCreativeFoldersForCreativeFolderTreeNode ( GetStarredCreativeFoldersForCreativeFolderTreeNodeRequest ) returns ( GetStarredCreativeFoldersForCreativeFolderTreeNodeResponse );
  // @section Creative
  rpc GetStarredCreativeFoldersForCreativeFolders ( GetStarredCreativeFoldersForCreativeFoldersRequest ) returns ( GetStarredCreativeFoldersForCreativeFoldersResponse );
  // @section Campaign Support
  rpc GetStartedCampaignSupportRequestForCampaign ( GetStartedCampaignSupportRequestForCampaignRequest ) returns ( GetStartedCampaignSupportRequestForCampaignResponse );
  // @section Command Runner
  rpc GetSubmission ( GetSubmissionRequest ) returns ( GetSubmissionResponse );
  // @section Users Segments
  rpc GetTeadsSegmentsAnonymously ( GetTeadsSegmentsAnonymouslyRequest ) returns ( GetTeadsSegmentsAnonymouslyResponse );
  // @section Campaign Setup
  rpc GetTeadsSegmentsForCampaign ( GetTeadsSegmentsForCampaignRequest ) returns ( GetTeadsSegmentsForCampaignResponse );
  // @section Account
  rpc GetTemporaryAccountsAuditForPublisher ( GetTemporaryAccountsAuditForPublisherRequest ) returns ( GetTemporaryAccountsAuditForPublisherResponse );
  // @section Inventory
  rpc GetTfpFeaturesForPublisher ( GetTfpFeaturesForPublisherRequest ) returns ( GetTfpFeaturesForPublisherResponse );
  // @section Campaign
  rpc GetTypeForDirectSalesCampaign ( GetTypeForDirectSalesCampaignRequest ) returns ( GetTypeForDirectSalesCampaignResponse );
  // @section Campaign
  rpc GetVastUrlsForCreative ( GetVastUrlsForCreativeRequest ) returns ( GetVastUrlsForCreativeResponse );
  // @section Inventory
  rpc GetVirtualCostRatiosForPublisher ( GetVirtualCostRatiosForPublisherRequest ) returns ( GetVirtualCostRatiosForPublisherResponse );
  // @section Campaign Visual Proof
  rpc GetVisualProofOptionsForCampaign ( GetVisualProofOptionsForCampaignRequest ) returns ( GetVisualProofOptionsForCampaignResponse );
  // @section Mrg Contract
  rpc GetVolumeStatsForMrgContract ( GetVolumeStatsForMrgContractRequest ) returns ( GetVolumeStatsForMrgContractResponse );
  // @section Inventory
  rpc GetWebsites ( GetWebsitesRequest ) returns ( GetWebsitesResponse );
  // @section Inventory
  rpc GetWebsitesByURI ( GetWebsitesByURIRequest ) returns ( GetWebsitesByURIResponse );
  // @section Campaign Support
  rpc HasOpenCampaignSupportRequestForCampaigns ( HasOpenCampaignSupportRequestForCampaignsRequest ) returns ( HasOpenCampaignSupportRequestForCampaignsResponse );
  // @section Reporting
  // Checks if the user has access to the datamarts console interface
  rpc HasProfileAccessToDatamartsConsole ( HasProfileAccessToDatamartsConsoleRequest ) returns ( HasProfileAccessToDatamartsConsoleResponse );
  // @section Commons
  rpc HealthCheckAnonymously ( HealthCheckAnonymouslyRequest ) returns ( HealthCheckAnonymouslyResponse );
  // @section Users Targeting
  rpc InlineZonesInRule ( InlineZonesInRuleRequest ) returns ( InlineZonesInRuleResponse );
  // @section Users Targeting
  rpc InlineZonesInRuleAnonymously ( InlineZonesInRuleAnonymouslyRequest ) returns ( InlineZonesInRuleAnonymouslyResponse );
  // @section Account
  rpc IsEntityAnOffice ( IsEntityAnOfficeRequest ) returns ( IsEntityAnOfficeResponse );
  // @section Finance
  rpc IsInvoiceEmailNotificationActivatedForProfile ( IsInvoiceEmailNotificationActivatedForProfileRequest ) returns ( IsInvoiceEmailNotificationActivatedForProfileResponse );
  // @section Account
  // Check if the user has access to the legacy finance interface
  rpc IsProfileALegacyFinanceUser ( IsProfileALegacyFinanceUserRequest ) returns ( IsProfileALegacyFinanceUserResponse );
  // @section Account
  rpc IsProfileAPublisherManager ( IsProfileAPublisherManagerRequest ) returns ( IsProfileAPublisherManagerResponse );
  // @section Account
  rpc IsProfileAnInnovationUser ( IsProfileAnInnovationUserRequest ) returns ( IsProfileAnInnovationUserResponse );
  // @section Account
  rpc IsPublisherAcceptingHeaderBidding ( IsPublisherAcceptingHeaderBiddingRequest ) returns ( IsPublisherAcceptingHeaderBiddingResponse );
  // @section Ab Testing
  rpc ListAbTests ( ListAbTestsRequest ) returns ( ListAbTestsResponse );
  // @section Ab Testing
  rpc ListAbTestsAnalysisTypes ( ListAbTestsAnalysisTypesRequest ) returns ( ListAbTestsAnalysisTypesResponse );
  // @section Ab Testing
  rpc ListAbTestsDynamicParameterServices ( ListAbTestsDynamicParameterServicesRequest ) returns ( ListAbTestsDynamicParameterServicesResponse );
  // @section Ab Testing
  rpc ListAbTestsDynamicParameters ( ListAbTestsDynamicParametersRequest ) returns ( ListAbTestsDynamicParametersResponse );
  // @section Ab Testing
  rpc ListAbTestsDynamicParametersAnonymously ( ListAbTestsDynamicParametersAnonymouslyRequest ) returns ( ListAbTestsDynamicParametersAnonymouslyResponse );
  // @section Ab Testing
  rpc ListActiveAbTestsAnonymously ( ListActiveAbTestsAnonymouslyRequest ) returns ( ListActiveAbTestsAnonymouslyResponse );
  // @section Users Data
  rpc ListActiveAudiencesWithAveragePriceAnonymously ( ListActiveAudiencesWithAveragePriceAnonymouslyRequest ) returns ( ListActiveAudiencesWithAveragePriceAnonymouslyResponse );
  // @section Inventory
  rpc ListActiveCreativeTypeFamilies ( ListActiveCreativeTypeFamiliesRequest ) returns ( ListActiveCreativeTypeFamiliesResponse );
  // @section Inventory
  rpc ListActiveCreativeTypes ( ListActiveCreativeTypesRequest ) returns ( ListActiveCreativeTypesResponse );
  // @section Inventory
  rpc ListActiveFormatPositions ( ListActiveFormatPositionsRequest ) returns ( ListActiveFormatPositionsResponse );
  // @section Inventory
  rpc ListActiveFormatSizes ( ListActiveFormatSizesRequest ) returns ( ListActiveFormatSizesResponse );
  // @section Inventory
  rpc ListActivePlacementTypesAnonymously ( ListActivePlacementTypesAnonymouslyRequest ) returns ( ListActivePlacementTypesAnonymouslyResponse );
  // @section Inventory
  rpc ListActivePublishersWithContractTypeAnonymously ( ListActivePublishersWithContractTypeAnonymouslyRequest ) returns ( ListActivePublishersWithContractTypeAnonymouslyResponse );
  // @section Retail Media
  // Returns all the active Retailer SmartLink configuration
  rpc ListActiveRetailerSmartlinkConfigurationAnonymously ( ListActiveRetailerSmartlinkConfigurationAnonymouslyRequest ) returns ( ListActiveRetailerSmartlinkConfigurationAnonymouslyResponse );
  // @section Users Data
  rpc ListActiveStandardContextualSegmentsAsTreeAnonymously ( ListActiveStandardContextualSegmentsAsTreeAnonymouslyRequest ) returns ( ListActiveStandardContextualSegmentsAsTreeAnonymouslyResponse );
  // @section Campaign
  rpc ListAdvancedTargetingAnonymously ( ListAdvancedTargetingAnonymouslyRequest ) returns ( ListAdvancedTargetingAnonymouslyResponse );
  // @section Advertiser
  // Return all advertiser events
  rpc ListAdvertiserEventsAnonymously ( ListAdvertiserEventsAnonymouslyRequest ) returns ( ListAdvertiserEventsAnonymouslyResponse );
  // @section Advertiser
  // List Advertisers to Index
  rpc ListAdvertisersForIndexing ( ListAdvertisersForIndexingRequest ) returns ( ListAdvertisersForIndexingResponse );
  // @section Campaign
  rpc ListAdvertisingSolutions ( ListAdvertisingSolutionsRequest ) returns ( ListAdvertisingSolutionsResponse );
  // @section Account
  // Return all the API Tokens accessible for the user.
  // It could be its API Tokens but also the API Tokens of child entities
  rpc ListAllApiTokens ( ListAllApiTokensRequest ) returns ( ListAllApiTokensResponse );
  // @section Account
  // List publishers (active by their status) across offices
  rpc ListAllPublishersAnonymously ( ListAllPublishersAnonymouslyRequest ) returns ( ListAllPublishersAnonymouslyResponse );
  // @section Inventory
  rpc ListAppBundleIdsWithPacksAnonymously ( ListAppBundleIdsWithPacksAnonymouslyRequest ) returns ( ListAppBundleIdsWithPacksAnonymouslyResponse );
  // @section Inventory
  rpc ListAppsAnonymously ( ListAppsAnonymouslyRequest ) returns ( ListAppsAnonymouslyResponse );
  // @section Ad Experience
  rpc ListArticlePublishersForDemos ( ListArticlePublishersForDemosRequest ) returns ( ListArticlePublishersForDemosResponse );
  // @section Ad Experience
  rpc ListArticlesAvailableForDemos ( ListArticlesAvailableForDemosRequest ) returns ( ListArticlesAvailableForDemosResponse );
  // @section Users Data
  rpc ListAudienceMappingsByChannelAnonymously ( ListAudienceMappingsByChannelAnonymouslyRequest ) returns ( ListAudienceMappingsByChannelAnonymouslyResponse );
  // @section Traffic
  // List domains blacklisted for delivery
  rpc ListBlacklistedDomains ( ListBlacklistedDomainsRequest ) returns ( ListBlacklistedDomainsResponse );
  // @section Ad Experience
  rpc ListBrandsAssociatedToDemos ( ListBrandsAssociatedToDemosRequest ) returns ( ListBrandsAssociatedToDemosResponse );
  // @section Account
  // Return seat management info(count of Buyer users by roles, whether a profile is a Buyer admin in an entity) for a specific list of entities
  rpc ListBuyerSeatManagementInfoForEntities ( ListBuyerSeatManagementInfoForEntitiesRequest ) returns ( ListBuyerSeatManagementInfoForEntitiesResponse );
  // @section Advertiser
  rpc ListBuyerSeatsAnonymously ( ListBuyerSeatsAnonymouslyRequest ) returns ( ListBuyerSeatsAnonymouslyResponse );
  // @section Campaign Support
  // CUSTOM PROCESSING DURATION ===================
  rpc ListCampaignSupportRequestCustomProcessingDurations ( ListCampaignSupportRequestCustomProcessingDurationsRequest ) returns ( ListCampaignSupportRequestCustomProcessingDurationsResponse );
  // @section Campaign Support
  rpc ListCampaignSupportRequestsForReportingAnonymously ( ListCampaignSupportRequestsForReportingAnonymouslyRequest ) returns ( ListCampaignSupportRequestsForReportingAnonymouslyResponse );
  // @section Campaign
  rpc ListCampaignsAnonymously ( ListCampaignsAnonymouslyRequest ) returns ( ListCampaignsAnonymouslyResponse );
  // @section Campaign
  rpc ListCampaignsForIndexing ( ListCampaignsForIndexingRequest ) returns ( ListCampaignsForIndexingResponse );
  // @section Finance
  rpc ListCampaignsWithInvoiceRecipientAnonymously ( ListCampaignsWithInvoiceRecipientAnonymouslyRequest ) returns ( ListCampaignsWithInvoiceRecipientAnonymouslyResponse );
  // @section Users Data
  // Retrieves the categories with the audiences as a tree
  // only retrieves the ones with either the 'enabled' or 'paused' status
  // The result of this query depends on the access rights the current user has towards audiences
  // TMP: at the moment we are filtering out the 'Gender x Age' category as it is not handled properly by the UI
  rpc ListCategoriesWithAudiences ( ListCategoriesWithAudiencesRequest ) returns ( ListCategoriesWithAudiencesResponse );
  // @section Users Data
  rpc ListCategoriesWithAudiencesAsBuyer ( ListCategoriesWithAudiencesAsBuyerRequest ) returns ( ListCategoriesWithAudiencesAsBuyerResponse );
  // @section Users Data
  rpc ListCategoriesWithAudiencesAsPublisher ( ListCategoriesWithAudiencesAsPublisherRequest ) returns ( ListCategoriesWithAudiencesAsPublisherResponse );
  // @section Users Data
  rpc ListComscoreIdsAndCodesAnonymously ( ListComscoreIdsAndCodesAnonymouslyRequest ) returns ( ListComscoreIdsAndCodesAnonymouslyResponse );
  // @section Programmatic
  // Retrieve all the connections with capping rules, such as volume, capping (i.e impressions per user) or time interval cappings
  rpc ListConnectionWithDeliveryCountersAnonymously ( ListConnectionWithDeliveryCountersAnonymouslyRequest ) returns ( ListConnectionWithDeliveryCountersAnonymouslyResponse );
  // @section Programmatic
  // Retrieve all the connections
  rpc ListConnectionsAnonymously ( ListConnectionsAnonymouslyRequest ) returns ( ListConnectionsAnonymouslyResponse );
  // @section Programmatic
  rpc ListConnectionsDeliverableNowForDataRevenuesComputationAnonymously ( ListConnectionsDeliverableNowForDataRevenuesComputationAnonymouslyRequest ) returns ( ListConnectionsDeliverableNowForDataRevenuesComputationAnonymouslyResponse );
  // @section Users Segments
  rpc ListContextualCTVSegments ( ListContextualCTVSegmentsRequest ) returns ( ListContextualCTVSegmentsResponse );
  // @section Users Data
  rpc ListContextualSegmentsAnonymously ( ListContextualSegmentsAnonymouslyRequest ) returns ( ListContextualSegmentsAnonymouslyResponse );
  // @section Users Data
  rpc ListContextualSegmentsByCodeAnonymously ( ListContextualSegmentsByCodeAnonymouslyRequest ) returns ( ListContextualSegmentsByCodeAnonymouslyResponse );
  // @section Users Data
  rpc ListContextualSegmentsWithReachAndPageviews ( ListContextualSegmentsWithReachAndPageviewsRequest ) returns ( ListContextualSegmentsWithReachAndPageviewsResponse );
  // @section Users Data
  rpc ListContextualSegmentsWithReachAndPageviewsAsBuyer ( ListContextualSegmentsWithReachAndPageviewsAsBuyerRequest ) returns ( ListContextualSegmentsWithReachAndPageviewsAsBuyerResponse );
  // @section Ad Experience
  rpc ListCountriesAssociatedToPublishersArticles ( ListCountriesAssociatedToPublishersArticlesRequest ) returns ( ListCountriesAssociatedToPublishersArticlesResponse );
  // @section Users Data
  // Get reach (above 10k) by country
  rpc ListCountriesWithEnoughReachForLookalikeSeed ( ListCountriesWithEnoughReachForLookalikeSeedRequest ) returns ( ListCountriesWithEnoughReachForLookalikeSeedResponse );
  // @section Ad Experience
  rpc ListCreativeKPIsSupportedByDemos ( ListCreativeKPIsSupportedByDemosRequest ) returns ( ListCreativeKPIsSupportedByDemosResponse );
  // @section Ad Experience
  rpc ListCreativePositionsSupportedByDemos ( ListCreativePositionsSupportedByDemosRequest ) returns ( ListCreativePositionsSupportedByDemosResponse );
  // @section Ad Experience
  rpc ListCreativeSizesSupportedByDemos ( ListCreativeSizesSupportedByDemosRequest ) returns ( ListCreativeSizesSupportedByDemosResponse );
  // @section Ad Experience
  rpc ListCreativeTypesSupportedByDemos ( ListCreativeTypesSupportedByDemosRequest ) returns ( ListCreativeTypesSupportedByDemosResponse );
  // @section Creatives Approval
  // Retrieves all the creatives which have been reviewed (either approved or rejected) based on each publisher criteria.
  rpc ListCreativesReviewedForPublisherAnonymously ( ListCreativesReviewedForPublisherAnonymouslyRequest ) returns ( ListCreativesReviewedForPublisherAnonymouslyResponse );
  // @section Advertiser
  // Returns all line creatives where attribution is expected (running campaigns or ones where lookback is ongoing)
  rpc ListCreativesWhereAttributionIsExpectedAnonymously ( ListCreativesWhereAttributionIsExpectedAnonymouslyRequest ) returns ( ListCreativesWhereAttributionIsExpectedAnonymouslyResponse );
  // @section Campaign
  rpc ListCustomTargetingRulesForCampaign ( ListCustomTargetingRulesForCampaignRequest ) returns ( ListCustomTargetingRulesForCampaignResponse );
  // @section Users Data
  rpc ListDARSegmentsAnonymously ( ListDARSegmentsAnonymouslyRequest ) returns ( ListDARSegmentsAnonymouslyResponse );
  // @section Users Data
  rpc ListDARSegmentsByEstimatorAnonymously ( ListDARSegmentsByEstimatorAnonymouslyRequest ) returns ( ListDARSegmentsByEstimatorAnonymouslyResponse );
  // @section Reporting
  // Only user in emails.txt will be able to use these query, Otherwise a PERMISSION_DENIED error code will be returned
  // List all datamart
  rpc ListDatamarts ( ListDatamartsRequest ) returns ( ListDatamartsResponse );
  // @section Programmatic
  // List deal sync platforms for all deal-synced ad source ids
  rpc ListDealSyncPlatformsByAdSourceId ( ListDealSyncPlatformsByAdSourceIdRequest ) returns ( ListDealSyncPlatformsByAdSourceIdResponse );
  // @section Programmatic
  rpc ListDemandTypes ( ListDemandTypesRequest ) returns ( ListDemandTypesResponse );
  // @section Ad Experience
  rpc ListDemoIABCategories ( ListDemoIABCategoriesRequest ) returns ( ListDemoIABCategoriesResponse );
  // @section Users Data
  rpc ListDirectSalesPublisherAudienceFeesAnonymously ( ListDirectSalesPublisherAudienceFeesAnonymouslyRequest ) returns ( ListDirectSalesPublisherAudienceFeesAnonymouslyResponse );
  // @section Account
  // Return all entities
  rpc ListEntities ( ListEntitiesRequest ) returns ( ListEntitiesResponse );
  // @section Account
  // Return the entities information usable with the api tokens depending of the user entity :
  // platform get all of the entities that can be used
  // office get only his child entities that can be used
  rpc ListEntitiesUsableWithApiToken ( ListEntitiesUsableWithApiTokenRequest ) returns ( ListEntitiesUsableWithApiTokenResponse );
  // @section Advertiser
  rpc ListEventConversionsForAdvertiser ( ListEventConversionsForAdvertiserRequest ) returns ( ListEventConversionsForAdvertiserResponse );
  // @section Inventory
  rpc ListFormatSizeAndCreativeTypeFamilyByPortfolioItemAssociations ( ListFormatSizeAndCreativeTypeFamilyByPortfolioItemAssociationsRequest ) returns ( ListFormatSizeAndCreativeTypeFamilyByPortfolioItemAssociationsResponse );
  // @section Users Data
  // Send global reach for all countries available in dmp_reach
  rpc ListGlobalReachByCountryAnonymously ( ListGlobalReachByCountryAnonymouslyRequest ) returns ( ListGlobalReachByCountryAnonymouslyResponse );
  // @section Campaign
  rpc ListIabCategories ( ListIabCategoriesRequest ) returns ( ListIabCategoriesResponse );
  // @section Account
  rpc ListInternalAgencySeats ( ListInternalAgencySeatsRequest ) returns ( ListInternalAgencySeatsResponse );
  // @section Ad Experience
  rpc ListLanguagesAssociatedToPublishersArticles ( ListLanguagesAssociatedToPublishersArticlesRequest ) returns ( ListLanguagesAssociatedToPublishersArticlesResponse );
  // @section Campaign
  rpc ListLineItemAbTestAssociations ( ListLineItemAbTestAssociationsRequest ) returns ( ListLineItemAbTestAssociationsResponse );
  // @section Campaign
  rpc ListLineItemsDeliverableNowForDataRevenuesComputationAnonymously ( ListLineItemsDeliverableNowForDataRevenuesComputationAnonymouslyRequest ) returns ( ListLineItemsDeliverableNowForDataRevenuesComputationAnonymouslyResponse );
  // @section Advertiser
  // Returns all line items where attribution is expected
  rpc ListLineItemsWhereAttributionIsExpectedAnonymously ( ListLineItemsWhereAttributionIsExpectedAnonymouslyRequest ) returns ( ListLineItemsWhereAttributionIsExpectedAnonymouslyResponse );
  // @section Users Data
  // Retrieves all lookalike parent (aggregation of the 3 lookalike segments)
  rpc ListLookalikes ( ListLookalikesRequest ) returns ( ListLookalikesResponse );
  // @section Ad Experience
  rpc ListMarketsSupportedByDemo ( ListMarketsSupportedByDemoRequest ) returns ( ListMarketsSupportedByDemoResponse );
  // @section Advertiser
  // Returns all managed services migrated pixels
  rpc ListMigratedPixelByAdvertiserAnonymously ( ListMigratedPixelByAdvertiserAnonymouslyRequest ) returns ( ListMigratedPixelByAdvertiserAnonymouslyResponse );
  // @section Data Science
  rpc ListModelTrainingsAnonymously ( ListModelTrainingsAnonymouslyRequest ) returns ( ListModelTrainingsAnonymouslyResponse );
  // @section Mrg Contract
  rpc ListMrgCommitmentsForReportingAnonymously ( ListMrgCommitmentsForReportingAnonymouslyRequest ) returns ( ListMrgCommitmentsForReportingAnonymouslyResponse );
  // @section Mrg Contract
  rpc ListMrgContractEligiblePublishers ( ListMrgContractEligiblePublishersRequest ) returns ( ListMrgContractEligiblePublishersResponse );
  // @section Mrg Contract
  rpc ListMrgContractEnvironmentGroups ( ListMrgContractEnvironmentGroupsRequest ) returns ( ListMrgContractEnvironmentGroupsResponse );
  // @section Mrg Contract
  rpc ListMrgContractGeoCriteriaApplicableCountries ( ListMrgContractGeoCriteriaApplicableCountriesRequest ) returns ( ListMrgContractGeoCriteriaApplicableCountriesResponse );
  // @section Mrg Contract
  rpc ListMrgContracts ( ListMrgContractsRequest ) returns ( ListMrgContractsResponse );
  // @section Mrg Contract
  // List all MRG contracts commitments stats (volume and revenue delivered)
  rpc ListMrgContractsCommitmentsStats ( ListMrgContractsCommitmentsStatsRequest ) returns ( ListMrgContractsCommitmentsStatsResponse );
  // @section Mrg Contract
  // List all MRG contracts and their commitments
  rpc ListMrgContractsForReportingAnonymously ( ListMrgContractsForReportingAnonymouslyRequest ) returns ( ListMrgContractsForReportingAnonymouslyResponse );
  // @section Mrg Contract
  // List all MRG contracts (and their commitments) having at least one commitment applicable at the current time
  rpc ListMrgContractsWithCommitmentsApplicableNowAnonymously ( ListMrgContractsWithCommitmentsApplicableNowAnonymouslyRequest ) returns ( ListMrgContractsWithCommitmentsApplicableNowAnonymouslyResponse );
  // @section Users Targeting
  rpc ListNielsenDarScoreAnonymously ( ListNielsenDarScoreAnonymouslyRequest ) returns ( ListNielsenDarScoreAnonymouslyResponse );
  // @section Account
  // Return all offices
  rpc ListOffices ( ListOfficesRequest ) returns ( ListOfficesResponse );
  // @section Account
  // Return all offices anonymously
  rpc ListOfficesAnonymously ( ListOfficesAnonymouslyRequest ) returns ( ListOfficesAnonymouslyResponse );
  // @section Users Data
  rpc ListPacksDomainsAnonymously ( ListPacksDomainsAnonymouslyRequest ) returns ( ListPacksDomainsAnonymouslyResponse );
  // @section Advertiser
  // Returns the descriptions of the available categories for advertiser pixels
  rpc ListPixelCategories ( ListPixelCategoriesRequest ) returns ( ListPixelCategoriesResponse );
  // @section Advertiser
  // Returns all pixels where attribution is expected (running campaigns or ones where lookback is ongoing)
  rpc ListPixelsWhereAttributionIsExpectedAnonymously ( ListPixelsWhereAttributionIsExpectedAnonymouslyRequest ) returns ( ListPixelsWhereAttributionIsExpectedAnonymouslyResponse );
  // @section Inventory
  // Retrieve placements information for a list of placements ids
  rpc ListPlacements ( ListPlacementsRequest ) returns ( ListPlacementsResponse );
  // @section Users Data
  rpc ListPlannedTargetingsAnonymously ( ListPlannedTargetingsAnonymouslyRequest ) returns ( ListPlannedTargetingsAnonymouslyResponse );
  // @section Inventory
  rpc ListPortfolioItems ( ListPortfolioItemsRequest ) returns ( ListPortfolioItemsResponse );
  // @section Campaign
  rpc ListPositionsCompatibleWithCreativeTypeAndSize ( ListPositionsCompatibleWithCreativeTypeAndSizeRequest ) returns ( ListPositionsCompatibleWithCreativeTypeAndSizeResponse );
  // @section User Privacy
  // Returns all the domain names that have been detected as privacy-compliant by Teads
  rpc ListPrivacyCompliantDomainsAnonymously ( ListPrivacyCompliantDomainsAnonymouslyRequest ) returns ( ListPrivacyCompliantDomainsAnonymouslyResponse );
  // @section Account
  // Return all profiles
  rpc ListProfiles ( ListProfilesRequest ) returns ( ListProfilesResponse );
  // @section Programmatic
  // Retrieve all programmatic margins including margin exceptions for connections and publishers
  rpc ListProgrammaticMarginsAnonymously ( ListProgrammaticMarginsAnonymouslyRequest ) returns ( ListProgrammaticMarginsAnonymouslyResponse );
  // @section Users Segments
  rpc ListProviderSegmentTaxonomyAnonymously ( ListProviderSegmentTaxonomyAnonymouslyRequest ) returns ( ListProviderSegmentTaxonomyAnonymouslyResponse );
  // @section Inventory
  rpc ListPublisherContractTypeByActivePlacementsAnonymously ( ListPublisherContractTypeByActivePlacementsAnonymouslyRequest ) returns ( ListPublisherContractTypeByActivePlacementsAnonymouslyResponse );
  // @section Inventory
  rpc ListPublisherFeesAnonymously ( ListPublisherFeesAnonymouslyRequest ) returns ( ListPublisherFeesAnonymouslyResponse );
  // @section Inventory
  // List Active publisher inventory apps
  rpc ListPublisherInventoryAppsAnonymously ( ListPublisherInventoryAppsAnonymouslyRequest ) returns ( ListPublisherInventoryAppsAnonymouslyResponse );
  // @section Inventory
  // List Active publisher inventory websites
  rpc ListPublisherInventoryWebsitesAnonymously ( ListPublisherInventoryWebsitesAnonymouslyRequest ) returns ( ListPublisherInventoryWebsitesAnonymouslyResponse );
  // @section Inventory
  rpc ListPublisherTierByPublisherAnonymously ( ListPublisherTierByPublisherAnonymouslyRequest ) returns ( ListPublisherTierByPublisherAnonymouslyResponse );
  // @section Finance
  rpc ListPublishersPaymentSettingsChangesAnonymously ( ListPublishersPaymentSettingsChangesAnonymouslyRequest ) returns ( ListPublishersPaymentSettingsChangesAnonymouslyResponse );
  // @section Inventory
  rpc ListPublishersWithAcceptedCookielessTermsAndConditionsAnonymously ( ListPublishersWithAcceptedCookielessTermsAndConditionsAnonymouslyRequest ) returns ( ListPublishersWithAcceptedCookielessTermsAndConditionsAnonymouslyResponse );
  // @section Inventory
  // List publisher with at least one active inventory (active placement and active website or app)
  rpc ListPublishersWithActiveInventoryAnonymously ( ListPublishersWithActiveInventoryAnonymouslyRequest ) returns ( ListPublishersWithActiveInventoryAnonymouslyResponse );
  // @section Users Data
  rpc ListQuarantinedSegments ( ListQuarantinedSegmentsRequest ) returns ( ListQuarantinedSegmentsResponse );
  // @section Commons
  rpc ListRPCsAnonymously ( ListRPCsAnonymouslyRequest ) returns ( ListRPCsAnonymouslyResponse );
  // @section Reachcast
  // Returns Reachcast contexts
  rpc ListReachcastContexts ( ListReachcastContextsRequest ) returns ( ListReachcastContextsResponse );
  // @section Reachcast
  // Return Reachcast countries
  rpc ListReachcastCountries ( ListReachcastCountriesRequest ) returns ( ListReachcastCountriesResponse );
  // @section Account
  // Return all resource types
  rpc ListResourceTypes ( ListResourceTypesRequest ) returns ( ListResourceTypesResponse );
  // @section Retail Media
  rpc ListRetailerSmartlinkConfigurationsAnonymously ( ListRetailerSmartlinkConfigurationsAnonymouslyRequest ) returns ( ListRetailerSmartlinkConfigurationsAnonymouslyResponse );
  // @section Retail Media
  rpc ListRetailersAnonymously ( ListRetailersAnonymouslyRequest ) returns ( ListRetailersAnonymouslyResponse );
  // @section Account
  // Return all roles
  rpc ListRoles ( ListRolesRequest ) returns ( ListRolesResponse );
  // @section Users Data
  rpc ListSeedCompositionIdsForComputingAnonymously ( ListSeedCompositionIdsForComputingAnonymouslyRequest ) returns ( ListSeedCompositionIdsForComputingAnonymouslyResponse );
  // @section Inventory
  rpc ListSitesAnonymously ( ListSitesAnonymouslyRequest ) returns ( ListSitesAnonymouslyResponse );
  // @section Data Science
  rpc ListSspPredictorSchemaReferences ( ListSspPredictorSchemaReferencesRequest ) returns ( ListSspPredictorSchemaReferencesResponse );
  // @section Command Runner
  // get all submission ordered by submissions date desc
  rpc ListSubmissions ( ListSubmissionsRequest ) returns ( ListSubmissionsResponse );
  // @section Users Data
  rpc ListTeadsCookielessSegmentsAnonymously ( ListTeadsCookielessSegmentsAnonymouslyRequest ) returns ( ListTeadsCookielessSegmentsAnonymouslyResponse );
  // @section Campaign
  rpc ListTimezonesSupportedOnPublisherDirectSalesLineItem ( ListTimezonesSupportedOnPublisherDirectSalesLineItemRequest ) returns ( ListTimezonesSupportedOnPublisherDirectSalesLineItemResponse );
  // @section Users Targeting
  rpc ListTimezonesSupportedOnTamAnonymously ( ListTimezonesSupportedOnTamAnonymouslyRequest ) returns ( ListTimezonesSupportedOnTamAnonymouslyResponse );
  // @section Inventory
  // Monetization score is based on delivery data from the last 15 days
  rpc ListTopPublishersByMonetizationScorePerOfficeAnonymously ( ListTopPublishersByMonetizationScorePerOfficeAnonymouslyRequest ) returns ( ListTopPublishersByMonetizationScorePerOfficeAnonymouslyResponse );
  // @section Campaign
  rpc ListTrafficAcquisitionLineItemsByOptimizedBuyerPixelDomainAnonymously ( ListTrafficAcquisitionLineItemsByOptimizedBuyerPixelDomainAnonymouslyRequest ) returns ( ListTrafficAcquisitionLineItemsByOptimizedBuyerPixelDomainAnonymouslyResponse );
  // @section Advertiser
  // Retrieves url based conversion from an advertiser
  rpc ListUrlBasedConversionsForAdvertiser ( ListUrlBasedConversionsForAdvertiserRequest ) returns ( ListUrlBasedConversionsForAdvertiserResponse );
  // @section Ad Experience
  rpc ListVerticalsSupportedByDemos ( ListVerticalsSupportedByDemosRequest ) returns ( ListVerticalsSupportedByDemosResponse );
  // @section Inventory
  rpc ListVettedAndRejectedAppsAnonymously ( ListVettedAndRejectedAppsAnonymouslyRequest ) returns ( ListVettedAndRejectedAppsAnonymouslyResponse );
  // @section Inventory
  rpc ListVettedAndRejectedSitesAnonymously ( ListVettedAndRejectedSitesAnonymouslyRequest ) returns ( ListVettedAndRejectedSitesAnonymouslyResponse );
  // @section Inventory
  rpc ListVettedAppsAnonymously ( ListVettedAppsAnonymouslyRequest ) returns ( ListVettedAppsAnonymouslyResponse );
  // @section Inventory
  rpc ListVettedSitesAnonymously ( ListVettedSitesAnonymouslyRequest ) returns ( ListVettedSitesAnonymouslyResponse );
  // @section Users Data
  rpc ListWeatherSegments ( ListWeatherSegmentsRequest ) returns ( ListWeatherSegmentsResponse );
  // @section Traffic
  // List domains whitelisted for delivery
  rpc ListWhitelistedDomains ( ListWhitelistedDomainsRequest ) returns ( ListWhitelistedDomainsResponse );
  // @section Users Targeting
  rpc ListZonesAnonymously ( ListZonesAnonymouslyRequest ) returns ( ListZonesAnonymouslyResponse );
  // @section Finance
  rpc PreviewFinanceReport ( PreviewFinanceReportRequest ) returns ( PreviewFinanceReportResponse );
  // @section Account
  // Search accounts using a keyword
  // The keyword will be searched in entity id, entity name, profile id, profile firstname and profile lastname
  rpc SearchAccountsToImpersonate ( SearchAccountsToImpersonateRequest ) returns ( SearchAccountsToImpersonateResponse );
  // @section Inventory
  // Retrieve all active associated packs for a specific buyer
  rpc SearchActivePacksForBuyer ( SearchActivePacksForBuyerRequest ) returns ( SearchActivePacksForBuyerResponse );
  // @section Ad Quality
  // Provides an ad quality overview for each provided references (Teads hosted campaigns ids, line items ids or creatives ids)
  rpc SearchAdQualityOverview ( SearchAdQualityOverviewRequest ) returns ( SearchAdQualityOverviewResponse );
  // @section Users Data
  rpc SearchAdvertiserFirstPartySegments ( SearchAdvertiserFirstPartySegmentsRequest ) returns ( SearchAdvertiserFirstPartySegmentsResponse );
  // @section Advertiser
  rpc SearchAdvertisers ( SearchAdvertisersRequest ) returns ( SearchAdvertisersResponse );
  // @section Advertiser
  // Search advertisers for Buyer seat management using a keyword
  // The keyword will be searched in advertiser id, advertiser name, advertiser salesforce id
  rpc SearchAdvertisersForSeatManagement ( SearchAdvertisersForSeatManagementRequest ) returns ( SearchAdvertisersForSeatManagementResponse );
  // @section Advertiser
  // Returns advertisers in tracking blocklist matching the request filters (which are combined with AND when both set)
  rpc SearchAdvertisersInTrackingBlocklist ( SearchAdvertisersInTrackingBlocklistRequest ) returns ( SearchAdvertisersInTrackingBlocklistResponse );
  // @section Advertiser
  // Search agencies in specific offices for Buyer seat management using a keyword
  // The keyword will be searched in agency id, agency name, agency salesforce id
  rpc SearchAgenciesForSeatManagement ( SearchAgenciesForSeatManagementRequest ) returns ( SearchAgenciesForSeatManagementResponse );
  // @section Users Data
  rpc SearchAllBuyerCustomAudiences ( SearchAllBuyerCustomAudiencesRequest ) returns ( SearchAllBuyerCustomAudiencesResponse );
  // @section Inventory
  rpc SearchAppBundleIdsByAppName ( SearchAppBundleIdsByAppNameRequest ) returns ( SearchAppBundleIdsByAppNameResponse );
  // @section Inventory
  rpc SearchApps ( SearchAppsRequest ) returns ( SearchAppsResponse );
  // @section Audience Custom
  rpc SearchAudienceCustomVerticals ( SearchAudienceCustomVerticalsRequest ) returns ( SearchAudienceCustomVerticalsResponse );
  // @section Advertiser
  // Returns audit entries for changes on the tracking blocklist matching the request filters (which are combined with AND when both set)
  rpc SearchAuditEntriesForTrackingBlocklist ( SearchAuditEntriesForTrackingBlocklistRequest ) returns ( SearchAuditEntriesForTrackingBlocklistResponse );
  // @section Traffic
  // Retrieve domains blacklisted for delivery by domain and status
  rpc SearchBlacklistedDomains ( SearchBlacklistedDomainsRequest ) returns ( SearchBlacklistedDomainsResponse );
  // @section Traffic
  // Retrieve IP blacklisted for delivery by IP hash
  rpc SearchBlacklistedIPs ( SearchBlacklistedIPsRequest ) returns ( SearchBlacklistedIPsResponse );
  // @section Account
  rpc SearchBuyerAccounts ( SearchBuyerAccountsRequest ) returns ( SearchBuyerAccountsResponse );
  // @section Users Data
  rpc SearchBuyerPersonas ( SearchBuyerPersonasRequest ) returns ( SearchBuyerPersonasResponse );
  // @section Users Data
  rpc SearchBuyerPlannedTargetings ( SearchBuyerPlannedTargetingsRequest ) returns ( SearchBuyerPlannedTargetingsResponse );
  // @section Advertiser
  // Search buyer seats in a specific office or in all offices if office_id = 5000 and user belongs to entity 5000
  // The keyword will be searched in seat name, entity id, agency id, advertiser id, salesforce id
  rpc SearchBuyerSeats ( SearchBuyerSeatsRequest ) returns ( SearchBuyerSeatsResponse );
  // @section Inventory
  rpc SearchBuyingRules ( SearchBuyingRulesRequest ) returns ( SearchBuyingRulesResponse );
  // @section Reachcast
  // Return daily cpm for the calendar on a specific period
  rpc SearchCalendarDailyCpm ( SearchCalendarDailyCpmRequest ) returns ( SearchCalendarDailyCpmResponse );
  // @section Campaign
  rpc SearchCampaignSetups ( SearchCampaignSetupsRequest ) returns ( SearchCampaignSetupsResponse );
  // @section Campaign
  // Search campaigns
  // The keyword will be searched in campaign id, name. Multiple words separated by space will be treated with a logical AND.
  rpc SearchCampaigns ( SearchCampaignsRequest ) returns ( SearchCampaignsResponse );
  // @section Campaign
  // Search eligible campaigns for migration to Managed
  // The keyword will be searched in campaign id, name. Multiple words separated by space will be treated with a logical AND.
  rpc SearchCampaignsEligibleForManagedServiceMigration ( SearchCampaignsEligibleForManagedServiceMigrationRequest ) returns ( SearchCampaignsEligibleForManagedServiceMigrationResponse );
  // @section Users Data
  rpc SearchCookielessBuyerCustomAudiences ( SearchCookielessBuyerCustomAudiencesRequest ) returns ( SearchCookielessBuyerCustomAudiencesResponse );
  // @section Users Data
  // Same as SearchCookielessBuyerCustomAudiences but for non Buyer
  rpc SearchCookielessCustomAudiences ( SearchCookielessCustomAudiencesRequest ) returns ( SearchCookielessCustomAudiencesResponse );
  // @section Creatives Approval
  // Same query as GetCreativesSubmittedForApproval but the result is filtered with a search keyword
  // This keyword will be searched into the creative name, publisher name, connection name, creative id and campaign id
  rpc SearchCreativesSubmittedForApproval ( SearchCreativesSubmittedForApprovalRequest ) returns ( SearchCreativesSubmittedForApprovalResponse );
  // @section Audience Custom
  rpc SearchCustomAudienceTemplates ( SearchCustomAudienceTemplatesRequest ) returns ( SearchCustomAudienceTemplatesResponse );
  // @section Audience Custom
  rpc SearchCustomAudienceTemplatesForBuyerEntity ( SearchCustomAudienceTemplatesForBuyerEntityRequest ) returns ( SearchCustomAudienceTemplatesForBuyerEntityResponse );
  // @section Exchange Rate
  rpc SearchDailyExchangeRatesAnonymously ( SearchDailyExchangeRatesAnonymouslyRequest ) returns ( SearchDailyExchangeRatesAnonymouslyResponse );
  // @section Reporting
  // Search for datamarts containing all the provided dimensions and metrics ("and" semantics)
  rpc SearchDatamarts ( SearchDatamartsRequest ) returns ( SearchDatamartsResponse );
  // @section Account
  rpc SearchEntitiesForProfileHavingRightsAnonymously ( SearchEntitiesForProfileHavingRightsAnonymouslyRequest ) returns ( SearchEntitiesForProfileHavingRightsAnonymouslyResponse );
  // @section Account
  rpc SearchEntityRestrictedCurrencies ( SearchEntityRestrictedCurrenciesRequest ) returns ( SearchEntityRestrictedCurrenciesResponse );
  // @section Reporting
  // Get tokens properties (only activated tokens)
  rpc SearchExternalApiTokens ( SearchExternalApiTokensRequest ) returns ( SearchExternalApiTokensResponse );
  // @section Inventory
  rpc SearchInventory ( SearchInventoryRequest ) returns ( SearchInventoryResponse );
  // @section Advertiser
  // Returns all line items (insertions) affected by the conversion lift feature where attribution is expected for the provided date
  rpc SearchLineItemsWithConversionLiftActivatedAnonymously ( SearchLineItemsWithConversionLiftActivatedAnonymouslyRequest ) returns ( SearchLineItemsWithConversionLiftActivatedAnonymouslyResponse );
  // @section Account
  // Given a profile id this query will return all offices on which this profile have, at least, the given permission level on the specified resource.
  rpc SearchOfficesForProfileHavingPermissionOnResourceType ( SearchOfficesForProfileHavingPermissionOnResourceTypeRequest ) returns ( SearchOfficesForProfileHavingPermissionOnResourceTypeResponse );
  // @section Inventory
  rpc SearchPacks ( SearchPacksRequest ) returns ( SearchPacksResponse );
  // @section Users Data
  // This query supports full text search, sorting and pagination
  rpc SearchPersonas ( SearchPersonasRequest ) returns ( SearchPersonasResponse );
  // @section Advertiser
  // Search pixels filtered on seat
  // This query supports pagination and full text search
  rpc SearchPixelsForBuyer ( SearchPixelsForBuyerRequest ) returns ( SearchPixelsForBuyerResponse );
  // @section Advertiser
  // Returns all pixels where conversions with conversion lift activated where attribution is expected for the provided date
  rpc SearchPixelsWithConversionLiftActivatedAnonymously ( SearchPixelsWithConversionLiftActivatedAnonymouslyRequest ) returns ( SearchPixelsWithConversionLiftActivatedAnonymouslyResponse );
  // @section Inventory
  // Retrieve placements corresponding to search value
  rpc SearchPlacements ( SearchPlacementsRequest ) returns ( SearchPlacementsResponse );
  // @section Advertiser
  // Returns all domains suggested as pre consent by our bot and not already manually blocked
  rpc SearchPreUserConsentDomainsNotManuallyBlocked ( SearchPreUserConsentDomainsNotManuallyBlockedRequest ) returns ( SearchPreUserConsentDomainsNotManuallyBlockedResponse );
  // @section Account
  rpc SearchProfilesForPublisherAnonymously ( SearchProfilesForPublisherAnonymouslyRequest ) returns ( SearchProfilesForPublisherAnonymouslyResponse );
  // @section Account
  // Given a list of office ids, this query will return all profiles by office who have, at least, the given permission level on the specified resource.
  rpc SearchProfilesHavingPermissionOnResourceTypeForOfficesAnonymously ( SearchProfilesHavingPermissionOnResourceTypeForOfficesAnonymouslyRequest ) returns ( SearchProfilesHavingPermissionOnResourceTypeForOfficesAnonymouslyResponse );
  // @section Account
  rpc SearchPublisherTypeSettingValues ( SearchPublisherTypeSettingValuesRequest ) returns ( SearchPublisherTypeSettingValuesResponse );
  // @section Reachcast
  // Return reachcast contexts for a specific country on a specific period
  rpc SearchReachcastContexts ( SearchReachcastContextsRequest ) returns ( SearchReachcastContextsResponse );
  // @section Retail Media
  rpc SearchRetailerSmartlinkConfigurations ( SearchRetailerSmartlinkConfigurationsRequest ) returns ( SearchRetailerSmartlinkConfigurationsResponse );
  // @section Retail Media
  rpc SearchRetailers ( SearchRetailersRequest ) returns ( SearchRetailersResponse );
  // @section Advertiser
  // List of Salesforce advertisers
  rpc SearchSalesforceAdvertisersForConversionManagement ( SearchSalesforceAdvertisersForConversionManagementRequest ) returns ( SearchSalesforceAdvertisersForConversionManagementResponse );
  // @section Ad Quality
  // Returns all cookies information from Programmatic creatives and Managed Services creatives served by SSP ("campaign tag" creatives are excluded).
  rpc SearchScannedDspCreativesCookieReportsAnonymously ( SearchScannedDspCreativesCookieReportsAnonymouslyRequest ) returns ( SearchScannedDspCreativesCookieReportsAnonymouslyResponse );
  // @section Users Data
  // for a given targeting dimension and search text, returns matching segments with their labels and reaches
  rpc SearchSegmentsForTargetingDimension ( SearchSegmentsForTargetingDimensionRequest ) returns ( SearchSegmentsForTargetingDimensionResponse );
  // @section Inventory
  rpc SearchSitesByDomainName ( SearchSitesByDomainNameRequest ) returns ( SearchSitesByDomainNameResponse );
  // @section Reachcast
  // Return special events for a specific country on a specific period
  rpc SearchSpecialCalendarEvents ( SearchSpecialCalendarEventsRequest ) returns ( SearchSpecialCalendarEventsResponse );
  // @section Users Data
  rpc SearchTaxonomyAndReachForProvider ( SearchTaxonomyAndReachForProviderRequest ) returns ( SearchTaxonomyAndReachForProviderResponse );
  // @section Audience Standard
  rpc SearchTeadsAudiences ( SearchTeadsAudiencesRequest ) returns ( SearchTeadsAudiencesResponse );
  // @section Ad Quality
  // Search for Teads hosted creatives to scan. The optional request filters (entity_id, creative_id) are
  // applied in conjunction (AND) and the resulting Teads hosted creatives to scan are ordered by scan date
  // ascending and creative_id descending
  rpc SearchTeadsHostedCreativesToScanAnonymously ( SearchTeadsHostedCreativesToScanAnonymouslyRequest ) returns ( SearchTeadsHostedCreativesToScanAnonymouslyResponse );
  // @section Inventory
  rpc SearchWebsitesByDomainName ( SearchWebsitesByDomainNameRequest ) returns ( SearchWebsitesByDomainNameResponse );
  // @section Traffic
  // Retrieve domains whitelisted for delivery by name and domain
  rpc SearchWhitelistedDomains ( SearchWhitelistedDomainsRequest ) returns ( SearchWhitelistedDomainsResponse );
  // @section Traffic
  // Retrieve IPs whitelisted for delivery
  rpc SearchWhitelistedIPRanges ( SearchWhitelistedIPRangesRequest ) returns ( SearchWhitelistedIPRangesResponse );
  // @section Reporting
  // Set token name
  rpc SetNameForExternalApiToken ( SetNameForExternalApiTokenRequest ) returns ( SetNameForExternalApiTokenResponse );
}
